USE [master]
GO
/****** Object:  Database [XtrDB06_11_2022]    Script Date: 8/14/2023 4:54:47 PM ******/
CREATE DATABASE [XtrDB06_11_2022] ON  PRIMARY 
( NAME = N'XtrDB06_11_2022', FILENAME = N'C:\company technology\XtrDB06_11_2022.mdf' , SIZE = 23744KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'XtrDB06_11_2022_log', FILENAME = N'C:\company technology\XtrDB06_11_2022_log.LDF' , SIZE = 7616KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
GO
ALTER DATABASE [XtrDB06_11_2022] SET COMPATIBILITY_LEVEL = 100
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [XtrDB06_11_2022].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [XtrDB06_11_2022] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET ARITHABORT OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET AUTO_CLOSE ON 
GO
ALTER DATABASE [XtrDB06_11_2022] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [XtrDB06_11_2022] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [XtrDB06_11_2022] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET  ENABLE_BROKER 
GO
ALTER DATABASE [XtrDB06_11_2022] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [XtrDB06_11_2022] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [XtrDB06_11_2022] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [XtrDB06_11_2022] SET  MULTI_USER 
GO
ALTER DATABASE [XtrDB06_11_2022] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [XtrDB06_11_2022] SET DB_CHAINING OFF 
GO
USE [XtrDB06_11_2022]
GO
/****** Object:  UserDefinedFunction [dbo].[Base64_Encode]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create FUNCTION [dbo].[Base64_Encode](@value varchar(Max)) RETURNS varchar(Max) 
 AS 
 BEGIN 
     DECLARE @source varbinary(max) = convert(varbinary(max), @value) 
     RETURN cast('' as xml).value('xs:base64Binary(sql:variable("@source"))', 'varchar(max)') 
 END
GO
/****** Object:  UserDefinedFunction [dbo].[Base64_EncodeUTF8]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create FUNCTION [dbo].[Base64_EncodeUTF8](@value varchar(Max)) RETURNS varchar(Max) 
 AS 
 BEGIN 
     return (SELECT CAST('' AS XML).value('xs:base64Binary(xs:hexBinary(sql:column("src.utf8bytes")))', 'VARCHAR(MAX)') emojibase64EncodedFromUtf8 
 FROM 
 ( 
 SELECT dbo.UTF8_Encode(@value) AS utf8bytes 
 ) AS src) 
 END
GO
/****** Object:  UserDefinedFunction [dbo].[DateToInt]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[DateToInt](@Dte datetime)returns int 
 as begin 
 	declare @Rt int 
 	Set @Rt=convert(int,@Dte) 
 	if(@Rt>@Dte) 
 		Set @Rt=@Rt-1 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[FormatDateTime]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[FormatDateTime](@Vlu datetime)returns varchar(100) 
 as begin 
 	declare @Rt varchar(100) 
 	declare @Dte float 
 	Set @Dte=convert(int,@Vlu) 
 	if(@Dte>@Vlu)Set @Dte=@Dte-1 
 	Set @Rt=str(day(@Vlu ),2)+'-'+str(Month(@Vlu ),2)+'-'+str(Year(@Vlu),4)+'__' 
 	Set @Dte=convert(float,@Vlu)-@Dte 
 	Set @Dte=@Dte * 24 
 	Set @Rt=@Rt+Str(Convert(int,@Dte),2)+':' 
 	Set @Dte=@Dte - Convert(int, @Dte) 
 	if  (@Dte<0)Set @Dte=@Dte*-1 
 	Set @Dte=@Dte * 60 
 	Set @Rt=@Rt+Str(Convert(int,@Dte),2)
-- 	For Show Minutes
-- 	+':' 
-- 	Set @Dte=@Dte - Convert(int, @Dte) 
-- 	if  (@Dte<0)Set @Dte=@Dte*-1 
-- 	Set @Dte=@Dte * 60 
-- 	Set @Rt=@Rt+Str(Convert(int,@Dte),2) 
 	Set @Rt=Replace(@Rt,' ','0') 
 	Set @Rt=Replace(@Rt,'__','  ') 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[FromPercent]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[FromPercent](@Num1 float,@Num2 float)returns float 
 as 
 begin 
 declare @Rt float 
 	if(@Num2>0) 
 		set @Rt = (@Num1/@Num2)*100 
 	else 
 		set @Rt=0 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun001]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun001](@Prc uniqueidentifier,@Partity tinyint,@Qty float)returns [float] 
 as begin 
     declare @P1  float 
     set @P1=@Qty 
     if (@Partity >2) 
 	    Begin 
 		    declare @Un3 float 
 		    Set @Un3=(Select Sum(Factor3) From TBL007 Where CardGuide=@Prc) 
 		    Set	@P1=@P1*@Un3 
 	    end 
     else if (@Partity >1) 
 	    Begin 
 		    declare @Un2 float 
 		    Set @Un2=(Select Sum(Factor2) From TBL007 Where CardGuide=@Prc) 
 		    Set	@P1=@P1*@Un2 
 	    end 
 	return @P1 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun002]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun002](@Prc uniqueidentifier)returns @TMn table( 
      ID int, 
      UnitName nvarchar (245), 
      UnitFactor float 
 ) 
 as 
  begin 
 	declare @Unt nvarchar(255) 
 	declare @Uf2 float 
 	declare @Uf3 float 
 	Select @Unt=Unit,@Uf2=Factor2,@Uf3=Factor3 From TBL007 Where CardGuide=@Prc 
 	insert @TMn Values( 1,@Unt,null) 
 	if(@Uf2>0) 
 	begin 
 		Set @Unt=(Select Unit2 From TBL007 Where CardGuide=@Prc) 
 		insert @TMn Values( 2,@Unt,@Uf2 ) 
 	end 
 	if(@Uf3>0) 
 	begin 
 		Set @Unt=(Select Unit3 From TBL007 Where CardGuide=@Prc) 
 		insert @TMn Values( 3,@Unt,@Uf3 ) 
 	end 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun003]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun003](@Prc uniqueidentifier)returns int 
 as 
 begin 
 	declare @Unt int 
 	set @Unt=(Select DefaultUnit From TBL007 Where CardGuide=@Prc) 
 	return @Unt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun004]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun004](@Tp int)returns float 
 begin 
 	declare @R float 
 	if(@Tp=0)--00:Finance Is Year 
 		Set @R=(Select Min(Convert(float,ValueBoolean)) From TBL053 Where OptionName='FinanceIsYear') 
 	else if(@Tp=1)--01:Start Date 
 		Set @R=(Select Min(Convert(float,DateValue)) From TBL053 Where OptionName='StartDate') 
 	else if(@Tp=2)--02:Stop Date 
 		Set @R=(Select Min(Convert(float,DateValue)) From TBL053 Where OptionName='CloseDate') 
 	Set @R=IsNull(@R,0) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun005]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun005]()returns int 
    as 
    begin 
    	return isnull((Select Max(EntryNumber)From TBL011),0)+1  
    end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun006]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun006](@Cr uniqueidentifier,@Ar uniqueidentifier,@D datetime)returns float 
 as begin 
 	declare @Rt float 
 	if(@D Is Null) 
 	begin 
 		if(@Ar Is Null) 
 			Set @D=(Select Max(DoneIn) From TBL088 with(nolock) Where CurrencyID=@Cr And ContraCurrencyID Is Null) 
 		else 
 			Set @D=(Select Max(DoneIn) From TBL088 with(nolock) Where CurrencyID=@Cr And ContraCurrencyID=@Ar) 
 	end 
 	Else 
 	begin 
 		if(@Ar Is Null) 
 			Set @D=(Select Max(DoneIn) From TBL088 with(nolock) Where CurrencyID=@Cr And ContraCurrencyID Is Null And DoneIn<=@D) 
 		else 
 			Set @D=(Select Max(DoneIn) From TBL088 with(nolock) Where CurrencyID=@Cr And ContraCurrencyID=@Ar And DoneIn<=@D) 
 		if(@D Is Null) 
 		begin 
 			if(@Ar Is Null) 
 				Set @D=(Select Min(DoneIn) From TBL088 with(nolock) Where CurrencyID=@Cr And ContraCurrencyID Is Null And DoneIn>=@D) 
 			else 
 				Set @D=(Select Min(DoneIn) From TBL088 with(nolock) Where CurrencyID=@Cr And ContraCurrencyID=@Ar And DoneIn>=@D) 
 		end 
 	end 
 	if(@Ar Is Null And @D Is Not Null) 
 		Set @Rt=(Select Top 1 Rate From TBL088 with(nolock) Where CurrencyID=@Cr And ContraCurrencyID Is Null And DoneIn=@D) 
 	else if(@D Is Not Null)
 		Set @Rt=(Select Top 1 Rate From TBL088 with(nolock) Where CurrencyID=@Cr And ContraCurrencyID=@Ar And DoneIn=@D) 
 	if(isnull(@Rt,0)=0)
 	begin 
 		if(@Ar Is Null) 
 		    Set @Rt=(Select Rate From TBL001 with(nolock) Where CardGuide=@Cr) 
 		else 
 		    Set @Rt=dbo.Ratio((Select Rate From TBL001 with(nolock) Where CardGuide=@Ar),(Select Rate From TBL001 Where CardGuide=@Cr)) 
 	end 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun007]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun007](@G uniqueidentifier) returns @Tb table(G uniqueidentifier) 
 as begin 
 Insert Into @Tb(G)Values(@G) 
 While((Select Count(*) From @Tb a 
 Inner Join TBL042 b On a.G=b.CardGuide 
 Left Join @Tb c On b.MainGuide=c.G 
 Where b.MainGuide Is Not Null And c.G Is Null)>0) 
 begin 
 	Insert Into @Tb(G) 
 	Select b.MainGuide From @Tb a 
 	Inner Join TBL042 b On a.G=b.CardGuide 
 	Left Join @Tb c On b.MainGuide=c.G 
 	Where b.MainGuide Is Not Null And c.G Is Null 
 end 
 Insert Into @Tb(G) 
 Select b.CardGuide From @Tb a 
 Inner Join TBL042 b On a.G=b.MainGuide 
 Left Join @Tb c On b.CardGuide=c.G 
 Where c.G Is Null 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun008]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun008](@Acc uniqueidentifier,@Crr uniqueidentifier,@Rate float,@FDate float , @TDate float, @RdUnPosted bit,@ForGroup uniqueidentifier)returns float 
 as begin 
 declare @Nb float 
 declare @Gr table(G uniqueidentifier) 
 if(@ForGroup Is Not Null) 
 begin 
 	Insert Into @Gr(G)Select G From dbo.Fun007(@ForGroup) 
 end 
 if((@FDate>0)and(@TDate>0)) 
 begin 
 	if(@RdUnPosted>0) 
 		set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And EntryDate>= @FDate And EntryDate< @TDate And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
 		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr  And AccountGuide=@Acc And EntryDate>= @FDate And EntryDate< @TDate And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))) ,0) 
 	else 
 		set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And EntryDate>= @FDate And EntryDate< @TDate And Posted=1 And (@ForGroup Is Null Or ByGroup in (Select G From @Gr)))  ,0) 
 		+ isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr  And AccountGuide=@Acc And EntryDate>= @FDate And EntryDate< @TDate And Posted=1 And (@ForGroup Is Null Or ByGroup in (Select G From @Gr)))  ,0) 
 end 
 	else if(@FDate>0) 
 begin 
 	if(@RdUnPosted>0) 
 		set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And EntryDate>= @FDate And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
    		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc And EntryDate>= @FDate And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
 	else 
 		set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And EntryDate>= @FDate And Posted=1 And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))) ,0) 
    		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc And EntryDate>= @FDate And Posted=1 And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
 end 
 else if(@TDate>0) 
 begin 
 	if(@RdUnPosted>0) 
 		set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And EntryDate< @TDate And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
    		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc And EntryDate< @TDate And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
 	else 
 		set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And EntryDate< @TDate And Posted=1 And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
    		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc And EntryDate< @TDate And Posted=1 And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
 end 
 else 
 begin 
 	if(@RdUnPosted>0) 
 		set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
    		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
 	else 
 		set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc  And Posted=1 And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
    		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc  And Posted=1 And (@ForGroup Is Null Or ByGroup in (Select G From @Gr))),0 ) 
 end 
 Set @Nb=Round(@Nb,7) 
 return @Nb 
 end 
GO
/****** Object:  UserDefinedFunction [dbo].[Fun009]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create function [dbo].[Fun009] 
 (@AccID uniqueidentifier)returns @Tbl table(ID int,EntryGuide uniqueidentifier,SourceGuide uniqueidentifier,  
  AccountGuide uniqueidentifier,AccountCode nvarchar(255),AccountName nvarchar(255),CurrencyLatinName nvarchar(255),AccountLatinName nvarchar(255),Description text,EntryDate datetime,Currency uniqueidentifier,CurrencyName nvarchar(255),Credit Float,Debit Float,CreditRate float,DebitRate float, Rate float,Account nvarchar(255),SourceNumber int 
  ,Security tinyint,ProjectGuide  uniqueidentifier,Project nvarchar(255),BranchGuide uniqueidentifier,Branch nvarchar(255),CostCenterGuide uniqueidentifier,CostCenter nvarchar(255),SourceName nvarchar(255),BillGuide uniqueidentifier,BondGuide uniqueidentifier,ContraAccountGuide uniqueidentifier,ContraAccountCode nvarchar(255),ContraAccountName nvarchar(255),ContraAccountLatinName nvarchar(255),Posted tinyint,EntryNumber float)   
       as  begin   
     if(@AccID Is Null) 
     begin   
   	    Insert @Tbl Select ID,EntryGuide,'00000000-0000-0000-0000-000000000000',AccountGuide,AccountCode,AccountName,CurrencyLatinName,AccountLatinName,Description,EntryDate,CurrencyGuide,CurrencyName,Credit,Debit,CreditRate,DebitRate,Rate,Account,EntryNumber,EntrySecurity,Project,ProjectCode+'-'+ProjectName,Branch,BranchCode+'-'+BranchName,CostCenter,CostCenterCode+'-'+CostCenterName,null,null,null,ContraAccountGuide,ContraAccountCode,ContraAccountName,ContraAccountLatinName,Posted,EntryNumber From Qry023 Where BillGuide Is Null And SourceType Is Null 
   	    Insert @Tbl Select ID,EntryGuide,SourceType,AccountGuide,AccountCode,AccountName,CurrencyLatinName,AccountLatinName,Description,EntryDate,CurrencyGuide,CurrencyName,Credit,Debit,CreditRate,DebitRate,Rate,Account,BondNumber,BondSecurity,Project,ProjectCode+'-'+ProjectName,Branch,BranchCode+'-'+BranchName,CostCenter,CostCenterCode+'-'+CostCenterName,EntryName,null,BondGuide,ContraAccountGuide,ContraAccountCode,ContraAccountName,ContraAccountLatinName,Posted,EntryNumber From Qry023 Where BillGuide Is Null And SourceType Is Not Null 
   	    Insert @Tbl Select ID,EntryGuide,BillTypeGuide,AccountGuide,AccountCode,AccountName,CurrencyLatinName,AccountLatinName,Description,EntryDate,CurrencyGuide,CurrencyName,Credit,Debit,CreditRate,DebitRate,Rate,Account,BillNumber,BillSecurity,Project,ProjectCode+'-'+ProjectName,Branch,BranchCode+'-'+BranchName,CostCenter,CostCenterCode+'-'+CostCenterName,InvoiceName,BillGuide,null,ContraAccountGuide,ContraAccountCode,ContraAccountName,ContraAccountLatinName,Posted,EntryNumber From Qry023 Where BillGuide Is Not Null And BondGuide Is Null 
     end 
     else 
     begin   
   	    Insert @Tbl Select ID,EntryGuide,'00000000-0000-0000-0000-000000000000',AccountGuide,AccountCode,AccountName,CurrencyLatinName,AccountLatinName,Description,EntryDate,CurrencyGuide,CurrencyName,Credit,Debit,CreditRate,DebitRate,Rate,Account,EntryNumber,EntrySecurity,Project,ProjectCode+'-'+ProjectName,Branch,BranchCode+'-'+BranchName,CostCenter,CostCenterCode+'-'+CostCenterName,null,null,null,ContraAccountGuide,ContraAccountCode,ContraAccountName,ContraAccountLatinName,Posted,EntryNumber From Qry023 Where BillGuide Is Null And SourceType Is Null And AccountGuide=@AccID  
   	    Insert @Tbl Select ID,EntryGuide,SourceType,AccountGuide,AccountCode,AccountName,CurrencyLatinName,AccountLatinName,Description,EntryDate,CurrencyGuide,CurrencyName,Credit,Debit,CreditRate,DebitRate,Rate,Account,BondNumber,BondSecurity,Project,ProjectCode+'-'+ProjectName,Branch,BranchCode+'-'+BranchName,CostCenter,CostCenterCode+'-'+CostCenterName,EntryName,null,BondGuide,ContraAccountGuide,ContraAccountCode,ContraAccountName,ContraAccountLatinName,Posted,EntryNumber From Qry023 Where BillGuide Is Null And SourceType Is Not Null And AccountGuide=@AccID  
   	    Insert @Tbl Select ID,EntryGuide,BillTypeGuide,AccountGuide,AccountCode,AccountName,CurrencyLatinName,AccountLatinName,Description,EntryDate,CurrencyGuide,CurrencyName,Credit,Debit,CreditRate,DebitRate,Rate,Account,BillNumber,BillSecurity,Project,ProjectCode+'-'+ProjectName,Branch,BranchCode+'-'+BranchName,CostCenter,CostCenterCode+'-'+CostCenterName,InvoiceName,BillGuide,null,ContraAccountGuide,ContraAccountCode,ContraAccountName,ContraAccountLatinName,Posted,EntryNumber From Qry023 Where BillGuide Is Not Null And BondGuide Is Null  And AccountGuide=@AccID 
     end 
     return    
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun010]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun010](@Pcr uniqueidentifier,@FDate float , @TDate float)returns float 
  as begin  
  	declare @Nb float  
 	if((@FDate>0)and(@TDate>0)) 
  	    set @Nb=(Select Sum(ItemQuantity) From Qry019 Where ProductGuide=@Pcr And BillDate>= @FDate And BillDate<= @TDate) 
  	else if(@FDate>0) 
  	    set @Nb=(Select Sum(ItemQuantity) From Qry019 Where ProductGuide=@Pcr And BillDate>= @FDate) 
 	else if(@TDate>0) 
  	    set @Nb=(Select Sum(ItemQuantity) From Qry019 Where ProductGuide=@Pcr And BillDate<= @TDate) 
 	else 
  	    set @Nb=(Select Sum(ItemQuantity) From Qry019 Where ProductGuide=@Pcr) 
 	return @Nb  
  end 
GO
/****** Object:  UserDefinedFunction [dbo].[Fun011]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun011](@Entry uniqueidentifier,@AcID uniqueidentifier)returns uniqueidentifier 
 as  
    Begin 
 	declare @Rt uniqueidentifier 
 	Set @Rt=null 
 	declare @Acnts int 
 	Set @Acnts=(Select Count(*)From TBL012 Where MainGuide=@Entry And AccountGuide!=@AcID) 
 	if(@Acnts=1) 
 	begin 
 		Set @Rt=(Select AccountGuide From TBL012 Where MainGuide=@Entry And AccountGuide!=@AcID) 
 	end 
 	return @Rt 
    end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun012]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun012](@Acc uniqueidentifier,@Crr uniqueidentifier,@FDate float , @TDate float)returns float 
 as begin 
 	declare @Nb float 
 	if((@FDate>0)and(@TDate>0)) 
 	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And Posted>0 And EntryDate>= @FDate And EntryDate< @TDate),0 ) 
 	else if(@FDate>0) 
 	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And Posted>0 And EntryDate>= @FDate),0 ) 
 	else if(@TDate>0) 
 	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And Posted>0 And EntryDate< @TDate),0 ) 
 	else 
 	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And Posted>0 ),0 ) 
 	return @Nb 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun013]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun013](@Crg uniqueidentifier)returns float 
 as 
 begin 
 	declare @Unt int 
 	set @Unt=(Select Rate From TBL001 Where CardGuide=@Crg) 
 	return @Unt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun014]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun014]() returns uniqueidentifier 
 as     
   begin  
 	return(Select CardGuide From TBL001 Where ID=(Select Min(ID)From TBL001)) 
   end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun015]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun015](@Prc uniqueidentifier)returns nvarchar (255) 
  as  
  begin  
  	declare @Rt nvarchar (255) 
  		set @Rt=(Select ProductName From TBL007 Where CardGuide=@Prc)  
  	return @Rt  
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun016]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun016](@Prc uniqueidentifier)returns nvarchar (255) 
  as  
  begin  
  	declare @Rt nvarchar (255) 
  		set @Rt=(Select CardCode From TBL007 Where CardGuide=@Prc)  
  	return @Rt  
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun018]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun018](@Prc nvarchar (255)) returns @Tbl table (ID int,CardGuide uniqueidentifier,CardName nvarchar (255)) 
   as   
   begin   
 	Insert @Tbl Select ID,CardGuide,CardName From TBL033 Where CardType=@Prc 
 	return  
   end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun020]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun020](@Prc uniqueidentifier)returns nvarchar (255) 
  as  
  begin  
  	declare @Rt nvarchar (255) 
  		set @Rt=(Select LatinName From TBL007 Where CardGuide=@Prc)  
  	return @Rt  
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun022]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun022](@Lvl tinyint ,@Main uniqueidentifier)returns @Tbl table(Gde uniqueidentifier)as 
 begin 
 	declare @CID int 
 	set @CID=0 
 	declare @CGde uniqueidentifier 
 	if (@Main is null) 
 	begin 
 		while ((Select Count(*) From TBL006 Where ID>@CID And MainGuide Is Null)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL006 Where ID>@CID And MainGuide Is Null) 
 			set @CGde=(Select CardGuide From TBL006 Where ID=@CID) 
 			if((Select Security From TBL006 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun022(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	else 
 	begin 
 		while ((Select Count(*) From TBL006 Where ID>@CID And MainGuide = @Main)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL006 Where ID>@CID And MainGuide=@Main) 
 			set @CGde=(Select CardGuide From TBL006 Where ID=@CID) 
 			if((Select Security From TBL006 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun022(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun023]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun023](@Lvl tinyint ,@Main uniqueidentifier)returns @Tbl table(Gde uniqueidentifier)as 
 begin 
 	declare @CID int 
 	set @CID=0 
 	declare @CGde uniqueidentifier 
 	if (@Main is null) 
 	begin 
 		while ((Select Count(*) From TBL008 Where ID>@CID And MainWarehouse Is Null)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL008 Where ID>@CID And MainWarehouse Is Null) 
 			set @CGde=(Select CardGuide From TBL008 Where ID=@CID) 
 			if((Select Security From TBL008 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun023(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	else 
 	begin 
 		while ((Select Count(*) From TBL008 Where ID>@CID And MainWarehouse = @Main)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL008 Where ID>@CID And MainWarehouse=@Main) 
 			set @CGde=(Select CardGuide From TBL008 Where ID=@CID) 
 			if((Select Security From TBL008 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun023(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun024]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun024](@Lvl tinyint ,@Main uniqueidentifier)returns @Tbl table(Gde uniqueidentifier)as 
 begin 
 	declare @CID int 
 	set @CID=0 
 	declare @CGde uniqueidentifier 
 	if (@Main is null) 
 	begin 
 		while ((Select Count(*) From TBL005 Where ID>@CID And MainCostCenter Is Null)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL005 Where ID>@CID And MainCostCenter Is Null) 
 			set @CGde=(Select CardGuide From TBL005 Where ID=@CID) 
 			if((Select Security From TBL005 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun024(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	else 
 	begin 
 		while ((Select Count(*) From TBL005 Where ID>@CID And MainCostCenter = @Main)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL005 Where ID>@CID And MainCostCenter=@Main) 
 			set @CGde=(Select CardGuide From TBL005 Where ID=@CID) 
 			if((Select Security From TBL005 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun024(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun025]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun025](@Lvl tinyint ,@Main uniqueidentifier)returns @Tbl table(Gde uniqueidentifier)as 
 begin 
 	declare @CID int 
 	set @CID=0 
 	declare @CGde uniqueidentifier 
 	if (@Main is null) 
 	begin 
 		while ((Select Count(*) From TBL049 Where ID>@CID And MainProject Is Null)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL049 Where ID>@CID And MainProject Is Null) 
 			set @CGde=(Select CardGuide From TBL049 Where ID=@CID) 
 			if((Select Security From TBL049 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun025(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	else 
 	begin 
 		while ((Select Count(*) From TBL049 Where ID>@CID And MainProject = @Main)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL049 Where ID>@CID And MainProject=@Main) 
 			set @CGde=(Select CardGuide From TBL049 Where ID=@CID) 
 			if((Select Security From TBL049 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun025(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun026]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun026](@Lvl tinyint ,@Main uniqueidentifier)returns @Tbl table(Gde uniqueidentifier)as 
 begin 
 	declare @CID int 
 	set @CID=0 
 	declare @CGde uniqueidentifier 
 	if (@Main is null) 
 	begin 
 		while ((Select Count(*) From TBL050 Where ID>@CID And MainBronch Is Null)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL050 Where ID>@CID And MainBronch Is Null) 
 			set @CGde=(Select CardGuide From TBL050 Where ID=@CID) 
 			if((Select Security From TBL050 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun026(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	else 
 	begin 
 		while ((Select Count(*) From TBL050 Where ID>@CID And MainBronch = @Main)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL050 Where ID>@CID And MainBronch=@Main) 
 			set @CGde=(Select CardGuide From TBL050 Where ID=@CID) 
 			if((Select Security From TBL050 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun026(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun028]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun028](@R nvarchar(100))returns nvarchar(100)
 as begin
 declare @T1 nvarchar(max)
 declare @T2 nvarchar(max)
 declare @P1 int
 Set @T1=''
 declare @N1 float
 Set @N1=0
 Set @P1=1
 while(@N1<9 And @N1<LEN(@R) And @P1>0)
 begin
 	Set @T2=SUBSTRING(@R,Convert(int,Len(@R)-@N1),1)
 	if(@T2 in ('0','1','2','3','4','5','6','7','8','9'))
 		Set @T1=@T2+@T1
 	else
 		Set @P1=0
 	Set @N1=@N1+1
 end
 Set @P1=LEN(@R)-LEN(@T1)
 Set @N1=CONVERT(int,@T1)
 Set @N1=@N1+1
 Set @T1=CONVERT(varchar(100),Convert(int, @N1))
 while((LEN(@T1)+@P1)<LEN(@R))
 	Set @T1='0'+@T1
 Set @N1=LEN(@T1)
 Set @R=Left(@R,@P1)+@T1
 return @R
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun029]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun029](@ItmTp tinyint , @ItmGd uniqueidentifier,@Unt tinyint, @Qty float,@TBL063Itm uniqueidentifier , @TBL063Unt tinyint, @TBL063Qty float ,@TBL063_Itm uniqueidentifier , @TBL063_Unt tinyint, @TBL063_Qty float)returns float 
 as begin 
 if(@ItmTp>1) 
  	return dbo.IFNullNumber(dbo.Fun001(@ItmGd, @Unt, @Qty)*dbo.Fun001(@TBL063_Itm,@TBL063_Unt,@TBL063_Qty) ,dbo.Fun001(@ItmGd, @Unt, @Qty)) 
 else if(@ItmTp>0) 
  	return dbo.IFNullNumber(dbo.Fun001(@ItmGd, @Unt, @Qty)*dbo.Fun001(@TBL063Itm,@TBL063Unt,@TBL063Qty) ,dbo.Fun001(@ItmGd, @Unt, @Qty)) 
 return dbo.Fun001(@ItmGd, @Unt, @Qty) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun030]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create function [dbo].[Fun030] 
 (@AccID uniqueidentifier,@GroupID uniqueidentifier)returns @Tbl table(ID int,EntryGuide uniqueidentifier,SourceGuide uniqueidentifier,  
  AccountGuide uniqueidentifier,AccountCode nvarchar(255),AccountName nvarchar(255),AccountLatinName nvarchar(255),Description text,EntryDate datetime,Currency uniqueidentifier,CurrencyName nvarchar(255),Credit Float,Debit Float,CreditRate float,DebitRate float, Rate float,Account nvarchar(255),SourceNumber int 
  ,Security tinyint,ProjectGuide  uniqueidentifier,Project nvarchar(255),BranchGuide uniqueidentifier,Branch nvarchar(255),CostCenterGuide uniqueidentifier,CostCenter nvarchar(255),SourceName nvarchar(255),BillGuide uniqueidentifier,BondGuide uniqueidentifier,ContraAccountGuide uniqueidentifier,ContraAccountCode nvarchar(255),ContraAccountName nvarchar(255),ContraAccountLatinName nvarchar(255),Posted tinyint,EntryNumber float)   
       as  begin   
   	Insert @Tbl Select ID,EntryGuide,'00000000-0000-0000-0000-000000000000',AccountGuide,AccountCode,AccountName,AccountLatinName,Description,EntryDate,CurrencyGuide,CurrencyName,Credit,Debit,CreditRate,DebitRate,Rate,Account,EntryNumber,EntrySecurity,Project,ProjectCode+'-'+ProjectName,Branch,BranchCode+'-'+BranchName,CostCenter,CostCenterCode+'-'+CostCenterName,null,null,null,ContraAccountGuide,ContraAccountCode,ContraAccountName,ContraAccountLatinName,Posted,EntryNumber From Qry058 Where BillGuide Is Null And SourceType Is Null And AccountGuide=@AccID And GroupGuide=@GroupID
   	Insert @Tbl Select ID,EntryGuide,SourceType,AccountGuide,AccountCode,AccountName,AccountLatinName,Description,EntryDate,CurrencyGuide,CurrencyName,Credit,Debit,CreditRate,DebitRate,Rate,Account,BondNumber,BondSecurity,Project,ProjectCode+'-'+ProjectName,Branch,BranchCode+'-'+BranchName,CostCenter,CostCenterCode+'-'+CostCenterName,EntryName,null,BondGuide,ContraAccountGuide,ContraAccountCode,ContraAccountName,ContraAccountLatinName,Posted,EntryNumber From Qry058 Where BillGuide Is Null And SourceType Is Not Null And AccountGuide=@AccID  And GroupGuide=@GroupID
   	Insert @Tbl Select ID,EntryGuide,BillTypeGuide,AccountGuide,AccountCode,AccountName,AccountLatinName,Description,EntryDate,CurrencyGuide,CurrencyName,Credit,Debit,CreditRate,DebitRate,Rate,Account,BillNumber,BillSecurity,Project,ProjectCode+'-'+ProjectName,Branch,BranchCode+'-'+BranchName,CostCenter,CostCenterCode+'-'+CostCenterName,InvoiceName,BillGuide,null,ContraAccountGuide,ContraAccountCode,ContraAccountName,ContraAccountLatinName,Posted,EntryNumber From Qry058 Where BillGuide Is Not Null And BondGuide Is Null  And AccountGuide=@AccID And GroupGuide=@GroupID
       return    
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun031]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun031](@CurrencyGuide uniqueidentifier)returns float 
 as begin 
 	declare @RtValue float 
 	set @RtValue=(Select Rate From TBL001 Where CardGuide=@CurrencyGuide) 
 	return @RtValue 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun032]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun032]()returns @Tbl table(ID int, Qty float,RowGuide uniqueidentifier,Serials nvarchar(255)) as begin 
  declare @RwID uniqueidentifier 
  declare @ID int 
  declare @LstID int 
  declare @MQty float 
  declare @Unt tinyint 
  declare @Factor2 float 
  declare @Factor3 float 
  declare @TQy float 
  declare @TmpQ float 
  declare @MRw uniqueidentifier 
  declare @Serials as nvarchar(255) 
  DECLARE I CURSOR READ_ONLY FAST_FORWARD FOR 
  	Select SerialSortID,RowGuide,Quantity,Unit,Factor2,Factor3,SerialCode From Qry102 Order By ItemSortID 
  OPEN I 
  FETCH NEXT FROM I Into @ID,@RwID,@MQty,@Unt,@Factor2,@Factor3,@Serials 
  WHILE (@@FETCH_STATUS = 0) 
  begin 
  	if(@MRw is null Or @MRw!=@RwID) 
  	begin 
  		if(@MRw is not null) 
  		begin 
  		if(@TQy>0) 
  			Insert Into @Tbl(ID,Qty,RowGuide,Serials) Values(@LstID, @TQy,@RwID,'') 
  		end 
  		Set @MRw=@RwID 
  		Set @TQy=@MQty 
  		Set @LstID=@ID 
  		if(@Unt>2 And @Factor3>0) 
  			Set @TmpQ=@Factor3 
  		if(@Unt>1 And @Factor2>0) 
  			Set @TmpQ=@Factor2 
  		else 
  			Set @TmpQ=1 
  		if(@ID Is Not Null) 
  		Insert Into @Tbl(ID,Qty,RowGuide,Serials) Values(@ID,@TmpQ,@RwID,@Serials) 
  		else 
  		Insert Into @Tbl(ID,Qty,RowGuide,Serials) Values(@ID,@MQty,@RwID,'') 
  		Set @TQy=@MQty-@TmpQ 
  	end 
  	else 
  	begin 
  		Insert Into @Tbl(ID,Qty,RowGuide,Serials) Values( @ID,@TmpQ,@RwID,@Serials) 
  		Set @TQy=@TQy-@TmpQ 
  	end 
  FETCH NEXT FROM I Into @ID,@RwID,@MQty,@Unt,@Factor2,@Factor3,@Serials 
  end 
  if(@TQy>0) 
  	Insert Into @Tbl(ID,Qty,RowGuide,Serials) Values(@LstID,@TQy,@RwID,'') 
  return 
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun033]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun033](@MainQty float , @CodesQty float,@ReplacedQty float)returns float 
   as begin   
   	declare @RtValue float   
   	if(@CodesQty>0)   
   	begin   
  		if(@MainQty<0)  
  		begin  
   			if(@CodesQty>1)   
   				Set @RtValue=@MainQty+@CodesQty   
   			else   
   				Set @RtValue=@MainQty   
  		end  
  		else  
  		begin  
   			if(@CodesQty>1)   
   				Set @RtValue=@MainQty-@CodesQty   
   			else   
   				Set @RtValue=@MainQty   
  		end  
   	end   
   	else if(@ReplacedQty>0)   
  	begin  
  		if(@MainQty<0)  
   			Set @RtValue=-@ReplacedQty   
  		else if(@MainQty>0) 
  			Set @RtValue=@ReplacedQty   
  		else 
  			Set @RtValue=0   
  	end  
   	else   
   		set @RtValue=@MainQty   
   return @RtValue   
   end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun034]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun034](@Agent uniqueidentifier)returns uniqueidentifier 
 as begin 
 return (Select AccountID From TBL016 Where CardGuide=@Agent) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun035]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun035](@AcID uniqueidentifier)returns uniqueidentifier 
 as begin 
 	declare @RtValue uniqueidentifier 
 	set @RtValue=(Select DefaultCurrency From TBL004 Where CardGuide=@AcID) 
 	if(@RtValue IS Null) 
 		Set @RtValue=dbo.Fun014() 
 	return @RtValue 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun036]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun036](@BillID uniqueidentifier)returns float 
 as begin 
 	declare @AgID uniqueidentifier 
 	declare @AcID uniqueidentifier 
 	declare @CrID uniqueidentifier 
 	declare @TDate datetime 
 	declare @Rate float 
 	set @AgID=(Select AgentGuide From TBL022 Where CardGuide=@BillID) 
 	set @TDate=(Select BillDate From TBL022 Where CardGuide=@BillID) 
 	set @CrID=(Select CurrencyGuide From TBL022 Where CardGuide=@BillID) 
 	set @Rate=(Select Rate From TBL022 Where CardGuide=@BillID) 
 	if(@AgID is Null)return 0 
 	if((Select PayMethod From TBL022 Where CardGuide=@BillID)=2) 
 		Set @AcID=(Select PostToAccount From TBL022 Where CardGuide=@BillID) 
 	else 
 		Set @AcID=(Select AccountID From TBL016 Where CardGuide=@AgID) 
 	if(@AcID is Null)return 0 
 	return dbo.Fun008(@AcID,@CrID,@Rate,0,Convert(float,@TDate),1,null) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun037]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun037](@BillGuide uniqueidentifier)returns float 
 as begin   
 	declare @Acc uniqueidentifier 
 	declare @Crr uniqueidentifier 
 	declare @Rate float 
 	declare @Nb float 
 	declare @Agnt uniqueidentifier 
 	set @Agnt=(Select AgentGuide From TBL022 Where CardGuide=@BillGuide) 
 	if(@Agnt IS Null) 
 		return 0 
 	else 
 		set @Acc=dbo.Fun034(@Agnt) 
 	Set @Crr=dbo.Fun035(@Acc) 
 	Set @Rate=dbo.Fun013(@Crr) 
 	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc),0 )  
 		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc),0 )  
 	return @Nb    
 end 
GO
/****** Object:  UserDefinedFunction [dbo].[Fun038]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun038](@BndID uniqueidentifier,@POS uniqueidentifier)returns @Tbl table 
 	(CardGuide uniqueidentifier, 
 	ID int, 
 	StrInsertedIn nvarchar(25), 
 	InsertedInValue float, 
 	InsertedInHjrS nvarchar(25), 
 	InsertedIn datetime) 
 as begin 
 	insert @Tbl Select CardGuide,ID,StrInsertedIn,InsertedInValue,LEFT( REPLACE( CONVERT(varchar(20),InsertedIn,131),'/','-'),16),InsertedIn From Qry081 Where MainGuide=@BndID And CardType=21 And RelatedBillType=@POS
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun039]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun039](@Prc uniqueidentifier)returns float 
 as begin 
 	declare @Rt float 
 	set @Rt=(Select PriceValue From TBL074 Where ItemGuide=@Prc And PriceType=5) 
 	return isnull(@Rt,0) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun040]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun040](@Prc uniqueidentifier)returns float 
 as begin 
 	declare @Rt float 
 	set @Rt=(Select Max(ItemNetPrice) From Qry020 Where AffectLastPurchasePrice=1 And ProductGuide=@Prc And Posted=1) 
 	return isnull(@Rt,0) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun041]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun041](@Prc uniqueidentifier)returns float 
 as begin 
 	declare @Rt float 
 	set @Rt=(Select Min(ItemNetPrice) From Qry020 Where AffectLastPurchasePrice=1 And ProductGuide=@Prc And Posted=1) 
 	return isnull(@Rt,0) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun042]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun042](@Prc uniqueidentifier)returns float 
 as begin 
 	declare @Rt float 
 	set @Rt=(Select Max(PriceValue) From TBL074 Where ItemGuide=@Prc And PriceType=8) 
 	return isnull(@Rt,0) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun043]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun043](@Tp int,@Prc float,@Prc2 float)returns float 
 as begin 
 	if(@Tp=1) 
 		return @Prc2 
 	return @Prc 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun044]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun044](@Acc uniqueidentifier,@Crr uniqueidentifier,@Rate float,@FDate float , @TDate float)returns float 
  as begin  
   	declare @Nb float   
  	if((@FDate>0)and(@TDate>0))  
   	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And CostCenter=@Acc And EntryDate>= @FDate And EntryDate< @TDate),0 ) 
  		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr  And CostCenter=@Acc And EntryDate>= @FDate And EntryDate< @TDate),0 ) 
   	else if(@FDate>0)  
   	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And CostCenter=@Acc And EntryDate>= @FDate),0 ) 
  		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And CostCenter=@Acc And EntryDate>= @FDate),0 ) 
  	else if(@TDate>0)  
   	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And CostCenter=@Acc And EntryDate< @TDate),0 ) 
  		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And CostCenter=@Acc And EntryDate< @TDate),0 ) 
  	else  
   	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And CostCenter=@Acc ),0 ) 
  		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And CostCenter=@Acc ),0 ) 
  	return @Nb   
  end 
GO
/****** Object:  UserDefinedFunction [dbo].[Fun045]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun045](@Lvl tinyint ,@Main uniqueidentifier)returns @Tbl table(Gde uniqueidentifier)as 
 begin 
 	declare @CID int 
 	set @CID=0 
 	declare @CGde uniqueidentifier 
 	if (@Main is null) 
 	begin 
 		while ((Select Count(*) From TBL015 Where ID>@CID And MainGuide Is Null)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL015 Where ID>@CID And MainGuide Is Null) 
 			set @CGde=(Select CardGuide From TBL015 Where ID=@CID) 
 			if((Select Security From TBL015 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun045(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	else 
 	begin 
 		while ((Select Count(*) From TBL015 Where ID>@CID And MainGuide = @Main)>0) 
 		begin 
 			Set @CID =(Select Min(ID)From TBL015 Where ID>@CID And MainGuide=@Main) 
 			set @CGde=(Select CardGuide From TBL015 Where ID=@CID) 
 			if((Select Security From TBL015 Where ID=@CID)<=@Lvl) 
 			begin 
 				Insert @Tbl Values(@CGde) 
 			end 
 			else 
 			begin 
 				Insert @Tbl Select Gde From Fun045(@Lvl,@CGde) 
 			end 
 		end 
 	end 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun046]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun046](@Cus uniqueidentifier)returns nvarchar(255) 
 as begin 
 	declare @Rt nvarchar(255) 
 	Set @Rt=(Select Prefix From TBL016 Where CardGuide=@Cus) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun047]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun047](@Cus uniqueidentifier)returns nvarchar(255) 
 as begin 
 	declare @Rt nvarchar(255) 
 	Set @Rt=(Select Suffix From TBL016 Where CardGuide=@Cus) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun048]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun048](@Cus uniqueidentifier)returns nvarchar(255) 
 as begin 
 	declare @Rt nvarchar(255) 
 	Set @Rt=(Select Barcode From TBL016 Where CardGuide=@Cus) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun049]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun049](@Cus uniqueidentifier)returns nvarchar(255) 
 as begin 
 	declare @Rt nvarchar(255) 
 	Set @Rt=(Select Phone From TBL016 Where CardGuide=@Cus) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun050]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun050](@Cus uniqueidentifier)returns nvarchar(255) 
 as begin 
 	declare @Rt nvarchar(255) 
 	Set @Rt=(Select Mobile From TBL016 Where CardGuide=@Cus) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun051]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun051](@Cus uniqueidentifier)returns nvarchar(510) 
 as begin 
 	declare @Rt nvarchar(510) 
 	Set @Rt=(Select FullAdress From TBL016 Where CardGuide=@Cus) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun052]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun052]()returns @Tb table(SortID int identity(1,1),ID int,G uniqueidentifier,Em uniqueidentifier,EmSh uniqueidentifier,Cn nvarchar(max),CID int,Dt datetime,Tp uniqueidentifier,WTp int,FromTime datetime,ToTime datetime,ShiftPeriod float,Period float) 
 as begin 
  Insert Into @Tb(ID,G,Em,EmSh,Cn,CID,Dt,Tp,WTp,FromTime,ToTime) 
  Select 0,a.AgentGuide,a.AgentGuide,c.RelatedAdministration,b.CardName,0,IsNull(c.DateValue3,c.DateValue1),a.RelatedAdministration,b.WindowType,null,null 
 From TBL092 a Inner Join TBL014 b On a.RelatedAdministration=b.CardGuide 
 Inner Join TBL016 c On a.AgentGuide=c.CardGuide Where a.TypeID=203 
 Insert Into @Tb(ID,G,Em,EmSh,Cn,CID,Dt,Tp,WTp,FromTime,ToTime) 
 Select a.ID,a.CardGuide,a.AgentGuide,c.RelatedAdministration,a.CardName,a.IntValue01,IsNull(a.Date01,a.Date02),a.RelatedCard,IsNull(a.WindowType,b.WindowType),a.Date03,a.Date04 From TBL014 a 
 Inner Join TBL014 b On a.RelatedCard=b.CardGuide 
 Inner Join TBL016 c On a.AgentGuide=c.CardGuide 
 Where a.CardType=3 And a.BitValue8=1 
 And ((a.Date01 Is Null Or a.Date02 Is Null) 
 Or a.Date01=a.Date02) 
 declare @ID int 
 declare @CID int 
 declare @WID int 
 declare @G uniqueidentifier 
 declare @Em uniqueidentifier 
 declare @EmSh uniqueidentifier 
 declare @Cn nvarchar(max) 
 declare @Dt1 datetime 
 declare @Dt2 datetime 
 declare @Dt3 datetime 
 declare @Dt4 datetime 
 declare @Tp uniqueidentifier 
 declare @B1 bit 
 declare @B2 bit 
 declare @B3 bit 
 declare @B4 bit 
 declare @B5 bit 
 declare @B6 bit 
 declare @B7 bit 
 DECLARE CFun052 CURSOR READ_ONLY FAST_FORWARD FOR 
    Select a.ID,a.CardGuide,a.AgentGuide,c.RelatedAdministration,a.CardName,a.IntValue01,a.Date01,a.Date02,a.RelatedCard, 
    a.BitValue1,a.BitValue2,a.BitValue3,a.BitValue4,a.BitValue5,a.BitValue6,a.BitValue7, 
    a.WindowType,a.Date03,a.Date04 
    From TBL014 a 
    Inner Join TBL016 c On a.AgentGuide=c.CardGuide 
    Where a.CardType=3 And a.BitValue8=1 
    And a.Date01 Is Not Null And a.Date02 Is Not Null And a.Date01<>a.Date02 
  OPEN CFun052 
  FETCH NEXT FROM CFun052 INTO @ID,@G,@Em,@EmSh,@Cn,@CID,@Dt1,@Dt2,@Tp,@B1,@B2,@B3,@B4,@B5,@B6,@B7,@WID,@Dt3,@Dt4 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
    while(@Dt1<=@Dt2) 
    begin 
      Insert Into  @Tb(ID,G,Em,EmSh,Cn,CID,Dt,Tp,FromTime,ToTime) 
        Values(@ID,@G,@Em,@EmSh,@Cn,@CID,@Dt1,@Tp,@Dt3,@Dt4) 
      Set @Dt1=DATEADD(day,1,@Dt1) 
    end 
    FETCH NEXT FROM CFun052 INTO @ID,@G,@Em,@EmSh,@Cn,@CID,@Dt1,@Dt2,@Tp,@B1,@B2,@B3,@B4,@B5,@B6,@B7,@WID,@Dt3,@Dt4 
 END 
 CLOSE CFun052 
 DEALLOCATE CFun052 
 ------------------------------------------ 
 Update a Set[ShiftPeriod]=Convert(float,(case when b.ToTime<b.FromTime then DATEADD(day,1,b.ToTime) else b.ToTime end))-Convert(float,b.FromTime) 
 From 
 (Select a.SortID,dbo.GetTime(b.Date02) As ToTime,dbo.GetTime(b.Date01) As FromTime From @Tb a 
 Inner Join TBL014 b On a.EmSh=b.CardGuide 
 Where b.Date02 is not null and b.Date01 is not null )b 
 Inner Join 
 @Tb a 
 On a.SortID=b.SortID 
 ------------------------------------------ 
 Update b Set[FromTime]=DATEADD(day,a.Dt,DATEADD(day,a.DateFromTime*-1,a.FromTime)), 
 [ToTime]=DATEADD(day,a.Dt,DATEADD(day,a.DateToTime*-1,a.ToTime)) From 
 (Select a.SortID,dbo.DateToInt(a.Dt) As Dt,dbo.DateToInt(a.FromTime)As DateFromTime,dbo.DateToInt(a.ToTime)As DateToTime,a.FromTime,a.ToTime 
 From @Tb a 
 Where a.FromTime is not null or a.ToTime is not null)a 
 Inner Join @Tb b On a.SortID=b.SortID 
 ------------------------------------------ 
 update a set[ToTime]=dateadd(day,1,a.ToTime) From @Tb a Where a.FromTime is not null and a.ToTime is not null And a.FromTime>a.ToTime 
 ------------------------------------------ 
 update a set[Period]=dbo.Ratio(Convert(float,a.ToTime)-Convert(float,a.FromTime),a.ShiftPeriod) 
 From @Tb a Where a.FromTime is not null and a.ToTime is not null 
 ------------------------------------------ 
 update a set[Period]=1 From @Tb a Where Period is null and a.CID > 0 
 ------------------------------------------ 
 return 
 end 
GO
/****** Object:  UserDefinedFunction [dbo].[Fun053]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun053](@E uniqueidentifier,@ShiftIn datetime,@Shiftout datetime,@D int)returns nvarchar(Max) 
 as begin 
 declare @WD int 
 Set @WD=DATEPART(weekday,@D) 
 declare @MG uniqueidentifier 
 Set @MG=(Select MainGroupGuide From TBL016 Where CardGuide=@E) 
 declare @Tb table(CardGuide uniqueidentifier,CardName nvarchar(Max),FromTime datetime,ToTime datetime) 
 Insert Into @Tb(CardGuide,CardName,FromTime,ToTime) 
 Select a.CardGuide,a.CardName,IsNull(b.Date03,@ShiftIn) As FromTime,IsNull(b.Date04,@Shiftout)As ToTime From 
 (Select CardGuide,CardType,CardName From TBL014 Where CardType=8 Or CardType=15)a 
 Inner Join TBL014 b On a.CardGuide=b.RelatedCard 
 Where b.WindowType>0 
 And b.BitValue8=1 
 And (b.AgentGuide=@E Or dbo.Fun122(AgentGroupGuide,@MG)=1) 
 And (b.Date03 Is Not Null Or b.Date04 is not null) 
 And IsNull(b.Date01,b.Date02)<=@D 
 And IsNull(b.Date02,b.Date01)>=@D 
 And (b.IsSelected=0 Or ((@WD=1 And b.BitValue1=1)Or(@WD=2 And b.BitValue2=1)Or(@WD=3 And b.BitValue3=1)Or(@WD=4 And b.BitValue4=1)Or(@WD=5 And b.BitValue5=1)Or 
 (@WD=6 And b.BitValue6=1)Or(@WD=7 And b.BitValue7=1))) 
 declare @R nvarchar(Max) 
 Set @R='' 
 declare @CN nvarchar(Max) 
 if((Select Count(*) From @Tb)>1) 
 begin 
 	DECLARE CFun053 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select a.CardName +' ( ' +Convert(varchar(10),Count(*))+' ) ' as Cnt From @Tb a Group By a.CardName 
 	OPEN CFun053 
 	FETCH NEXT FROM CFun053 INTO @CN 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		if(Len(@R)>0)Set @R=@R+' , ' 
 		Set @R=@R+@CN 
 		FETCH NEXT FROM CFun053 INTO @CN 
 	END 
 	CLOSE CFun053 
 	DEALLOCATE CFun053 
 end 
 else if((Select Count(*) From @Tb)>0) 
 begin 
 	Select Top 1 @R= a.CardName+' : '+convert(varchar(10),DATEPART(hour,a.FromTime))+':'+convert(varchar(10),DATEPART(MINUTE,a.FromTime))+ 
 	'>>'+convert(varchar(10),DATEPART(hour,a.ToTime))+':'+convert(varchar(10),DATEPART(MINUTE,a.ToTime)) From @Tb a 
 end 
 return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun054]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun054](@RwID int)returns bit 
 as begin 
 	declare @Rt bit 
 	declare @AvID int 
 	declare @BondGuide uniqueidentifier 
 	declare @AcType uniqueidentifier 
 	declare @AvDate datetime 
 	declare @EnDate datetime 
 	Set @AvID=0 
 	Set @Rt=1 
 	Set @BondGuide=(Select MainGuide From TBL038 Where ID=@RwID) 
 	Set @EnDate=(Select DueDate From TBL038 Where ID=@RwID) 
 	DECLARE B CURSOR READ_ONLY FAST_FORWARD FOR 
 	SELECT ID 
 	FROM TBL073 Where MainGuide=@BondGuide Order By InDate 
 	OPEN B 
 	FETCH NEXT FROM B INTO @AvID 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 	Set @AcType=(Select TypeGuide From TBL073 Where ID=@AvID) 
 	Set @AvDate=(Select InDate From TBL073 Where ID=@AvID) 
 	    if(@AcType='A321692A-8DDD-409A-A800-2BABE0178C67' And @AvDate<@EnDate) 
 		    Set @Rt=0 
 	    else if(@AvDate<@EnDate) 
 		    Set @Rt=1 
 		FETCH NEXT FROM B INTO @AvID 
 	END 
		CLOSE B 
		Deallocate B 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun055]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun055](@Bnd uniqueidentifier)returns int 
  as begin 
  	declare @Tt int 
  	declare @TpGd uniqueidentifier 
  	declare @Tp tinyint 
  	declare @TpCnt int 
  	declare @IvCt int 
  	set @IvCt=1 
  	Set @TpGd=(Select PayType From TBL010 Where CardGuide=@Bnd) 
  	Set @Tp=(Select MainID From TBL037 Where CardGuide=@TpGd) 
  	Set @TpCnt=(Select MCount From TBL037 Where CardGuide=@TpGd) 
  	declare @Cnt int 
  	declare @Dte datetime 
  	Set @Dte=(Select Max(DueDate) From TBL038 Where MainGuide=@Bnd) 
  	if(@Tp>2) 
  		Set @Dte =dateadd (dd,-1,dateadd(yy,1*@TpCnt,@Dte)) 
  	else if(@Tp>1) 
  		Set @Dte =dateadd (dd,-1,dateadd(m,1*@TpCnt,@Dte)) 
  	else 
  		Set @Dte =dateadd(d,@TpCnt-1,@Dte) 
  	declare @MnDt datetime 
  	Set @MnDt=(Select Min(BondDate) From TBL010 Where CardGuide=@Bnd) 
  	Set @Tt=convert(float,@Dte)-convert(float,@MnDt)+1 
  	declare @ID int 
 	declare @Clcd bit 
 	Set @Clcd=1 
 	Declare @LstDt datetime 
   	DECLARE T CURSOR READ_ONLY FAST_FORWARD FOR 
   	SELECT ID 
   	FROM TBL073 Where MainGuide=@Bnd Order By InDate 
   	OPEN T 
   	FETCH NEXT FROM T INTO @ID 
   	WHILE (@@FETCH_STATUS = 0) 
   	BEGIN 
   		if((Select TypeGuide From TBL073 Where ID=@ID)='A321692A-8DDD-409A-A800-2BABE0178C67') 
   		begin 
 			Set @Clcd=0 
   			Set @IvCt=((Convert(float,dateadd(dd,@IvCt, @Dte)))-(Convert(float,(Select InDate From TBL073 Where ID=@ID)))) 
   		end 
   		else 
   		begin 
 			Set @Clcd=1 
 			Set @LstDt=(Select InDate From TBL073 Where ID=@ID) 
   			Set @IvCt=@IvCt-((Convert(float,@Dte))-(Convert(float,@LstDt))) -1 
   		end 
   		FETCH NEXT FROM T INTO @ID 
   	END 
		CLOSE T 
		Deallocate T 
 	if(@Clcd>0) 
 	begin 
 		declare @TmpDt datetime 
 		Set @TmpDt=getdate()
 		Set @Tt= @IvCt-(CONVERT(float,dbo.DateToInt(@TmpDt))-CONVERT(float,@Dte)) 
 	end 
 	else 
 		Set @Tt=@IvCt 
 	if(@Tt<0) 
 		Set @Tt=0 
  return @Tt 
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun056]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun056](@Dte datetime,@TpGd uniqueidentifier,@Cnt int)returns datetime 
 as begin 
 	declare @Tp tinyint 
 	declare @Rt datetime 
 	declare @TpCnt int 
 	Set @TpCnt=@Cnt*(Select MCount From TBL037 Where CardGuide=@TpGd) 
 	Set @Tp=(Select MainID From TBL037 Where CardGuide=@TpGd) 
 	if(@Tp>2) 
 		Set @Rt =dateadd(yy,1*@TpCnt,@Dte) 
 	else if(@Tp>1) 
 		Set @Rt =dateadd(m,1*@TpCnt,@Dte) 
 	else 
 		Set @Rt =dateadd(d,@TpCnt,@Dte) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun057]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun057](@Cus uniqueidentifier)returns nvarchar(255) 
 as begin 
 	declare @Rt nvarchar(255) 
 	Set @Rt=(Select CardCode From TBL004 Where CardGuide=@Cus) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun058]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun058](@Cus uniqueidentifier)returns nvarchar(255) 
 as begin 
 	declare @Rt nvarchar(255) 
 	Set @Rt=(Select AccountName From TBL004 Where CardGuide=@Cus) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun059]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun059](@BillID uniqueidentifier)returns float 
 as begin 
 	declare @AgID uniqueidentifier 
 	declare @AcID uniqueidentifier 
 	declare @CrID uniqueidentifier 
 	declare @TDate datetime 
 	declare @Rate float 
 	set @AgID=(Select AgentGuide From TBL022 Where CardGuide=@BillID) 
 	set @TDate=(Select BillDate From TBL022 Where CardGuide=@BillID) 
 	set @CrID=(Select CurrencyGuide From TBL022 Where CardGuide=@BillID) 
 	set @Rate=(Select Rate From TBL022 Where CardGuide=@BillID) 
 	if(@AgID is Null)return 0 
 	if((Select PayMethod From TBL022 Where CardGuide=@BillID)=2) 
 		Set @AcID=(Select PostToAccount From TBL022 Where CardGuide=@BillID) 
 	else 
 		Set @AcID=(Select AccountID From TBL016 Where CardGuide=@AgID) 
 	if(@AcID is Null)return 0 
 	return dbo.Fun008(@AcID,@CrID,@Rate,0,convert(float,@TDate),0,null) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun060]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun060](@BID uniqueidentifier)returns @Tbl table(GrouptID uniqueidentifier, ItemsAccount uniqueidentifier, DiscountAccount uniqueidentifier, ExtraAccount uniqueidentifier ) 
 as begin 
 	Insert @Tbl Select GrouptID,ItemsAccount , DiscountAccount , ExtraAccount From TBL077 Where InvoiceID=@BID 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun061]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun061](@AsAdmin bit, @ForGroup uniqueidentifier,@ForItem  uniqueidentifier)returns @Tbl table(ID int,PriceColumnName varchar(255), PriceTerm varchar(255), PricePercent float,PriceOrder int,PriceFunction nvarchar(Max)) 
 as begin 
 	if(@AsAdmin>0) 
 		Insert @Tbl Select ID,PriceColumnName,PriceTerm,PricePercent,PriceOrder,PriceFunction From TBL017 Where ID Not Between 100 And 150 Order By ID 
 	else 
 	begin 
 		declare @Sec tinyint 
 		Set @Sec=1 
 		if(@ForItem Is Not Null)Set @Sec=(Select Security From TBL007 Where CardGuide=@ForItem) 
 		Insert @Tbl SELECT TBL017.ID, TBL017.PriceColumnName, TBL017.PriceTerm, TBL017.PricePercent,TBL017.PriceOrder,TBL017.PriceFunction 
 		FROM TBL017 INNER JOIN 
 		TBL065 ON TBL017.ID = TBL065.PriceType 
 		WHERE (TBL017.ID Not Between 100 And 150) And (TBL065.Permission >= @Sec) AND (TBL065.GroupGuide=@ForGroup) 
 	end 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun062]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun062](@BndID uniqueidentifier)returns float 
 as begin 
     declare @Rt float 
 	Set @Rt=(Select isnull((Select (TotalValue+ExtraValue)-(DiscountValue+TaxValue) From Qry017 Where BillGuide=@BndID),0))+(Select isnull((Select Qry016.BillExtras -dbo.Qry016.BillDiscounts From Qry016 Where MainGuide=@BndID),0))
 	Set @Rt=@Rt-(Select DownPayment From TBL022 Where CardGuide=@BndID)
 	Set @Rt=@Rt*((Select InvoiceMovementSide From TBL020 Where CardGuide=(Select MainGuide From TBL022 Where CardGuide=@BndID))*-1)
 	return @Rt
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun063]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun063](@Tp int,@Im uniqueidentifier,@TD datetime,@Cr uniqueidentifier,@iCo uniqueidentifier,@iPr uniqueidentifier,@iBr uniqueidentifier,@iSt uniqueidentifier 
 ,@iC1 uniqueidentifier,@iC2 uniqueidentifier,@iC3 uniqueidentifier,@iC4 uniqueidentifier,@iC5 uniqueidentifier,@FQty float,@ForBill uniqueidentifier) 
 returns float-- @Tb table(PriceRate float,Currency uniqueidentifier,Rate float,Factor2 float,Factor3 float) 
 as begin 
 	return 0 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun064]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun064](@CID uniqueidentifier)returns int 
 as begin 
 	declare @Rt int 
 	Set @Rt=isnull((Select Count(*) From TBL009 Where CollectAccount=@CID Or IntermediateAccount=@CID Or DefaultAccount=@CID),0) 
 	Set @Rt=@Rt+IsNull((Select Count(*) From TBL010 Where AccountGuide=@CID Or AccountGuide2=@CID),0) 
 	Set @Rt=@Rt+IsNull((Select Count(*) From TBL012 Where AccountGuide=@CID Or ContraAccount=@CID),0) 
 	Set @Rt=@Rt+IsNull((Select Count(*) From TBL016 Where AccountID=@CID),0) 
 	Set @Rt=@Rt+IsNull((Select Count(*) From TBL020 Where LocalAdministrativeTaxAccount=@CID Or CashAccount=@CID Or BankAccount=@CID Or BankProcuringCommissionAccount=@CID Or ProductsAccount=@CID Or DiscountsAccount=@CID Or SubjectToTaxAccount=@CID Or ExtrasAccount=@CID Or BonusAccount=@CID Or AgentProfitAccount=@CID),0) 
 	Set @Rt=@Rt+IsNull((Select Count(*) From TBL022 Where PostToAccount=@CID Or CommissionAccount=@CID),0) 
 	Set @Rt=@Rt+IsNull((Select Count(*) From TBL024 Where ContraAccount=@CID),0) 
 	Set @Rt=@Rt+IsNull((Select Count(*) From TBL026 Where AccountOFOption1=@CID Or AccountOFOption2=@CID Or AccountOFOption3=@CID Or AccountOFOption4=@CID Or AccountOFOption5=@CID Or AccountOFOption6=@CID Or AccountOFOption7=@CID Or AccountOFOption8=@CID),0) 
 	Set @Rt=@Rt+IsNull((Select Count(*) From TBL027 Where AccountA1=@CID Or AccountA2=@CID Or AccountB1=@CID Or AccountB2=@CID),0) 
 	Set @Rt=@Rt+IsNull((Select Count(*) From TBL029 Where AccountID=@CID Or ContraAccount=@CID),0) 
 	Set @Rt=@Rt+IsNull((Select Count(*) From TBL038 Where AccountGuide=@CID Or ContraAccount=@CID),0) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun065]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun065](@Nmb float, @PValue nvarchar(255), @NValue nvarchar(255))returns nvarchar(255)
 as begin 
 	if(@Nmb<0) 
 		return @NValue 
 	Else 
 		return @PValue 
 	return @PValue 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun066]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun066](@Ac uniqueidentifier,@RdUnPst bit)returns datetime 
 as begin 
 	declare @Tb table(Debit float,Credit float,EntryDate datetime) 
 	if(@RdUnPst>0) 
 		Insert Into @Tb(Debit,Credit,EntryDate)Select TBL012.Debit,TBL012.Credit,TBL011.EntryDate From TBL012 Left Join TBL011 On TBL012.MainGuide=TBL011.CardGuide Where TBL012.AccountGuide=@Ac Order By TBL011.EntryDate 
 	else 
 		Insert Into @Tb(Debit,Credit,EntryDate)Select TBL012.Debit,TBL012.Credit,TBL011.EntryDate From TBL012 Left Join TBL011 On TBL012.MainGuide=TBL011.CardGuide Where TBL012.AccountGuide=@Ac And TBL011.Posted>0 Order By TBL011.EntryDate 
 	declare @Rt datetime 
 	declare @Dbt float 
 	declare @Crt float 
 	declare @TDe datetime 
 	declare @Blnce float 
 	declare @Tmp float 
 	Set @Blnce=0 
 	DECLARE U CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select Debit,Credit,EntryDate From @Tb Order By EntryDate 
 	OPEN U 
 	FETCH NEXT FROM U INTO @Dbt,@Crt,@TDe 
 	WHILE (@@FETCH_STATUS = 0) 
 	begin 
 		Set @Blnce=@Blnce+(@Dbt-@Crt) 
 		Set @Tmp=@Blnce 
 		if (@Tmp<0)Set @Tmp=@Tmp*-1 
 		if(@Tmp<.01) 
 		begin 
 			Set @Rt=@TDe 
 		end 
 		FETCH NEXT FROM U INTO @Dbt,@Crt,@TDe 
 	end 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun069]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun069](@Pr uniqueidentifier,@Dt datetime)returns float 
 as begin 
 	declare @RV float 
 	declare @SetZero bit 
 	declare @RQ float 
 	Set @RV=0 
 	Set @RQ=0 
 	declare @ID int 
 	Set @ID=1 
 	declare @D table(ID int,Qty float,Prc float) 
 	declare @V float 
 	declare @Q float 
 	declare @S smallint 
 	declare @mD int 
 	declare @mV float 
 	declare @mQ float 
 	declare @iQ float 
  	DECLARE S CURSOR READ_ONLY FAST_FORWARD FOR 
  		Select ItemNetPriceBeforeTax,Quantity,InvoiceMovementSide From Qry101 Where BillDate<=@Dt And ProductGuide=@Pr And BillTypeID!=2 And(InvoiceMovementSide<0 Or(InvoiceMovementSide>0 And AffectLastPurchasePrice>0)) 
  			Order By BillDate asc,BillNumber asc,InvoiceMovementSide desc,ItemSortID asc 
 	OPEN S 
  	FETCH NEXT FROM S INTO @V,@Q,@S 
  	WHILE (@@FETCH_STATUS = 0) 
  	BEGIN 
  		if(@S>0) 
  		begin 
  			Insert Into @D(ID,Qty,Prc)Values(@ID,@Q,@V) 
  			Set @ID=@ID+1 
  		end 
  		else 
  		begin 
  			if(@SetZero>0) 
  			begin 
  			    Set @RV=0 
  			    Set @RQ=0 
  			    Set @SetZero=0 
  			end 
  			DECLARE V CURSOR READ_ONLY FAST_FORWARD FOR 
  				Select ID,Qty,Prc From @D Order By ID 
 			OPEN V 
  			FETCH NEXT FROM V INTO @mD,@mQ,@mV 
  			WHILE (@@FETCH_STATUS = 0) 
  			BEGIN 
  				if(@mQ>@Q) 
  				begin 
  					Update @D Set Qty=@mQ-@Q Where ID=@mD 
  				        Set @RV=@RV+(@Q*@mV) 
  				        Set @RQ=@RQ+@Q 
  					    Set @Q=0 
  				end 
  				else 
  				begin 
  					Set @Q=@Q-@mQ 
  				            Set @RV=@RV+(@mQ*@mV) 
  				            Set @RQ=@RQ+@mQ 
  					if (@Q>=0) 
  					begin 
  						Set @mD=@mD+1 
 	 				end 
 	 				else 
 	 				begin 
 	 				    Update @D Set Qty=@mQ-@Q Where ID=@mD 
 	 				end 
 			        Delete From @D Where ID<@mD 
  				end 
  				FETCH NEXT FROM V INTO @mD,@mQ,@mV 
  			END 
  			CLOSE V 
  			Deallocate V 
  		end 
  		if(@Q=0)Set @SetZero=1 
  		FETCH NEXT FROM S INTO @V,@Q,@S 
  	END 
  	CLOSE S 
  	Deallocate S 
  	return dbo.Ratio(@RV,@RQ) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun070]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun070](@Pr uniqueidentifier,@Dt datetime)returns float 
 as begin 
 	declare @Q float 
 	declare @T float 
 	Set @Q=0 
 	Set @T=0 
 	declare @mQ float 
 	declare @mT float 
 	declare @S smallint 
 	DECLARE N CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select BillItemNetTotalAfterTax,Quantity,InvoiceMovementSide From Qry100 Where BillDate<=@Dt And ProductGuide=@Pr And BillTypeID!=2 And(InvoiceMovementSide<0 Or(InvoiceMovementSide>0 And AffectLastPurchasePrice>0)) 
  			Order By BillDate asc,InvoiceMovementSide desc,ItemSortID asc 
 			OPEN N 
 	FETCH NEXT FROM N INTO @mT,@mQ,@S 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		if(@S>0) 
 		begin 
 			Set @Q=@Q+@mQ 
 			Set @T=@T+@mT 
 		end 
 		else 
 		begin 
 			if(@mQ>@Q)Set @mQ=@Q 
 			Set @T=@T-(@mQ*dbo.Ratio(@T,@Q)) 
 			Set @Q=@Q-@mQ 
 		end 
 		FETCH NEXT FROM N INTO @mT,@mQ,@S 
 	END 
 	CLOSE N 
 	Deallocate N 
 	return dbo.Ratio(@T,@Q) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun071]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun071](@Dv datetime)returns bit 
 as begin 
 if(@Dv Is Null) 
 	return 0 
 declare @D int 
 Set @D=dbo.DateToInt(@Dv) 
 declare @ND int 
 Set @ND=IsNull(dbo.Fun004(1),0) 
 if(@ND>5 And @ND>@D) 
 	return 0 
 Set @ND=IsNull(dbo.Fun004(2),0) 
 if(@ND>5 And @ND<@D) 
 	return 0 
 return 1 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun072]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun072](@Cr uniqueidentifier,@Ac uniqueidentifier)returns float 
  as begin 
  	declare @ID int 
   	Set @ID=1 
   	declare @D table(ID int,Qty float,Prc float,IValue float) 
   	declare @V float 
   	declare @Rt float 
   	declare @Cp float 
   	declare @Q float 
   	declare @S smallint 
   	declare @mD int 
   	declare @mV float 
   	declare @mQ float 
   	declare @iQ float 
   	declare @tQ float 
   	declare @iV float 
   	declare @miV float 
   	Set @Rt=0 
    	DECLARE X CURSOR READ_ONLY FAST_FORWARD FOR 
    		Select Rate,Value,IsDebit,IValue From 
    		(Select TBL011.EntryDate,TBL012.Debit+TBL012.Credit As IValue, TBL012.DebitRate+TBL012.CreditRate As Value,(TBL012.Debit+TBL012.Credit)/(TBL012.DebitRate+TBL012.CreditRate) As Rate,(Case TBL012.Debit When 0 Then 1 Else 0 End) IsDebit From TBL012 Left Join TBL011 On TBL012.MainGuide=TBL011.CardGuide Where TBL012.CurrencyGuide=@Cr And TBL012.AccountGuide=@Ac)a 
    		Order By a.EntryDate,a.IsDebit 
   	OPEN X 
    	FETCH NEXT FROM X INTO @V,@Q,@S,@iV 
    	WHILE (@@FETCH_STATUS = 0) 
    	BEGIN 
    		if(@S<1) 
    		begin 
    			Insert Into @D(ID,Qty,Prc,IValue)Values(@ID,@Q,@V,@iV) 
    			Set @ID=@ID+1 
    		end 
    		else 
    		begin 
    			Set @tQ=@Q 
    			DECLARE Y CURSOR READ_ONLY FAST_FORWARD FOR 
    				Select ID,Qty,Prc,IValue From @D Order By ID 
   			OPEN Y 
    			FETCH NEXT FROM Y INTO @mD,@mQ,@mV,@miV 
    			WHILE (@@FETCH_STATUS = 0) 
    			BEGIN 
    				if(@mQ>@Q) 
    				begin 
    					Update @D Set Qty=@mQ-@Q Where ID=@mD 
    					Set @iV=(@iV-(@Q*@mV)) 
    					Set @mD=@mD+1 
    					BREAK 
    				end 
    				else 
    				begin 
    					Set @Q=@Q-@mQ 
    					Set @iV=@iV-@miV 
    					if (@Q<=0) 
    					begin 
    						Set @mD=@mD+1 
    						if(@tQ<@mQ) 
    						    BREAK 
   	 				end 
   			        Delete From @D Where ID<@mD 
    				end 
    				FETCH NEXT FROM Y INTO @mD,@mQ,@mV,@miV 
    			END 
    			CLOSE Y 
    			Deallocate Y 
    		    Set @Rt=@Rt+@iV 
    		end 
    		FETCH NEXT FROM X INTO @V,@Q,@S,@iV 
    	END 
    	CLOSE X 
    	Deallocate X 
   	return @Rt 
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun073]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun073](@Cr uniqueidentifier,@Ac uniqueidentifier)returns float 
  as begin 
  	declare @Q float 
  	declare @T float 
  	declare @Rt float 
  	Set @Q=0 
  	Set @T=0 
  	Set @Rt=0 
  	declare @mQ float 
  	declare @mT float 
  	declare @S smallint 
  	DECLARE Z CURSOR READ_ONLY FAST_FORWARD FOR 
    		Select IValue,Value,IsDebit From 
    		(Select TBL011.EntryDate,TBL012.Debit+TBL012.Credit As IValue, TBL012.DebitRate+TBL012.CreditRate As Value,(TBL012.Debit+TBL012.Credit)/(TBL012.DebitRate+TBL012.CreditRate) As Rate,(Case TBL012.Debit When 0 Then 1 Else 0 End) IsDebit From TBL012 Left Join TBL011 On TBL012.MainGuide=TBL011.CardGuide Where TBL012.CurrencyGuide=@Cr And TBL012.AccountGuide=@Ac)a 
    		Order By a.EntryDate,a.IsDebit 
 	OPEN Z 
  	FETCH NEXT FROM Z INTO @mT,@mQ,@S 
  	WHILE (@@FETCH_STATUS = 0) 
  	BEGIN 
  		if(@S<1) 
  		begin 
  			Set @Q=@Q+@mQ 
  			Set @T=@T+@mT 
  		end 
  		else 
  		begin 
  			if(@mQ>@Q)Set @mQ=@Q 
  			Set @Rt=@Rt+(@mT-(dbo.Ratio(@T,@Q)*@mQ)) 
  			Set @T=@T-(@mQ*dbo.Ratio(@T,@Q)) 
  			Set @Q=@Q-@mQ 
  		end 
  		FETCH NEXT FROM Z INTO @mT,@mQ,@S 
  	END 
  	CLOSE Z 
  	Deallocate Z 
  	return @Rt 
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun074]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun074](@Cr uniqueidentifier,@Ac uniqueidentifier)returns float 
  as begin 
  	declare @Rt float 
  	Set @Rt=(Select Sum(Credit)From TBL012 Where CurrencyGuide=@Cr And AccountGuide=@Ac)-((Select dbo.Ratio(Sum(Debit),Sum(DebitRate)) From TBL012 Where CurrencyGuide=@Cr And AccountGuide=@Ac)* 
     (Select Sum(CreditRate)From TBL012 Where CurrencyGuide=@Cr And AccountGuide=@Ac)) 
  	return @Rt 
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun075]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun075](@Cr float)returns int 
  as begin 
  	declare @Rt int 
  	Set @Rt=(Select Convert(int,@Cr)) 
  	return @Rt 
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun076]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun076](@Cr uniqueidentifier)returns float 
  as begin 
  	declare @Rt float 
  	Set @Rt=(Select Partity From TBL001 Where CardGuide=@Cr) 
  	return @Rt 
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun077]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun077](@Nm float,@Cr uniqueidentifier)returns float 
  as begin 
  	declare @Rt float 
  	Set @Rt=Round((@Nm-(Select Convert(int,@Nm)))*dbo.Fun076(@Cr),0) 
  	return @Rt 
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun078]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun078](@InfTp tinyint, @Pr uniqueidentifier)returns float 
  as begin 
  	declare @Rt float 
  	Set @Rt=( 
     (CASE @InfTp 
           When 1 THEN (Select Factor2 From TBL007 Where CardGuide=@Pr) 
           When 2 THEN (Select Factor3 From TBL007 Where CardGuide=@Pr) 
           When 3 THEN (Select TaxRatio From TBL007 Where CardGuide=@Pr) 
           When 4 THEN (Select MaxLimit From TBL007 Where CardGuide=@Pr) 
           When 5 THEN (Select MinLimit From TBL007 Where CardGuide=@Pr) 
           When 11 THEN (Select AgentPrice From TBL007 Where CardGuide=@Pr) 
           When 12 THEN (Select WholePrice From TBL007 Where CardGuide=@Pr) 
           When 13 THEN (Select EndUserPrice From TBL007 Where CardGuide=@Pr) 
           When 14 THEN (Select Price5Item From TBL007 Where CardGuide=@Pr) 
           When 15 THEN (Select Price6Item From TBL007 Where CardGuide=@Pr) 
           When 16 THEN (Select StanderCost From TBL007 Where CardGuide=@Pr) 
           When 21 THEN (Select AgentPrice2 From TBL007 Where CardGuide=@Pr) 
           When 22 THEN (Select WholePrice2 From TBL007 Where CardGuide=@Pr) 
           When 23 THEN (Select EndUserPrice2 From TBL007 Where CardGuide=@Pr) 
           When 24 THEN (Select Price5Item2 From TBL007 Where CardGuide=@Pr) 
           When 25 THEN (Select Price6Item2 From TBL007 Where CardGuide=@Pr) 
           When 26 THEN (Select StanderCost2 From TBL007 Where CardGuide=@Pr) 
           When 31 THEN (Select AgentPrice3 From TBL007 Where CardGuide=@Pr) 
           When 32 THEN (Select WholePrice3 From TBL007 Where CardGuide=@Pr) 
           When 33 THEN (Select EndUserPrice3 From TBL007 Where CardGuide=@Pr) 
           When 34 THEN (Select Price5Item3 From TBL007 Where CardGuide=@Pr) 
           When 35 THEN (Select Price6Item3 From TBL007 Where CardGuide=@Pr) 
           When 36 THEN (Select StanderCost3 From TBL007 Where CardGuide=@Pr) 
     END)   ) 
  	return @Rt 
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun079]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun079](@InfTp tinyint, @Pr uniqueidentifier)returns nvarchar(2000) 
  as begin 
  	declare @Rt nvarchar(2000) 
  	Set @Rt=( 
     (CASE @InfTp 
           When 1 THEN (Select CardCode From TBL007 Where CardGuide=@Pr) 
           When 2 THEN (Select ProductName From TBL007 Where CardGuide=@Pr) 
           When 3 THEN (Select LatinName From TBL007 Where CardGuide=@Pr) 
           When 4 THEN (Select StatementName From TBL007 Where CardGuide=@Pr) 
           When 5 THEN (Select Source From TBL007 Where CardGuide=@Pr) 
           When 6 THEN (Select Custom From TBL007 Where CardGuide=@Pr) 
           When 7 THEN (Select Custom2 From TBL007 Where CardGuide=@Pr) 
           When 8 THEN (Select Custom3 From TBL007 Where CardGuide=@Pr) 
           When 9 THEN (Select Custom4 From TBL007 Where CardGuide=@Pr) 
           When 10 THEN (Select Custom5 From TBL007 Where CardGuide=@Pr) 
           When 11 THEN (Select Unit From TBL007 Where CardGuide=@Pr) 
           When 12 THEN (Select Unit2 From TBL007 Where CardGuide=@Pr) 
           When 13 THEN (Select Unit3 From TBL007 Where CardGuide=@Pr) 
           When 14 THEN (Select Barcode From TBL007 Where CardGuide=@Pr) 
           When 15 THEN (Select Barcode2 From TBL007 Where CardGuide=@Pr) 
           When 16 THEN (Select Barcode3 From TBL007 Where CardGuide=@Pr) 
           When 17 THEN (Select Convert(nvarchar(3000),Specification) From TBL007 Where CardGuide=@Pr) 
     END)   ) 
  	return @Rt 
  end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun080]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun080]()returns @Tb table(ID int,CardGuide varchar(40),TypeID varchar(40),CardName nvarchar(250)) 
 as begin 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Values(1,'11',Null,'Agents Cards') 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Values(2,'2',Null,'Cost Centers') 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Values(3,'3',Null,'Branchs') 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Values(4,'4',Null,'Projects') 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Values(5,'10',Null,'Items Cards') 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Values(6,'22',Null,'Archive Cards') 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Values(7,'7',Null,'Groups') 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Values(8,'9',Null,'Accounts') 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Values(9,'26',Null,'Users') 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Values(10,'21',Null,'Categories') 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Select ID,convert(varchar(40),CardGuide),convert(varchar(40), CardTypeID),CardName From TBL033 Where CardType Like'Form_Builder' And CardTypeID=11 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Select ID,convert(varchar(40),CardGuide),convert(varchar(40), CardTypeID),CardName From TBL033 Where CardType Like'Form_Builder' And CardTypeID=2 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Select ID,convert(varchar(40),CardGuide),convert(varchar(40), CardTypeID),CardName From TBL033 Where CardType Like'Form_Builder' And CardTypeID=3 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Select ID,convert(varchar(40),CardGuide),convert(varchar(40), CardTypeID),CardName From TBL033 Where CardType Like'Form_Builder' And CardTypeID=4 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Select ID,convert(varchar(40),CardGuide),convert(varchar(40), CardTypeID),CardName From TBL033 Where CardType Like'Form_Builder' And CardTypeID=10 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Select ID,convert(varchar(40),CardGuide),convert(varchar(40), CardTypeID),CardName From TBL033 Where CardType Like'Form_Builder' And CardTypeID=22 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Select ID,convert(varchar(40),CardGuide),convert(varchar(40), CardTypeID),CardName From TBL033 Where CardType Like'Form_Builder' And CardTypeID=7 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Select ID,convert(varchar(40),CardGuide),convert(varchar(40), CardTypeID),CardName From TBL033 Where CardType Like'Form_Builder' And CardTypeID=9 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Select ID,convert(varchar(40),CardGuide),convert(varchar(40), CardTypeID),CardName From TBL033 Where CardType Like'Form_Builder' And CardTypeID=26 
  	insert Into @Tb(ID,CardGuide,TypeID,CardName)Select ID,convert(varchar(40),CardGuide),convert(varchar(40), CardTypeID),CardName From TBL033 Where CardType Like'Form_Builder' And CardTypeID=21 
 	return 
 end	
GO
/****** Object:  UserDefinedFunction [dbo].[Fun081]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun081](@Sp int)returns uniqueidentifier 
 as begin 
  	declare @R uniqueidentifier 
  	Set @R=(Select UserGuide From TBL091 Where ID=(Select Max(ID)From TBL091 Where EventID=10 And ObjectID=@Sp)) 
 	return @R
 end	
GO
/****** Object:  UserDefinedFunction [dbo].[Fun082]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun082](@T int,@C uniqueidentifier)returns nvarchar(255) 
 as begin 
 	declare @R nvarchar(255) 
 	if(@T=22 Or @T=20) 
 		Set @R=(Select InvoiceName From TBL020 Where CardGuide=@C) 
 	else if(@T=10 Or @T=9) 
 		Set @R=(Select EntryName From TBL009 Where CardGuide=@C) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun083]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun083](@C uniqueidentifier, @Tb int)returns nvarchar(500) 
 as begin 
 declare @CrdN nvarchar(500) 
 	Set @CrdN=(CASE @Tb 
 		WHEN 1 THEN (Select Top 1 CurrencyName From TBL001 Where CardGuide=@C) 
 		WHEN 2 THEN (Select Top 1 CardCode+'-'+ClosingAccountName From TBL002 Where CardGuide=@C) 
 		WHEN 4 THEN (Select Top 1 CardCode+'-'+AccountName From TBL004 Where CardGuide=@C) 
 		WHEN 5 THEN (Select Top 1 CardCode+'-'+CostCenter From TBL005 Where CardGuide=@C) 
 		WHEN 6 THEN (Select Top 1 CardCode+'-'+GroupName From TBL006 Where CardGuide=@C) 
 		WHEN 7 THEN (Select Top 1 CardCode+'-'+ProductName From TBL007 Where CardGuide=@C) 
 		WHEN 8 THEN (Select Top 1 CardCode+'-'+WarehouseName From TBL008 Where CardGuide=@C) 
 		WHEN 9 THEN (Select Top 1 EntryName From TBL009 Where CardGuide=@C) 
 		WHEN 10 THEN (Select Top 1 Convert(nvarchar(15),BondNumber) From TBL010 Where CardGuide=@C) 
 		WHEN 11 THEN (Select Top 1 Convert(nvarchar(15),EntryNumber) From TBL011 Where CardGuide=@C) 
 		WHEN 13 THEN (Select Top 1 UserName From TBL013 Where UsGuide=@C) 
 		WHEN 15 THEN (Select Top 1 GroupName From TBL015 Where CardGuide=@C) 
 		WHEN 16 THEN (Select Top 1 AgentName From TBL016 Where CardGuide=@C) 
 		WHEN 20 THEN (Select Top 1 InvoiceName From TBL020 Where CardGuide=@C) 
 		WHEN 22 THEN (Select Top 1 Convert(nvarchar(15),BillNumber) From TBL022 Where CardGuide=@C) 
 	END) 
 	return @CrdN 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun084]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun084](@Frm nvarchar(250),@Cr nvarchar(250),@Prp nvarchar(250))returns nvarchar(250) 
 As Begin 
 	declare @R nvarchar(250) 
 	Set @R=(Select Top 1 Convert(nvarchar(4000), Value1) From TBL052 Where FormKey=@Frm And ControlKey=@Cr And Property=@Prp And ForUser=dbo.Fun081(@@SpID)) 
 	return @R 
 End
GO
/****** Object:  UserDefinedFunction [dbo].[Fun085]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun085](@Archv uniqueidentifier,@Agnt uniqueidentifier)returns uniqueidentifier 
 as begin 
 	declare @Rt uniqueidentifier 
 	declare @B uniqueidentifier 
 	declare @Sb varchar(100) 
 	Set @Sb=(Select ValueKey From TBL053 Where OptionName='StudentWithdrawalBond') 
 	if(Len(isnull(@Sb,''))>5) 
 	begin 
 		Set @B=Convert(uniqueidentifier,@Sb) 
 		Set @Rt=(Select Top 1 CardGuide From TBL010 Where RelatedArchive=@Archv And MainGuide=@B And AgentGuide=@Agnt) 
 	end 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun086]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun086](@CrGuide uniqueidentifier) returns float 
 as     
   begin  
 	declare @Rt float 
 	Set @Rt=dbo.Fun006(@CrGuide,Null,Null) 
 	return @Rt 
   end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun087]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[Fun087](@F float,@D datetime,@C uniqueidentifier,@RC uniqueidentifier)returns float 
 as begin 
 	declare @R float 
 	if (@C=@RC) 
 		return 1 
 	else 
 		Set @R=(Select Rate From TBL088 Where ID=(Select Max(ID) From TBL088 Where CurrencyID=@C And ContraCurrencyID=@RC And DoneIn<=@D)) 
 	if(@R>0) 
 	    return @R 
 	return @F 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun088]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun088](@B uniqueidentifier)returns int 
 as begin 
 	Declare @R int 
 	Set @R=(Select Max(Cnt) From 
 	(Select Count(*) As Cnt From TBL023 Where MainGuide=@B Group By ProductGuide,EstablishDate,CostCenter 
 	,dbo.Ratio(TotalValue,Quantity),Category01,Category02,Category03,Category04,Category05,CostCenter,StoreID,RelatedAgent 
 	,ExpiryDate,RelatedUnit,SourceBill,ReserveDate)a 
 	) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun089]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun089](@Ac uniqueidentifier,@Ag uniqueidentifier)returns @Tb table( 
 MainType tinyint,--0:Entry , 1:Bond , 2:Bill , 4:Bill Down Payment 
 TypeID uniqueidentifier,CardGuide uniqueidentifier,CardID int,CardNumber int,InDate datetime,IsPosted tinyint,CardSecurity tinyint,Account uniqueidentifier,Agent uniqueidentifier,Currency uniqueidentifier,CurrencyRate float, 
 Debit float,DebitRate float,Credit float,CreditRate float, 
 ContraAccount uniqueidentifier,CostCenter uniqueidentifier,Project uniqueidentifier,Branch uniqueidentifier ,Store uniqueidentifier,Notes nvarchar(255),Collected bit,EntryGuide uniqueidentifier,EntryNumber int) 
 as begin 
 	declare @Tp tinyint--Report Condition 
 	Set @Tp=0 
 	if(@Ac Is Not Null And @Ag Is Not Null) 
 		Set @Tp=3 
 	else if(@Ac Is Not Null) 
 		Set @Tp=2 
 	else if(@Ag Is Not Null) 
 		Set @Tp=1 
 	--Get Entries 
 	if(@Tp>2) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber) 
 		Select 0,'00000000-0000-0000-0000-000000000000', CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,CardGuide,CardNumber From Qry162 
 		Where AgentGuide=@Ag And AccountGuide=@Ac 
 	end 
 	else if(@Tp>1) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber) 
 		Select 0,'00000000-0000-0000-0000-000000000000', CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,CardGuide,CardNumber From Qry162 
 		Where AccountGuide=@Ac 
 	end 
 	else if(@Tp>0) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber) 
 		Select 0,'00000000-0000-0000-0000-000000000000', CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,CardGuide,CardNumber From Qry162 
 		Where AgentGuide=@Ag 
 	end 
 	else 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber) 
 		Select 0,'00000000-0000-0000-0000-000000000000', CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,CardGuide,CardNumber From Qry162 
 	end 
 	--Get Bonds 
 	if(@Tp>2) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry163 
 		Where AgentGuide=@Ag And AccountGuide=@Ac 
 	end 
 	else if(@Tp>1) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry163 
 		Where AccountGuide=@Ac 
 	end 
 	else if(@Tp>0) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry163 
 		Where AgentGuide=@Ag 
 	end 
 	else 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry163 
 	end 
 	--Get Bonds Head 
 	if(@Tp>2) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry169 
 		Where AgentGuide=@Ag And AccountGuide=@Ac 
 	end 
 	else if(@Tp>1) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry169 
 		Where AccountGuide=@Ac 
 	end 
 	else if(@Tp>0) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry169 
 		Where AgentGuide=@Ag 
 	end 
 	else 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry169 
 	end 
 	--Get Bonds Trancate Value 
 	if(@Tp>2) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry170 
 		Where AgentGuide=@Ag And AccountGuide=@Ac 
 	end 
 	else if(@Tp>1) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry170 
 		Where AccountGuide=@Ac 
 	end 
 	else if(@Tp>0) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry170 
 		Where AgentGuide=@Ag 
 	end 
 	else 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry170 
 	end 
  	--Get Endorse To Account 
  	if(@Tp>2) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Credit ,CreditRate,Debit ,DebitRate ,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
  		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry203 
  		Where AgentGuide=@Ag And AccountGuide=@Ac 
  	end 
  	else if(@Tp>1) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Credit ,CreditRate,Debit ,DebitRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
  		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry203 
  		Where AccountGuide=@Ac 
  	end 
  	else if(@Tp>0) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Credit ,CreditRate,Debit ,DebitRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
  		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry203 
  		Where AgentGuide=@Ag 
  	end 
  	else 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Credit ,CreditRate,Debit ,DebitRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
  		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry203 
  	end 
 	--Get Bills 
 	if(@Tp>2) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 2,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, null, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,StoreGuide,Notes,EntryGuide,EntryNumber From Qry168 
 		Where AgentGuide=@Ag And AccountGuide=@Ac 
 	end 
 	else if(@Tp>1) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 2,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, null, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,StoreGuide,Notes,EntryGuide,EntryNumber From Qry168 
 		Where AccountGuide=@Ac 
 	end 
 	else if(@Tp>0) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 2,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, null, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,StoreGuide,Notes,EntryGuide,EntryNumber From Qry168 
 		Where AgentGuide=@Ag 
 	end 
 	else 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 2,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, null, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,StoreGuide,Notes,EntryGuide,EntryNumber From Qry168 
 	end 
 	--Get Bills Product Account 
 	if(@Tp>2) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 2,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, null, AgentGuide, CurrencyGuide, Rate, Credit, CreditRate, Debit, DebitRate, CostCenter, Project, Branch,StoreGuide,Notes,EntryGuide,EntryNumber From Qry168 
 		Where AgentGuide=@Ag And ProductsAccount=@Ac 
 	end 
 	else if(@Tp>1) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 2,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, null, AgentGuide, CurrencyGuide, Rate, Credit, CreditRate, Debit, DebitRate, CostCenter, Project, Branch,StoreGuide,Notes,EntryGuide,EntryNumber From Qry168 
 		Where ProductsAccount=@Ac 
 	end 
 	--Get Discount And Extras 
 	if(@Tp>2) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry171 
 		Where AgentGuide=@Ag And AccountGuide=@Ac 
 	end 
 	else if(@Tp>1) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry171 
 		Where AccountGuide=@Ac 
 	end 
 	else if(@Tp>0) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry171 
 		Where AgentGuide=@Ag 
 	end 
 	else 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry171 
 	end 
 	--Get Contra Account Discount And Extras 
 	if(@Tp>2) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security , ContraAccount, AccountGuide, ContraAgentGuide, CurrencyGuide, Rate, Credit, CreditRate, Debit, DebitRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry171 
 		Where ContraAgentGuide=@Ag And ContraAccount=@Ac 
 	end 
 	else if(@Tp>1) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, ContraAccount, AccountGuide, ContraAgentGuide, CurrencyGuide, Rate, Credit, CreditRate, Debit, DebitRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry171 
 		Where ContraAccount=@Ac 
 	end 
 	else if(@Tp>0) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, ContraAccount, AccountGuide, ContraAgentGuide, CurrencyGuide, Rate, Credit, CreditRate, Debit, DebitRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry171 
 		Where ContraAgentGuide=@Ag 
 	end 
 	else 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
 		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, ContraAccount, AccountGuide, ContraAgentGuide, CurrencyGuide, Rate, Credit, CreditRate, Debit, DebitRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry171 
 	end 
 	--Get Bill Payments 
 	if(@Tp>2) 
 	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
  		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry211 
  		Where AgentGuide=@Ag And AccountGuide=@Ac 
  	end 
  	else if(@Tp>1) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
  		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry211 
  		Where AccountGuide=@Ac 
  	end 
  	else if(@Tp>0) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
  		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry211 
  		Where AgentGuide=@Ag 
  	end 
  	else 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
  		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry211 
  	end 
  	--Get Contra Account Bill Payments 
  	if(@Tp>2) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
  		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security , ContraAccount, AccountGuide, ContraAgentGuide, CurrencyGuide, Rate, Credit, CreditRate, Debit, DebitRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry212 
  		Where ContraAgentGuide=@Ag And ContraAccount=@Ac 
  	end 
  	else if(@Tp>1) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
  		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, ContraAccount, AccountGuide, ContraAgentGuide, CurrencyGuide, Rate, Credit, CreditRate, Debit, DebitRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry212 
  		Where ContraAccount=@Ac 
  	end 
  	else if(@Tp>0) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
  		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, ContraAccount, AccountGuide, ContraAgentGuide, CurrencyGuide, Rate, Credit, CreditRate, Debit, DebitRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry212 
  		Where ContraAgentGuide=@Ag 
  	end 
  	else 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,EntryGuide,EntryNumber ) 
  		Select 3,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, ContraAccount, AccountGuide, ContraAgentGuide, CurrencyGuide, Rate, Credit, CreditRate, Debit, DebitRate, CostCenter, Project, Branch,null,Notes,EntryGuide,EntryNumber From Qry212 
  	end 
 	--Get Returned Bonds 
 	if(@Tp>2) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry207 
 		Where AgentGuide=@Ag And AccountGuide=@Ac 
 	end 
 	else if(@Tp>1) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry207 
 		Where AccountGuide=@Ac 
 	end 
 	else if(@Tp>0) 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry207 
 		Where AgentGuide=@Ag 
 	end 
 	else 
 	begin 
 		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
 		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry207 
 	end 
  	--Get Returned Bond Body 
  	if(@Tp>2) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
  		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry210 
  		Where AgentGuide=@Ag And AccountGuide=@Ac 
  	end 
  	else if(@Tp>1) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
  		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry210 
  		Where AccountGuide=@Ac 
  	end 
  	else if(@Tp>0) 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
  		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry210 
  		Where AgentGuide=@Ag 
  	end 
  	else 
  	begin 
  		Insert Into @Tb(MainType ,TypeID ,CardGuide ,CardID ,CardNumber ,InDate ,IsPosted ,CardSecurity ,Account ,ContraAccount ,Agent ,Currency ,CurrencyRate ,Debit ,DebitRate ,Credit ,CreditRate,CostCenter ,Project ,Branch ,Store,Notes,Collected,EntryGuide,EntryNumber ) 
  		Select 1,MainGuide, CardGuide, ID, CardNumber, InDate, Posted, Security, AccountGuide, ContraAccount, AgentGuide, CurrencyGuide, Rate, Debit, DebitRate, Credit, CreditRate, CostCenter, Project, Branch,null,Notes,Collected,EntryGuide,EntryNumber From Qry210 
  	end 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun090]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun090](@G uniqueidentifier,@M uniqueidentifier,@W uniqueidentifier)returns bit 
 as begin 
 	declare @R bit 
 	if(@G=@W) 
 		return 1 
 	if(@M Is Not Null And @M=@W) 
 		return 1 
 	Set @R=0 
 	if(@M Is Null)Set @M=(Select MainGuide From TBL006 Where CardGuide=@G) 
 	if(@M Is Not Null)Set @R=dbo.Fun090(@M,Null,@W) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun091]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun091](@P nvarchar(255))returns uniqueidentifier 
 as begin 
 	declare @R uniqueidentifier 
 	Set @R=(Select Top 1 ValueKey From TBL053 Where OptionName=@P) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun092]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun092](@P nvarchar(255))returns nvarchar(255) 
 as begin 
 	declare @R nvarchar(255) 
 	Set @R=replace(replace(replace(@P,'
',''),'',''),'	','') 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun093]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun093](@Ag uniqueidentifier ,@Gr uniqueidentifier)returns bit 
 as begin 
 	declare @AgGr uniqueidentifier 
 	Set @AgGr=(Select MainGroupGuide From TBL016 Where CardGuide=@Ag) 
 	if(@AgGr=@Gr) 
 		return 1 
 	else 
 	begin 
 		Set @AgGr=(Select MainGuide From TBL015 Where CardGuide=@AgGr) 
 		while(@AgGr Is Not Null) 
 		begin 
 			if(@AgGr=@Gr) 
 				return 1 
 			Set @AgGr=(Select MainGuide From TBL015 Where CardGuide=@AgGr) 
 		end 
 	end 
 	return 0 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun094]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun094](@U uniqueidentifier)returns @Tb table(ID int,CardGuide uniqueidentifier,GroupGuide uniqueidentifier,InvoiceName nvarchar(255),LatinName nvarchar(255),BillType tinyint,AllowValue tinyint,BrowsingPosted tinyint,InsertingPosted tinyint,UpdatingPosted tinyint,DeletingPosted tinyint,PrintingPosted tinyint,BrowsingUnPosted tinyint,InsertingUnPosted tinyint,UpdatingUnPosted tinyint,DeletingUnPosted tinyint,PrintingUnPosted tinyint) 
 as begin 
 	Insert @Tb Select ID,CardGuide,GroupGuide,InvoiceName,LatinName,BillType,AllowValue,BrowsingPosted,InsertingPosted,UpdatingPosted,DeletingPosted,PrintingPosted,BrowsingUnPosted,InsertingUnPosted,UpdatingUnPosted,DeletingUnPosted,PrintingUnPosted From Qry049 Where (BillType<2 Or BillType=8 Or BillType=9 Or BillType=10 Or BillType=16) And AllowValue>0 And GroupGuide=@U 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun095]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun095](@I uniqueidentifier,@G uniqueidentifier)returns bit 
 as begin 
 	declare @M uniqueidentifier 
 	Select @M=GroupGuid From TBL007 Where CardGuide=@I 
 	return dbo.Fun090(@M,Null,@G) 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun096]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun096](@R uniqueidentifier)returns bit 
 as begin 
 	declare @V bit 
 	Select @V=Printed From TBL023 Where RowGuide=@R 
 	return @V 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun097]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun097](@Rng uniqueidentifier,@Ac uniqueidentifier,@Mn uniqueidentifier)returns bit 
 as begin 
 	declare @R bit 
 	if(@Mn Is Null)Set @Mn=(Select MainAccount From TBL004 Where CardGuide=@Ac) 
 	if(@Rng=@Ac Or @Rng=@Mn) 
 		return 1 
 	else if(@Mn Is Not Null)
 	begin 
 		Select @R=dbo.Fun097(@Rng,@Mn,(Select MainAccount From TBL004 Where CardGuide=@Mn)) 
 	end 
 	Else Set @R=0 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun098]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun098](@Itm uniqueidentifier,@C uniqueidentifier,@Tp tinyint)returns nvarchar(255) 
 as begin 
 	declare @R nvarchar(255) 
 	declare @N nvarchar(255) 
 	declare @S nvarchar(255) 
 	Select @N=TBL001.CurrencyName,@S=CurrencyShortcut From TBL001 Where CardGuide=(Select IsNull(DefaultCurrency,@C)From TBL007 Where TBL007.CardGuide=@Itm) 
 	Set @R=(Case @Tp 
 	When 1 THEN IsNull(@N,@S)--Name 
 	ELSE IsNull(@S,@N)--Short Name 
 	END)return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun099]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun099](@G uniqueidentifier,@T uniqueidentifier ,@N int )returns int 
 as begin 
 	declare @C int 
 	if(@G Is Null) 
 		Set @C=1
 	else 
 	    Select @C=Count(*) From TBL022 Where MainGuide=@T And CardGuide!=@G And BillNumber=@N 
 	if(@C>0 Or @N<1) 
 	begin 
 		Set @N=IsNull((Select Max(BillNumber)From TBL022 Where MainGuide=@T),0)+1 
 	end 
 	return @N 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun100]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun100](@F nvarchar(100))returns  nvarchar(255)
 as begin
 	if(@F like '%.Design')Set @F=substring(@F,1,Len(@F)-7)
 	if(@F like '%_Options')Set @F=substring(@F,1,Len(@F)-8)
 	if(@F like '%Xtr')Set @F=substring(@F,1,Len(@F)-3)
 	if(@F like 'Xtr%')Set @F=substring(@F,4,Len(@F)-3)
 	declare @R nvarchar(255)
 	Set @R=IsNull((Select Top 1 CardTerm From TBL046 Where CardGuide Like'%'+@F+'%'),'')
 	if(len(IsNull(@R,''))>1)return @R
 	Set @R=IsNull((Select Top 1 CardTerm From TBL043 Where CardGuide Like'%'+@F+'%'),'')
 	if(len(IsNull(@R,''))>1)return @R
 	Set @R=(Select Top 1 EntryName From TBL009 Where Convert(nvarchar(100),CardGuide)=@F)
 	if(len(IsNull(@R,''))>1)return @R
 	Set @R=(Select Top 1 InvoiceName From TBL020 Where Convert(nvarchar(100),CardGuide)=@F)
 	if(len(IsNull(@R,''))>1)return @R
 	Set @R=(Select Top 1 BillName From TBL026 Where Convert(nvarchar(100),CardGuide)=@F)
 	return @R
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun101]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun101](@G uniqueidentifier)returns @Tb table(CardGuide uniqueidentifier,CardName nvarchar(255),CardType int) 
 as begin 
 Insert Into @Tb(CardGuide,CardName,CardType) Select TBL027.CardGuide,CONVERT(nvarchar(15),TBL027.CardNumber)+'-'+TBL026.BillName,72 From TBL027 with(nolock) Inner Join TBL026 with(nolock) On TBL027.MainGuide=TBL026.CardGuide 
 	Where TBL027.MainBillGuide=@G 
 	Insert Into @Tb(CardGuide,CardName,CardType) Select TBL010.CardGuide,Convert(nvarchar(15),TBL010.BondNumber)+'-'+TBL009.EntryName,35  From TBL010 with(nolock) Left Join TBL009 with(nolock) On TBL009.CardGuide=TBL010.MainGuide Where TBL010.BillGuide=@G Or TBL010.BillGuide2=@G 
 	Insert Into @Tb(CardGuide,CardName,CardType) Select TBL010.CardGuide,Convert(nvarchar(15),TBL010.BondNumber)+'-'+TBL009.EntryName,35  From TBL038 with(nolock) Inner Join TBL010 with(nolock) On TBL038.MainGuide=TBL010.CardGuide Inner Join TBL009 with(nolock) On TBL010.MainGuide=TBL009.CardGuide Left Join @Tb c On TBL010.CardGuide=c.CardGuide Where TBL038.SourceBill=@G And c.CardGuide Is Null 
 	Insert Into @Tb(CardGuide,CardName,CardType) Select TBL022.CardGuide,CONVERT(nvarchar(15),TBL022.BillNumber)+'-'+TBL020.InvoiceName,34 
 	From TBL023 with(nolock) Left Join TBL022 with(nolock) On TBL023.MainGuide=TBL022.CardGuide Left Join TBL020 with(nolock) On TBL022.MainGuide=TBL020.CardGuide 
 	Where TBL023.SourceBill=@G 
 	Group By TBL022.CardGuide,TBL022.BillNumber,TBL020.InvoiceName 
 	declare @FG uniqueidentifier 
 	Select @FG=MainBillGuide From TBL022 with(nolock) Where CardGuide=@G 
 	if(@FG Is Not Null) 
 		Insert Into @Tb(CardGuide,CardName,CardType)Select @FG, Convert(nvarchar(15), TBL027.CardNumber)+'-'+TBL026.BillName,36 From TBL027 with(nolock) Left Join TBL026 with(nolock) On TBL027.MainGuide=TBL026.CardGuide Where TBL027.CardGuide=@FG 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun102]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Fun102](@BondGuide uniqueidentifier)returns float 
 as begin   
 	declare @Acc uniqueidentifier 
 	declare @Crr uniqueidentifier 
 	declare @Rate float 
 	declare @Nb float 
 	set @Acc=(Select AccountGuide From TBL010 Where CardGuide=@BondGuide) 
 	Set @Crr=IsNull((Select CurrencyGuide From TBL038 Where ID=(Select min(ID) From TBL038 Where MainGuide=@BondGuide) ),(Select CurrencyGuide From TBL010 Where CardGuide=@BondGuide)) 
 	Set @Rate=dbo.Fun013(@Crr) 
 	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc),0 )  
 		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc),0 )  
 	return @Nb    
 end 
GO
/****** Object:  UserDefinedFunction [dbo].[Fun103]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun103](@Tb nvarchar(100),@ForTb nvarchar(100))returns nvarchar(Max) 
 as begin 
 declare @WithDefaults bit Set @WithDefaults=1 
 if(len(isnull(@ForTb,''))<1) 
  	Set @ForTb=@Tb 
 else 
  	Set @WithDefaults=0 
 declare @TableIx int 
 Set @TableIx=(Select id From sysobjects Where Name=@Tb) 
 declare @Qr nvarchar(Max) 
 declare @CN nvarchar(255) 
 declare @CT nvarchar(255) 
 declare @CDFV nvarchar(255) 
 declare @CDNM nvarchar(255) 
 declare @CID int 
 declare @CxT int 
 declare @CsT int 
 declare @CdF int 
 declare @ClNG int 
 declare @KTxt bit 
 declare @IsNull bit 
 Set @KTxt=0 
 Set @Qr='' 
 DECLARE Crt CURSOR READ_ONLY FAST_FORWARD FOR 
  	Select b.Name As TypeName ,a.Name As ColName,a.xtype,a.colstat,a.cdefault,a.length,a.colid,c.text,d.name,a.isnullable From syscolumns a 
  	Left Join systypes b On a.xtype=b.xtype 
  	Left Join syscomments c on c.id=a.cdefault 
  	left join sysobjects d on d.id=a.cdefault 
  	Where a.id=@TableIx 
  	Order By a.colorder 
 OPEN Crt 
 FETCH NEXT FROM Crt INTO @CT, @CN, @CxT, @CsT , @Cdf , @ClNG , @CID , @CDFV , @CDNM , @IsNull 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
  	if(@CT Not Like '%name%') 
  	begin 
  		Set @Qr= @Qr + ' [' + @CN + '] ' + @CT 
  		if(@ClNG > 1 And @CT Like '%n%char%') Set @ClNG=@ClNG/2 
  		if(@CT Like '%char%') 
  		begin 
  			if(@ClNG>2) 
  				Set @Qr=@Qr+'('+Convert(varchar(10),@ClNG)+')' 
  			else 
  				Set @Qr=@Qr+'(Max)' 
  		end 
  		if(@CT Like '%text%') Set @KTxt=1 
  		if(@WithDefaults>0) 
  		begin 
  			if(@Cdf>0) 
  			begin 
  				Set @Qr= @Qr + ' NOT NULL CONSTRAINT ['+ @CDNM +'] DEFAULT ' + @CDFV 
  			end 
  			else if(@CsT=1) 
  				Set @Qr= @Qr + ' IDENTITY (1, 1) NOT NULL' 
  			else 
  				Set @Qr=@Qr +(CASE @IsNull When 0 Then ' Not ' Else '' End)+ ' Null ' 
  		end 
  		else 
  			Set @Qr=@Qr +(CASE @IsNull When 0 Then ' Not ' Else '' End)+ ' Null ' 
  		Set @Qr=@Qr + ',' + char(13) 
  	end 
  	FETCH NEXT FROM Crt INTO @CT, @CN, @CxT, @CsT , @Cdf , @ClNG , @CID , @CDFV , @CDNM , @IsNull 
 END 
 CLOSE Crt 
 Deallocate Crt 
 Set @Qr='Create Table dbo.' + @ForTb  + '(' + char(13) + @Qr 
 Set @CN=(Select Top 1 name From sysobjects Where parent_obj=@TableIx And xtype='PK') 
 Set @CT=(Select Top 1 name From syscolumns Where id=@TableIx And colorder=(Select Top 1 colid From sysindexkeys Where id=@TableIx)) 
 if(@WithDefaults>0 And len(isnull(@CN,''))>0) 
  	Set @Qr=@Qr + 'CONSTRAINT [' + @CN + '] PRIMARY KEY CLUSTERED' + char(13)  + '(' + char(13) + '	[' + @CT + ']' + char(13) + ') ON [PRIMARY]' 
 Set @Qr=@Qr + char(13) + ') ON [PRIMARY]' 
 if(@KTxt>0) 
  	Set @Qr=@Qr+' TEXTIMAGE_ON [PRIMARY]' 
 return @Qr 
 End
GO
/****** Object:  UserDefinedFunction [dbo].[Fun104]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun104](@Tb nvarchar(255))returns @D table(FTable nvarchar(255),RTable nvarchar(255),RName nvarchar(255),RColumn nvarchar(255),FColumn nvarchar(255),DeleteAction tinyint ,UpdateAction tinyint ) 
 	as begin 
 	if(Len(ltrim(rtrim(IsNull(@Tb,''))))=0)return 
 	Insert Into @D 
 		SELECT a3.name As FTable, a2.name as RTable,a1.name as RName,(Select Name From syscolumns Where ID=A.fkeyid And colorder=A.fkey)As RColumn 
  		,(Select Name From syscolumns Where ID=A.rkeyid And colorder=A.rkey)As FColumn,OBJECTPROPERTY(a.constid, N'CnstIsDeleteCascade') As DeleteAction 
  		,OBJECTPROPERTY(a.constid, N'CnstIsUpdateCascade') As UpdateAction 
  		FROM sysforeignkeys A JOIN SYSCOLUMNS B ON A.fkey =B.colid AND A.fkeyid=B.id JOIN SYSCOLUMNS C ON A.keyno=C.colid AND A.rkeyid=C.id 
  		left join sysobjects a1 on a1.id=A.constid 
  		left join sysobjects a2 on a2.id=A.fkeyid 
  		left join sysobjects a3 on a3.id=A.rkeyid 
  		WHERE a3.name=@Tb Or a2.name=@Tb Order By a2.name 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun105]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun105](@BondGuide uniqueidentifier)returns float 
 	as begin 
 	declare @Acc uniqueidentifier 
 	declare @Crr uniqueidentifier 
 	declare @Rate float 
 	declare @Nb float 
 	set @Acc=(Select Top 1 AccountGuide From TBL038 Where MainGuide=@BondGuide) 
 	Set @Crr=IsNull((Select CurrencyGuide From TBL038 Where ID=(Select min(ID) From TBL038 Where MainGuide=@BondGuide) ),(Select CurrencyGuide From TBL010 Where CardGuide=@BondGuide)) 
 	Set @Rate=dbo.Fun013(@Crr) 
 	set @Nb=isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc),0 )  
 		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc),0 )  
 	return @Nb    
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun106]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun106](@Acc uniqueidentifier ,@Crr uniqueidentifier,@Rate float,@Tp tinyint,@Co uniqueidentifier)returns float 
 	as begin 
 	--0 Balance 
 	--1 Debit 
 	--2 Credit 
 	declare @Rt float 
 	if(@Co Is Null) 
 	begin 
 		set @Rt=(CASE @Tp When 1 Then 
 		(isnull((Select Sum(DebitRate) From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc),0 ) 
 		+isnull((Select Sum(Debit)/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc),0 )) 
 		When 2 Then 
 		(isnull((Select Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc),0 ) 
 		+isnull((Select Sum(Credit)/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc),0 )) 
 		ELSE 
 		(isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc),0 ) 
 		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc),0 )) 
 		END) 
 	end 
 	else 
 	begin 
 		set @Rt=(CASE @Tp When 1 Then 
 		(isnull((Select Sum(DebitRate) From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And CostCenter=@Co),0 ) 
 		+isnull((Select Sum(Debit)/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc And CostCenter=@Co),0 )) 
 		When 2 Then 
 		(isnull((Select Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And CostCenter=@Co),0 ) 
 		+isnull((Select Sum(Credit)/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc And CostCenter=@Co),0 )) 
 		ELSE 
 		(isnull((Select Sum(DebitRate)-Sum(CreditRate)From Qry013 Where CurrencyGuide=@Crr And AccountGuide=@Acc And CostCenter=@Co),0 ) 
 		+isnull((Select (Sum(Debit)-Sum(Credit))/@Rate From Qry013 Where CurrencyGuide!=@Crr And AccountGuide=@Acc And CostCenter=@Co),0 )) 
 		END) 
 	end 
 	return @Rt 
 	end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun107]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun107](@Ag uniqueidentifier,@Tp tinyint,@CardGuide uniqueidentifier)returns float 
 as begin 
 --0 Balance 
 --1 Debit 
 --2 Credit 
 declare @Rt float 
 declare @WCo int 
 declare @Co uniqueidentifier 
 Set @WCo=IsNull((Select Top 1 Value From TBL053 Where OptionName='CalculateBalanceByCostCenter'),0)
 if(@WCo>0) 
 	Set @Co=(Select RelatedCostCenter From TBL085 Where CardGuide=@CardGuide) 
 declare @Cr uniqueidentifier 
 Set @Cr=(Select CardGuide From TBL001 Where ID=(Select Min(ID)From TBL001)) 
 declare @Ac uniqueidentifier 
 Set @Ac=(Select AccountID From TBL016 Where CardGuide=@Ag) 
 Set @Rt=dbo.Fun106(@Ac,@Cr,1,@Tp,@Co) 
 return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun108]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun108](@ShiftGuide uniqueidentifier)returns @tb table(ShiftGuide uniqueidentifier,EarlyEntrance datetime,EarlyEntranceSetRule datetime,EarlyEntranceValue float,EarlyEntranceEq int,EarlyEntranceField nvarchar(100), 
 EarlyEntrance2 datetime,EarlyEntranceSetRule2 datetime,EarlyEntranceValue2 float,EarlyEntranceEq2 int,EarlyEntranceField2 nvarchar(100), 
 EarlyEntrance3 datetime,EarlyEntranceSetRule3 datetime,EarlyEntranceValue3 float,EarlyEntranceEq3 int,EarlyEntranceField3 nvarchar(100), 
 ---------------------------------------- 
 LateEntrance datetime,LateEntranceSetRule datetime,LateEntranceValue float,LateEntranceEq int,LateEntranceField nvarchar(100), 
 LateEntrance2 datetime,LateEntranceSetRule2 datetime,LateEntranceValue2 float,LateEntranceEq2 int,LateEntranceField2 nvarchar(100), 
 LateEntrance3 datetime,LateEntranceSetRule3 datetime,LateEntranceValue3 float,LateEntranceEq3 int,LateEntranceField3 nvarchar(100), 
 ---------------------------------------- 
 EarlyLeave datetime,EarlyLeaveSetRule datetime,EarlyLeaveValue float,EarlyLeaveEq int,EarlyLeaveField nvarchar(100), 
 EarlyLeave2 datetime,EarlyLeaveSetRule2 datetime,EarlyLeaveValue2 float,EarlyLeaveEq2 int,EarlyLeaveField2 nvarchar(100), 
 EarlyLeave3 datetime,EarlyLeaveSetRule3 datetime,EarlyLeaveValue3 float,EarlyLeaveEq3 int,EarlyLeaveField3 nvarchar(100), 
 ---------------------------------------- 
 LateLeave datetime,LateLeaveSetRule datetime,LateLeaveValue float,LateLeaveEq int,LateLeaveField nvarchar(100), 
 LateLeave2 datetime,LateLeaveSetRule2 datetime,LateLeaveValue2 float,LateLeaveEq2 int,LateLeaveField2 nvarchar(100), 
 LateLeave3 datetime,LateLeaveSetRule3 datetime,LateLeaveValue3 float,LateLeaveEq3 int,LateLeaveField3 nvarchar(100), 
 ---------------------------------------- 
 Absentee datetime,AbsenteeSetRule datetime,AbsenteeValue float,AbsenteeEq int,AbsenteeField nvarchar(100), 
 Absentee2 datetime,AbsenteeSetRule2 datetime,AbsenteeValue2 float,AbsenteeEq2 int,AbsenteeField2 nvarchar(100), 
 Absentee3 datetime,AbsenteeSetRule3 datetime,AbsenteeValue3 float,AbsenteeEq3 int,AbsenteeField3 nvarchar(100)) 
 as begin 
 	if(@ShiftGuide Is Null) 
 		return 
 	declare @EarlyEntrance datetime 
 	declare @EarlyEntranceSetRule datetime 
 	declare @EarlyEntranceValue float 
 	declare @EarlyEntranceEq int 
 	declare @EarlyEntranceField nvarchar(100) 
 	declare @LateEntrance datetime 
 	declare @LateEntranceSetRule datetime 
 	declare @LateEntranceValue float 
 	declare @LateEntranceEq int 
 	declare @LateEntranceField nvarchar(100) 
 	declare @EarlyLeave datetime 
 	declare @EarlyLeaveSetRule datetime 
 	declare @EarlyLeaveValue float 
 	declare @EarlyLeaveEq int 
 	declare @EarlyLeaveField nvarchar(100) 
 	declare @LateLeave datetime 
 	declare @LateLeaveSetRule datetime 
 	declare @LateLeaveValue float 
 	declare @LateLeaveEq int 
 	declare @LateLeaveField nvarchar(100) 
 	declare @Absentee datetime 
 	declare @AbsenteeSetRule datetime 
 	declare @AbsenteeValue float 
 	declare @AbsenteeEq int 
 	declare @AbsenteeField nvarchar(100) 
 	--------------------------------------- 
 	declare @EarlyEntrance2 datetime 
 	declare @EarlyEntranceSetRule2 datetime 
 	declare @EarlyEntranceValue2 float 
 	declare @EarlyEntranceEq2 int 
 	declare @EarlyEntranceField2 nvarchar(100) 
 	declare @LateEntrance2 datetime 
 	declare @LateEntranceSetRule2 datetime 
 	declare @LateEntranceValue2 float 
 	declare @LateEntranceEq2 int 
 	declare @LateEntranceField2 nvarchar(100) 
 	declare @EarlyLeave2 datetime 
 	declare @EarlyLeaveSetRule2 datetime 
 	declare @EarlyLeaveValue2 float 
 	declare @EarlyLeaveEq2 int 
 	declare @EarlyLeaveField2 nvarchar(100) 
 	declare @LateLeave2 datetime 
 	declare @LateLeaveSetRule2 datetime 
 	declare @LateLeaveValue2 float 
 	declare @LateLeaveEq2 int 
 	declare @LateLeaveField2 nvarchar(100) 
 	declare @Absentee2 datetime 
 	declare @AbsenteeSetRule2 datetime 
 	declare @AbsenteeValue2 float 
 	declare @AbsenteeEq2 int 
 	declare @AbsenteeField2 nvarchar(100) 
 	---------------------------------------- 
 	declare @EarlyEntrance3 datetime 
 	declare @EarlyEntranceSetRule3 datetime 
 	declare @EarlyEntranceValue3 float 
 	declare @EarlyEntranceEq3 int 
 	declare @EarlyEntranceField3 nvarchar(100) 
 	declare @LateEntrance3 datetime 
 	declare @LateEntranceSetRule3 datetime 
 	declare @LateEntranceValue3 float 
 	declare @LateEntranceEq3 int 
 	declare @LateEntranceField3 nvarchar(100) 
 	declare @EarlyLeave3 datetime 
 	declare @EarlyLeaveSetRule3 datetime 
 	declare @EarlyLeaveValue3 float 
 	declare @EarlyLeaveEq3 int 
 	declare @EarlyLeaveField3 nvarchar(100) 
 	declare @LateLeave3 datetime 
 	declare @LateLeaveSetRule3 datetime 
 	declare @LateLeaveValue3 float 
 	declare @LateLeaveEq3 int 
 	declare @LateLeaveField3 nvarchar(100) 
 	declare @Absentee3 datetime 
 	declare @AbsenteeSetRule3 datetime 
 	declare @AbsenteeValue3 float 
 	declare @AbsenteeEq3 int 
 	declare @AbsenteeField3 nvarchar(100) 
 	---------------------------------------- 
 	declare @EE int 
 	declare @LE int 
 	declare @EL int 
 	declare @LL int 
 	declare @AT int 
 	declare @Time datetime 
 	declare @TimeSetRule datetime 
 	declare @Value float 
 	declare @Eq int 
 	declare @Field nvarchar(100) 
 	declare @TypeID int 
 	Select @EE=0,@LE=0,@EL=0,@LL=0 
 	DECLARE CFun153 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select TypeID,dbo.GetTime(DateValue01),dbo.GetTime(DateValue02),NumberValue01,IntValue02,TextValue01 From TBL114 Where MainGuide=@ShiftGuide 
 		And TypeID<8 
 		Order By ID 
 	OPEN CFun153 
    	FETCH NEXT FROM CFun153 INTO @TypeID ,@Time ,@TimeSetRule ,@Value ,@Eq ,@Field 
    	WHILE (@@FETCH_STATUS = 0) 
    	BEGIN 
 		if(@TypeID=1) 
 		begin 
 			Set @EE=@EE+1 
 			if(@EE=1) 
 				Select @EarlyEntrance=@Time,@EarlyEntranceSetRule=@TimeSetRule,@EarlyEntranceValue=@Value,@EarlyEntranceEq=@Eq,@EarlyEntranceField=@Field 
 			else if(@EE=2) 
 				Select @EarlyEntrance2=@Time,@EarlyEntranceSetRule2=@TimeSetRule,@EarlyEntranceValue2=@Value,@EarlyEntranceEq2=@Eq,@EarlyEntranceField2=@Field 
 			else if(@EE=3) 
 				Select @EarlyEntrance3=@Time,@EarlyEntranceSetRule3=@TimeSetRule,@EarlyEntranceValue3=@Value,@EarlyEntranceEq3=@Eq,@EarlyEntranceField3=@Field 
 		end 
 		else if(@TypeID=2) 
 		begin 
 			Set @LL=@LL+1 
 			if(@LL=1) 
 				Select @LateLeave=@Time,@LateLeaveSetRule=@TimeSetRule,@LateLeaveValue=@Value,@LateLeaveEq=@Eq,@LateLeaveField=@Field 
 			else if(@LL=2) 
 				Select @LateLeave2=@Time,@LateLeaveSetRule2=@TimeSetRule,@LateLeaveValue2=@Value,@LateLeaveEq2=@Eq,@LateLeaveField2=@Field 
 			else if(@LL=3) 
 				Select @LateLeave3=@Time,@LateLeaveSetRule3=@TimeSetRule,@LateLeaveValue3=@Value,@LateLeaveEq3=@Eq,@LateLeaveField3=@Field 
 		end 
 		else if(@TypeID=3) 
 		begin 
 			Set @LE=@LE+1 
 			if(@LE=1) 
 				Select @LateEntrance=@Time,@LateEntranceSetRule=@TimeSetRule,@LateEntranceValue=@Value,@LateEntranceEq=@Eq,@LateEntranceField=@Field 
 			else if(@EE=2) 
 				Select @LateEntrance2=@Time,@LateEntranceSetRule2=@TimeSetRule,@LateEntranceValue2=@Value,@LateEntranceEq2=@Eq,@LateEntranceField2=@Field 
 			else if(@EE=3) 
 				Select @LateEntrance3=@Time,@LateEntranceSetRule3=@TimeSetRule,@LateEntranceValue3=@Value,@LateEntranceEq3=@Eq,@LateEntranceField3=@Field 
 		end 
 		else if(@TypeID=4) 
 		begin 
 			Set @EL=@EL+1 
 			if(@EL=1) 
 				Select @EarlyLeave=@Time,@EarlyLeaveSetRule=@TimeSetRule,@EarlyLeaveValue=@Value,@EarlyLeaveEq=@Eq,@EarlyLeaveField=@Field 
 			else if(@EE=2) 
 				Select @EarlyLeave2=@Time,@EarlyLeaveSetRule2=@TimeSetRule,@EarlyLeaveValue2=@Value,@EarlyLeaveEq2=@Eq,@EarlyLeaveField2=@Field 
 			else if(@EE=3) 
 				Select @EarlyLeave3=@Time,@EarlyLeaveSetRule3=@TimeSetRule,@EarlyLeaveValue3=@Value,@EarlyLeaveEq3=@Eq,@EarlyLeaveField3=@Field 
 		end 
 		else if(@TypeID=7) 
 		begin 
 			Set @AT=@AT+1 
 			if(@AT=1) 
 				Select @Absentee=@Time,@AbsenteeSetRule=@TimeSetRule,@AbsenteeValue=@Value,@AbsenteeEq=@Eq,@AbsenteeField=@Field 
 			else if(@EE=2) 
 				Select @Absentee2=@Time,@AbsenteeSetRule2=@TimeSetRule,@AbsenteeValue2=@Value,@AbsenteeEq2=@Eq,@AbsenteeField2=@Field 
 			else if(@EE=3) 
 				Select @Absentee3=@Time,@AbsenteeSetRule3=@TimeSetRule,@AbsenteeValue3=@Value,@AbsenteeEq3=@Eq,@AbsenteeField3=@Field 
 		end 
 		FETCH NEXT FROM CFun153 INTO @TypeID ,@Time ,@TimeSetRule ,@Value ,@Eq ,@Field 
 	END 
 	CLOSE CFun153 
 	Deallocate CFun153 
 	Insert Into @Tb(ShiftGuide ,EarlyEntrance ,EarlyEntranceSetRule ,EarlyEntranceValue ,EarlyEntranceEq ,EarlyEntranceField , 
 LateEntrance ,LateEntranceSetRule ,LateEntranceValue ,LateEntranceEq , LateEntranceField , 
 EarlyLeave ,EarlyLeaveSetRule ,EarlyLeaveValue ,EarlyLeaveEq ,EarlyLeaveField , 
 LateLeave ,LateLeaveSetRule ,LateLeaveValue ,LateLeaveEq ,LateLeaveField , 
 Absentee ,AbsenteeSetRule ,AbsenteeValue ,AbsenteeEq ,AbsenteeField, 
 EarlyEntrance2 ,EarlyEntranceSetRule2 ,EarlyEntranceValue2 ,EarlyEntranceEq2 ,EarlyEntranceField2 , 
 LateEntrance2 ,LateEntranceSetRule2 ,LateEntranceValue2 ,LateEntranceEq2 , LateEntranceField2 , 
 EarlyLeave2 ,EarlyLeaveSetRule2 ,EarlyLeaveValue2 ,EarlyLeaveEq2 ,EarlyLeaveField2 , 
 LateLeave2 ,LateLeaveSetRule2 ,LateLeaveValue2 ,LateLeaveEq2 ,LateLeaveField2 , 
 Absentee2 ,AbsenteeSetRule2 ,AbsenteeValue2 ,AbsenteeEq2 ,AbsenteeField2, 
 EarlyEntrance3 ,EarlyEntranceSetRule3 ,EarlyEntranceValue3 ,EarlyEntranceEq3 ,EarlyEntranceField3 , 
 LateEntrance3 ,LateEntranceSetRule3 ,LateEntranceValue3 ,LateEntranceEq3 , LateEntranceField3 , 
 EarlyLeave3 ,EarlyLeaveSetRule3 ,EarlyLeaveValue3 ,EarlyLeaveEq3 ,EarlyLeaveField3 , 
 LateLeave3 ,LateLeaveSetRule3 ,LateLeaveValue3 ,LateLeaveEq3 ,LateLeaveField3 , 
 Absentee3 ,AbsenteeSetRule3 ,AbsenteeValue3 ,AbsenteeEq3 ,AbsenteeField3) 
 		Values(@ShiftGuide ,@EarlyEntrance ,@EarlyEntranceSetRule ,@EarlyEntranceValue ,@EarlyEntranceEq ,@EarlyEntranceField , 
 @LateEntrance ,@LateEntranceSetRule ,@LateEntranceValue ,@LateEntranceEq , @LateEntranceField , 
 @EarlyLeave ,@EarlyLeaveSetRule ,@EarlyLeaveValue ,@EarlyLeaveEq ,@EarlyLeaveField , 
 @LateLeave ,@LateLeaveSetRule ,@LateLeaveValue ,@LateLeaveEq ,@LateLeaveField , 
 @Absentee ,@AbsenteeSetRule ,@AbsenteeValue ,@AbsenteeEq ,@AbsenteeField, 
 @EarlyEntrance2 ,@EarlyEntranceSetRule2 ,@EarlyEntranceValue2 ,@EarlyEntranceEq2 ,@EarlyEntranceField2 , 
 @LateEntrance2 ,@LateEntranceSetRule2 ,@LateEntranceValue2 ,@LateEntranceEq2 , @LateEntranceField2 , 
 @EarlyLeave2 ,@EarlyLeaveSetRule2 ,@EarlyLeaveValue2 ,@EarlyLeaveEq2 ,@EarlyLeaveField2 , 
 @LateLeave2 ,@LateLeaveSetRule2 ,@LateLeaveValue2 ,@LateLeaveEq2 ,@LateLeaveField2 , 
 @Absentee2 ,@AbsenteeSetRule2 ,@AbsenteeValue2 ,@AbsenteeEq2 ,@AbsenteeField2, 
 @EarlyEntrance3 ,@EarlyEntranceSetRule3 ,@EarlyEntranceValue3 ,@EarlyEntranceEq3 ,@EarlyEntranceField3 , 
 @LateEntrance3 ,@LateEntranceSetRule3 ,@LateEntranceValue3 ,@LateEntranceEq3 , @LateEntranceField3 , 
 @EarlyLeave3 ,@EarlyLeaveSetRule3 ,@EarlyLeaveValue3 ,@EarlyLeaveEq3 ,@EarlyLeaveField3 , 
 @LateLeave3 ,@LateLeaveSetRule3 ,@LateLeaveValue3 ,@LateLeaveEq3 ,@LateLeaveField3 , 
 @Absentee3 ,@AbsenteeSetRule3 ,@AbsenteeValue3 ,@AbsenteeEq3 ,@AbsenteeField3) 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun109]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun109](@Ag uniqueidentifier,@I uniqueidentifier,@Qt float,@B uniqueidentifier,@Co uniqueidentifier,@Pr uniqueidentifier,@Br uniqueidentifier,@C1 uniqueidentifier,@C2 uniqueidentifier,@C3 uniqueidentifier,@C4 uniqueidentifier,@C5 uniqueidentifier,@VU uniqueidentifier)returns
 @Tb table(Price float,DiscountRatio float,ExtraRatio float)
 as begin
 declare @Gr uniqueidentifier
 declare @AgCo uniqueidentifier
 declare @AgPr uniqueidentifier
 declare @AgBr uniqueidentifier
 declare @AgC1 uniqueidentifier
 declare @AgC2 uniqueidentifier
 declare @AgC3 uniqueidentifier
 declare @AgC4 uniqueidentifier
 declare @AgC5 uniqueidentifier
 declare @IG uniqueidentifier
 Set @IG=(Select GroupGuid From TBL007 Where CardGuide=@I)
 if(@Ag Is Not Null)
 begin
 	Select @Gr=MainGroupGuide,@AgCo=CostCenter,@AgPr=Project,@AgBr=Branch,@AgC1=Category01,@AgC2=Category02,@AgC3=Category03,@AgC4=Category04,@AgC5=Category05 From TBL016 Where CardGuide=@Ag
 end
 declare @T table(Bill uniqueidentifier , Qty float, CostCenter uniqueidentifier, Project uniqueidentifier, Branch uniqueidentifier,Category01 uniqueidentifier,Category02 uniqueidentifier,Category03 uniqueidentifier,Category04 uniqueidentifier,Category05 uniqueidentifier,AgentGroup uniqueidentifier,AgentGuide uniqueidentifier,
 	AgentCostCenter uniqueidentifier, AgentProject uniqueidentifier, AgentBranch uniqueidentifier,AgentCategory01 uniqueidentifier,AgentCategory02 uniqueidentifier,AgentCategory03 uniqueidentifier,AgentCategory04 uniqueidentifier,AgentCategory05 uniqueidentifier,Price float,VariableUnit uniqueidentifier,
 	GroupGuide uniqueidentifier,DiscountRatio float,ExtraRatio float)
 declare @T2 table(Bill uniqueidentifier , Qty float, CostCenter uniqueidentifier, Project uniqueidentifier, Branch uniqueidentifier,Category01 uniqueidentifier,Category02 uniqueidentifier,Category03 uniqueidentifier,Category04 uniqueidentifier,Category05 uniqueidentifier,AgentGroup uniqueidentifier,AgentGuide uniqueidentifier,
 	AgentCostCenter uniqueidentifier, AgentProject uniqueidentifier, AgentBranch uniqueidentifier,AgentCategory01 uniqueidentifier,AgentCategory02 uniqueidentifier,AgentCategory03 uniqueidentifier,AgentCategory04 uniqueidentifier,AgentCategory05 uniqueidentifier,Price float,VariableUnit uniqueidentifier,
 	GroupGuide uniqueidentifier,DiscountRatio float,ExtraRatio float)
 Insert Into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter, Project, Branch,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 Select GroupGuide ,DiscountRatio ,ExtraRatio ,BillType,MinQuantity,CostCenter, Project, Branch,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,RelatedUnit From TBL103 Where
 	MinQuantity<=@Qt
 	And ((GroupGuide Is Null And ItemGuide Is Null) Or (GroupGuide=@IG Or ItemGuide=@I))
 	And (BillType Is Null Or (@B Is Not Null And BillType=@B))
 	And (AgentGroup Is Null Or (@Gr Is Not Null And AgentGroup=@Gr))
 	And (AgentGuide Is Null Or (@Ag Is Not Null And AgentGuide=@Ag))
 	And (CostCenter Is Null Or (@Co Is Not Null And CostCenter=@Co))
 	And (Project Is Null Or (@Pr Is Not Null And Project=@Pr))
 	And (Branch Is Null Or (@Br Is Not Null And Branch=@Br))
 	And (Category01 Is Null Or (@C1 Is Not Null And Category01=@C1))
 	And (Category02 Is Null Or (@C2 Is Not Null And Category02=@C2))
 	And (Category03 Is Null Or (@C3 Is Not Null And Category03=@C3))
 	And (Category04 Is Null Or (@C4 Is Not Null And Category04=@C4))
 	And (Category05 Is Null Or (@C5 Is Not Null And Category05=@C5))
 	And (AgentCostCenter Is Null Or (@AgCo Is Not Null And AgentCostCenter=@AgCo))
 	And (AgentProject Is Null Or (@AgPr Is Not Null And AgentProject=@AgPr))
 	And (AgentBranch Is Null Or (@AgBr Is Not Null And AgentBranch=@AgBr))
 	And (AgentCategory01 Is Null Or (@AgC1 Is Not Null And AgentCategory01=@AgC1))
 	And (AgentCategory02 Is Null Or (@AgC2 Is Not Null And AgentCategory02=@AgC2))
 	And (AgentCategory03 Is Null Or (@AgC3 Is Not Null And AgentCategory03=@AgC3))
 	And (AgentCategory04 Is Null Or (@AgC4 Is Not Null And AgentCategory04=@AgC4))
 	And (AgentCategory05 Is Null Or (@AgC5 Is Not Null And AgentCategory05=@AgC5))
 	And (RelatedUnit Is Null Or (@VU Is Not Null And RelatedUnit=@VU))
 if((Select Count(*) From @T)>0)
 begin
 	if(@B Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where Bill=@B Or Bill Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@Gr Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where AgentGroup=@Gr Or AgentGroup Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@Ag Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where AgentGuide=@Ag Or AgentGuide Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@Co Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where CostCenter=@Co Or CostCenter Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@C1 Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where Category01=@C1 Or Category01 Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@C2 Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where Category02=@C2 Or Category02 Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@C3 Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where Category03=@C3 Or Category03 Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@C4 Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where Category04=@C4 Or Category04 Is Null
 		delete from @T
 		Insert into @T(Qty,DiscountRatio ,ExtraRatio ,Category05,Price,VariableUnit)
 			Select Qty,DiscountRatio ,ExtraRatio ,Category05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@C5 Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where Category05=@C5 Or Category02 Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Price,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Price,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@Pr Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where Project=@Pr Or Project Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@Br Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where Branch=@Br Or Branch Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@VU Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where VariableUnit=@VU Or VariableUnit Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@AgCo Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where AgentCostCenter=@AgCo Or AgentCostCenter Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@AgPr Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where AgentProject=@AgPr Or AgentProject Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@AgBr Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where AgentBranch=@AgBr Or AgentBranch Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@AgC1 Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T Where AgentCategory01=@AgC1 Or AgentCategory01 Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price,VariableUnit From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@AgC2 Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price From @T Where AgentCategory02=@AgC2 Or AgentCategory02 Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@AgC3 Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price From @T Where AgentCategory03=@AgC3 Or AgentCategory03 Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@AgC4 Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price From @T Where AgentCategory04=@AgC4 Or AgentCategory04 Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price From @T2
 		delete from @T2
 	end
 end
 if((Select Count(*) From @T)>0)
 begin
 	if(@AgC5 Is Not Null)
 	begin
 		Insert Into @T2 (GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Bill,Qty,CostCenter,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price From @T Where AgentCategory05=@AgC5 Or AgentCategory05 Is Null
 		delete from @T
 		Insert into @T(GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price)
 			Select GroupGuide ,DiscountRatio ,ExtraRatio ,Qty,Category01,Category02,Category03,Category04,Category05,AgentGroup,
 	AgentCostCenter, AgentProject, AgentBranch,AgentCategory01,AgentCategory02,AgentCategory03,AgentCategory04,AgentCategory05,Price From @T2
 		delete from @T2
 	end
 end
 Delete From @T Where Price=0 And DiscountRatio=0 And ExtraRatio=0
 Insert Into @Tb(Price,DiscountRatio,ExtraRatio)
 	Select Top 1 Price,DiscountRatio,ExtraRatio
 		From @T Where Qty=(Select Max(Qty)From @T Where Qty<=@Qt)
 		Order By Price,DiscountRatio,ExtraRatio
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun110]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun110](@Ag uniqueidentifier,@Tp uniqueidentifier)returns @T table(Item uniqueidentifier) 
 as begin 
 declare @B bit 
 Set @B=(Select DetailingItems From TBL016 Where CardGuide=@Ag) 
 if(@B<1) 
 Begin 
 	Insert Into @T(Item)Select ItemGuide From TBL105 Where ItemGuide Is Not Null And AgentGuide=@Ag 
 	Insert Into @T(Item)Select p.CardGuide From TBL105 a Left Join TBL006 c On a.GroupGuide=c.CardGuide Left Join TBL007 p On p.GroupGuid=c.CardGuide Where a.GroupGuide Is Not Null And AgentGuide=@Ag 
 End 
 else 
 Begin 
 	Insert Into @T(Item) 
 	Select a.ItemGuide From TBL105 a Left Join 
 (Select TBL023.ProductGuide 
 From TBL023 Left Join TBL022 On TBL022.CardGuide=TBL023.MainGuide 
 Where TBL022.AgentGuide=@Ag And TBL022.MainGuide=@Tp)b On a.ItemGuide=b.ProductGuide 
 Where a.ItemGuide Is Not Null And b.ProductGuide Is Null And a.AgentGuide=@Ag 
 
 	Insert Into @T(Item) 
 	Select p.CardGuide From TBL105 a Left Join TBL006 c On a.GroupGuide=c.CardGuide Left Join TBL007 p On p.GroupGuid=c.CardGuide Left Join 
 (Select TBL023.ProductGuide 
 From TBL023 Left Join TBL022 On TBL022.CardGuide=TBL023.MainGuide 
 Where TBL022.AgentGuide=@Ag And TBL022.MainGuide=@Tp)b On a.ItemGuide=b.ProductGuide 
 Where a.GroupGuide Is Not Null And b.ProductGuide Is Null And a.AgentGuide=@Ag 
 End 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun111]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun111](@Tb nvarchar(100),@CxT nvarchar(100))returns nvarchar(4000) 
 as begin 
 declare @Rt nvarchar(4000) 
 declare @CN nvarchar(255) 
 declare @CT nvarchar(255) 
 declare @CDFV nvarchar(255) 
 declare @CDNM nvarchar(255) 
 declare @CID int 
 declare @CsT int 
 declare @CdF int 
 declare @ClNG int 
 Select @CT=xtype, @CN=TypeName, @CsT=colstat, @Cdf=cdefault , @ClNG=length , @CID=colid , @CDFV=text , @CDNM=name From Qry186 Where TableName=@Tb And ColName=@CxT And TypeName Not Like '%name%' 
 Set @Rt='Alter Table '+@Tb+' Add '+@CxT+' [' + @CN + '] ' 
 if(@ClNG > 1 And @CN Like '%n%char%') Set @ClNG=@ClNG/2 
 if(@CN Like '%char%') 
 begin 
 if(@ClNG>2) 
  	Set @Rt=@Rt+'('+Convert(varchar(10),@ClNG)+')' 
 else 
  	Set @Rt=@Rt+'(max)' 
 end 
 if(@Cdf>0) 
 begin 
 Set @Rt= @Rt + ' NOT NULL CONSTRAINT ['+ @CDNM +'] DEFAULT ' + @CDFV 
 end 
 else if(@CsT=1) 
 Set @Rt= @Rt + ' IDENTITY (1, 1) NOT NULL' 
 else 
 Set @Rt=@Rt + ' Null ' 
 return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun112]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun112](@Fp nvarchar(4000))returns uniqueidentifier 
 as begin 
 declare @Rt uniqueidentifier 
 declare @T1 table(ID int,Code int) 
 declare @I int 
 declare @ID int 
 declare @S int 
 Set @I=0 
 Set @ID=0 
 Set @S=0 
 while(@I<len(@Fp)) 
 begin 
 	if(substring(@Fp,@I,1)=';') 
 	begin 
 		Set @ID=@ID+1 
 		Insert Into @T1(ID,Code)Values(@ID,Convert(int,substring(@Fp,@S,@I-@S))) 
 		Set @S=@I+1 
 	end 
 	Set @I=@I+1 
 end 
 Set @ID=@ID+1 
 if(@I>@S)Insert Into @T1(ID,Code)Values(@ID,Convert(int,substring(@Fp,@S,@I-@S))) 
 declare @Ag uniqueidentifier 
 declare @C nvarchar(4000) 
 DECLARE CFun112 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select AgentGuide,Coding From TBL106 Order By ID 
 OPEN CFun112 
 FETCH NEXT FROM CFun112 INTO @Ag, @C 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	declare @T2 table(ID int,Code int) 
 	Set @I=0 
 	Set @ID=0 
 	Set @S=0 
 	while(@I<len(@C)) 
 	begin 
 		if(substring(@C,@I,1)=';') 
 		begin 
 			Set @ID=@ID+1 
 			Insert Into @T2(ID,Code)Values(@ID,Convert(int,substring(@C,@S,@I-@S))) 
 			Set @S=@I+1 
 		end 
 		Set @I=@I+1 
 	end 
 	if(@I>@S)Insert Into @T2(ID,Code)Values(@ID,Convert(int,substring(@C,@S,@I-@S))) 
 	Set @ID=0 
 	DECLARE CFun112a CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select a.Code as Code1,b.Code As Code2 From @T1 a Inner Join @T2 b On a.ID=b.ID 
 	OPEN CFun112a 
 	FETCH NEXT FROM CFun112a INTO @I, @S 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		if(@I>50) 
 		begin 
 			if(@I>=@S And (@I-@S)<10) 
 				Set @ID=@ID+1 
 			else if(@S>=@I And (@S-@I)<10) 
 				Set @ID=@ID+1 
 		end 
 		FETCH NEXT FROM CFun112a INTO @I, @S 
 	END 
 	CLOSE CFun112a 
 	Deallocate CFun112a 
 	if(@ID>100) 
 		return @Ag 
 	FETCH NEXT FROM CFun112 INTO @Ag, @C 
 END 
 CLOSE CFun112 
 Deallocate CFun112 
 return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun113]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun113](@D int)returns nvarchar(Max) 
 as begin 
 declare @R nvarchar(Max) 
 Set @R='' 
 declare @T nvarchar(Max) 
 DECLARE CFun113 CURSOR READ_ONLY FAST_FORWARD FOR 
 	 select c.text from dbo.syscomments c, dbo.sysobjects o     where o.id = c.id and c.id =@D order by c.number, c.colid option(robust plan) 
 OPEN CFun113 
 FETCH NEXT FROM CFun113 INTO @T 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Set @R=@R+@T 
 	FETCH NEXT FROM CFun113 INTO @T 
 END 
 CLOSE CFun113 
 Deallocate CFun113 
 return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun114]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun114]()returns @Tb table(ShiftGuide uniqueidentifier,EarlyEntrance datetime,EarlyEntranceSetRule datetime,EarlyEntranceValue float,EarlyEntranceEq int,EarlyEntranceField nvarchar(100), 
 EarlyEntrance2 datetime,EarlyEntranceSetRule2 datetime,EarlyEntranceValue2 float,EarlyEntranceEq2 int,EarlyEntranceField2 nvarchar(100), 
 EarlyEntrance3 datetime,EarlyEntranceSetRule3 datetime,EarlyEntranceValue3 float,EarlyEntranceEq3 int,EarlyEntranceField3 nvarchar(100), 
 ---------------------------------------- 
 LateEntrance datetime,LateEntranceSetRule datetime,LateEntranceValue float,LateEntranceEq int,LateEntranceField nvarchar(100), 
 LateEntrance2 datetime,LateEntranceSetRule2 datetime,LateEntranceValue2 float,LateEntranceEq2 int,LateEntranceField2 nvarchar(100), 
 LateEntrance3 datetime,LateEntranceSetRule3 datetime,LateEntranceValue3 float,LateEntranceEq3 int,LateEntranceField3 nvarchar(100), 
 ---------------------------------------- 
 EarlyLeave datetime,EarlyLeaveSetRule datetime,EarlyLeaveValue float,EarlyLeaveEq int,EarlyLeaveField nvarchar(100), 
 EarlyLeave2 datetime,EarlyLeaveSetRule2 datetime,EarlyLeaveValue2 float,EarlyLeaveEq2 int,EarlyLeaveField2 nvarchar(100), 
 EarlyLeave3 datetime,EarlyLeaveSetRule3 datetime,EarlyLeaveValue3 float,EarlyLeaveEq3 int,EarlyLeaveField3 nvarchar(100), 
 ---------------------------------------- 
 LateLeave datetime,LateLeaveSetRule datetime,LateLeaveValue float,LateLeaveEq int,LateLeaveField nvarchar(100), 
 LateLeave2 datetime,LateLeaveSetRule2 datetime,LateLeaveValue2 float,LateLeaveEq2 int,LateLeaveField2 nvarchar(100), 
 LateLeave3 datetime,LateLeaveSetRule3 datetime,LateLeaveValue3 float,LateLeaveEq3 int,LateLeaveField3 nvarchar(100), 
 ---------------------------------------- 
 Absentee datetime,AbsenteeSetRule datetime,AbsenteeValue float,AbsenteeEq int,AbsenteeField nvarchar(100), 
 Absentee2 datetime,AbsenteeSetRule2 datetime,AbsenteeValue2 float,AbsenteeEq2 int,AbsenteeField2 nvarchar(100), 
 Absentee3 datetime,AbsenteeSetRule3 datetime,AbsenteeValue3 float,AbsenteeEq3 int,AbsenteeField3 nvarchar(100),IsDailyRule bit) 
 as begin 
 	declare @G uniqueidentifier 
 	declare @IsDailyRule bit 
 	DECLARE CFun114 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select CardGuide,BitValue9 From TBL014 Where CardType=1 
 	OPEN CFun114 
 	FETCH NEXT FROM CFun114 INTO @G,@IsDailyRule 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		Insert Into @Tb(ShiftGuide ,EarlyEntrance ,EarlyEntranceSetRule ,EarlyEntranceValue ,EarlyEntranceEq ,EarlyEntranceField , 
 EarlyEntrance2 ,EarlyEntranceSetRule2 ,EarlyEntranceValue2 ,EarlyEntranceEq2 ,EarlyEntranceField2 , 
 EarlyEntrance3 ,EarlyEntranceSetRule3 ,EarlyEntranceValue3 ,EarlyEntranceEq3 ,EarlyEntranceField3 , 
 LateEntrance ,LateEntranceSetRule ,LateEntranceValue ,LateEntranceEq ,LateEntranceField , 
 LateEntrance2 ,LateEntranceSetRule2 ,LateEntranceValue2 ,LateEntranceEq2 ,LateEntranceField2 , 
 LateEntrance3 ,LateEntranceSetRule3 ,LateEntranceValue3 ,LateEntranceEq3 ,LateEntranceField3 , 
 EarlyLeave ,EarlyLeaveSetRule ,EarlyLeaveValue ,EarlyLeaveEq ,EarlyLeaveField , 
 EarlyLeave2 ,EarlyLeaveSetRule2 ,EarlyLeaveValue2 ,EarlyLeaveEq2 ,EarlyLeaveField2 , 
 EarlyLeave3 ,EarlyLeaveSetRule3 ,EarlyLeaveValue3 ,EarlyLeaveEq3 ,EarlyLeaveField3 , 
 LateLeave ,LateLeaveSetRule ,LateLeaveValue ,LateLeaveEq ,LateLeaveField , 
 LateLeave2 ,LateLeaveSetRule2 ,LateLeaveValue2 ,LateLeaveEq2 ,LateLeaveField2 , 
 LateLeave3 ,LateLeaveSetRule3 ,LateLeaveValue3 ,LateLeaveEq3 ,LateLeaveField3 , 
 Absentee ,AbsenteeSetRule ,AbsenteeValue ,AbsenteeEq ,AbsenteeField , 
 Absentee2 ,AbsenteeSetRule2 ,AbsenteeValue2 ,AbsenteeEq2 ,AbsenteeField2 , 
 Absentee3 ,AbsenteeSetRule3 ,AbsenteeValue3 ,AbsenteeEq3 ,AbsenteeField3 ,IsDailyRule ) 
 		Select ShiftGuide ,EarlyEntrance ,EarlyEntranceSetRule ,EarlyEntranceValue ,EarlyEntranceEq ,EarlyEntranceField , 
 EarlyEntrance2 ,EarlyEntranceSetRule2 ,EarlyEntranceValue2 ,EarlyEntranceEq2 ,EarlyEntranceField2 , 
 EarlyEntrance3 ,EarlyEntranceSetRule3 ,EarlyEntranceValue3 ,EarlyEntranceEq3 ,EarlyEntranceField3 , 
 LateEntrance ,LateEntranceSetRule ,LateEntranceValue ,LateEntranceEq ,LateEntranceField , 
 LateEntrance2 ,LateEntranceSetRule2 ,LateEntranceValue2 ,LateEntranceEq2 ,LateEntranceField2 , 
 LateEntrance3 ,LateEntranceSetRule3 ,LateEntranceValue3 ,LateEntranceEq3 ,LateEntranceField3 , 
 EarlyLeave ,EarlyLeaveSetRule ,EarlyLeaveValue ,EarlyLeaveEq ,EarlyLeaveField , 
 EarlyLeave2 ,EarlyLeaveSetRule2 ,EarlyLeaveValue2 ,EarlyLeaveEq2 ,EarlyLeaveField2 , 
 EarlyLeave3 ,EarlyLeaveSetRule3 ,EarlyLeaveValue3 ,EarlyLeaveEq3 ,EarlyLeaveField3 , 
 LateLeave ,LateLeaveSetRule ,LateLeaveValue ,LateLeaveEq ,LateLeaveField , 
 LateLeave2 ,LateLeaveSetRule2 ,LateLeaveValue2 ,LateLeaveEq2 ,LateLeaveField2 , 
 LateLeave3 ,LateLeaveSetRule3 ,LateLeaveValue3 ,LateLeaveEq3 ,LateLeaveField3 , 
 Absentee ,AbsenteeSetRule ,AbsenteeValue ,AbsenteeEq ,AbsenteeField , 
 Absentee2 ,AbsenteeSetRule2 ,AbsenteeValue2 ,AbsenteeEq2 ,AbsenteeField2 , 
 Absentee3 ,AbsenteeSetRule3 ,AbsenteeValue3 ,AbsenteeEq3 ,AbsenteeField3 ,@IsDailyRule From dbo.Fun108(@G) 
 		FETCH NEXT FROM CFun114 INTO @G,@IsDailyRule 
 	END 
 	CLOSE CFun114 
 	Deallocate CFun114 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun115]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun115](@Em uniqueidentifier,@LocalTime datetime,@TPeriod datetime,@TValue float,@TEq int,@TField nvarchar(100))returns float 
 as begin 
 	if(@LocalTime Is Null Or @TPeriod Is Null) 
 		return 0 
 	declare @Rt float 
 	Set @Rt=(Select (CASE @TField 
 	When 'FixedSalary' Then FixedSalary 
     When 'FloatValue1' Then FloatValue1 
     When 'FloatValue2' Then FloatValue2 
 	End) 
 	From TBL016 Where CardGuide=@Em) 
 	Set @Rt=(CASE @TEq 
 	When 1 Then @TValue*@Rt 
 	When 2 Then @TValue+@Rt 
 	When 3 Then (@TValue*@Rt)/100 
 	Else 0 End) 
 	Set @Rt=@Rt*Convert(float,dbo.GetTime(@TPeriod))*24 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun116]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun116](@Cus uniqueidentifier,@Inf int)returns nvarchar(255) 
 as begin
 	declare @Rt nvarchar(255)
 	Set @Rt=(Select (CASE @Inf
 		When 1 Then TaxCode
 		When 2 Then Country
 		When 3 Then City
 		When 4 Then Prefix
 		When 5 Then Suffix
 		When 6 Then Barcode
 		When 7 Then Phone
 		When 8 Then Mobile
 		When 9 Then FullAdress
 		When 10 Then Notes
 		When 11 Then TextValue1
 		When 12 Then TextValue2
 		When 13 Then TextValue3
 		When 14 Then TextValue4
 		When 15 Then TextValue5
 		When 16 Then TextValue6
 		When 17 Then TextValue7
 		When 18 Then TextValue8
 		When 19 Then TextValue9
 		When 20 Then TextValue10
 		When 21 Then LatinName
 	Else Null END)From TBL016 Where CardGuide=@Cus)
 	return @Rt
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun117]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun117](@T int,@D int)returns @Tbl table(Field nvarchar(250),Value nvarchar(500)) 
 as begin 
 declare @R xml 
 if(@T=1) 
 	Set @R=(Select * From TBL001 Where ID=@D For Xml path('')) 
 else if(@T=2) 
 	Set @R=(Select * From TBL002 Where ID=@D For Xml path('')) 
 else if(@T=3) 
 	Set @R=(Select * From TBL003 Where ID=@D For Xml path('')) 
 else if(@T=4) 
 	Set @R=(Select * From TBL004 Where ID=@D For Xml path('')) 
 else if(@T=5) 
 	Set @R=(Select * From TBL005 Where ID=@D For Xml path('')) 
 else if(@T=6) 
 	Set @R=(Select * From TBL006 Where ID=@D For Xml path('')) 
 else if(@T=7) 
 	Set @R=(Select * From TBL007 Where ID=@D For Xml path('')) 
 else if(@T=8) 
 	Set @R=(Select * From TBL008 Where ID=@D For Xml path('')) 
 else if(@T=9) 
 	Set @R=(Select * From TBL009 Where ID=@D For Xml path('')) 
 else if(@T=10) 
 	Set @R=(Select * From TBL010 Where ID=@D For Xml path('')) 
 else if(@T=11) 
 	Set @R=(Select * From TBL011 Where ID=@D For Xml path('')) 
 else if(@T=12) 
 	Set @R=(Select * From TBL012 Where ID=@D For Xml path('')) 
 else if(@T=13) 
 	Set @R=(Select * From TBL013 Where ID=@D For Xml path('')) 
 else if(@T=14) 
 	Set @R=(Select * From TBL014 Where ID=@D For Xml path('')) 
 else if(@T=15) 
 	Set @R=(Select * From TBL015 Where ID=@D For Xml path('')) 
 else if(@T=16) 
 	Set @R=(Select * From TBL016 Where ID=@D For Xml path('')) 
 else if(@T=17) 
 	Set @R=(Select * From TBL017 Where ID=@D For Xml path('')) 
 else if(@T=18) 
 	Set @R=(Select * From TBL018 Where ID=@D For Xml path('')) 
 else if(@T=19) 
 	Set @R=(Select * From TBL019 Where ID=@D For Xml path('')) 
 else if(@T=20) 
 	Set @R=(Select * From TBL020 Where ID=@D For Xml path('')) 
 else if(@T=21) 
 	Set @R=(Select * From TBL021 Where ID=@D For Xml path('')) 
 else if(@T=22) 
 	Set @R=(Select * From TBL022 Where ID=@D For Xml path('')) 
 else if(@T=23) 
 	Set @R=(Select * From TBL023 Where ID=@D For Xml path('')) 
 else if(@T=24) 
 	Set @R=(Select * From TBL024 Where ID=@D For Xml path('')) 
 else if(@T=25) 
 	Set @R=(Select * From TBL025 Where ID=@D For Xml path('')) 
 else if(@T=26) 
 	Set @R=(Select * From TBL026 Where ID=@D For Xml path('')) 
 else if(@T=27) 
 	Set @R=(Select * From TBL027 Where ID=@D For Xml path('')) 
 else if(@T=49) 
 	Set @R=(Select * From TBL049 Where ID=@D For Xml path('')) 
 else if(@T=50) 
 	Set @R=(Select * From TBL050 Where ID=@D For Xml path('')) 
 else if(@T=67) 
 	Set @R=(Select * From TBL067 Where ID=@D For Xml path('')) 
 else if(@T=81) 
 	Set @R=(Select * From TBL081 Where ID=@D For Xml path('')) 
 else if(@T=84) 
 	Set @R=(Select * From TBL084 Where ID=@D For Xml path('')) 
 else if(@T=85) 
 	Set @R=(Select * From TBL085 Where ID=@D For Xml path('')) 
 else if(@T=148) 
 	Set @R=(Select * From TBL148 Where ID=@D For Xml path('')) 
 if(@R Is Not Null) 
 begin 
 	Insert Into @Tbl 
 	SELECT 
 		NodeName = C.value('local-name(.)', 'varchar(250)'), 
 		NodeValue = C.value('(.)[1]', 'nvarchar(500)') 
 	FROM @R.nodes('/*') AS T(C) 
 end 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun118]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun118](@T int,@D int,@Fld nvarchar(250))returns nvarchar(500) 
 as begin 
 	declare @R nvarchar(500) 
 	Set @R=(Select Top 1 Value From dbo.Fun117(@T,@D) Where Field=@Fld) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun119]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun119](@T nvarchar(100),@F nvarchar(100))returns nvarchar(100) 
 as begin 
 	declare @R nvarchar(100) 
 	Set @R=(Select Top 1 FTable From dbo.Fun104(@T) Where RTable=@T And RColumn=@F) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun120]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun120](@G uniqueidentifier,@T nvarchar(100))returns int 
 as begin 
 	if(Len(IsNull(@T,''))<3 Or @G Is Null) 
 		return 0 
 	declare @I int 
 	Set @I=dbo.Number(@T) 
 	declare @R int 
 	Set @R=(CASE @I 
 When 2 Then (Select ID From TBL002 Where CardGuide=@G) 
 When 4 Then (Select ID From TBL004 Where CardGuide=@G) 
 When 5 Then (Select ID From TBL005 Where CardGuide=@G) 
 When 6 Then (Select ID From TBL006 Where CardGuide=@G) 
 When 7 Then (Select ID From TBL007 Where CardGuide=@G) 
 When 8 Then (Select ID From TBL008 Where CardGuide=@G) 
 When 9 Then (Select ID From TBL009 Where CardGuide=@G) 
 When 10 Then (Select ID From TBL010 Where CardGuide=@G) 
 When 11 Then (Select ID From TBL011 Where CardGuide=@G) 
 When 15 Then (Select ID From TBL015 Where CardGuide=@G) 
 When 16 Then (Select ID From TBL016 Where CardGuide=@G) 
 When 20 Then (Select ID From TBL020 Where CardGuide=@G) 
 When 22 Then (Select ID From TBL022 Where CardGuide=@G) 
 When 26 Then (Select ID From TBL026 Where CardGuide=@G) 
 When 27 Then (Select ID From TBL027 Where CardGuide=@G) 
 When 49 Then (Select ID From TBL049 Where CardGuide=@G) 
 When 50 Then (Select ID From TBL050 Where CardGuide=@G) 
 When 81 Then (Select ID From TBL081 Where CardGuide=@G) 
 	End) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun121]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun121](@Tp uniqueidentifier,@RID int)returns nvarchar(1000) 
 as begin 
 declare @BType int 
 Set @BType=(Select CardType From TBL110 Where CardGuide=@Tp) 
 declare @PLn int 
 Set @PLn=(Select Max(StartIndex+CodeLength) From TBL111 Where MainGuide=@Tp) 
 declare @R nvarchar(1000) 
 declare @V nvarchar(250) 
 Set @R='' 
 DECLARE CFun121 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select dbo.Fun118(TableID,CardID,FieldName)As SourceValue 
 	From 
 	(Select dbo.Fun120(Value,SourceField)As CardID,dbo.Number(SourceField)As TableID,* 
 		From 
 	(Select b.Value,dbo.Fun119('TBL023',a.ItemField) As SourceField, 
 		a.* From TBL111 a 
 	Left Join dbo.Fun117(23,@RID) b 
 	On a.ItemField=b.Field Where a.MainGuide=@Tp) a)a 
 	Order By ID 
 OPEN CFun121 
 FETCH NEXT FROM CFun121 INTO @V 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Set @R=@R+IsNull(@V,'') 
 	FETCH NEXT FROM CFun121 INTO @V 
 END 
 CLOSE CFun121 
 Deallocate CFun121 
 if(Len(@R)>@PLn) 
 	Set @R='Error Coding' 
 else if(Len(@R)<@PLn And @BType>0) 
 	Set @R='' 
 return @R 
 End
GO
/****** Object:  UserDefinedFunction [dbo].[Fun122]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun122](@A uniqueidentifier,@G uniqueidentifier)returns bit 
 as begin 
 	if(@A Is Null Or @G Is Null)return 0 
 	if(@A=@G)return 1 
 	declare @R int 
 	Set @R=dbo.Fun122(@A,(Select MainGuide From TBL015 Where CardGuide=@G)) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun123]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun123](@T varchar(100))returns nvarchar(Max) 
 as begin 
 	declare @R nvarchar(Max) 
 	Set @R='' 
 	declare @F nvarchar(100) 
 	DECLARE CFun123 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select name From syscolumns where xtype<>34 And id=(Select id From sysobjects where name=@T) 
 	OPEN CFun123 
 	FETCH NEXT FROM CFun123 INTO @F 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		if(len(@R)>0)Set @R=@R+',' 
 		Set @R=@R+@F 
 		FETCH NEXT FROM CFun123 INTO @F 
 	END 
 	CLOSE CFun123 
 	Deallocate CFun123 
 	if(@T='TBL013')Set @R=@R+',UsGuide As CardGuide' 
 	Return 'Select '+@R+' From '+@T 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun124]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun124](@Ag uniqueidentifier,@Tm datetime,@Tp int,@CShift uniqueidentifier)returns datetime 
 as begin 
 	--Tp:-1-IN Early -2 In Late 1-Out Early 2-Out Late 
 	declare @R datetime 
 	if (@Tm Is Null)return @R 
 	declare @G uniqueidentifier 
 	if(@CShift Is Null) 
 		Set @G=(Select RelatedAdministration From TBL016 Where CardGuide=@Ag) 
 	else 
 		Set @G=@CShift 
 	declare @Gt int 
 	declare @Dw datetime 
 	Select @Gt=IntValue01,@Dw=(CASE When @Tp<0 Then Date01 Else Date02 End) From TBL014 Where CardGuide=@G 
 	if(@Gt=3 And @Dw Is Not Null) 
 	begin 
 		if((@Tp=-1 Or @Tp=1) And @Tm<@Dw) 
 			Set @R=(@Dw-@Tm)-0.000005 
 		Else if((@Tp=-2 Or @Tp=2) And @Tm>@Dw) 
 			Set @R=(@Tm-@Dw)+0.000005 
 	end 
 	Set @R=@R+(0.000115741 / 20) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun125]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun125](@T varchar(100))returns nvarchar(Max) 
 as begin 
 	declare @R nvarchar(Max) 
 	Set @R='' 
 	declare @F nvarchar(100) 
 	declare @X int 
 	DECLARE CFun125 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select name,xtype From syscolumns where id=(Select id From sysobjects where name=@T) 
 	OPEN CFun125 
 	FETCH NEXT FROM CFun125 INTO @F,@X 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		if(len(@R)>0)Set @R=@R+',' 
 		if(@X=34) 
 			Set @R=@R+'(Case When ' + @F + ' Is Null Then 0 Else 1 End) As ' + @F 
 		Else 
 			Set @R=@R+@F 
 		FETCH NEXT FROM CFun125 INTO @F,@X 
 	END 
 	CLOSE CFun125 
 	Deallocate CFun125 
 	Return 'Select '+@R+' From '+@T 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun126]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun126](@FD int,@TD int)returns @Tb table(InDay datetime,DateValue int) 
 as begin 
 	while(@FD<=@TD) 
 	begin 
 		Insert Into @Tb(InDay,DateValue)Values(@FD,@FD) 
 		Set @FD=@FD+1 
 	end 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun127]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun127](@InDay int,@EmpID uniqueidentifier,@Section uniqueidentifier,@IsExists bit,@WithLogIn bit,@WithLogOut bit)returns @Tb table(Tp tinyint,Vacation uniqueidentifier,DayVacation uniqueidentifier)
 as begin
 declare @R tinyint
 declare @V uniqueidentifier
 declare @DV uniqueidentifier
 Set @R=0
 if(@IsExists<1)
 begin
 	declare @IsSelected Bit
 	declare @BitValue1 Bit
 	declare @BitValue2 Bit
 	declare @BitValue3 Bit
 	declare @BitValue4 Bit
 	declare @BitValue5 Bit
 	declare @BitValue6 Bit
 	declare @BitValue7 Bit
 	declare @BitValue9 Bit
 	declare @Tp int
 	Set @R=DATEPART(dw,@InDay)
 	if(@EmpID Is Not Null)
 	begin
 		Select @IsSelected=1,@BitValue1=BitValue1,@BitValue2=BitValue2,@BitValue3=BitValue3,@BitValue4=BitValue4,@BitValue5=BitValue5,@BitValue6=BitValue6,@BitValue7=BitValue7 From TBL016 Where CardGuide=@EmpID
 		if((@R=1 And @BitValue1>0) Or
 			(@R=2 And @BitValue2>0) Or
 			(@R=3 And @BitValue3>0) Or
 			(@R=4 And @BitValue4>0) Or
 			(@R=5 And @BitValue5>0) Or
 			(@R=6 And @BitValue6>0) Or
 			(@R=7 And @BitValue7>0))
 		begin
 			Set @Tp=10
 		end
 		else
 		begin
 			Select Top 1 @Tp=41,@V=t.CardGuide,@IsSelected=1,@BitValue1=1,@BitValue2=1,@BitValue3=1,@BitValue4=1,@BitValue5=1,@BitValue6=1,@BitValue7=1,@BitValue9=0
 			From TBL014 Inner Join TBL114 On TBL014.CardGuide=TBL114.MainGuide
 			Inner Join TBL014 t on IsNull(TBL114.MainGuide2,TBL014.RelatedCard)=t.CardGuide
 			Where TBL014.CardType=6 And t.BitValue1>0 And TBL114.RelatedAgent=@EmpID And TBL014.BitValue1>0 And t.IntValue03>0 And IsNull(TBL114.DateValue01,TBL014.Date01)<(@InDay+1) And (TBL114.DateValue02>=@InDay Or (TBL114.DateValue02 Is Null And IsNull(TBL114.DateValue01,TBL014.Date01)>=(@InDay-(t.IntValue03-1))))
 			if(@Tp Is Null)
 			begin
 				If(@Section Is Null)Set @Section=(Select MainGroupGuide From TBL016 Where CardGuide=@EmpID)
 				Select Top 1 @V=RelatedCard,@DV=CardGuide,@Tp=5,@IsSelected=IsSelected,@BitValue1=BitValue1,@BitValue2=BitValue2,@BitValue3=BitValue3,@BitValue4=BitValue4,@BitValue5=BitValue5,@BitValue6=BitValue6,@BitValue7=BitValue7,@BitValue9=BitValue9 From
 				(Select DATEPART(weekday,@InDay) As DayOfWeak,TBL014.* From TBL014 Where (CardType=3 Or CardType=16) And BitValue8>0 And WindowType=0 And Date01<(@InDay+1) And IsNull((Select a.Date02 From TBL014 a Where a.CardType=10 And a.RelatedCard=TBL014.CardGuide),IsNull(Date02,Date01))>=@InDay And (AgentGuide=@EmpID Or dbo.Fun122(AgentGroupGuide,@Section)>0 Or (AgentGroupGuide Is Null And AgentGuide Is Null)))a
 				Where (IsSelected=0 Or (IsSelected>0 And ((BitValue1>0 And DayOfWeak=1)Or(BitValue2>0 And DayOfWeak=2)Or(BitValue3>0 And DayOfWeak=3)Or(BitValue4>0 And DayOfWeak=4)Or(BitValue5>0 And DayOfWeak=5)Or(BitValue6>0 And DayOfWeak=6)Or(BitValue7>0 And DayOfWeak=7))))
 				Order By AgentGroupGuide,AgentGuide
 				if(@Tp Is Null)
 				begin
 					Select @Tp=10,@IsSelected=1,@BitValue1=BitValue1,@BitValue2=BitValue2,@BitValue3=BitValue3,@BitValue4=BitValue4,@BitValue5=BitValue5,@BitValue6=BitValue6,@BitValue7=BitValue7 From TBL016 Where CardGuide=@EmpID
 				end
 			end
 			else if(@V Is Not Null)
 			begin
 				Insert Into @Tb(Tp,Vacation)Values(@Tp,@V)
 				return
 			end
 		end
 	end
 	Else If (@Section Is Not Null)
 		Select Top 1 @V=RelatedCard,@DV=CardGuide,@Tp=IntValue01,@IsSelected=IsSelected,@BitValue1=BitValue1,@BitValue2=BitValue2,@BitValue3=BitValue3,@BitValue4=BitValue4,@BitValue5=BitValue5,@BitValue6=BitValue6,@BitValue7=BitValue7 From TBL014 Where (CardType=3 Or CardType=16) And BitValue8>0 And WindowType=0 And Date01<=@InDay And IsNull((Select a.Date02 From TBL014 a Where a.CardType=10 And a.RelatedCard=TBL014.CardGuide),IsNull(Date02,Date01))>=@InDay And (dbo.Fun122(AgentGroupGuide,@Section)>0 Or (AgentGroupGuide Is Null And AgentGuide Is Null)) Order By AgentGroupGuide,AgentGuide
 	Else
 		Select Top 1 @V=RelatedCard,@DV=CardGuide,@Tp=IntValue01,@IsSelected=IsSelected,@BitValue1=BitValue1,@BitValue2=BitValue2,@BitValue3=BitValue3,@BitValue4=BitValue4,@BitValue5=BitValue5,@BitValue6=BitValue6,@BitValue7=BitValue7 From TBL014 Where (CardType=3 Or CardType=16) And BitValue8>0 And WindowType=0 And Date01<=@InDay And IsNull((Select a.Date02 From TBL014 a Where a.CardType=10 And a.RelatedCard=TBL014.CardGuide),IsNull(Date02,Date01))>=@InDay And (AgentGroupGuide Is Null And AgentGuide Is Null) Order By AgentGroupGuide,AgentGuide
 	if(@Tp Is Not Null And @Tp>0)
 	begin
 		if(@IsSelected>0)
 		begin
 			if((@R=1 And @BitValue1>0) Or
 			(@R=2 And @BitValue2>0) Or
 			(@R=3 And @BitValue3>0) Or
 			(@R=4 And @BitValue4>0) Or
 			(@R=5 And @BitValue5>0) Or
 			(@R=6 And @BitValue6>0) Or
 			(@R=7 And @BitValue7>0) )
 				Set @R=@Tp+10
 			else
 				Set @R=10
 		end
 		else
 			Set @R=@Tp+10+Convert(int,@BitValue9)
 	end
 	Else
 		Set @R=10
 end
 else
 begin
 	if(@WithLogIn<1)
 		Set @R=1
 	if(@WithLogOut<1)
 		Set @R=@R+2
 end
 Insert Into @Tb(Tp,Vacation,DayVacation)Values(@R,@V,@DV)
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun128]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun128]()returns @Tb table(LogInName nvarchar(200),HostName nvarchar(200),SpID int,PCID nvarchar(200),UserName nvarchar(200),USGuide uniqueidentifier)  
 as begin  
 Insert Into @Tb(LogInName,HostName,SpID,PCID,UserName,USGuide)  
 Select a.hostname,a.hostname,a.spid,c.PCID,d.UserName,d.UsGuide From  
 (Select loginame=rtrim(loginame),hostname  
 	      ,spid From master.dbo.sysprocesses  
 where spid >= 0 and spid <= 32767 AND  
 	      dbid>0 And db_name(dbid)=db_name())a  
 Left Join  
 (Select Max(ID) As ID,ObjectID From TBL091 Where EventID=10 Group By ObjectID)b  
 On a.spid=b.ObjectID  
 Left Join TBL091 c On b.ID=c.ID  
 Left Join TBL013 d On c.UserGuide=d.UsGuide  
 return  
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun129]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun129](@D datetime)returns datetime  
 as begin  
 	declare @R datetime  
 	Set @R=DateAdd(Hour,DatePart(hh,@D),DateAdd(MINUTE,DatePart(mi,@D),DateAdd(SECOND,DatePart(s,@D),0)))  
 	return @R  
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun130]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun130](@ShiftIn datetime,@ShiftOut datetime,@CardDate datetime,@Ag uniqueidentifier)returns int  
 as begin  
	declare @inD int  
	Select @inD=datepart(weekday,@CardDate),@ShiftOut=dbo.Fun129(@ShiftOut),@ShiftIn=dbo.Fun129(@ShiftIn)  
	declare @O int  
	if(@ShiftIn Is Not Null And @ShiftOut Is Not Null)  
	begin  
		Set @O=(Select Max(ID)From TBL014 Where  
		((CardType=3 Or CardType=16) And BitValue8>0) And  
		(AgentGuide=@Ag Or (AgentGroupGuide Is Not Null And dbo.Fun093(@Ag,AgentGroupGuide)>0))  
		and  
		((Date02 Is Null And Date01>=@CardDate And Date01<(@CardDate+1)) Or  
		(Date01 Is Null And Date02>=@CardDate And Date02<(@CardDate+1)) Or  
		(Date01<=@CardDate And Date02>=@CardDate))  
		and  
		((Date03 Is Not Null And CalcDate01>=@ShiftOut And Date04 Is Null)Or  
		(Date03 Is Null And Date04 Is Not Null And CalcDate02>=@ShiftIn)Or  
		(Date03 Is Not Null And Date04 Is Not Null And CalcDate01<=@ShiftOut And CalcDate02>=@ShiftIn))  
		And  
		((BitValue1=0 And BitValue2=0 And BitValue3=0 And BitValue4=0 And BitValue5=0 And BitValue6=0 And BitValue7=0)Or  
		((BitValue1>0 And @inD=1)Or  
		(BitValue2>0 And @inD=2)Or  
		(BitValue3>0 And @inD=3)Or  
		(BitValue4>0 And @inD=4)Or  
		(BitValue5>0 And @inD=5)Or  
		(BitValue6>0 And @inD=6)Or  
		(BitValue7>0 And @inD=7))))  
	end  
	else if(@ShiftIn Is Not Null)  
	begin  
		Set @O=(Select Max(ID)From TBL014 Where  
		((CardType=3 Or CardType=16) And BitValue8>0) And  
		(AgentGuide=@Ag Or (AgentGroupGuide Is Not Null And dbo.Fun093(@Ag,AgentGroupGuide)>0))  
		and  
		((Date02 Is Null And Date01>=@CardDate And Date01<(@CardDate+1)) Or  
		(Date01 Is Null And Date02>=@CardDate And Date02<(@CardDate+1)) Or  
		(Date01<=@CardDate And Date02>=@CardDate))  
		and  
		((Date03 Is Null And Date04 Is Not Null And CalcDate02>=@ShiftIn)Or  
		(Date03 Is Not Null And Date04 Is Not Null And CalcDate01<=@ShiftIn And CalcDate02>=@ShiftIn))  
		And  
		((BitValue1=0 And BitValue2=0 And BitValue3=0 And BitValue4=0 And BitValue5=0 And BitValue6=0 And BitValue7=0)Or  
		((BitValue1>0 And @inD=1)Or  
		(BitValue2>0 And @inD=2)Or  
		(BitValue3>0 And @inD=3)Or  
		(BitValue4>0 And @inD=4)Or  
		(BitValue5>0 And @inD=5)Or  
		(BitValue6>0 And @inD=6)Or  
		(BitValue7>0 And @inD=7))))  
	end  
	if(IsNull(@O,0)=0)  
	Begin  
		if(@ShiftOut Is Not Null)  
		begin  
			Set @O=(Select Max(ID)From TBL014 Where  
			((CardType=3 Or CardType=16) And BitValue8>0) And  
			(AgentGuide=@Ag Or (AgentGroupGuide Is Not Null And dbo.Fun093(@Ag,AgentGroupGuide)>0))  
			and  
			((Date02 Is Null And Date01>=@CardDate And Date01<(@CardDate+1)) Or  
			(Date01 Is Null And Date02>=@CardDate And Date02<(@CardDate+1)) Or  
			(Date01<=@CardDate And Date02>=@CardDate))  
			and  
			((Date03 Is Not Null And CalcDate01<=@ShiftOut And Date04 Is Null)Or  
			(Date03 Is Not Null And Date04 Is Not Null And CalcDate01<=@ShiftOut And CalcDate02>=@ShiftOut))  
			And  
			((BitValue1=0 And BitValue2=0 And BitValue3=0 And BitValue4=0 And BitValue5=0 And BitValue6=0 And BitValue7=0)Or  
			((BitValue1>0 And @inD=1)Or  
			(BitValue2>0 And @inD=2)Or  
			(BitValue3>0 And @inD=3)Or  
			(BitValue4>0 And @inD=4)Or  
			(BitValue5>0 And @inD=5)Or  
			(BitValue6>0 And @inD=6)Or  
			(BitValue7>0 And @inD=7))))  
		end  
	end  
	return @O  
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun131]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun131](@Rw uniqueidentifier,@DetailsShiftID uniqueidentifier)returns @Tb table(ShiftIn DateTime,ShiftOut DateTime,RelatedVecation Uniqueidentifier, 
 SignIn DateTime,SignOut DateTime,EarlyEntrance DateTime,LateLeave DateTime,LateEntrance DateTime,EarlyLeave DateTime,TimeAbsentee DateTime, 
 WithLogIn bit,WithLogOut bit,Notes nvarchar(255),ShiftID uniqueidentifier,MovementSide smallint,ShiftType int,RealSignIn DateTime,RealSignOut DateTime) 
 as begin 
 declare @G uniqueidentifier 
 declare @Ag uniqueidentifier 
 declare @Shift uniqueidentifier 
 declare @ShiftType int 
 declare @TempID int 
 declare @MovementSide smallint 
 declare @CardDate datetime 
 declare @PLogIn datetime 
 declare @PLogOut datetime 
 declare @RealSignIn datetime 
 declare @RealSignOut datetime 
 declare @WithLogIn bit 
 declare @WithLogOut bit 
 declare @DaysExIn int 
 declare @DaysExOut int 
 declare @Notes nvarchar(255) 
 declare @Dt table(ID int,SignIn DateTime,SignOut DateTime,Notes nvarchar(255),ShiftID uniqueidentifier,MovementSide smallint,RealSignIn DateTime,RealSignOut DateTime) 
 Select @PLogIn=IsNull(CLogIn,PLogIn),@PLogOut=IsNull(CLogOut,PLogOut),@RealSignIn=PLogIn,@RealSignOut=PLogOut,@G=MainGuide,@Ag=AgentGuide,@Notes=Notes, 
 @WithLogIn=(CASE When PLogIn Is Null Then 0 Else 1 End),@WithLogOut=(CASE When PLogOut Is Null Then 0 Else 1 End) 
 From TBL099 Where RecordGuide=@Rw 
 Select @CardDate=CardDate,@Shift=IsNull(@DetailsShiftID,ShiftGuide) From TBL098 Where CardGuide=@G 
 if(@Shift Is Null) 
 	Set @Shift=(Select RelatedAdministration From TBL016 Where CardGuide=@Ag) 
 Set @ShiftType=(Select IntValue01 From TBL014 Where CardGuide=@Shift) 
 Insert Into @Dt(ID,SignIn,SignOut,Notes,MovementSide)Select ID,SignIn,SignOut,Notes,-1 From TBL116 Where MainGuide=@Rw Order By ID 
 declare @I int 
 declare @D Datetime 
 if(@PLogIn Is Null) 
 	Set @PLogIn=(Select Min(SignIn)From @Dt Where SignOut Is Null) 
 else 
 begin 
 	Set @I=(Select Min(ID)From @Dt Where SignIn Is Not Null And SignIn<dbo.Fun129(@PLogIn) And SignOut Is Null) 
 	if(IsNull(@I,0)>0) 
 	begin 
  		Set @D=(Select SignIn From @Dt Where ID=@I) 
  		if(@D<@PLogIn) 
  			Set @PLogIn=@D 
 	end 
 end 
 if(@PLogOut Is Null) 
 	Set @PLogOut=(Select Min(SignOut)From @Dt Where SignIn Is Null) 
 else 
 begin 
 	Set @I=(Select Max(ID)From @Dt Where SignOut Is Not Null And SignOut>@PLogOut And  SignIn Is Null) 
 	if(IsNull(@I,0)>0) 
 	begin 
 		Set @D=(Select SignOut From @Dt Where ID=@I) 
 		if(@D<@PLogOut) 
 			Set @PLogOut=@D 
 	end 
 end 
 Delete From @Dt 
 Select @DaysExIn=IsNull(DATEDiff(day,@CardDate,@PLogIn),0),@DaysExOut=IsNull(DATEDiff(day,@CardDate,@PLogOut),0) 
 Insert Into @Dt(ID,SignIn,SignOut,Notes,ShiftID,RealSignIn,RealSignOut)Values(0,@PLogIn,@PLogOut,@Notes,@Shift,@RealSignIn,@RealSignOut) 
 Insert Into @Dt(ID,SignIn,SignOut,Notes,ShiftID,MovementSide)Select ID,SignIn,SignOut,Notes,@Shift,-1 From TBL116 Where MainGuide=@Rw Order By ID 
 declare @ShiftIn datetime 
 declare @ShiftOut datetime 
 Select @ShiftIn=dbo.Fun129(Date01),@ShiftOut=dbo.Fun129(Date02) From TBL014 Where CardGuide=@Shift 
 if(@ShiftIn>@ShiftOut) 
 	Set @ShiftOut=dateadd(d,1,@ShiftOut) 
 declare @ExDays int 
 DECLARE RPTHR001 CURSOR READ_ONLY FAST_FORWARD FOR 
 	SELECT ID,SignIn,SignOut,Notes,MovementSide,RealSignIn,RealSignOut FROM @Dt Order By ID 
 OPEN RPTHR001 
 FETCH NEXT FROM RPTHR001 INTO @I,@PLogIn,@PLogOut,@Notes,@MovementSide,@RealSignIn,@RealSignOut 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Set @ExDays=0 
 	if(@PLogIn Is Null Or (Select Count(*) From @Tb Where SignIn>=(@PLogIn+@DaysExIn))<1) 
 	begin 
 		declare @EarlyEntrance float 
 		declare @LateLeave float 
 		declare @LateEntrance float 
 		declare @EarlyLeave float 
 		declare @TimeAbsentee float 
 		Select @EarlyEntrance=0,@LateLeave=0,@LateEntrance=0,@EarlyLeave=0,@TimeAbsentee=0 
 		if(@PLogOut Is Not Null) 
 		begin 
 			if(@I>0) 
 				Set @ExDays=dbo.DateToInt((@PLogIn+@DaysExIn))-dbo.DateToInt(@CardDate) 
 			else 
 				Set @ExDays=dbo.DateToInt(@PLogOut)-dbo.DateToInt(@CardDate) 
 		end 
 		if(@ExDays<0)Set @ExDays=0 
 		if(@I>0) 
 			Select @PLogIn=dateadd(d,@ExDays,dbo.Fun129(@PLogIn)),@PLogOut=dbo.Fun129(@PLogOut) 
 		else 
 			Select @PLogIn=dbo.Fun129(@PLogIn),@PLogOut=dateadd(d,@ExDays,dbo.Fun129(@PLogOut)) 
 		declare @TI int 
 		declare @TO int 
 		declare @TimeLeave datetime 
 		declare @TimeBack datetime 
 		if(@I>0) 
 			Select @WithLogIn=(CASE When @PLogIn Is Null Then 0 Else 1 End),@WithLogOut=(CASE When @PLogOut Is Null Then 0 Else 1 End) 
 		Set @TempID=dbo.Fun130(@PLogIn,@PLogOut,@CardDate,@Ag) 
 		Select @TI=ID,@TimeLeave=dbo.Fun129(Date03),@TimeBack=dbo.Fun129(Date04) From TBL014 Where ID=@TempID 
 		if((@TimeLeave Is Not Null And @TimeBack Is not Null)And @TimeBack<@TimeLeave) 
 			Set @TimeBack=dateadd(dd,1,@TimeBack) 
 		else 
 		begin 
 			Set @TempID=dbo.Fun130(@PLogIn,null,@CardDate,@Ag) 
 			Select @TI=ID,@TimeBack=dbo.Fun129(Date04) From TBL014 Where ID=@TempID 
 			Set @TempID=dbo.Fun130(null,@PLogOut,@CardDate,@Ag) 
 			Select @TO=ID,@TimeLeave=dateadd(dd,@ExDays,dbo.Fun129(Date03)) From TBL014 Where ID=@TempID 
 			if(@TimeLeave Is Not Null And @TimeLeave>@ShiftOut) 
 				Set @TimeLeave=@ShiftOut 
 			Select @TimeBack=IsNull(@TimeBack,@ShiftIn),@TimeLeave=IsNull(@TimeLeave,@ShiftOut) 
 		end 
 		if(@TimeBack Is Not Null And @TimeLeave Is Not Null And @PLogOut Is Not Null And @TimeLeave<@TimeBack And @TimeLeave<@PLogOut)Set @TimeLeave=@PLogOut 
 		if(@ShiftType=3) 
 		begin 
 			if(@PLogIn Is Not Null And @TimeBack Is Not Null) 
 			begin 
 				if((@PLogIn+@DaysExIn)<@TimeBack And (@PLogIn+@DaysExIn)<@ShiftIn) 
 				begin 
 					Set @EarlyEntrance=@EarlyLeave+Convert(float,@ShiftIn)-Convert(float,@PLogIn+@DaysExIn) 
 				end 
 				else if((@PLogIn+@DaysExIn)>@TimeBack) 
 					Set @LateEntrance=@LateEntrance+Convert(float,@TimeBack)-Convert(float,@PLogIn+@DaysExIn) 
 			end 
 			if(@PLogOut Is Not Null And @TimeLeave Is Not Null) 
 			begin 
 				if(@PLogOut<@TimeLeave) 
 					Set @EarlyLeave=@EarlyLeave+Convert(float,@TimeLeave)-Convert(float,@PLogOut) 
 				else if(@PLogOut>@ShiftOut) 
 					Set @LateLeave=@LateLeave+Convert(float,@PLogOut)-Convert(float,@ShiftOut) 
 				else if(@PLogOut>@TimeLeave And (@TimeBack Is Null Or @TimeLeave<@TimeBack)) 
 					Set @LateLeave=@LateLeave+Convert(float,@PLogOut)-Convert(float,@TimeLeave) 
 			end 
 		end 
 		if(@I>0) 
 		begin 
 			if(@TimeLeave Is Null And @TimeBack Is Null And @PLogOut Is Not Null And @PLogIn Is Not Null) 
 			begin 
 				Set @TimeAbsentee=@TimeAbsentee+Convert(float,(@PLogIn+@DaysExIn))-Convert(float,@PLogOut) 
 			end 
 		end 
 		insert into @Tb(WithLogIn,WithLogOut,ShiftIn,ShiftOut,RelatedVecation,SignIn,SignOut,EarlyEntrance,LateLeave,LateEntrance,EarlyLeave,TimeAbsentee,Notes,ShiftID,ShiftType,MovementSide,RealSignIn,RealSignOut) 
 		Values(@WithLogIn,@WithLogOut,@ShiftIn,@ShiftOut,@Shift,@PLogIn,@PLogOut,Convert(datetime,@EarlyEntrance),Convert(datetime,@LateLeave),Convert(datetime,@LateEntrance*-1),Convert(datetime,@EarlyLeave),Convert(datetime,@TimeAbsentee),@Notes,@Shift,@ShiftType,@MovementSide,@RealSignIn,@RealSignOut) 
 	end 
 	FETCH NEXT FROM RPTHR001 INTO @I,@PLogIn,@PLogOut,@Notes,@MovementSide,@RealSignIn,@RealSignOut 
 END 
 CLOSE RPTHR001 
 Deallocate RPTHR001 
 Update @Tb Set[MovementSide]=1 Where MovementSide Is Null 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun132]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun132](@Ag uniqueidentifier,@FD int,@TD int)returns @Tb table
 (ID int Identity(1,1) not null,MainGuide uniqueidentifier,CardGuide uniqueidentifier,RecordGuide uniqueidentifier,InDate datetime,ShiftIn DateTime,ShiftOut DateTime,RelatedVecation Uniqueidentifier,SignIn DateTime,SignOut DateTime,
 EarlyEntrance DateTime,LateLeave DateTime,LateEntrance DateTime,EarlyLeave DateTime,TimeAbsentee DateTime,Notes nvarchar(Max),DateValue int,WithLogIn bit,WithLogOut bit,AttendanceType int,IsExists Bit,IsDetails bit,ShiftID uniqueidentifier,WorkingPeriod datetime,MainPeriod datetime,WorkingPeriodValue float,
 AttTp00 int,AttTp01 int,AttTp02 int,AttTp03 int,AttTp11 int,AttTp12 int,AttTp13 int,AttTp15 int,AttTp16 int,AttTp20 int,AttTp31 int,AttTp41 int,AttTpA int,MovementSide smallint,Vacation uniqueidentifier,DayVacation uniqueidentifier,ContractedOrverTime uniqueidentifier,RealSignIn DateTime,RealSignOut DateTime,
 DEarlyEntrance datetime,DEarlyEntranceValue float, DEarlyEntrance2 datetime,DEarlyEntranceValue2 float, DEarlyEntrance3 datetime,DEarlyEntranceValue3 float,
 DLateEntrance datetime,DLateEntranceValue float,DLateEntrance2 datetime,DLateEntranceValue2 float,DLateEntrance3 datetime,DLateEntranceValue3 float,
 DEarlyLeave datetime,DEarlyLeaveValue float,DEarlyLeave2 datetime,DEarlyLeaveValue2 float,DEarlyLeave3 datetime,DEarlyLeaveValue3 float,
 DLateLeave datetime,DLateLeaveValue float,DLateLeave2 datetime,DLateLeaveValue2 float,DLateLeave3 datetime,DLateLeaveValue3 float,
 DAbsentee datetime,DAbsenteeValue float,DAbsentee2 datetime,DAbsenteeValue2 float,DAbsentee3 datetime,DAbsenteeValue3 float,
 DEarlyEntranceTotalValue float,DLateEntranceTotalValue float,DEarlyLeaveTotalValue float,DLateLeaveTotalValue float,DAbsenteeTotalValue float,ExcusedAbsenceNotes nvarchar(max))
 ----------------------------------------
 as begin
 declare @ExcusedAbsenceNotes nvarchar(max)
 declare @RealSignIn DateTime
 declare @RealSignOut DateTime
 declare @ProveAbsenceOlny bit
 declare @ShiftID uniqueidentifier
 declare @DetailsShiftID uniqueidentifier
 declare @Vacation uniqueidentifier
 declare @DayVacation uniqueidentifier
 declare @Tp int
 declare @ShiftType int
 declare @AgentShift uniqueidentifier
 declare @IsDetails bit
 declare @IsExsits bit
 declare @WithLogIn bit
 declare @WithLogOut bit
 declare @RecordGuide uniqueidentifier
 declare @CardGuide uniqueidentifier
 declare @MainGuide uniqueidentifier
 declare @Notes nvarchar(Max)
 declare @MovementSide smallint
 declare @InDay datetime
 declare @DateValue int
 declare @Fnd bit
 declare @ShiftIn DateTime
 declare @ShiftOut DateTime
 declare @RelatedVecation Uniqueidentifier
 declare @ContractedOverTime Uniqueidentifier
 declare @SignIn DateTime
 declare @SignOut DateTime
 declare @EarlyEntrance DateTime
 declare @LateLeave DateTime
 declare @LateEntrance DateTime
 declare @EarlyLeave DateTime
 declare @TimeAbsentee DateTime
 declare @IgnoreDifferenceForLogin bit
 declare @IgnoreDifferenceForLogout bit
 declare @RTb table(ShiftGuide uniqueidentifier,
 DEarlyEntranceTotalValue float,DLateEntranceTotalValue float,DEarlyLeaveTotalValue float,DLateLeaveTotalValue float,DAbsenteeTotalValue float,
 ----------------------------------------
 EarlyEntrance datetime,EarlyEntranceSetRule datetime,EarlyEntranceValue float,EarlyEntranceEq int,EarlyEntranceField nvarchar(100),
 EarlyEntrance2 datetime,EarlyEntranceSetRule2 datetime,EarlyEntranceValue2 float,EarlyEntranceEq2 int,EarlyEntranceField2 nvarchar(100),
 EarlyEntrance3 datetime,EarlyEntranceSetRule3 datetime,EarlyEntranceValue3 float,EarlyEntranceEq3 int,EarlyEntranceField3 nvarchar(100),
 ----------------------------------------
 LateEntrance datetime,LateEntranceSetRule datetime,LateEntranceValue float,LateEntranceEq int,LateEntranceField nvarchar(100),
 LateEntrance2 datetime,LateEntranceSetRule2 datetime,LateEntranceValue2 float,LateEntranceEq2 int,LateEntranceField2 nvarchar(100),
 LateEntrance3 datetime,LateEntranceSetRule3 datetime,LateEntranceValue3 float,LateEntranceEq3 int,LateEntranceField3 nvarchar(100),
 ----------------------------------------
 EarlyLeave datetime,EarlyLeaveSetRule datetime,EarlyLeaveValue float,EarlyLeaveEq int,EarlyLeaveField nvarchar(100),
 EarlyLeave2 datetime,EarlyLeaveSetRule2 datetime,EarlyLeaveValue2 float,EarlyLeaveEq2 int,EarlyLeaveField2 nvarchar(100),
 EarlyLeave3 datetime,EarlyLeaveSetRule3 datetime,EarlyLeaveValue3 float,EarlyLeaveEq3 int,EarlyLeaveField3 nvarchar(100),
 ----------------------------------------
 LateLeave datetime,LateLeaveSetRule datetime,LateLeaveValue float,LateLeaveEq int,LateLeaveField nvarchar(100),
 LateLeave2 datetime,LateLeaveSetRule2 datetime,LateLeaveValue2 float,LateLeaveEq2 int,LateLeaveField2 nvarchar(100),
 LateLeave3 datetime,LateLeaveSetRule3 datetime,LateLeaveValue3 float,LateLeaveEq3 int,LateLeaveField3 nvarchar(100),
 ----------------------------------------
 Absentee datetime,AbsenteeSetRule datetime,AbsenteeValue float,AbsenteeEq int,AbsenteeField nvarchar(100),
 Absentee2 datetime,AbsenteeSetRule2 datetime,AbsenteeValue2 float,AbsenteeEq2 int,AbsenteeField2 nvarchar(100),
 Absentee3 datetime,AbsenteeSetRule3 datetime,AbsenteeValue3 float,AbsenteeEq3 int,AbsenteeField3 nvarchar(100),
 IsDailyRule bit)
 Insert Into @RTb(ShiftGuide ,EarlyEntrance ,EarlyEntranceSetRule ,EarlyEntranceValue ,EarlyEntranceEq ,EarlyEntranceField ,
 EarlyEntrance2 ,EarlyEntranceSetRule2 ,EarlyEntranceValue2 ,EarlyEntranceEq2 ,EarlyEntranceField2 ,
 EarlyEntrance3 ,EarlyEntranceSetRule3 ,EarlyEntranceValue3 ,EarlyEntranceEq3 ,EarlyEntranceField3 ,
 LateEntrance ,LateEntranceSetRule ,LateEntranceValue ,LateEntranceEq ,LateEntranceField ,
 LateEntrance2 ,LateEntranceSetRule2 ,LateEntranceValue2 ,LateEntranceEq2 ,LateEntranceField2 ,
 LateEntrance3 ,LateEntranceSetRule3 ,LateEntranceValue3 ,LateEntranceEq3 ,LateEntranceField3 ,
 EarlyLeave ,EarlyLeaveSetRule ,EarlyLeaveValue ,EarlyLeaveEq ,EarlyLeaveField ,
 EarlyLeave2 ,EarlyLeaveSetRule2 ,EarlyLeaveValue2 ,EarlyLeaveEq2 ,EarlyLeaveField2 ,
 EarlyLeave3 ,EarlyLeaveSetRule3 ,EarlyLeaveValue3 ,EarlyLeaveEq3 ,EarlyLeaveField3 ,
 LateLeave ,LateLeaveSetRule ,LateLeaveValue ,LateLeaveEq ,LateLeaveField ,
 LateLeave2 ,LateLeaveSetRule2 ,LateLeaveValue2 ,LateLeaveEq2 ,LateLeaveField2 ,
 LateLeave3 ,LateLeaveSetRule3 ,LateLeaveValue3 ,LateLeaveEq3 ,LateLeaveField3 ,
 Absentee ,AbsenteeSetRule ,AbsenteeValue ,AbsenteeEq ,AbsenteeField ,
 Absentee2 ,AbsenteeSetRule2 ,AbsenteeValue2 ,AbsenteeEq2 ,AbsenteeField2 ,
 Absentee3 ,AbsenteeSetRule3 ,AbsenteeValue3 ,AbsenteeEq3 ,AbsenteeField3,IsDailyRule)
 Select ShiftGuide ,EarlyEntrance ,EarlyEntranceSetRule ,EarlyEntranceValue ,EarlyEntranceEq ,EarlyEntranceField ,
 EarlyEntrance2 ,EarlyEntranceSetRule2 ,EarlyEntranceValue2 ,EarlyEntranceEq2 ,EarlyEntranceField2 ,
 EarlyEntrance3 ,EarlyEntranceSetRule3 ,EarlyEntranceValue3 ,EarlyEntranceEq3 ,EarlyEntranceField3 ,
 LateEntrance ,LateEntranceSetRule ,LateEntranceValue ,LateEntranceEq ,LateEntranceField ,
 LateEntrance2 ,LateEntranceSetRule2 ,LateEntranceValue2 ,LateEntranceEq2 ,LateEntranceField2 ,
 LateEntrance3 ,LateEntranceSetRule3 ,LateEntranceValue3 ,LateEntranceEq3 ,LateEntranceField3 ,
 EarlyLeave ,EarlyLeaveSetRule ,EarlyLeaveValue ,EarlyLeaveEq ,EarlyLeaveField ,
 EarlyLeave2 ,EarlyLeaveSetRule2 ,EarlyLeaveValue2 ,EarlyLeaveEq2 ,EarlyLeaveField2 ,
 EarlyLeave3 ,EarlyLeaveSetRule3 ,EarlyLeaveValue3 ,EarlyLeaveEq3 ,EarlyLeaveField3 ,
 LateLeave ,LateLeaveSetRule ,LateLeaveValue ,LateLeaveEq ,LateLeaveField ,
 LateLeave2 ,LateLeaveSetRule2 ,LateLeaveValue2 ,LateLeaveEq2 ,LateLeaveField2 ,
 LateLeave3 ,LateLeaveSetRule3 ,LateLeaveValue3 ,LateLeaveEq3 ,LateLeaveField3 ,
 Absentee ,AbsenteeSetRule ,AbsenteeValue ,AbsenteeEq ,AbsenteeField ,
 Absentee2 ,AbsenteeSetRule2 ,AbsenteeValue2 ,AbsenteeEq2 ,AbsenteeField2 ,
 Absentee3 ,AbsenteeSetRule3 ,AbsenteeValue3 ,AbsenteeEq3 ,AbsenteeField3 ,
 IsDailyRule From dbo.Fun114() Where IsDailyRule>0
 Select @AgentShift=RelatedAdministration,@ProveAbsenceOlny=BitValue9 From TBL016 Where CardGuide=@Ag
 declare @Dt table (InDate datetime,ShiftIn DateTime,ShiftOut DateTime,RelatedVecation Uniqueidentifier,SignIn DateTime,SignOut DateTime,
 EarlyEntrance DateTime,LateLeave DateTime,LateEntrance DateTime,EarlyLeave DateTime,TimeAbsentee DateTime,Notes nvarchar(Max))
 DECLARE CFun132 CURSOR READ_ONLY FAST_FORWARD FOR
 	Select InDay ,DateValue From dbo.Fun126(@FD,@TD)
 OPEN CFun132
 FETCH NEXT FROM CFun132 INTO @InDay ,@DateValue
 WHILE (@@FETCH_STATUS = 0)
 BEGIN
 	Select @Tp=Null,@Vacation=Null,@DayVacation=null,@Fnd=0
 	Set @ContractedOverTime=(Select Top 1 TBL014.CardGuide From TBL014
 	Inner Join (Select * From TBL114 Where TypeID=1) Cv On TBL014.CardGuide=Cv.MainGuide
 	Inner Join (Select * From TBL114 Where TypeID=2) Ag On TBL014.CardGuide=Ag.MainGuide
 	Where TBL014.CardType=12
 	And TBL014.BitValue1>0
 	And Ag.RelatedAgent=@Ag
 	And CONVERT(int,Cv.DateValue01)=@DateValue And Len(IsNull(TBL014.LongText01,''))>0)
 	DECLARE CFun132_2 CURSOR READ_ONLY FAST_FORWARD FOR
 		Select TBL099.ShiftGuide,TBL099.RecordGuide,TBL098.CardGuide,TBL098.MainGuide,IsNull(TBL099.Notes,TBL098.Notes),
 		TBL099.IgnoreDifferenceForLogin,TBL099.IgnoreDifferenceForLogout From TBL099 Inner Join TBL098 On TBL099.MainGuide=TBL098.CardGuide
 		Where TBL099.AgentGuide=@Ag And(dbo.DateToInt(TBL098.CardDate)=@InDay)
 		OPEN CFun132_2
 	FETCH NEXT FROM CFun132_2 INTO @DetailsShiftID,@RecordGuide,@CardGuide,@MainGuide,@Notes,@IgnoreDifferenceForLogin,@IgnoreDifferenceForLogout
 	WHILE (@@FETCH_STATUS = 0)
 	BEGIN
 	Set @IsDetails=0
 	DECLARE CFun132_3 CURSOR READ_ONLY FAST_FORWARD FOR
 	Select ShiftIn,ShiftOut,RelatedVecation,SignIn,SignOut,EarlyEntrance,LateLeave,LateEntrance,EarlyLeave,TimeAbsentee,Notes,WithLogIn ,WithLogOut,ShiftID,MovementSide,RealSignIn,RealSignOut From dbo.Fun131(@RecordGuide,@DetailsShiftID)
 	OPEN CFun132_3
 		FETCH NEXT FROM CFun132_3 INTO @ShiftIn,@ShiftOut,@RelatedVecation,@SignIn,@SignOut,@EarlyEntrance,@LateLeave,@LateEntrance,@EarlyLeave,@TimeAbsentee,@Notes,@WithLogIn,@WithLogOut,@ShiftID,@MovementSide,@RealSignIn,@RealSignOut
 		WHILE (@@FETCH_STATUS = 0)
 		BEGIN
 			declare @DEarlyEntranceTotalValue float
 			declare @DLateEntranceTotalValue float
 			declare @DEarlyLeaveTotalValue float
 			declare @DLateLeaveTotalValue float
 			declare @DAbsenteeTotalValue float
 			declare @DEarlyEntrance datetime
 			declare @DEarlyEntranceSetRule datetime
 			declare @DEarlyEntranceValue float
 			declare @DEarlyEntranceEq int
 			declare @DEarlyEntranceField nvarchar(100)
 			declare @DLateEntrance datetime
 			declare @DLateEntranceValue float
 			declare @DLateEntranceEq int
 			declare @DLateEntranceField nvarchar(100)
 			declare @DEarlyLeave datetime
 			declare @DEarlyLeaveValue float
 			declare @DEarlyLeaveEq int
 			declare @DEarlyLeaveField nvarchar(100)
 			declare @DLateLeave datetime
 			declare @DLateLeaveValue float
 			declare @DLateLeaveEq int
 			declare @DLateLeaveField nvarchar(100)
 			declare @DAbsentee datetime
 			declare @DAbsenteeValue float
 			declare @DAbsenteeEq int
 			declare @DAbsenteeField nvarchar(100)
 			declare @EarlyEntranceSetRule datetime
 			declare @LateEntranceSetRule datetime
 			declare @EarlyLeaveSetRule datetime
 			declare @LateLeaveSetRule datetime
 			---------------------------------------
 			declare @DEarlyEntrance2 datetime
 			declare @DEarlyEntranceValue2 float
 			declare @DEarlyEntranceEq2 int
 			declare @DEarlyEntranceField2 nvarchar(100)
 			declare @DLateEntrance2 datetime
 			declare @DLateEntranceValue2 float
 			declare @DLateEntranceEq2 int
 			declare @DLateEntranceField2 nvarchar(100)
 			declare @DEarlyLeave2 datetime
 			declare @DEarlyLeaveValue2 float
 			declare @DEarlyLeaveEq2 int
 			declare @DEarlyLeaveField2 nvarchar(100)
 			declare @DLateLeave2 datetime
 			declare @DLateLeaveValue2 float
 			declare @DLateLeaveEq2 int
 			declare @DLateLeaveField2 nvarchar(100)
 			declare @DAbsentee2 datetime
 			declare @DAbsenteeValue2 float
 			declare @DAbsenteeEq2 int
 			declare @DAbsenteeField2 nvarchar(100)
 			declare @EarlyEntranceSetRule2 datetime
 			declare @LateEntranceSetRule2 datetime
 			declare @EarlyLeaveSetRule2 datetime
 			declare @LateLeaveSetRule2 datetime
 			----------------------------------------
 			declare @DEarlyEntrance3 datetime
 			declare @DEarlyEntranceValue3 float
 			declare @DEarlyEntranceEq3 int
 			declare @DEarlyEntranceField3 nvarchar(100)
 			declare @DLateEntrance3 datetime
 			declare @DLateEntranceValue3 float
 			declare @DLateEntranceEq3 int
 			declare @DLateEntranceField3 nvarchar(100)
 			declare @DEarlyLeave3 datetime
 			declare @DEarlyLeaveValue3 float
 			declare @DEarlyLeaveEq3 int
 			declare @DEarlyLeaveField3 nvarchar(100)
 			declare @DLateLeave3 datetime
 			declare @DLateLeaveValue3 float
 			declare @DLateLeaveEq3 int
 			declare @DLateLeaveField3 nvarchar(100)
 			declare @DAbsentee3 datetime
 			declare @DAbsenteeValue3 float
 			declare @DAbsenteeEq3 int
 			declare @DAbsenteeField3 nvarchar(100)
 			declare @EarlyEntranceSetRule3 datetime
 			declare @LateEntranceSetRule3 datetime
 			declare @EarlyLeaveSetRule3 datetime
 			declare @LateLeaveSetRule3 datetime
 			---------------------------------------
 			declare @IsDailyRule bit
 			Select @DEarlyEntrance=EarlyEntrance ,@DEarlyEntranceValue=EarlyEntranceValue ,@DEarlyEntranceEq=EarlyEntranceEq ,@DEarlyEntranceField=EarlyEntranceField ,@DLateEntrance=LateEntrance ,@DLateEntranceValue=LateEntranceValue ,@DLateEntranceEq=LateEntranceEq ,
 			@DLateEntranceField=LateEntranceField ,@DEarlyLeave=EarlyLeave ,@DEarlyLeaveValue=EarlyLeaveValue ,@DEarlyLeaveEq=EarlyLeaveEq ,@DEarlyLeaveField=EarlyLeaveField ,@DLateLeave=LateLeave ,@DLateLeaveValue=LateLeaveValue ,@DLateLeaveEq=LateLeaveEq ,@DLateLeaveField=LateLeaveField ,
 			@DAbsentee=Absentee ,@DAbsenteeValue=AbsenteeValue ,@DAbsenteeEq=AbsenteeEq ,@DAbsenteeField=AbsenteeField ,
 			@DEarlyEntrance2=EarlyEntrance2 ,@DEarlyEntranceValue2=EarlyEntranceValue2 ,@DEarlyEntranceEq2=EarlyEntranceEq2 ,@DEarlyEntranceField2=EarlyEntranceField2 ,@DLateEntrance2=LateEntrance2 ,@DLateEntranceValue2=LateEntranceValue2 ,@DLateEntranceEq2=LateEntranceEq2 ,
 			@DLateEntranceField2=LateEntranceField2 ,@DEarlyLeave2=EarlyLeave2 ,@DEarlyLeaveValue2=EarlyLeaveValue2 ,@DEarlyLeaveEq2=EarlyLeaveEq2 ,@DEarlyLeaveField2=EarlyLeaveField2 ,@DLateLeave2=LateLeave2 ,@DLateLeaveValue2=LateLeaveValue2 ,@DLateLeaveEq2=LateLeaveEq2 ,@DLateLeaveField2=LateLeaveField2 ,
 			@DAbsentee2=Absentee2 ,@DAbsenteeValue2=AbsenteeValue2 ,@DAbsenteeEq2=AbsenteeEq2 ,@DAbsenteeField2=AbsenteeField2 ,
 			@DEarlyEntrance3=EarlyEntrance3 ,@DEarlyEntranceValue3=EarlyEntranceValue3 ,@DEarlyEntranceEq3=EarlyEntranceEq3 ,@DEarlyEntranceField3=EarlyEntranceField3 ,@DLateEntrance3=LateEntrance3 ,@DLateEntranceValue3=LateEntranceValue3 ,@DLateEntranceEq3=LateEntranceEq3 ,
 			@DLateEntranceField3=LateEntranceField3 ,@DEarlyLeave3=EarlyLeave3 ,@DEarlyLeaveValue3=EarlyLeaveValue3 ,@DEarlyLeaveEq3=EarlyLeaveEq3 ,@DEarlyLeaveField3=EarlyLeaveField3 ,@DLateLeave3=LateLeave3 ,@DLateLeaveValue3=LateLeaveValue3 ,@DLateLeaveEq3=LateLeaveEq3 ,@DLateLeaveField3=LateLeaveField3 ,
 			@DAbsentee3=Absentee3 ,@DAbsenteeValue3=AbsenteeValue3 ,@DAbsenteeEq3=AbsenteeEq3 ,@DAbsenteeField3=AbsenteeField3 ,@IsDailyRule=IsDailyRule ,
 			@EarlyEntranceSetRule=EarlyEntranceSetRule,@LateEntranceSetRule=LateEntranceSetRule,@EarlyLeaveSetRule=EarlyLeaveSetRule,@LateLeaveSetRule=LateLeaveSetRule,
 			@EarlyEntranceSetRule2=EarlyEntranceSetRule2,@LateEntranceSetRule2=LateEntranceSetRule2,@EarlyLeaveSetRule2=EarlyLeaveSetRule2,@LateLeaveSetRule2=LateLeaveSetRule2,
 			@EarlyEntranceSetRule3=EarlyEntranceSetRule3,@LateEntranceSetRule3=LateEntranceSetRule3,@EarlyLeaveSetRule3=EarlyLeaveSetRule3,@LateLeaveSetRule3=LateLeaveSetRule3
 			From @RTb Where ShiftGuide=@ShiftID
 			if(@IgnoreDifferenceForLogin=1)
 			begin
 				Select @DEarlyEntrance=null,@DEarlyEntranceSetRule=null,@DEarlyEntranceValue=0,@DEarlyEntranceEq=0,
 	@DEarlyEntranceField=null,@DLateEntrance=null,@DLateEntranceValue=0,@DLateEntranceEq=0,@DLateEntranceField=null,
 	@EarlyEntranceSetRule=null,@LateEntranceSetRule=null,@DEarlyEntrance2=null,@DEarlyEntranceValue2=0,@DEarlyEntranceEq2=0,
 	@DEarlyEntranceField2=null,@DLateEntrance2=null,@DLateEntranceValue2=0,@DLateEntranceEq2=0,@DLateEntranceField2=null,
 	@EarlyEntranceSetRule2=null,@LateEntranceSetRule2=null,@DEarlyEntrance3=null,@DEarlyEntranceValue3=0,@DEarlyEntranceEq3=0,
 	@DEarlyEntranceField3=null,@DLateEntrance3=null,@DLateEntranceValue3=0,@DLateEntranceEq3=0,@DLateEntranceField3=null,
 	@EarlyEntranceSetRule3=null,@LateEntranceSetRule3=null,
 	@EarlyEntrance=null,@LateEntrance=null
 			end
 			if(@IgnoreDifferenceForLogout=1)
 			begin
 				Select @DLateLeaveTotalValue=0,@DEarlyLeaveEq=0,@DLateLeaveEq=0,@DEarlyLeaveEq2=0,@DLateLeaveEq2=0,@DEarlyLeaveEq3=0,@DLateLeaveEq3=0,
 	@DEarlyLeaveValue=0,@DLateLeaveValue=0,@DEarlyLeaveValue2=0,@DLateLeaveValue2=0,@DEarlyLeaveValue3=0,@DLateLeaveValue3=0,
 	@DEarlyLeaveField=null,@DLateLeaveField=null,@DEarlyLeaveField2=null,@DLateLeaveField2=null,@DEarlyLeaveField3=null,@DLateLeaveField3=null,
 	@DEarlyLeave=null,@LateLeaveSetRule3=null,@DLateLeave=null,@EarlyLeaveSetRule=null,@LateLeaveSetRule=null,@DEarlyLeave2=null,
 	@DLateLeave2=null,@EarlyLeaveSetRule2=null,@LateLeaveSetRule2=null,@DEarlyLeave3=null,@EarlyLeaveSetRule3=null,@DLateLeave3=null,
 	@EarlyLeave=null,@LateLeave=null
 			end
 			Select @Tp=Tp,@Vacation=Vacation,@DayVacation=DayVacation From dbo.Fun127(@DateValue,@Ag,Null,1,@WithLogIn,@WithLogOut)
 			declare @DEE datetime
 			declare @DLE datetime
 			declare @DEL datetime
 			declare @DLL datetime
 			declare @DAB datetime
 			declare @DEE2 datetime
 			declare @DLE2 datetime
 			declare @DEL2 datetime
 			declare @DLL2 datetime
 			declare @DAB2 datetime
 			declare @DEE3 datetime
 			declare @DLE3 datetime
 			declare @DEL3 datetime
 			declare @DLL3 datetime
 			declare @DAB3 datetime
 			if(IsNull(@IsDailyRule,0)>0)
 			begin
 				declare @LD int
 				Set @LD=(Select Max(ID)From @Tb)
 				Select
 	@DEE=(Case When @EarlyEntrance>@DEarlyEntrance Then @DEarlyEntrance Else @EarlyEntrance End),
 	@DLE=(Case When @LateEntrance>@DLateEntrance Then @DLateEntrance Else @LateEntrance End),
 	@DEL=(Case When @EarlyLeave>@DEarlyLeave Then @DEarlyLeave Else @EarlyLeave End),
 	@DLL=(Case When @LateLeave>@DLateLeave Then @DLateLeave Else @LateLeave End),
 	@DAB=(Case When @TimeAbsentee>@DAbsentee Then @DAbsentee Else @TimeAbsentee End)
 				Select
 	@DEE2=dbo.TimeDifference(@DEarlyEntrance,@EarlyEntrance),@DLE2=dbo.TimeDifference(@DLateEntrance,@LateEntrance),
 	@DEL2=dbo.TimeDifference(@DEarlyLeave,@EarlyLeave),@DLL2=dbo.TimeDifference(@DLateLeave,@LateLeave),@DAB2=dbo.TimeDifference(@DAbsentee,@TimeAbsentee)
 				Select
 	@DEE3=(Case When @DAB2>@DEarlyEntrance2 Then dbo.TimeDifference(@DAB2,@DEarlyEntrance2) End),
 	@DLE3=(Case When @DLE2>@DLateEntrance2 Then dbo.TimeDifference(@DLE2,@DLateEntrance2) End),
 	@DEL3=(Case When @DEL2>@DEarlyLeave2 Then dbo.TimeDifference(@DEL2,@DEarlyLeave2) End),
 	@DLL3=(Case When @DLL2>@DLateLeave2 Then dbo.TimeDifference(@DLL2,@DLateLeave2) End),
 	@DAB3=(Case When @DAB2>@DAbsentee2 Then dbo.TimeDifference(@DAB2,@DAbsentee2) End)
 				Select
 	@DEE2=(Case When @DEE2>@DEarlyEntrance2 Then @DEarlyEntrance2 Else @DEE2 End),
 	@DLE2=(Case When @DLE2>@DLateEntrance2 Then @DLateEntrance2 Else @DLE2 End),
 	@DEL2=(Case When @DEL2>@DEarlyLeave2 Then @DEarlyLeave2 Else @DEL2 End),
 	@DLL2=(Case When @DLL2>@DLateLeave2 Then @DLateLeave2 Else @DLL2 End),
 	@DAB2=(Case When @DAB2>@DAbsentee2 Then @DAbsentee2 Else @DAB2 End)
 				-----Check Login 3-----
 				if(@DEE3<@EarlyEntranceSetRule3)
 				begin
 					Set @DEE2=@DEE3
 					Set @DEE3=Convert(datetime,0)
 				end
 				if(@DLE3<@LateEntranceSetRule3)
 				begin
 					Set @DLE2=@DEE3
 					Set @DLE3=Convert(datetime,0)
 				end
 				if(@DEL3<@EarlyLeaveSetRule3)
 				begin
 					Set @DEL2=@DEL3
 					Set @DEL3=Convert(datetime,0)
 				end
 				if(@DLL3<@LateLeaveSetRule3)
 				begin
 					Set @DLL2=@DLL3
 					Set @DLL3=Convert(datetime,0)
 				end
 				-----Check Login 2-----
 				if(@DEE2<@EarlyEntranceSetRule2)
 				begin
 					Set @DEE=@DEE2
 					Set @DEE2=Convert(datetime,0)
 				end
 				if(@DLE2<@LateEntranceSetRule2)
 				begin
 					Set @DLE=@DEE2
 					Set @DLE2=Convert(datetime,0)
 				end
 				if(@DEL2<@EarlyLeaveSetRule2)
 				begin
 					Set @DEL=@DEL2
 					Set @DEL2=Convert(datetime,0)
 				end
 				if(@DLL2<@LateLeaveSetRule2)
 				begin
 					Set @DLL=@DLL2
 					Set @DLL2=Convert(datetime,0)
 				end
 				-----Check Login 1-----
 				if(@DEE<@EarlyEntranceSetRule)
 				begin
 					Set @DEE=Convert(datetime,0)
 				end
 				if(@DLE<@LateEntranceSetRule)
 				begin
 					Set @DLE=Convert(datetime,0)
 				end
 				if(@DEL<@EarlyLeaveSetRule)
 				begin
 					Set @DEL=Convert(datetime,0)
 				end
 				if(@DLL<@LateLeaveSetRule)
 				begin
 					Set @DLL=Convert(datetime,0)
 				end
 				Set @DEarlyEntranceValue=dbo.Fun115(@Ag,@DEarlyEntrance,@DEE,@DEarlyEntranceValue,@DEarlyEntranceEq,@DEarlyEntranceField)
 				Set @DLateEntranceValue=dbo.Fun115(@Ag,@DLateEntrance,@DLE,@DLateEntranceValue,@DLateEntranceEq,@DLateEntranceField)
 				Set @DEarlyLeaveValue=dbo.Fun115(@Ag,@DEarlyLeave,@DEL,@DEarlyLeaveValue,@DEarlyLeaveEq,@DEarlyLeaveField)
 				Set @DLateLeaveValue=dbo.Fun115(@Ag,@DLateLeave,@DLL,@DLateLeaveValue,@DLateLeaveEq,@DLateLeaveField)
 				Set @DAbsenteeValue=dbo.Fun115(@Ag,@DAbsentee,@DAB,@DAbsenteeValue,@DAbsenteeEq,@DAbsenteeField)
 				Set @DEarlyEntranceValue2=dbo.Fun115(@Ag,@DEarlyEntrance2,@DEE2,@DEarlyEntranceValue2,@DEarlyEntranceEq2,@DEarlyEntranceField2)
 				Set @DLateEntranceValue2=dbo.Fun115(@Ag,@DLateEntrance2,@DLE2,@DLateEntranceValue2,@DLateEntranceEq2,@DLateEntranceField2)
 				Set @DEarlyLeaveValue2=dbo.Fun115(@Ag,@DEarlyLeave2,@DEL2,@DEarlyLeaveValue2,@DEarlyLeaveEq2,@DEarlyLeaveField2)
 				Set @DLateLeaveValue2=dbo.Fun115(@Ag,@DLateLeave2,@DLL2,@DLateLeaveValue2,@DLateLeaveEq2,@DLateLeaveField2)
 				Set @DAbsenteeValue2=dbo.Fun115(@Ag,@DAbsentee2,@DAB2,@DAbsenteeValue2,@DAbsenteeEq2,@DAbsenteeField2)
 				Set @DEarlyEntranceValue3=dbo.Fun115(@Ag,@DEarlyEntrance3,@DEE3,@DEarlyEntranceValue3,@DEarlyEntranceEq3,@DEarlyEntranceField3)
 				Set @DLateEntranceValue3=dbo.Fun115(@Ag,@DLateEntrance3,@DLE3,@DLateEntranceValue3,@DLateEntranceEq3,@DLateEntranceField3)
 				Set @DEarlyLeaveValue3=dbo.Fun115(@Ag,@DEarlyLeave3,@DEL3,@DEarlyLeaveValue3,@DEarlyLeaveEq3,@DEarlyLeaveField3)
 				Set @DLateLeaveValue3=dbo.Fun115(@Ag,@DLateLeave3,@DLL3,@DLateLeaveValue3,@DLateLeaveEq3,@DLateLeaveField3)
 				Set @DAbsenteeValue3=dbo.Fun115(@Ag,@DAbsentee3,@DAB3,@DAbsenteeValue3,@DAbsenteeEq3,@DAbsenteeField3)
 			end
 			Set @ExcusedAbsenceNotes=dbo.Fun053(@Ag,@ShiftIn,@ShiftOut,@DateValue)
 			Insert Into @Tb(MainGuide,CardGuide,RecordGuide,InDate,ShiftIn,ShiftOut,RelatedVecation,SignIn,SignOut,EarlyEntrance,LateLeave,
 			LateEntrance,EarlyLeave,TimeAbsentee,Notes,DateValue,WithLogIn,WithLogOut,AttendanceType,IsExists,IsDetails,ShiftID,WorkingPeriod,WorkingPeriodValue,MovementSide,Vacation,DayVacation,ContractedOrverTime,RealSignIn,RealSignOut,
 			DEarlyEntrance ,DEarlyEntranceValue ,DEarlyEntrance2 ,DEarlyEntranceValue2 ,DEarlyEntrance3 ,DEarlyEntranceValue3 ,
 			DLateEntrance ,DLateEntranceValue ,DLateEntrance2 ,DLateEntranceValue2 ,DLateEntrance3 ,DLateEntranceValue3 ,
 			DEarlyLeave ,DEarlyLeaveValue ,DEarlyLeave2 ,DEarlyLeaveValue2 ,DEarlyLeave3 ,DEarlyLeaveValue3 ,
 			DLateLeave ,DLateLeaveValue ,DLateLeave2 ,DLateLeaveValue2 ,DLateLeave3 ,DLateLeaveValue3 ,
 			DAbsentee ,DAbsenteeValue ,DAbsentee2 ,DAbsenteeValue2 ,DAbsentee3 ,DAbsenteeValue3,
 			DEarlyEntranceTotalValue ,DLateEntranceTotalValue ,DEarlyLeaveTotalValue ,DLateLeaveTotalValue ,DAbsenteeTotalValue ,ExcusedAbsenceNotes )
 			Values(@MainGuide,@CardGuide,@RecordGuide,@InDay,@ShiftIn,@ShiftOut,@RelatedVecation,@SignIn,@SignOut,(CASE When @MovementSide>0 Then @EarlyEntrance End)
 			,(CASE When @MovementSide>0 Then @LateLeave End),(CASE When @MovementSide>0 Then @LateEntrance End),(CASE When @MovementSide>0 Then @EarlyLeave End)
 			,(CASE When @MovementSide>0 Then @TimeAbsentee End),@Notes,@DateValue,@WithLogIn,@WithLogOut,@Tp,1
 			,@IsDetails,IsNull(@ShiftID,@AgentShift),(CASE When @MovementSide<0 Then @SignIn-@SignOut Else @SignOut-@SignIn End),
 			Convert(float,(CASE When @MovementSide<0 Then @SignIn-@SignOut Else @SignOut-@SignIn End))*@MovementSide,@MovementSide,@Vacation,@DayVacation,@ContractedOverTime,@RealSignIn,@RealSignOut,
 			@DEE ,@DEarlyEntranceValue ,@DEE2 ,@DEarlyEntranceValue2 ,@DEE3 ,@DEarlyEntranceValue3 ,
 			@DLE ,@DLateEntranceValue ,@DLE2 ,@DLateEntranceValue2 ,@DLE3 ,@DLateEntranceValue3 ,
 			@DEL ,@DEarlyLeaveValue ,@DEL2 ,@DEarlyLeaveValue2 ,@DEL3 ,@DEarlyLeaveValue3 ,
 			@DLL ,@DLateLeaveValue ,@DLL2 ,@DLateLeaveValue2 ,@DLL3 ,@DLateLeaveValue3 ,
 			@DAB ,@DAbsenteeValue ,@DAB2 ,@DAbsenteeValue2 ,@DAB3 ,@DAbsenteeValue3,
 			IsNull(@DEarlyEntranceValue,0)+IsNull(@DEarlyEntranceValue2,0)+IsNull(@DEarlyEntranceValue3,0),
 			IsNull(@DLateEntranceValue,0)+IsNull(@DLateEntranceValue2,0)+IsNull(@DLateEntranceValue3,0),
 			IsNull(@DEarlyLeaveValue,0)+IsNull(@DEarlyLeaveValue2,0)+IsNull(@DEarlyLeaveValue3,0),
 			IsNull(@DLateLeaveValue,0)+IsNull(@DLateLeaveValue2,0)+IsNull(@DLateLeaveValue3,0),
 			IsNull(@DAbsenteeValue,0)+IsNull(@DAbsenteeValue2,0)+IsNull(@DAbsenteeValue3,0),@ExcusedAbsenceNotes)
 			Set @IsDetails=1
 			FETCH NEXT FROM CFun132_3 INTO @ShiftIn,@ShiftOut,@RelatedVecation,@SignIn,@SignOut,@EarlyEntrance,@LateLeave,@LateEntrance,@EarlyLeave,@TimeAbsentee,@Notes,@WithLogIn,@WithLogOut,@ShiftID,@MovementSide,@RealSignIn,@RealSignOut
 		END
 		CLOSE CFun132_3
 		Deallocate CFun132_3
 		Set @Fnd=1
 		FETCH NEXT FROM CFun132_2 INTO @DetailsShiftID,@RecordGuide,@CardGuide,@MainGuide,@Notes,@IgnoreDifferenceForLogin,@IgnoreDifferenceForLogout
 	END
 	if(@Fnd<1)
 	BEGIN
 	Select @Tp=Tp,@Vacation=Vacation,@DayVacation=DayVacation From dbo.Fun127(@DateValue,@Ag,Null,0,0,0)
 	Insert Into @Tb(InDate,WithLogIn,WithLogOut,IsExists,AttendanceType,IsDetails,ShiftID,MovementSide,Vacation,DayVacation)Values(@InDay,0,0,0,@Tp,0,@AgentShift,1,@Vacation,@DayVacation)
 	END
 	CLOSE CFun132_2
 	Deallocate CFun132_2
 	FETCH NEXT FROM CFun132 INTO @InDay,@DateValue
 END
 CLOSE CFun132
 Deallocate CFun132
 Update @Tb Set[AttTp00]=1 Where AttendanceType=0
 Update @Tb Set[AttTp01]=1 Where AttendanceType=1
 Update @Tb Set[AttTp02]=1 Where AttendanceType=2
 Update @Tb Set[AttTp03]=1 Where AttendanceType=3
 Update @Tb Set[AttTp11]=1 Where AttendanceType=11
 Update @Tb Set[AttTp12]=1 Where AttendanceType=12
 Update @Tb Set[AttTp13]=1 Where AttendanceType=13
 Update @Tb Set[AttTp15]=1 Where AttendanceType=15
 Update @Tb Set[AttTp16]=1 Where AttendanceType=16
 Update @Tb Set[AttTp20]=1 Where AttendanceType=20
 Update @Tb Set[AttTp31]=1,[AttendanceType]=31 Where MovementSide<0
 Update @Tb Set[AttTp41]=1 Where AttendanceType=41
 Update @Tb Set[AttTpA]=1 Where AttendanceType=10
 Update @Tb Set[MovementSide]=1 Where MovementSide Is Null
 Update @Tb Set[MainPeriod]=
 dateadd(Hour,DATEPART(Hour,EarlyEntrance)*-1,
 DateAdd(minute,DATEPART(minute,EarlyEntrance)*-1,
 DateAdd(Second,DATEPART(Second,EarlyEntrance)*-1,WorkingPeriod)))
 	Where EarlyEntrance Is Not Null And WorkingPeriod Is Not Null
 Update @Tb Set[MainPeriod]=
 dateadd(Hour,DATEPART(Hour,LateLeave)*-1,
 DateAdd(minute,DATEPART(minute,LateLeave)*-1,
 DateAdd(Second,DATEPART(Second,LateLeave)*-1,WorkingPeriod)))
 	Where LateLeave Is Not Null And WorkingPeriod Is Not Null
 if(@ProveAbsenceOlny>0)
 begin
 	Update @Tb Set[AttTpA]=0,[AttTp00]=1,[AttendanceType]=0 Where AttendanceType=10
 end
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun133]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun133](@Acc uniqueidentifier,@FDate float,@TDate float,@RdUnPosted bit)returns @Tb table(CurrencyGuide uniqueidentifier,Debit float,Credit Float,Balance float)  
 as begin  
 if((@FDate>0)and(@TDate>0))  
    	begin  
    		if(@RdUnPosted>0)  
     		Insert Into @Tb(CurrencyGuide ,Debit ,Credit ,Balance) Select CurrencyGuide,Sum(DebitRate),Sum(CreditRate),Sum(DebitRate)-Sum(CreditRate)From Qry013 Where AccountGuide=@Acc And EntryDate>=@FDate And EntryDate<(@TDate+1) Group By CurrencyGuide  
    		else  
     		Insert Into @Tb(CurrencyGuide ,Debit ,Credit ,Balance) Select CurrencyGuide,Sum(DebitRate),Sum(CreditRate),Sum(DebitRate)-Sum(CreditRate)From Qry013 Where AccountGuide=@Acc And EntryDate>=@FDate And EntryDate<(@TDate+1) And Posted=1 Group By CurrencyGuide  
    	end  
     else if(@FDate>0)  
    	begin  
    		if(@RdUnPosted>0)  
     		Insert Into @Tb(CurrencyGuide ,Debit ,Credit ,Balance) Select CurrencyGuide,Sum(DebitRate),Sum(CreditRate),Sum(DebitRate)-Sum(CreditRate)From Qry013 Where AccountGuide=@Acc And EntryDate>=@FDate Group By CurrencyGuide  
    		else  
     		Insert Into @Tb(CurrencyGuide ,Debit ,Credit ,Balance) Select CurrencyGuide,Sum(DebitRate),Sum(CreditRate),Sum(DebitRate)-Sum(CreditRate)From Qry013 Where AccountGuide=@Acc And EntryDate>=@FDate And Posted=1 Group By CurrencyGuide  
    	end  
    	else if(@TDate>0)  
    	begin  
    		if(@RdUnPosted>0)  
     		Insert Into @Tb(CurrencyGuide ,Debit ,Credit ,Balance) Select CurrencyGuide,Sum(DebitRate),Sum(CreditRate),Sum(DebitRate)-Sum(CreditRate)From Qry013 Where AccountGuide=@Acc And EntryDate<(@TDate+1) Group By CurrencyGuide  
    		else  
     		Insert Into @Tb(CurrencyGuide ,Debit ,Credit ,Balance) Select CurrencyGuide,Sum(DebitRate),Sum(CreditRate),Sum(DebitRate)-Sum(CreditRate)From Qry013 Where AccountGuide=@Acc And EntryDate<(@TDate+1) And Posted=1 Group By CurrencyGuide  
    	end  
    	else  
    	begin  
    		if(@RdUnPosted>0)  
     		Insert Into @Tb(CurrencyGuide ,Debit ,Credit ,Balance) Select CurrencyGuide,Sum(DebitRate),Sum(CreditRate),Sum(DebitRate)-Sum(CreditRate)From Qry013 Where AccountGuide=@Acc Group By CurrencyGuide  
    		else  
     		Insert Into @Tb(CurrencyGuide ,Debit ,Credit ,Balance) Select CurrencyGuide,Sum(DebitRate),Sum(CreditRate),Sum(DebitRate)-Sum(CreditRate)From Qry013 Where AccountGuide=@Acc And Posted=1 Group By CurrencyGuide  
    	end  
    	return  
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun134]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun134](@Ag uniqueidentifier,@FD int,@TD int,@Tp0 nvarchar(200),@Tp1 nvarchar(200),@Tp2 nvarchar(200),@Tp3 nvarchar(200)
 ,@Tp11 nvarchar(200),@Tp12 nvarchar(200),@Tp13 nvarchar(200),@Tp20 nvarchar(200),@Tp31 nvarchar(200),@TpA nvarchar(200),@Tp15 nvarchar(200),@Unjustified nvarchar(200))returns @Tb table
 (ShiftName nvarchar(255),ShiftLatinName nvarchar(255),MainGuide uniqueidentifier,CardGuide uniqueidentifier,RecordGuide uniqueidentifier,InDate datetime,ShiftIn DateTime,ShiftOut DateTime,RelatedVecation Uniqueidentifier,SignIn DateTime,SignOut DateTime,
 EarlyEntrance DateTime,LateLeave DateTime,LateEntrance DateTime,EarlyLeave DateTime,TimeAbsentee DateTime,Notes nvarchar(Max),DateValue int,WithLogIn bit,WithLogOut bit,AttendanceType int,IsExists Bit,IsDetails bit,
 AttendanceStatus nvarchar(255),WorkingPeriod datetime,WorkingPeriodValue float,ShiftID Uniqueidentifier,MovementSide smallint,VacationGuide uniqueidentifier,DayVacationGuide uniqueidentifier,Vacation nvarchar(255),ContractedOverTimeGuide uniqueidentifier,ContractedOverTime nvarchar(255),RealSignIn DateTime,RealSignOut DateTime,MainPeriod Datetime,ShiftType int,ShiftPeriod float,ShiftPeriodTime datetime,TypeOfShiftTime int,
 DEarlyEntrance datetime,DEarlyEntranceValue float, DEarlyEntrance2 datetime,DEarlyEntranceValue2 float, DEarlyEntrance3 datetime,DEarlyEntranceValue3 float,
 DLateEntrance datetime,DLateEntranceValue float,DLateEntrance2 datetime,DLateEntranceValue2 float,DLateEntrance3 datetime,DLateEntranceValue3 float,
 DEarlyLeave datetime,DEarlyLeaveValue float,DEarlyLeave2 datetime,DEarlyLeaveValue2 float,DEarlyLeave3 datetime,DEarlyLeaveValue3 float,
 DLateLeave datetime,DLateLeaveValue float,DLateLeave2 datetime,DLateLeaveValue2 float,DLateLeave3 datetime,DLateLeaveValue3 float,
 DAbsentee datetime,DAbsenteeValue float,DAbsentee2 datetime,DAbsenteeValue2 float,DAbsentee3 datetime,DAbsenteeValue3 float,
 DEarlyEntranceTotalValue float,DLateEntranceTotalValue float,DEarlyLeaveTotalValue float,DLateLeaveTotalValue float,DAbsenteeTotalValue float,ExcusedAbsenceNotes nvarchar(Max))
 as begin
 	Insert Into @Tb(
 DEarlyEntranceTotalValue ,DLateEntranceTotalValue ,DEarlyLeaveTotalValue ,DLateLeaveTotalValue ,DAbsenteeTotalValue ,
 DEarlyEntrance ,DEarlyEntranceValue ,DEarlyEntrance2 ,DEarlyEntranceValue2 ,DEarlyEntrance3 ,DEarlyEntranceValue3 ,
 				DLateEntrance ,DLateEntranceValue ,DLateEntrance2 ,DLateEntranceValue2 ,DLateEntrance3 ,DLateEntranceValue3 ,
 				DEarlyLeave ,DEarlyLeaveValue ,DEarlyLeave2 ,DEarlyLeaveValue2 ,DEarlyLeave3 ,DEarlyLeaveValue3 ,
 				DLateLeave ,DLateLeaveValue ,DLateLeave2 ,DLateLeaveValue2 ,DLateLeave3 ,DLateLeaveValue3 ,
 				DAbsentee ,DAbsenteeValue ,DAbsentee2 ,DAbsenteeValue2 ,DAbsentee3 ,DAbsenteeValue3,
 ShiftName,ShiftLatinName,MainGuide,CardGuide,RecordGuide,InDate,ShiftIn,ShiftOut,RelatedVecation,SignIn,SignOut,
 EarlyEntrance,LateLeave,LateEntrance,EarlyLeave,TimeAbsentee,Notes,DateValue,WithLogIn,WithLogOut,AttendanceType,IsExists,IsDetails,AttendanceStatus,WorkingPeriod,WorkingPeriodValue,ShiftID,MovementSide,VacationGuide,DayVacationGuide,Vacation,ContractedOverTimeGuide ,ContractedOverTime,RealSignIn ,RealSignOut,ShiftType,ShiftPeriod,ShiftPeriodTime,TypeOfShiftTime,ExcusedAbsenceNotes)
 	Select
 a.DEarlyEntranceTotalValue ,a.DLateEntranceTotalValue ,a.DEarlyLeaveTotalValue ,a.DLateLeaveTotalValue ,a.DAbsenteeTotalValue ,
 a.DEarlyEntrance ,a.DEarlyEntranceValue ,a.DEarlyEntrance2 ,a.DEarlyEntranceValue2 ,a.DEarlyEntrance3 ,a.DEarlyEntranceValue3 ,
 	a.DLateEntrance ,a.DLateEntranceValue ,a.DLateEntrance2 ,a.DLateEntranceValue2 ,a.DLateEntrance3 ,a.DLateEntranceValue3 ,
 	a.DEarlyLeave ,a.DEarlyLeaveValue ,a.DEarlyLeave2 ,a.DEarlyLeaveValue2 ,a.DEarlyLeave3 ,a.DEarlyLeaveValue3 ,
 	a.DLateLeave ,a.DLateLeaveValue ,a.DLateLeave2 ,a.DLateLeaveValue2 ,a.DLateLeave3 ,a.DLateLeaveValue3 ,
 	a.DAbsentee ,a.DAbsenteeValue ,a.DAbsentee2 ,a.DAbsenteeValue2 ,a.DAbsentee3 ,a.DAbsenteeValue3,b.CardName As ShiftName,b.LatinName As ShiftLatinName,a.MainGuide,a.CardGuide,a.RecordGuide,a.InDate,a.ShiftIn,a.ShiftOut,a.RelatedVecation,a.SignIn,a.SignOut,
 a.EarlyEntrance,a.LateLeave,a.LateEntrance,a.EarlyLeave,a.TimeAbsentee,a.Notes,a.DateValue,a.WithLogIn,a.WithLogOut,a.AttendanceType,a.IsExists,a.IsDetails,(CASE a.AttendanceType
 When 0 Then @Tp0
 When 1 Then @Tp1
 When 2 Then @Tp2
 When 3 Then @Tp3
 When 11 Then c.CardName
 When 12 Then @Tp12
 When 13 Then @Tp13
 When 15 Then IsNull(c.CardName,@Tp15)
 When 16 Then IsNull(c.CardName,@Tp15)+' ( '+@Unjustified+' )'
 When 20 Then @Tp20
 When 31 Then @Tp31
 When 41 Then c.CardName
 Else @TpA End),WorkingPeriod,WorkingPeriodValue,ShiftID,MovementSide,a.Vacation,a.DayVacation,c.CardName,d.CardGuide,d.CardName,RealSignIn ,RealSignOut ,
 b.IntValue01 ,b.NumberValue01,DateAdd(minute,b.NumberValue01*60,0),b.IntValue03,ExcusedAbsenceNotes
 		From dbo.Fun132(@Ag,@FD,@TD) a
 		Left Join TBL014 b On a.ShiftID=b.CardGuide
 		Left Join TBL014 c On a.Vacation=c.CardGuide
 		Left Join TBL014 d On a.ContractedOrverTime=d.CardGuide
 	Update @Tb Set[LateLeave]=DATEADD(Second,DATEDIFF(SECOND,ShiftPeriodTime,WorkingPeriod),0)
 		Where ShiftType=2 And TypeOfShiftTime=2 And WorkingPeriod>ShiftPeriodTime
 	Update @Tb Set[EarlyLeave]=DATEADD(Second,DATEDIFF(SECOND,WorkingPeriod,ShiftPeriodTime),0)
 		Where ShiftType=2 And TypeOfShiftTime=2 And WorkingPeriod<ShiftPeriodTime
 	Update @Tb Set[MainPeriod]=
 	dateadd(Hour,DATEPART(Hour,EarlyEntrance)*-1,
 	DateAdd(minute,DATEPART(minute,EarlyEntrance)*-1,
 	DateAdd(Second,DATEPART(Second,EarlyEntrance)*-1,WorkingPeriod)))
 		Where EarlyEntrance Is Not Null And WorkingPeriod Is Not Null
 	Update @Tb Set[MainPeriod]=
 	dateadd(Hour,DATEPART(Hour,LateLeave)*-1,
 	DateAdd(minute,DATEPART(minute,LateLeave)*-1,
 	DateAdd(Second,DATEPART(Second,LateLeave)*-1,WorkingPeriod)))
 		Where LateLeave Is Not Null And WorkingPeriod Is Not Null
 	return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun135]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun135](@ShiftID uniqueidentifier,@Ag uniqueidentifier,@Dt datetime,@Tp int)returns float 
 as begin 
 	declare @DateValue01 datetime 
 	declare @NumberValue01 float 
 	declare @ID int 
 	declare @CValue float 
 	declare @IntValue02 int 
 	declare @TextValue01 nvarchar(100) 
 	declare @R float 
 	Select @DateValue01=Min(DateValue01) From TBL114 Where MainGuide=@ShiftID And TypeID=@Tp And DateValue01>=@Dt 
 	Select Top 1 @ID=ID,@NumberValue01=NumberValue01,@IntValue02=IntValue02,@TextValue01=IsNull(TextValue01,'') 
 	From TBL114 Where MainGuide=@ShiftID And TypeID=@Tp And DateValue01=@DateValue01 
 	if(@ID Is Null) 
 	begin 
 		Select Top 1 @ID=ID,@NumberValue01=NumberValue01,@IntValue02=IntValue02,@TextValue01=IsNull(TextValue01,'') 
 		From TBL114 Where MainGuide=@ShiftID And TypeID=@Tp Order By DateValue01 desc 
 	end 
 	Set @R=Convert(float,@Dt)*24 
 	if(@NumberValue01>0) 
 		Set @R=@R*@NumberValue01 
 	Set @CValue=(Select (Case @TextValue01 When 'FixedSalary' Then FixedSalary 
 	When 'FloatValue1' Then FloatValue1 
 	When 'FloatValue2' Then FloatValue2 Else 0 End)From TBL016 Where CardGuide=@Ag) 
 	--if(@CValue>0) 
 		Set @R=@R*@CValue 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun136]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun136](@Ag uniqueidentifier,@FD int,@TD int,@WInstlmnts bit)returns @Tb table 
 (ID int Identity(1,1),NotActive bit,ShiftName nvarchar(255),ShiftLatinName nvarchar(255),ShiftID Uniqueidentifier,ShiftType int,EarlyEntrance DateTime,EarlyEntranceValue float, 
 LateLeave DateTime,LateLeaveValue float,LateEntrance DateTime,LateEntranceValue float, 
 EarlyLeave DateTime,EarlyLeaveValue float,TimeAbsentee DateTime,TimeAbsenteeValue float, 
 WithLogIn int,WithLogOut int,IsExists int,WorkingPeriod datetime,MainPeriod datetime,WorkingPeriodValue float,AbsenteeDays int,AttTp00 int, 
 AttTp01 int,AttTp02 int,AttTp03 int, 
 AttTp12 int,AttTp13 int,AttTp20 int,AttTpA int, 
 DaysCount int,FixedSalary float,Installments float,NetSalary float,NetSalaryWithoutInstallments float,AccountID uniqueidentifier,AttTp15 int, 
 DEarlyEntrance datetime,DEarlyEntranceValue float, DEarlyEntrance2 datetime,DEarlyEntranceValue2 float, DEarlyEntrance3 datetime,DEarlyEntranceValue3 float, 
 DLateEntrance datetime,DLateEntranceValue float,DLateEntrance2 datetime,DLateEntranceValue2 float,DLateEntrance3 datetime,DLateEntranceValue3 float, 
 DEarlyLeave datetime,DEarlyLeaveValue float,DEarlyLeave2 datetime,DEarlyLeaveValue2 float,DEarlyLeave3 datetime,DEarlyLeaveValue3 float, 
 DLateLeave datetime,DLateLeaveValue float,DLateLeave2 datetime,DLateLeaveValue2 float,DLateLeave3 datetime,DLateLeaveValue3 float, 
 DAbsentee datetime,DAbsenteeValue float,DAbsentee2 datetime,DAbsenteeValue2 float,DAbsentee3 datetime,DAbsenteeValue3 float, 
 DEarlyEntranceTotalValue float,DLateEntranceTotalValue float,DEarlyLeaveTotalValue float,DLateLeaveTotalValue float,DAbsenteeTotalValue float,Currency nvarchar(250),CurrencyGuide uniqueidentifier) 
 as begin 
 	declare @FixedSalary float 
 	declare @NotActive bit 
 	declare @EmCurrency uniqueidentifier 
 	Select @EmCurrency=DefaultCurrency From TBL016 Where CardGuide=@Ag 
 	declare @CrName nvarchar(250) 
 	---------------------------------Calculating Installments--------------------------------- 
 	if(@WInstlmnts>0) 
 	begin 
 		declare @Installments float 
 		declare @InstallmentsBond uniqueidentifier 
 		Set @InstallmentsBond=(Select Top 1 ValueKey From TBL053 Where OptionName='HRFinancialNotepaper') 
 		if(@InstallmentsBond Is Not Null) 
 		begin 
 			if(@EmCurrency Is Not Null) 
 			begin 
 				Set @CrName=(Select CurrencyName From TBL001 Where CardGuide=@EmCurrency) 
 				declare @EmRate float 
 				Set @EmRate=dbo.Fun086(@EmCurrency) 
  				if(@FD>1 And @TD>1) 
 				begin 
  					Set @Installments=dbo.Ratio((Select Sum(TBL038.Credit-TBL038.Debit) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL038.DueDate>=@FD And TBL038.DueDate<(@TD+1) And TBL010.AgentGuide=@Ag And TBL038.CurrencyGuide<>@EmCurrency),@EmRate) 
 					Set @Installments=IsNull(@Installments,0)+ 
 					IsNull((Select Sum(TBL038.CreditRate-TBL038.DebitRate) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL038.DueDate>=@FD And TBL038.DueDate<(@TD+1) And TBL010.AgentGuide=@Ag And TBL038.CurrencyGuide=@EmCurrency),0) 
 				end 
  				Else if(@FD>1) 
 				begin 
  					Set @Installments=dbo.Ratio((Select Sum(TBL038.Credit-TBL038.Debit) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL038.DueDate>=@FD And TBL010.AgentGuide=@Ag And TBL038.CurrencyGuide<>@EmCurrency),@EmRate) 
 					Set @Installments=IsNull(@Installments,0)+ 
 					IsNull((Select Sum(TBL038.CreditRate-TBL038.DebitRate) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL038.DueDate>=@FD And TBL010.AgentGuide=@Ag And TBL038.CurrencyGuide=@EmCurrency),0) 
 				end 
  				Else if(@TD>1) 
 				begin 
  					Set @Installments=dbo.Ratio((Select Sum(TBL038.Credit-TBL038.Debit) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL038.DueDate<(@TD+1) And TBL010.AgentGuide=@Ag And TBL038.CurrencyGuide<>@EmCurrency),@EmRate) 
 					Set @Installments=IsNull(@Installments,0)+ 
 					IsNull((Select Sum(TBL038.Credit-TBL038.Debit) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL038.DueDate<(@TD+1) And TBL010.AgentGuide=@Ag And TBL038.CurrencyGuide=@EmCurrency),0) 
 				end 
  				Else 
 				begin 
  					Set @Installments=dbo.Ratio((Select Sum(TBL038.Credit-TBL038.Debit) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL010.AgentGuide=@Ag And TBL038.CurrencyGuide<>@EmCurrency),@EmRate) 
 					Set @Installments=IsNull(@Installments,0)+ 
 					IsNull((Select Sum(TBL038.Credit-TBL038.Debit) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL010.AgentGuide=@Ag And TBL038.CurrencyGuide=@EmCurrency),0) 
 				end 
 			end 
 			else 
 			begin 
 				if(@FD>1 And @TD>1) 
 					Set @Installments=(Select Sum(TBL038.Credit-TBL038.Debit) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL038.DueDate>=@FD And TBL038.DueDate<(@TD+1) And TBL010.AgentGuide=@Ag) 
 				Else if(@FD>1) 
 					Set @Installments=(Select Sum(TBL038.Credit-TBL038.Debit) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL038.DueDate>=@FD And TBL010.AgentGuide=@Ag) 
 				Else if(@TD>1) 
 					Set @Installments=(Select Sum(TBL038.Credit-TBL038.Debit) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL038.DueDate<(@TD+1) And TBL010.AgentGuide=@Ag) 
 				Else 
 					Set @Installments=(Select Sum(TBL038.Credit-TBL038.Debit) From TBL038 Inner Join TBL010 On TBL038.MainGuide=TBL010.CardGuide Where TBL010.MainGuide=@InstallmentsBond And TBL010.Posted>0 And TBL010.AgentGuide=@Ag) 
 			end 
 		end 
 	end 
 	------------------------------------------------------------------------------------------ 
 	if(@Installments Is Null)Set @Installments=0 
 	declare @AccountID uniqueidentifier 
 	Select @FixedSalary=FixedSalary,@NotActive=NotActive,@AccountID=AccountID From TBL016 Where CardGuide=@Ag 
 	Insert Into @Tb( NotActive, 
 DEarlyEntranceTotalValue ,DLateEntranceTotalValue ,DEarlyLeaveTotalValue ,DLateLeaveTotalValue ,DAbsenteeTotalValue , 
 DEarlyEntrance ,DEarlyEntranceValue ,DEarlyEntrance2 ,DEarlyEntranceValue2 ,DEarlyEntrance3 ,DEarlyEntranceValue3 , 
 DLateEntrance ,DLateEntranceValue ,DLateEntrance2 ,DLateEntranceValue2 ,DLateEntrance3 ,DLateEntranceValue3 , 
 DEarlyLeave ,DEarlyLeaveValue ,DEarlyLeave2 ,DEarlyLeaveValue2 ,DEarlyLeave3 ,DEarlyLeaveValue3 , 
 DLateLeave ,DLateLeaveValue ,DLateLeave2 ,DLateLeaveValue2 ,DLateLeave3 ,DLateLeaveValue3 , 
 DAbsentee ,DAbsenteeValue ,DAbsentee2 ,DAbsenteeValue2 ,DAbsentee3 ,DAbsenteeValue3, 
 ShiftName,ShiftLatinName,ShiftID,ShiftType,EarlyEntrance,EarlyEntranceValue, 
 LateLeave,LateLeaveValue,LateEntrance,LateEntranceValue, 
 EarlyLeave,EarlyLeaveValue,TimeAbsentee,TimeAbsenteeValue,WorkingPeriod,MainPeriod,WorkingPeriodValue, 
 WithLogIn,WithLogOut,IsExists,AbsenteeDays,AttTp00,AttTp01,AttTp02,AttTp03, 
 AttTp12,AttTp13,AttTp20,AttTpA,DaysCount,FixedSalary,Installments,NetSalary,NetSalaryWithoutInstallments,AccountID,AttTp15) 
 Select @NotActive, 
 DEarlyEntranceTotalValue ,DLateEntranceTotalValue ,DEarlyLeaveTotalValue ,DLateLeaveTotalValue ,DAbsenteeTotalValue , 
 DEarlyEntrance ,DEarlyEntranceValue ,DEarlyEntrance2 ,DEarlyEntranceValue2 ,DEarlyEntrance3 ,DEarlyEntranceValue3 , 
 DLateEntrance ,DLateEntranceValue ,DLateEntrance2 ,DLateEntranceValue2 ,DLateEntrance3 ,DLateEntranceValue3 , 
 DEarlyLeave ,DEarlyLeaveValue ,DEarlyLeave2 ,DEarlyLeaveValue2 ,DEarlyLeave3 ,DEarlyLeaveValue3 , 
 DLateLeave ,DLateLeaveValue ,DLateLeave2 ,DLateLeaveValue2 ,DLateLeave3 ,DLateLeaveValue3 , 
 DAbsentee ,DAbsenteeValue ,DAbsentee2 ,DAbsenteeValue2 ,DAbsentee3 ,DAbsenteeValue3, 
 ShiftName,ShiftLatinName,ShiftID,ShiftType,EarlyEntrance,EarlyEntranceValue,LateLeave,LateLeaveValue,LateEntrance,LateEntranceValue*-1, 
 EarlyLeave,EarlyLeaveValue*-1,TimeAbsentee,TimeAbsenteeValue,WorkingPeriod,MainPeriod,WorkingPeriodValue,WithLogIn,WithLogOut,IsExists,AbsenteeDays,AttTp00 ,AttTp01 , 
 AttTp02 ,AttTp03 , 
 AttTp12 ,AttTp13 ,AttTp20 ,AttTpA ,DaysCount,FixedSalary, @Installments*-1, 
 IsNull(FixedSalary,0)+(IsNull(EarlyEntranceValue,0)+IsNull(LateLeaveValue,0))-(IsNull(LateEntranceValue,0)+IsNull(EarlyLeaveValue,0)+IsNull(TimeAbsenteeValue,0)+IsNull(@Installments,0)), 
 IsNull(FixedSalary,0)+(IsNull(EarlyEntranceValue,0)+IsNull(LateLeaveValue,0))-(IsNull(LateEntranceValue,0)+IsNull(EarlyLeaveValue,0)+IsNull(TimeAbsenteeValue,0)), 
 @AccountID,AttTp15 
 	From (Select 
 DEarlyEntranceTotalValue ,DLateEntranceTotalValue ,DEarlyLeaveTotalValue ,DLateLeaveTotalValue ,DAbsenteeTotalValue , 
 DEarlyEntrance ,DEarlyEntranceValue ,DEarlyEntrance2 ,DEarlyEntranceValue2 ,DEarlyEntrance3 ,DEarlyEntranceValue3 , 
 DLateEntrance ,DLateEntranceValue ,DLateEntrance2 ,DLateEntranceValue2 ,DLateEntrance3 ,DLateEntranceValue3 , 
 DEarlyLeave ,DEarlyLeaveValue ,DEarlyLeave2 ,DEarlyLeaveValue2 ,DEarlyLeave3 ,DEarlyLeaveValue3 , 
 DLateLeave ,DLateLeaveValue ,DLateLeave2 ,DLateLeaveValue2 ,DLateLeave3 ,DLateLeaveValue3 , 
 DAbsentee ,DAbsenteeValue ,DAbsentee2 ,DAbsenteeValue2 ,DAbsentee3 ,DAbsenteeValue3, 
 ShiftName,ShiftLatinName,ShiftID,ShiftType, 
 EarlyEntrance,(CASE DailyCalculating When 0 Then dbo.Fun135(ShiftID,@Ag,EarlyEntrance,1) Else DEarlyEntranceTotalValue End) As EarlyEntranceValue, 
 LateEntrance,(CASE DailyCalculating When 0 Then dbo.Fun135(ShiftID,@Ag,LateEntrance,3) Else DLateEntranceTotalValue End) As LateEntranceValue, 
 EarlyLeave,(CASE DailyCalculating When 0 Then dbo.Fun135(ShiftID,@Ag,EarlyLeave,4) Else DEarlyLeaveTotalValue End) As EarlyLeaveValue, 
 LateLeave,(CASE DailyCalculating When 0 Then dbo.Fun135(ShiftID,@Ag,LateLeave,2) Else DLateLeaveTotalValue End) As LateLeaveValue, 
 TimeAbsentee,(CASE DailyCalculating When 0 Then dbo.Fun135(ShiftID,@Ag,TimeAbsentee,7) Else DAbsenteeTotalValue End) As TimeAbsenteeValue, 
 WorkingPeriod,MainPeriod,WorkingPeriodValue,WithLogIn,WithLogOut,IsExists, AbsenteeDays,AttTp00 ,AttTp01 ,AttTp02 ,AttTp03 , 
 AttTp12 ,AttTp13 ,AttTp20 ,AttTpA ,DaysCount,FixedSalary ,AttTp15 From 
 	(Select b.BitValue9 As DailyCalculating, 
 Convert(datetime,Sum(Convert(float,a.DEarlyEntrance)))As DEarlyEntrance, Convert(datetime,Sum(Convert(float,a.DEarlyEntrance2)))As DEarlyEntrance2, Convert(datetime,Sum(Convert(float,a.DEarlyEntrance3)))As DEarlyEntrance3, 
 Convert(datetime,Sum(Convert(float,a.DLateEntrance)))As DLateEntrance, Convert(datetime,Sum(Convert(float,a.DLateEntrance2)))As DLateEntrance2, Convert(datetime,Sum(Convert(float,a.DLateEntrance3)))As DLateEntrance3, 
 Convert(datetime,Sum(Convert(float,a.DEarlyLeave)))As DEarlyLeave, Convert(datetime,Sum(Convert(float,a.DEarlyLeave2)))As DEarlyLeave2, Convert(datetime,Sum(Convert(float,a.DEarlyLeave3)))As DEarlyLeave3, 
 Convert(datetime,Sum(Convert(float,a.DLateLeave)))As DLateLeave, Convert(datetime,Sum(Convert(float,a.DLateLeave2)))As DLateLeave2, Convert(datetime,Sum(Convert(float,a.DLateLeave3)))As DLateLeave3, 
 Convert(datetime,Sum(Convert(float,a.DAbsentee)))As DAbsentee, Convert(datetime,Sum(Convert(float,a.DAbsentee2)))As DAbsentee2, Convert(datetime,Sum(Convert(float,a.DAbsentee3)))As DAbsentee3, 
 Sum(DEarlyEntranceTotalValue)As DEarlyEntranceTotalValue,Sum(DLateEntranceTotalValue)As DLateEntranceTotalValue,Sum(DEarlyLeaveTotalValue)As DEarlyLeaveTotalValue,Sum(DLateLeaveTotalValue)As DLateLeaveTotalValue,Sum(DAbsenteeTotalValue)As DAbsenteeTotalValue, 
 Sum(DEarlyEntranceValue)As DEarlyEntranceValue, Sum(DEarlyEntranceValue2)As DEarlyEntranceValue2, Sum(DEarlyEntranceValue3)As DEarlyEntranceValue3, 
 Sum(DLateEntranceValue)As DLateEntranceValue, Sum(DLateEntranceValue2)As DLateEntranceValue2, Sum(DLateEntranceValue3)As DLateEntranceValue3, 
 Sum(DEarlyLeaveValue)As DEarlyLeaveValue, Sum(DEarlyLeaveValue2)As DEarlyLeaveValue2, Sum(DEarlyLeaveValue3)As DEarlyLeaveValue3, 
 Sum(DLateLeaveValue)As DLateLeaveValue, Sum(DLateLeaveValue2)As DLateLeaveValue2, Sum(DLateLeaveValue3)As DLateLeaveValue3, 
 Sum(DAbsenteeValue)As DAbsenteeValue, Sum(DAbsenteeValue2)As DAbsenteeValue2, Sum(DAbsenteeValue3)As DAbsenteeValue3, 
 b.CardName As ShiftName,b.LatinName As ShiftLatinName,a.ShiftID,b.IntValue01 As ShiftType, 
 Convert(datetime,Sum(Convert(float,a.EarlyEntrance)))As EarlyEntrance, 
 Convert(datetime,Sum(Convert(float,a.LateLeave)))As LateLeave, 
 Convert(datetime,Sum(Convert(float,a.LateEntrance)))As LateEntrance, 
 Convert(datetime,Sum(Convert(float,a.EarlyLeave)))As EarlyLeave, 
 Convert(datetime,Sum(Convert(float,a.TimeAbsentee)))As TimeAbsentee, 
 Convert(datetime,Sum(Convert(float,a.WorkingPeriod)*a.MovementSide))As WorkingPeriod, 
 Convert(datetime,Sum(Convert(float,a.MainPeriod)*a.MovementSide))As MainPeriod, 
 Sum(WorkingPeriodValue)As WorkingPeriodValue, 
 Sum(Convert(int,a.WithLogIn))As WithLogIn,Sum(Convert(int,a.WithLogOut))As WithLogOut,Sum(Convert(int,a.IsExists))As IsExists,Sum((CASE When IsExists>0 Then 0 Else 1 End)) As AbsenteeDays, 
 Sum(IsNull(a.AttTp00,0)) As AttTp00,Sum(IsNull(a.AttTp01,0)) As AttTp01,Sum(IsNull(a.AttTp02,0)) As AttTp02,Sum(IsNull(a.AttTp03,0)) As AttTp03, 
 Sum(IsNull(a.AttTp12,0)) As AttTp12,Sum(IsNull(a.AttTp13,0)) As AttTp13,Sum(IsNull(a.AttTp20,0)) As AttTp20,Sum(IsNull(a.AttTpA,0)) As AttTpA,Count(*) As DaysCount, 
 @FixedSalary As FixedSalary,Sum(IsNull(a.AttTp15,0)) As AttTp15 
 	From dbo.Fun132(@Ag,@FD,@TD) a 
 	Left Join TBL014 b On a.ShiftID=b.CardGuide 
 	Where a.ContractedOrverTime Is Null 
 	Group By b.CardName,b.LatinName,a.ShiftID,b.IntValue01,b.BitValue9)a)a 
 Update @Tb Set[Installments]=0 Where ID>1 
 if(@CrName Is Not Null) 
 begin 
 	Update @Tb Set [Currency]=@CrName,[CurrencyGuide]=@EmCurrency 
 end 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun137]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun137](@T nvarchar(150),@T1 nvarchar(150),@T2 nvarchar(150),@T3 nvarchar(150),@T4 nvarchar(150)) 
 	returns @Tb table(ID int,Term nvarchar(150)) 
 as begin 
 	Insert Into @Tb(ID,Term)Values(-1,@T) 
 	Insert Into @Tb(ID,Term)Values(1,@T1) 
 	Insert Into @Tb(ID,Term)Values(2,@T2) 
 	Insert Into @Tb(ID,Term)Values(3,@T3) 
 	Insert Into @Tb(ID,Term)Values(4,@T4) 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun138]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun138](@Ag uniqueidentifier,@FD int,@TD int,@Tp int)returns float 
 as begin 
 	declare @R float
 	Set @R=(Select Sum((CASE @Tp
 	When 0 Then AttTp00
 	When 1 Then AttTp01
 	When 2 Then AttTp02
 	When 3 Then AttTp03
 	When 12 Then AttTp12
 	When 13 Then AttTp13
 	When 15 Then AttTp15
 	When 20 Then AttTp20
 	When 21 Then WorkingPeriodValue*24 
 	When 22 Then Convert(float,MainPeriod)*24 
 	When 10 Then AttTpA 
 	When 31 Then Convert(float,EarlyEntrance)*24 
 	When 32 Then Convert(float,LateLeave)*24 
 	When 33 Then Convert(float,LateEntrance)*24 
 	When 34 Then Convert(float,EarlyLeave)*24 
 	When -1 Then DaysCount 
 	When -2 Then NetSalary 
 	Else 0 End)) 
 	From dbo.Fun136(@Ag,@FD,@TD,1))
 	return @R
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun139]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun139](@Ag uniqueidentifier,@Fd nvarchar(100))returns float 
 as begin
 	declare @D int 
 	declare @R float 
     Set @D=(Select ID From TBL016 Where CardGuide=@Ag) 
     Set @R=dbo.Number(dbo.Fun118(16,@D,@Fd)) 
     return @R
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun140]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun140](@G uniqueidentifier,@Tp int,@AgentGuide uniqueidentifier,@FD int,@TD int)returns int 
 as begin 
 	declare @R int 
 	if(@Tp=0) 
 	begin 
 		Set @R=(Select IntValue01 From TBL014 Where CardGuide=@G) 
 	end 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun141]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun141](@Ag uniqueidentifier,@FD int,@TD int)returns @Tb table(ID int identity(1,1),VTP int,CardGuide uniqueidentifier,VCount float,CardName nvarchar(Max),Qry nvarchar(Max),IntValue02 int,VacationPeriod datetime,VacationPeriodAsNumber float,VacationType int,MergedVacationPeriod datetime) 
 as begin 
 declare @EShift float 
 declare @ShiftPeriod datetime 
 declare @Shift uniqueidentifier 
 declare @AttPeriod float 
 Select @Shift=RelatedAdministration From TBL016 Where CardGuide=@Ag 
 Select @AttPeriod=Convert(float,(case when Date01 is null or Date02 is null then 1 else 
 (case when Date01>Date02 then dbo.TimeDifference(Date02-dbo.DateToInt(Date02),Date01-dbo.DateToInt(Date02)) else dbo.TimeDifference(Date01-dbo.DateToInt(Date01),Date02-dbo.DateToInt(Date01)) 
 end)end))*24 , 
 @EShift=(CASE When IntValue01=2 And IntValue03=2 Then NumberValue01*3600 When IntValue01=3 Then (dbo.TimeSeconds(dbo.GetTime(Date02))-dbo.TimeSeconds(dbo.GetTime(Date01))) End) From TBL014 Where CardGuide=@Shift 
 Set @ShiftPeriod=DATEADD(Second,@EShift,0) 
 Insert Into @Tb(VTP,CardGuide,VCount,CardName,Qry,IntValue02,VacationType)Select 1,a.Vacation,IsNull(a.VCount,1),TBL014.CardName,TBL014.LongText02,TBL014.IntValue02,TBL014.IntValue02 From 
 (Select Vacation,Count(*) As VCount From dbo.Fun132(@Ag,@FD,@TD) a Group By a.Vacation) a 
 Inner Join TBL014 On a.Vacation=TBL014.CardGuide 
 Insert Into @Tb(VTP,CardGuide,VCount,CardName,Qry,VacationType,VacationPeriod,VacationPeriodAsNumber,MergedVacationPeriod) 
 Select 0,a.RelatedCard,IsNull(a.Cnt,Convert(float,a.VacationPeriod))As Cnt,a.MainCardName,a.Qry,a.MainInt2,a.VacationPeriod,Convert(float,a.MergedVacationPeriod),a.MergedVacationPeriod From ( 
 Select a.RelatedCard,(case MainInt2 When 3 Then MainPriod else Convert(float,a.Cnt) end)As Cnt,a.MainCardName,a.Qry,a.MainInt2,a.VacationPeriod,(case MainInt2 When 3 Then MainPriod Else dbo.TimeCountsInPeriod(a.VacationPeriod,@ShiftPeriod)end)As MergedVacationPeriod From ( 
 	Select a.Priod As MainPriod,a.RelatedCard,a.Cnt,a.MainCardName,a.Qry+' * '+Convert(varchar(250),a.Priod) As Qry,a.MainInt2,a.IntValue02,DATEADD(Second,a.TimeSeconds,0) As VacationPeriod From ( 
 		Select a.RelatedCard,a.Qry,Sum(a.Priod)*24/(case a.MainInt2 When 3 Then @AttPeriod Else 1 end) As Priod, 
 		Count(*) As Cnt,a.MainInt2 As IntValue02,a.MainCardName,a.MainInt2,Sum(IsNull(dbo.TimeSeconds(a.VacationPeriod),86400)) As TimeSeconds From 
  			(Select a.RelatedCard,a.Qry,Convert(float,a.CalcDate02)-Convert(float,a.CalcDate01) as Priod,a.MainCardName,a.MainInt2,dbo.TimeDifference(CalcDate01,CalcDate02) As VacationPeriod From 
 				(select DatePart(WEEKDAY,c.InDay) DayInWeek,c.InDay,a.LongText02 As Qry ,a.IntValue02 As MainInt2,a.CardName As MainCardName,b.* from tbl014 a 
  				inner join TBL014 b on a.CardGuide=b.RelatedCard 
  				Inner Join (Select * From dbo.Fun126(@FD,@TD))c On c.DateValue>=b.Date01 And c.DateValue<=IsNull(b.Date02,b.Date01) 
  				where (b.CardType=3 Or b.CardType=16) 
  				and (a.CardType=15 Or (a.CardType=8 and a.IntValue02>0)) 
  				and b.AgentGuide=@Ag 
  				And b.BitValue8>0 
 				)a 
 			Where (a.IsSelected=0 
  			Or ((a.DayInWeek=1 And a.BitValue1>0) 
  			Or (a.DayInWeek=2 And a.BitValue2>0) 
  			Or (a.DayInWeek=3 And a.BitValue3>0) 
  			Or (a.DayInWeek=4 And a.BitValue4>0) 
  			Or (a.DayInWeek=5 And a.BitValue5>0) 
  			Or (a.DayInWeek=6 And a.BitValue6>0) 
  			Or (a.DayInWeek=7 And a.BitValue7>0))) 
 		)a Group By a.RelatedCard,a.Qry,a.MainInt2,a.MainCardName,a.MainInt2)a 
 	)a 
 )a 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun142]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun142](@Ac uniqueidentifier,@DAc uniqueidentifier)returns bit  
 as begin  
 	declare @MAc uniqueidentifier  
 	if((Select Count(*) From TBL076 Where MainGuide=@DAc And AccountGuide=@Ac)>0)  
 		return 1  
 	Set @MAc=(Select MainAccount From TBL004 Where CardGuide=@Ac)  
 	if(@MAc Is Not Null)  
 		return dbo.Fun142(@MAc,@DAc)  
 	return 0  
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun143]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun143](@G uniqueidentifier,@Fld nvarchar(255))returns float 
 as begin 
 	declare @R float 
 	Set @R=CONVERT(float,dbo.TextToDateTime(dbo.Fun118(16,(Select ID From TBL016 Where CardGuide=@G),@Fld))) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun144]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun144](@CardGuide uniqueidentifier,@Agent uniqueidentifier,@FD int,@TD int)returns int 
 as begin 
 	declare @R int 
 	Select Top 1 @R=a.VCount From dbo.Fun141(@Agent,@FD,@TD) a Where CardGuide=@CardGuide 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun145]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun145]()returns @Tb table(Fld nvarchar(255),Src nvarchar(255)) 
 as begin 
 declare @N nvarchar(Max) 
 declare @T nvarchar(Max) 
 declare @I int 
 declare @Added bit 
 declare @C nvarchar(1) 
 DECLARE CTmpCheck CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select a.name,b.name From syscolumns a Inner Join sysobjects b on a.id=b.id where b.xtype='U' And b.name Like'TBL%' 
 OPEN CTmpCheck 
 FETCH NEXT FROM CTmpCheck INTO @N,@T 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	if(@N Like'0%' Or @N Like'1%' Or @N Like'2%' Or @N Like'3%' Or @N Like'4%' Or @N Like'5%' Or @N Like'6%' Or @N Like'7%' Or @N Like'8%' Or @N Like'9%') 
 		Insert Into @Tb(Fld,Src)Values(@N,@T) 
 	else 
 	begin 
 		Select @I=1,@Added=0 
 		While(@I<=Len(@N) And @Added<1) 
 		begin 
 			Set @C=SUBSTRING(@N,@I,1) 
 			if(@C='a' Or @C='b' Or @C='c' Or @C='d' Or @C='e' Or @C='f' 
 	Or @C='g' Or @C='h' Or @C='i' Or @C='j' Or @C='k' 
 	Or @C='l' Or @C='m' Or @C='n' Or @C='o' Or @C='p' 
 	Or @C='q' Or @C='r' Or @C='s' Or @C='t' Or @C='u' 
 	Or @C='v' Or @C='w' Or @C='x' Or @C='y' Or @C='z' 
 	or @C='A' Or @C='B' Or @C='C' Or @C='D' Or @C='E' Or @C='F' 
  	Or @C='G' Or @C='H' Or @C='I' Or @C='J' Or @C='K' 
  	Or @C='L' Or @C='M' Or @C='N' Or @C='O' Or @C='P' 
  	Or @C='Q' Or @C='R' Or @C='S' Or @C='T' Or @C='U' 
  	Or @C='V' Or @C='W' Or @C='X' Or @C='Y' Or @C='Z' 
 	Or @C='0' Or @C='1' Or @C='2' Or @C='3' Or @C='4' Or @C='5' 
 	Or @C='6' Or @C='7' Or @C='8' Or @C='9' Or @C='_') 
 			begin 
 				Set @I=@I+1 
 			end 
 			else 
 			begin 
 				Insert Into @Tb(Fld,Src)Values(@N,@T) 
 				Set @Added=1 
 			end 
 		end 
 	end 
 	FETCH NEXT FROM CTmpCheck INTO @N,@T 
 End 
 CLOSE CTmpCheck 
 Deallocate CTmpCheck 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun146]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun146](@Ag uniqueidentifier,@FD int,@TD int) returns @Tb table(InDay datetime,DateValue int) 
 as begin 
 	if(@Ag Is Null)return 
 	if(@FD<5) 
 		Set @FD=@TD 
 	if(@TD<@FD) 
 		Set @TD=@FD 
 	if(@FD=0 Or @TD=0)return 
 	Declare @Vctn table(DayInWeek int) 
 	Insert Into @Vctn(DayInWeek)Select 1 From TBL016 Where CardGuide=@Ag And BitValue1>0 
 	Insert Into @Vctn(DayInWeek)Select 2 From TBL016 Where CardGuide=@Ag And BitValue2>0 
 	Insert Into @Vctn(DayInWeek)Select 3 From TBL016 Where CardGuide=@Ag And BitValue3>0 
 	Insert Into @Vctn(DayInWeek)Select 4 From TBL016 Where CardGuide=@Ag And BitValue4>0 
 	Insert Into @Vctn(DayInWeek)Select 5 From TBL016 Where CardGuide=@Ag And BitValue5>0 
 	Insert Into @Vctn(DayInWeek)Select 6 From TBL016 Where CardGuide=@Ag And BitValue6>0 
 	Insert Into @Vctn(DayInWeek)Select 7 From TBL016 Where CardGuide=@Ag And BitValue7>0 
 	Insert Into @Tb(InDay,DateValue) 
 	Select a.InDay,a.DateValue From (Select DATEPART(dw,InDay)As DayInWeek,InDay,DateValue From dbo.Fun126(@FD,@TD)) a 
 	Inner Join @Vctn b On a.DayInWeek=b.DayInWeek 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun147]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun147](@T varchar(100),@AsSrc varchar(100),@SelectState int,@FldsCount int)returns nvarchar(Max) 
 as begin 
 	--@SelectState 
 	--0:Normal 
 	--1:Only Fields 
 	if(@FldsCount<1)Set @FldsCount=1000 
 	declare @CurFld int 
 	Set @CurFld=0 
 	if(Len(IsNull(@AsSrc,''))=0)return dbo.Fun123(@T) 
  	declare @R nvarchar(Max) 
  	Set @R='' 
  	declare @F nvarchar(100) 
  	DECLARE CFun123 CURSOR READ_ONLY FAST_FORWARD FOR 
  		Select name From syscolumns where xtype<>34 And id=(Select id From sysobjects where name=@T) 
  	OPEN CFun123 
  	FETCH NEXT FROM CFun123 INTO @F 
  	WHILE (@@FETCH_STATUS = 0 And @CurFld<@FldsCount) 
  	BEGIN 
  		if(len(@R)>0)Set @R=@R+',' 
  		Set @R=@R+@AsSrc+'.'+@F 
 		Set @CurFld=@CurFld+1 
  		FETCH NEXT FROM CFun123 INTO @F 
  	END 
  	CLOSE CFun123 
  	Deallocate CFun123 
  	if(@T='TBL013')Set @R=@R+',UsGuide As CardGuide' 
 	Set @R=(CASE @SelectState 
 	When 1 Then @R 
 	Else 'Select '+@R+' From '+@T+' '+@AsSrc 
 	End) 
  	Return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun148]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun148](@T nvarchar(100),@K int)returns nvarchar(Max) 
 as begin 
 --@K-- 
 --1:Select None Used 
 --2:Delete 
 declare @R nvarchar(Max) 
 if(@K=2) 
 	Set @R='Delete a' 
 else 
 	Set @R='Select '+dbo.Fun147(@T,'a',1,120) 
 Set @R=@R+' From '+@T+' a' 
 declare @RTbl nvarchar(200) 
 declare @FCol nvarchar(200) 
 declare @RCol nvarchar(200) 
 declare @SrcIx int 
 declare @Cnd nvarchar(Max) 
 declare @Src nvarchar(200) 
 Select @SrcIx=0,@Cnd='' 
 DECLARE Rpp CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select RTable,RColumn,FColumn From dbo.Fun104(@T) Where FTable=@T 
 OPEN Rpp 
 FETCH NEXT FROM Rpp INTO @RTbl,@RCol,@FCol 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Set @SrcIx=@SrcIx+1 
 	Set @Src=Convert(varchar(100),@SrcIX) 
 	While(Len(@Src)<3) 
 		Set @Src='0'+@Src 
 	Set @Src='Src'+@Src 
 	Set @R=@R+char(13)+' Left Join '+@RTbl+' '+@Src+' On a.'+@FCol+'='+@Src+'.'+@RCol 
 	if(Len(@Cnd)>2)Set @Cnd=@Cnd+' And ' 
 	Set @Cnd=@Cnd+char(13)+@Src+'.ID Is Null' 
 	FETCH NEXT FROM Rpp INTO @RTbl,@RCol,@FCol 
 END 
 CLOSE Rpp 
 Deallocate Rpp 
 Set @R=@R+' Where '+@Cnd 
 return @R 
 End 
GO
/****** Object:  UserDefinedFunction [dbo].[Fun149]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun149](@U uniqueidentifier,@G uniqueidentifier)returns bit 
 as begin 
 	declare @R bit 
 	if((Select Count(*) From TBL048 Where GroupGuide=@G And CardGuide=@U)>0) 
 		Set @R=1 
 	else 
 		Set @R=0 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun150]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun150](@G uniqueidentifier,@WithMain bit)returns @Tb table(CardGuide uniqueidentifier) 
 as begin 
 	declare @R table(ID uniqueidentifier) 
 	Insert Into @R(ID)Values(@G) 
 	declare @M uniqueidentifier 
 	Set @M=(Select MainGuide From TBL078 Where CardGuide=@G) 
 	declare @T uniqueidentifier 
 	DECLARE CFun150 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select CardGuide From TBL078 Where MainGuide=@G 
   	OPEN CFun150 
   	FETCH NEXT FROM CFun150 INTO @T 
   	WHILE (@@FETCH_STATUS = 0) 
   	BEGIN 
   		Insert Into @R(ID)Select CardGuide From dbo.Fun150(@T,0) 
   		FETCH NEXT FROM CFun150 INTO @T 
   	END 
     CLOSE CFun150 
     Deallocate CFun150 
     if(@WithMain>0 And @M Is Not Null) 
 		Insert Into @R(ID)Select CardGuide From dbo.Fun150(@M,1) 
 	Insert Into @Tb(CardGuide)Select ID From @R Group By ID 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun151]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun151](@Unt uniqueidentifier)returns @Tb table(Unit int,Quantity float) 
 as begin 
 	Insert Into @Tb(Unit,Quantity) 
 	Select MainUnit,Quantity From TBL128 Where CardGuide=@Unt 
 	return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun153]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun153](@B uniqueidentifier)returns int 
 as begin 
 	Declare @R int 
 	Set @R=(Select Max(Cnt) From 
 	(Select Count(*) As Cnt From TBL028 Where MainGuide=@B Group By Unit,ExpiryDate,EstablishDate,IsInPut,StoreID,CostCenter,Category01,Category02,Category03,Category04,Category05)a 
 	) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun154]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun154](@G uniqueidentifier,@T int)returns nvarchar(255) 
 as begin 
 	declare @Bn uniqueidentifier 
 	declare @Bl uniqueidentifier 
 	declare @N varchar(100) 
 	declare @C uniqueidentifier 
 	declare @Nm nvarchar(255) 
 	declare @Ln nvarchar(255) 
 	Select @Bn=BondGuide,@Bl=BillGuide From TBL011 Where CardGuide=@G 
 	declare @Rt nvarchar(255) 
 	if(@Bn Is Not Null) 
 	begin 
 		Select @C=MainGuide,@N=Convert(varchar(100),BondNumber) From TBL010 Where CardGuide=@Bn 
 		Select @Nm=EntryName,@Ln=EntryLatinName From TBL009 Where CardGuide=@C 
 	end 
 	if(@Bl Is Not Null) 
 	begin 
 		Select @C=MainGuide,@N=Convert(varchar(100),BillNumber) From TBL022 Where CardGuide=@Bl 
 		Select @Nm=InvoiceName,@Ln=LatinName From TBL020 Where CardGuide=@C 
 	end 
 	if(@C Is not Null) 
 	begin 
 		if(@T>0) 
 			Set @Rt=(Case When Len(IsNull(@Ln,''))>0 Then @Ln Else @Nm End) 
 		else 
 			Set @Rt=(Case When Len(IsNull(@Nm,''))>0 Then @Nm Else @Ln End) 
 		Set @Rt=@Rt+':'+@N 
 	end 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun155]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun155](@T1 nvarchar(255),@T2 nvarchar(255))returns bit 
 as begin 
 	if(@T1=@T2) 
 		return 1 
 	return 0 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun156]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun156](@FD datetime,@G uniqueidentifier,@Cnt int)returns datetime 
 as begin 
 	declare @Rt datetime 
 	declare @Tp int 
 	declare @Pr int 
 	Select @Tp=MainID,@Pr=MCount From TBL037 Where CardGuide=@G 
 	if(@Tp=3) 
 		Set @Rt=DATEADD(YEAR,@Pr*@Cnt,@FD) 
 	else if(@Tp=2) 
 		Set @Rt=DATEADD(Month,@Pr*@Cnt,@FD) 
 	else 
 		Set @Rt=DATEADD(DAY,@Pr*@Cnt,@FD) 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun157]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun157](@Ag uniqueidentifier,@FD int,@TD int,@WInstlmnts bit)returns @Tb table 
 (ID int Identity(1,1),NotActive bit,ShiftName nvarchar(255),ShiftLatinName nvarchar(255),ShiftID Uniqueidentifier,ShiftType int,EarlyEntrance DateTime,EarlyEntranceValue float, 
 LateLeave DateTime,LateLeaveValue float,LateEntrance DateTime,LateEntranceValue float, 
 EarlyLeave DateTime,EarlyLeaveValue float,TimeAbsentee DateTime,TimeAbsenteeValue float, 
 WithLogIn int,WithLogOut int,IsExists int,WorkingPeriod datetime,MainPeriod datetime,WorkingPeriodValue float,AbsenteeDays int,AttTp00 int, 
 AttTp01 int,AttTp02 int,AttTp03 int, 
 AttTp12 int,AttTp13 int,AttTp20 int,AttTpA int, 
 DaysCount int,FixedSalary float,Installments float,NetSalary float,NetSalaryWithoutInstallments float,AccountID uniqueidentifier,AttTp15 int, 
 DEarlyEntrance datetime,DEarlyEntranceValue float, DEarlyEntrance2 datetime,DEarlyEntranceValue2 float, DEarlyEntrance3 datetime,DEarlyEntranceValue3 float, 
 DLateEntrance datetime,DLateEntranceValue float,DLateEntrance2 datetime,DLateEntranceValue2 float,DLateEntrance3 datetime,DLateEntranceValue3 float, 
 DEarlyLeave datetime,DEarlyLeaveValue float,DEarlyLeave2 datetime,DEarlyLeaveValue2 float,DEarlyLeave3 datetime,DEarlyLeaveValue3 float, 
 DLateLeave datetime,DLateLeaveValue float,DLateLeave2 datetime,DLateLeaveValue2 float,DLateLeave3 datetime,DLateLeaveValue3 float, 
 DAbsentee datetime,DAbsenteeValue float,DAbsentee2 datetime,DAbsenteeValue2 float,DAbsentee3 datetime,DAbsenteeValue3 float, 
 DEarlyEntranceTotalValue float,DLateEntranceTotalValue float,DEarlyLeaveTotalValue float,DLateLeaveTotalValue float,DAbsenteeTotalValue float,Currency nvarchar(250),CurrencyGuide uniqueidentifier) 
 as begin 
 	Insert into @Tb(NotActive,ShiftName,ShiftLatinName,ShiftID,ShiftType,EarlyEntrance,EarlyEntranceValue,LateLeave,LateLeaveValue,LateEntrance,LateEntranceValue, 
 EarlyLeave,EarlyLeaveValue,TimeAbsentee,TimeAbsenteeValue,WithLogIn,WithLogOut,IsExists,WorkingPeriod,MainPeriod,WorkingPeriodValue,AbsenteeDays,AttTp00, 
 AttTp01,AttTp02,AttTp03,AttTp12,AttTp13,AttTp20,AttTpA,DaysCount,FixedSalary,Installments,NetSalary,NetSalaryWithoutInstallments,AccountID,AttTp15,DEarlyEntrance,DEarlyEntranceValue, 
 DEarlyEntrance2,DEarlyEntranceValue2, DEarlyEntrance3,DEarlyEntranceValue3,DLateEntrance,DLateEntranceValue,DLateEntrance2,DLateEntranceValue2,DLateEntrance3, 
 DLateEntranceValue3,DEarlyLeave,DEarlyLeaveValue,DEarlyLeave2,DEarlyLeaveValue2,DEarlyLeave3,DEarlyLeaveValue3,DLateLeave,DLateLeaveValue,DLateLeave2, 
 DLateLeaveValue2,DLateLeave3,DLateLeaveValue3,DAbsentee,DAbsenteeValue,DAbsentee2,DAbsenteeValue2,DAbsentee3,DAbsenteeValue3,DEarlyEntranceTotalValue, 
 DLateEntranceTotalValue,DEarlyLeaveTotalValue,DLateLeaveTotalValue,DAbsenteeTotalValue,Currency,CurrencyGuide) 
 Select NotActive,ShiftName,ShiftLatinName,ShiftID,ShiftType,EarlyEntrance,EarlyEntranceValue,LateLeave,LateLeaveValue,LateEntrance,LateEntranceValue, 
 EarlyLeave,EarlyLeaveValue,TimeAbsentee,TimeAbsenteeValue,WithLogIn,WithLogOut,IsExists,WorkingPeriod,MainPeriod,WorkingPeriodValue,AbsenteeDays,AttTp00, 
 AttTp01,AttTp02,AttTp03,AttTp12,AttTp13,AttTp20,AttTpA,DaysCount,FixedSalary,Installments,NetSalary,NetSalaryWithoutInstallments,AccountID,AttTp15,DEarlyEntrance,DEarlyEntranceValue, 
 DEarlyEntrance2,DEarlyEntranceValue2, DEarlyEntrance3,DEarlyEntranceValue3,DLateEntrance,DLateEntranceValue,DLateEntrance2,DLateEntranceValue2,DLateEntrance3, 
 DLateEntranceValue3,DEarlyLeave,DEarlyLeaveValue,DEarlyLeave2,DEarlyLeaveValue2,DEarlyLeave3,DEarlyLeaveValue3,DLateLeave,DLateLeaveValue,DLateLeave2, 
 DLateLeaveValue2,DLateLeave3,DLateLeaveValue3,DAbsentee,DAbsenteeValue,DAbsentee2,DAbsenteeValue2,DAbsentee3,DAbsenteeValue3,DEarlyEntranceTotalValue, 
 DLateEntranceTotalValue,DEarlyLeaveTotalValue,DLateLeaveTotalValue,DAbsenteeTotalValue,Currency,CurrencyGuide From dbo.Fun136(@Ag,@FD,@TD,@WInstlmnts) 
 if((Select COUNT(*) From @Tb)<=1)return 
 	declare @Ix int 
 	Set @Ix=(Select Max(ID)From @Tb) 
 	Insert Into @Tb(NotActive,EarlyEntrance,EarlyEntranceValue,LateLeave,LateLeaveValue,LateEntrance, 
 LateEntranceValue,EarlyLeave,EarlyLeaveValue,TimeAbsentee,TimeAbsenteeValue, 
 WithLogIn,WithLogOut,IsExists,WorkingPeriod,MainPeriod, 
 WorkingPeriodValue,AbsenteeDays,AttTp00,AttTp01,AttTp02, 
 AttTp03,AttTp12,AttTp13,AttTp20,AttTpA, 
 DaysCount,FixedSalary,Installments,NetSalary,NetSalaryWithoutInstallments, 
 AccountID,AttTp15,DEarlyEntrance,DEarlyEntranceValue,DEarlyEntrance2, 
 DEarlyEntranceValue2, DEarlyEntrance3,DEarlyEntranceValue3,DLateEntrance,DLateEntranceValue, 
 DLateEntrance2,DLateEntranceValue2,DLateEntrance3,DLateEntranceValue3,DEarlyLeave, 
 DEarlyLeaveValue,DEarlyLeave2,DEarlyLeaveValue2,DEarlyLeave3,DEarlyLeaveValue3, 
 DLateLeave,DLateLeaveValue,DLateLeave2,DLateLeaveValue2,DLateLeave3, 
 DLateLeaveValue3,DAbsentee,DAbsenteeValue,DAbsentee2,DAbsenteeValue2, 
 DAbsentee3,DAbsenteeValue3,DEarlyEntranceTotalValue,DLateEntranceTotalValue, 
 DEarlyLeaveTotalValue,DLateLeaveTotalValue,DAbsenteeTotalValue 
 ) 
 	Select NotActive,Sum(Convert(float,EarlyEntrance)),Sum(EarlyEntranceValue),Sum(Convert(float,LateLeave)),Sum(LateLeaveValue),Sum(Convert(float,LateEntrance)), 
 Sum(LateEntranceValue),Sum(Convert(float,EarlyLeave)),Sum(EarlyLeaveValue),Sum(Convert(float,TimeAbsentee)),Sum(TimeAbsenteeValue), 
 Sum(WithLogIn),Sum(WithLogOut),Sum(IsExists),Sum(Convert(float,WorkingPeriod)),Sum(Convert(float,MainPeriod)), 
 Sum(WorkingPeriodValue),Sum(AbsenteeDays),Sum(AttTp00),Sum(AttTp01),Sum(AttTp02), 
 Sum(AttTp03),Sum(AttTp12),Sum(AttTp13),Sum(AttTp20),Sum(AttTpA), 
 Sum(DaysCount),Max(FixedSalary),Sum(Installments),Max(NetSalary),Max(NetSalaryWithoutInstallments), 
 AccountID,Sum(AttTp15),Sum(Convert(float,DEarlyEntrance)),Sum(DEarlyEntranceValue),Sum(Convert(float,DEarlyEntrance2)), 
 Sum(DEarlyEntranceValue2),Sum(Convert(float,DEarlyEntrance3)),Sum(DEarlyEntranceValue3),Sum(Convert(float,DLateEntrance)),Sum(DLateEntranceValue), 
 Sum(Convert(float,DLateEntrance2)),Sum(DLateEntranceValue2),Sum(Convert(float,DLateEntrance3)),Sum(DLateEntranceValue3),Sum(Convert(float,DEarlyLeave)), 
 Sum(DEarlyLeaveValue),Sum(Convert(float,DEarlyLeave2)),Sum(DEarlyLeaveValue2),Sum(Convert(float,DEarlyLeave3)),Sum(DEarlyLeaveValue3), 
 Sum(Convert(float,DLateLeave)),Sum(DLateLeaveValue),Sum(Convert(float,DLateLeave2)),Sum(DLateLeaveValue2),Sum(Convert(float,DLateLeave3)), 
 Sum(DLateLeaveValue3),Sum(Convert(float,DAbsentee)),Sum(DAbsenteeValue),Sum(Convert(float,DAbsentee2)),Sum(DAbsenteeValue2), 
 Sum(Convert(float,DAbsentee3)),Sum(DAbsenteeValue3),Sum(DEarlyEntranceTotalValue),Sum(DLateEntranceTotalValue), 
 Sum(DEarlyLeaveTotalValue),Sum(DLateLeaveTotalValue),Sum(DAbsenteeTotalValue) 
 From @Tb Group By NotActive,AccountID 
 Delete From @Tb Where ID<=@Ix 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun158]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun158](@BID uniqueidentifier,@Cr uniqueidentifier,@Rate float)returns float 
 as begin
 	declare @P float
 	declare @PR float
 	declare @N float
 	declare @BSide int
 	Set @BSide=(Select InvoiceMovementSide From TBL020 Where CardGuide=(Select MainGuide From TBL022 Where CardGuide=@BID))
 	Set @P=(Select Sum((CASE When @BSide>0 Then DebitRate-b.CreditRate Else b.CreditRate-b.DebitRate End)) From TBL010 a
 	Inner Join TBL038 b On a.CardGuide=b.MainGuide
 	Where IsNull(b.SourceBill,a.BillGuide2)=@BID And IsNull(b.CurrencyGuide,a.CurrencyGuide)=@Cr)
 	Set @PR=(Select Sum((CASE When @BSide>0 Then b.Debit-b.Credit Else b.Credit-b.Debit End))/@Rate From TBL010 a
 	Inner Join TBL038 b On a.CardGuide=b.MainGuide
 	Where IsNull(b.SourceBill,a.BillGuide2)=@BID And IsNull(b.CurrencyGuide,a.CurrencyGuide)<>@Cr)
 	Set @N=IsNull(@P,0)+IsNull(@PR,0)
 	return @N
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun159]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun159]()returns uniqueidentifier 
 as begin 
 	declare @U uniqueidentifier 
 	Set @U=dbo.Fun081(@@SPID) 
 	declare @G uniqueidentifier 
 	Set @G=(Select Top 1 GroupGuide From TBL048 Where CardGuide=@U) 
 	return @G 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun160]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun160]()returns @Tb table(ID int,ProductGuide uniqueidentifier,UnitName nvarchar(255),Factor float) 
 as begin 
 Insert Into @Tb(ID,ProductGuide,UnitName,Factor) 
 Select 1,CardGuide,IsNull(Unit,'Unit 1'),1 From TBL007 
 Insert Into @Tb(ID,ProductGuide,UnitName,Factor) 
 Select 2,CardGuide,IsNull(Unit,'Unit 2'),Factor2 From TBL007 
 Where Factor2>0 
 Insert Into @Tb(ID,ProductGuide,UnitName,Factor) 
 Select 3,CardGuide,IsNull(Unit,'Unit 3'),Factor3 From TBL007 
 Where Factor3>0 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun161]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun161](@TaxAc uniqueidentifier,@Cr uniqueidentifier,@Rte float,@RByDate bit,@LoadEntries bit,@CostCenter uniqueidentifier,@Project uniqueidentifier,@Branch uniqueidentifier,@Taxable bit,@NotTaxable bit) 
 returns @Tb table(CardGuide uniqueidentifier,TaxMethod uniqueidentifier,TypeGuide uniqueidentifier,AgentGuide uniqueidentifier,AccountGuide uniqueidentifier,Posted tinyint,CardDate datetime,CardNumber int,TypeName nvarchar(250),TypeLatinName nvarchar(250),TotalWithTax float,
 Tax float,NetTotal float,TypeID int,BillKindID int,Notes nvarchar(Max),BillNotes2 nvarchar(Max),BillNotes3 nvarchar(Max),BillNotes4 nvarchar(Max),BillNotes5 nvarchar(Max),BondDetailsNotes2 nvarchar(Max),BondDetailsNotes3 nvarchar(Max),BondDetailsNotes4 nvarchar(Max),BondDetailsNotes5 nvarchar(Max),
 CostID uniqueidentifier,ProjectID uniqueidentifier,BranchID uniqueidentifier,Security int)
 as begin
 --TypeID : 0-Bill , 1-Bond , 2-Entry , 3-Truncated Value
 --Bill Taxs
 declare @DbTax table(MaxID int,MainGuide uniqueidentifier,Tax float)
 Insert Into @DbTax (MaxID ,MainGuide ,Tax )
 Select Max(a.ID),a.MainGuide,Sum(a.Tax/a.Rate) From
 (Select (case when a.CurrencyGuide=@Cr Then a.TRate Else (case @RByDate When 1 Then dbo.Fun006(@Cr,Null,a.BillDate) Else @Rte end) End)As Rate,* From
 (Select ((a.DiscountToSave+a.ExtraToSave)/(a.Discount+a.Extra))As DRate,a.ID,b.Rate As TRate,b.BillDate,a.CurrencyGuide,a.MainGuide,a.Extra-a.Discount As TaxRate,a.ExtraToSave-a.DiscountToSave As Tax From TBL024 a
 Inner Join TBL022 b On a.MainGuide=b.CardGuide Where a.AccountID=@TaxAc)a)a
 Group By a.MainGuide
 --Bill Discounts
 declare @DbDiscounts table(MainGuide uniqueidentifier,BillDiscounts float)
 Insert Into @DbDiscounts(MainGuide,BillDiscounts)
 Select a.MainGuide,Sum(a.Discount/a.Rate) As Discounts From
 (Select a.MainGuide,
 (case when a.CurrencyGuide=@Cr Then ((a.DiscountToSave+a.ExtraToSave)/(a.Discount+a.Extra)) Else (case @RByDate When 1 Then dbo.Fun006(@Cr,Null,b.BillDate) Else @Rte end) End)As Rate,
 b.BillDate,a.Discount-a.Extra As DiscountRate,a.DiscountToSave-a.ExtraToSave As Discount From TBL024 a
 Left Join @DbTax c On a.MainGuide=c.MainGuide
 Inner join TBL022 b On a.MainGuide=b.CardGuide
 Where a.ID<c.MaxID Or c.MaxID Is Null)a
 Group By a.MainGuide
 --Bill Totals
 declare @DbTotals table(MainGuide uniqueidentifier,Total float,ItemsTax float)
 Insert Into @DbTotals(MainGuide,Total,ItemsTax)
 Select a.MainGuide,Sum(a.Total/a.Rate),Sum(a.ItemTax/a.Rate) From
 (Select a.MainGuide, b.CurrencyGuide,
 (case when b.CurrencyGuide=@Cr Then b.Rate Else (case @RByDate When 1 Then dbo.Fun006(@Cr,Null,b.BillDate) Else @Rte end) End)As Rate,
 (a.TotalValue-a.DiscountValue+a.ExtraValue+(case c.TotalIncludeTax When 1 Then 0 Else a.TaxValue End))*b.Rate As Total,
 a.TaxValue*b.Rate As ItemTax
 From TBL023 a Inner Join TBL022 b On a.MainGuide=b.CardGuide
 Inner Join TBL020 c On b.MainGuide=c.CardGuide
 Inner Join TBL007 d On a.ProductGuide=d.CardGuide
 Where 
 ((d.NotTaxable=1 And @NotTaxable=1)Or(d.NotTaxable=0 And @Taxable=1))
 )a
 Group By a.MainGuide
 Insert Into @Tb(TypeID,CardGuide,TaxMethod,AgentGuide,BillKindID,TotalWithTax,Tax,NetTotal,TypeGuide,Posted,CardDate,CardNumber,TypeName,TypeLatinName,Notes,BillNotes2,BillNotes3,BillNotes4,BillNotes5,CostID,ProjectID,BranchID,Security)
 Select 0,a.CardGuide,a.TaxMethod,a.AgentGuide,b.BillKind,(a.Total-a.Discount+(case b.TotalIncludeTax when 0 then a.Tax else 0 end))*b.InvoiceMovementSide As TotalWithTax,(a.Tax+a.ItemsTax)*b.InvoiceMovementSide As Tax,((a.Total-a.Discount)-((case b.TotalIncludeTax when 1 then a.Tax else 0 end)+a.ItemsTax))*b.InvoiceMovementSide As NoTaxTotal,
 a.MainGuide,a.Posted,a.BillDate,a.BillNumber,b.InvoiceName,b.LatinName,(case when len(a.Notes)>0 then a.Notes else null end),(case when len(a.BillNotes2)>0 then a.BillNotes2 else null end),(case when len(a.BillNotes3)>0 then a.BillNotes3 else null end),(case when len(a.BillNotes4)>0 then a.BillNotes4 else null end),(case when len(a.BillNotes5)>0 then a.BillNotes5 else null end) ,
 a.CostID,a.ProjectID,a.BranchID,a.Security
 From
 (Select a.CardGuide,a.AgentGuide,a.TaxMethod,a.Rate As BillRate,Isnull(b.Total,0) As Total,(case when a.TaxValue>0 Then a.TaxValue Else IsNull(d.Tax,0) End)As Tax,IsNull(c.BillDiscounts,0)As Discount,IsNull(b.ItemsTax,0) As ItemsTax,
 a.MainGuide,a.Posted,a.BillDate,a.BillNumber,a.Notes,a.BillNotes2,a.BillNotes3,a.BillNotes4,a.BillNotes5 ,
 a.CostCenter As CostID,a.Branch As BranchID,a.Project As ProjectID,a.Security
 From TBL022 a
 Left Join @DbTotals b On a.CardGuide=b.MainGuide
 Left Join @DbDiscounts c On a.CardGuide=c.MainGuide
 Left Join @DbTax d On a.CardGuide=d.MainGuide)a
 Left Join TBL020 b On a.MainGuide=b.CardGuide
 if(@LoadEntries=0)
 	return
 --declare @DbEn table()
 declare @EnG uniqueidentifier
 declare @EnTp nvarchar(250)
 declare @EnLtn nvarchar(250)
 Select @EnG=CardGuide,@EnTp=EntryName,@EnLtn=EntryLatinName From TBL009 Where CardGuide='00000000-0000-0000-0000-000000000000'
 --Entries
 Insert Into @Tb(TypeID,CardGuide,TotalWithTax,Tax,NetTotal,TypeGuide,Posted,CardDate,CardNumber,TypeName,TypeLatinName,CostID,ProjectID,BranchID,Security)
 Select 2,a.CardGuide,0,Sum(a.Value/a.Rate),0,@EnG,a.Posted,a.EntryDate,a.EntryNumber,@EnTp,@EnLtn,
 a.CostID,a.ProjectID,a.Branch,a.Security From
 (Select a.CardGuide,a.Posted,b.Debit-b.Credit As Value,b.DebitRate-b.CreditRate As ValueRate,
 (case when b.CurrencyGuide=@Cr Then (b.Debit+b.Credit)/(b.DebitRate+b.CreditRate) Else (case @RByDate When 1 Then dbo.Fun006(@Cr,Null,a.EntryDate) Else @Rte end) End)As Rate,
 IsNull(b.RowDate,a.EntryDate)As EntryDate,a.EntryNumber,IsNull(b.CostCenter,a.CostCenter)As CostID,IsNull(b.Project,a.Project)As ProjectID,IsNull(b.Branch,a.Branch)As Branch,a.Security
 From TBL011 a
 Inner Join TBL012 b On a.CardGuide=b.MainGuide
 Where a.BillGuide Is Null And a.BondGuide Is Null And b.AccountGuide=@TaxAc)a
 Group By a.CardGuide,a.EntryDate,a.EntryNumber,a.Posted,a.CostID,a.ProjectID,a.Branch,a.Security
 --Bonds
 Insert Into @Tb(TypeID,CardGuide,TotalWithTax,Tax,NetTotal,TypeGuide,Posted,CardDate,CardNumber,TypeName,TypeLatinName,Notes,BondDetailsNotes2,BondDetailsNotes3,BondDetailsNotes4,BondDetailsNotes5,CostID,ProjectID,BranchID,Security)
 Select 1,a.CardGuide,0,a.Value,0,a.MainGuide,a.Posted,a.BondDate,a.BondNumber,b.EntryName,b.EntryLatinName,
 a.Notes,a.BondDetailsNotes2,a.BondDetailsNotes3,a.BondDetailsNotes4,a.BondDetailsNotes5,a.CostID,a.Project,a.BranchID,a.Security From
 (Select a.CardGuide,a.MainGuide,Sum(a.Value/a.Rate)As Value,a.Posted,a.BondDate,a.BondNumber,
 a.Notes,a.BondDetailsNotes2,a.BondDetailsNotes3,a.BondDetailsNotes4,a.BondDetailsNotes5,a.CostID,a.Project,a.BranchID,a.Security From
 (Select a.CardGuide,a.MainGuide,a.Posted,b.Debit-b.Credit-b.TruncatedValue As Value,b.DebitRate-b.CreditRate-b.TruncatedValueRate As ValueRate,
 (case when b.CurrencyGuide=@Cr Then (b.Debit+b.Credit)/(b.DebitRate+b.CreditRate) Else (case @RByDate When 1 Then dbo.Fun006(@Cr,Null,a.BondDate) Else @Rte end) End)As Rate,
 IsNull(b.RowDate,a.BondDate) As BondDate,a.BondNumber,b.Notes,b.BondDetailsNotes2,b.BondDetailsNotes3,b.BondDetailsNotes4,b.BondDetailsNotes5,
 IsNull(b.CostCenter,a.CostCenter)As CostID,IsNull(b.Project,a.Project)As Project,IsNull(b.Branch,a.Branch) As BranchID,a.Security
 From TBL010 a
 Inner Join TBL038 b On a.CardGuide=b.MainGuide
 Where b.AccountGuide=@TaxAc)a
 Group By a.CardGuide,a.MainGuide,a.BondDate,a.BondNumber,a.Posted,
 a.Notes,a.BondDetailsNotes2,a.BondDetailsNotes3,a.BondDetailsNotes4,a.BondDetailsNotes5,a.CostID,a.Project,a.BranchID,a.Security)a
 Left Join TBL009 b On a.MainGuide=b.CardGuide
 --Bonds Truncated Value
 Insert Into @Tb(TypeID,CardGuide,TotalWithTax,Tax,NetTotal,TypeGuide,Posted,CardDate,CardNumber,TypeName,TypeLatinName,
 Notes,a.BondDetailsNotes2,a.BondDetailsNotes3,a.BondDetailsNotes4,a.BondDetailsNotes5,AccountGuide,CostID,ProjectID,BranchID,Security)
 Select 3,a.CardGuide,a.ValueWithTax*-1,a.Value,(a.ValueWithTax*-1)-a.Value,a.MainGuide,a.Posted,a.BondDate,a.BondNumber,a.EntryName,a.EntryLatinName,
 a.Notes,a.BondDetailsNotes2,a.BondDetailsNotes3,a.BondDetailsNotes4,a.BondDetailsNotes5,a.AccountGuide,a.CostID,a.ProjectID,a.BranchID,a.Security From
 (Select a.CardGuide,a.EntryName,a.EntryLatinName,a.MainGuide,Sum(a.Value/a.Rate)As Value,Sum(a.ValueWithTax/a.Rate)As ValueWithTax,a.Posted,a.BondDate,a.BondNumber,
 a.Notes,a.BondDetailsNotes2,a.BondDetailsNotes3,a.BondDetailsNotes4,a.BondDetailsNotes5,a.AccountGuide,a.CostID,a.ProjectID,a.BranchID,a.Security From
 (Select c.EntryName,c.EntryLatinName,a.CardGuide,a.MainGuide,a.Posted,b.Credit-b.Debit As ValueWithTax,(case when b.Credit>0 Then -1 Else 1 End) * b.TruncatedValue As Value,(case when b.Credit>0 Then -1 Else 1 End) * b.TruncatedValueRate As ValueRate,
 (case when b.CurrencyGuide=@Cr Then (b.Debit+b.Credit)/(b.DebitRate+b.CreditRate) Else (case @RByDate When 1 Then dbo.Fun006(@Cr,Null,a.BondDate) Else @Rte end) End)As Rate,
 IsNull(b.RowDate,a.BondDate) As BondDate,a.BondNumber,b.Notes,b.BondDetailsNotes2,b.BondDetailsNotes3,b.BondDetailsNotes4,b.BondDetailsNotes5,b.AccountGuide,
 IsNull(b.CostCenter,a.CostCenter)As CostID,IsNull(b.Project,a.Project)As ProjectID,IsNull(b.Branch,a.Branch)As BranchID,a.Security
 From TBL010 a
 Inner Join TBL038 b On a.CardGuide=b.MainGuide
 Inner Join TBL009 c On a.MainGuide=c.CardGuide
 Where IsNull(b.TruncatedValueAccount,c.TruncateAccount)=@TaxAc )a
 Group By a.EntryName,a.EntryLatinName,a.CardGuide,a.MainGuide,a.BondDate,a.BondNumber,a.Posted,
 a.Notes,a.BondDetailsNotes2,a.BondDetailsNotes3,a.BondDetailsNotes4,a.BondDetailsNotes5,a.AccountGuide,a.CostID,a.ProjectID,a.BranchID,a.Security)a
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun162]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun162](@Tp int,@MainC uniqueidentifier,@Plc int)returns nvarchar(250) 
 as begin
 declare @R nvarchar(250)
 if(@Tp=3)
 begin
 	Set @R=(Select MAX(BillNotes2) From TBL022 Where MainGuide=@MainC And LEN(BillNotes2)=
 	(Select MAX(LEN(BillNotes2)) From TBL022 Where MainGuide=@MainC))
 end
 else if(@Tp=5)
 begin
 	Set @R=(Select Max(CardCode)From TBL005 Where ((@MainC Is Null And MainCostCenter Is Null) Or (@MainC Is Not Null And MainCostCenter=@MainC))
 	And Len(CardCode)=(Select Max(len(CardCode))From TBL005 Where ((@MainC Is Null And MainCostCenter Is Null) Or (@MainC Is Not Null And MainCostCenter=@MainC))))
 end
 else if(@Tp=49)
 begin
 	Set @R=(Select Max(CardCode)From TBL049 Where ((@MainC Is Null And MainProject Is Null) Or (@MainC Is Not Null And MainProject=@MainC))
 	And Len(CardCode)=(Select Max(len(CardCode))From TBL049 Where ((@MainC Is Null And MainProject Is Null) Or (@MainC Is Not Null And MainProject=@MainC))))
 end
 else if(@Tp=50)
 begin
 	Set @R=(Select Max(CardCode)From TBL050 Where ((@MainC Is Null And MainBronch Is Null) Or (@MainC Is Not Null And MainBronch=@MainC))
 	And Len(CardCode)=(Select Max(len(CardCode))From TBL050 Where ((@MainC Is Null And MainBronch Is Null) Or (@MainC Is Not Null And MainBronch=@MainC))))
 end
 Set @R=ltrim(rtrim(@R))
 ---------------------------------------------
 declare @Mc nvarchar(250)
 if(@Tp=3)
 	Set @Mc=(Select TaxInvoiceNo From TBL020 Where CardGuide=@MainC)
 else if(@Tp=5)
 	Set @Mc=(Select CardCode From TBL005 Where CardGuide=@MainC)
 else if(@Tp=49)
 	Set @Mc=(Select CardCode From TBL049 Where CardGuide=@MainC)
 else if(@Tp=50)
 	Set @Mc=(Select CardCode From TBL050 Where CardGuide=@MainC)
 ---------------------------------------------
 if(Len(IsNull(@R,''))>0)
 begin
 	Set @R=dbo.Fun028(@R)
 	--Set @R=Convert(varchar(100),Convert(int, dbo.Number(@R)+1))
 	--while(len(@R)<@Plc)
 	--	Set @R='0'+@R
 	--Set @R=@Mc+@R
 end
 else if(@MainC Is Not Null)
 begin
 	if(@Tp=3)
 		Set @R=@Mc
 	else
 	begin
 		Set @R='1'
 		while(len(@R)<@Plc)
 			Set @R='0'+@R
 		Set @R=@Mc+@R
 	end
 end
 return @R
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun163]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun163](@G uniqueidentifier)returns float 
 as begin 
 declare @Cr uniqueidentifier 
 declare @Rate float 
 Select @Cr=CurrencyGuide,@Rate=Rate From TBL022 Where CardGuide=@G 
 declare @Rt float 
 Set @Rt= 
 (Select Sum(ValueRate) From Qry234 Where AffectCostPrice>0 And BillGuide2=@G And CurrencyGuide=@Cr) 
 Set @Rt=ISNULL(@Rt,0)+ 
 IsNull((Select Sum(Value)/@Rate From Qry234 Where AffectCostPrice>0 And BillGuide2=@G And CurrencyGuide<>@Cr),0) 
 return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun164]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun164](@G uniqueidentifier)returns @Tb table(RowGuide uniqueidentifier,ProductGuide uniqueidentifier,TotalValue float,ExValue float,ExNetTotal float,ExNetPrice float,Quantity float,Received float,RestQuantity float,Unit int) 
 as begin 
 declare @InvType uniqueidentifier 
 declare @InvSide int 
 declare @InvTotal float 
 declare @Ex float 
 declare @ExRate float 
 Set @InvType=(Select MainGuide From TBL022 Where CardGuide=@G) 
 Set @InvSide=(Select InvoiceMovementSide From TBL020 Where CardGuide=@InvType) 
 Set @Ex=dbo.Fun163(@G) 
 Set @InvTotal=(Select Sum(TotalValue+ExtraValue-DiscountValue) From TBL023 Where MainGuide=@G) 
 Set @ExRate=dbo.Ratio(@Ex,@InvTotal) 
 Insert Into @Tb (RowGuide ,ProductGuide ,TotalValue ,ExValue ,ExNetTotal ,ExNetPrice ,Quantity ,Received ,RestQuantity ,Unit ) 
 Select RowGuide ,ProductGuide ,TotalValue ,ExtraValue ,NetTotal ,dbo.Ratio(a.NetTotal,a.Quantity)As NetPrice ,Quantity ,Received ,RestQuantity ,Unit From 
 (Select a.RowGuide,a.ProductGuide,a.TotalValue,a.ExtraValue,a.NetTotal,a.Quantity As Quantity,a.Received/a.Factor As Received, 
 a.RestQuantity As RestQuantity,a.Unit From ( 
 Select a.RowGuide,a.ProductGuide,a.TotalValue,a.TotalValue*@ExRate As ExtraValue,(a.TotalValue+(a.TotalValue*@ExRate))As NetTotal, 
 a.Quantity,b.Received,(a.Quantity-(b.Received/a.Factor)) As RestQuantity,a.Unit,a.Factor From 
 ( 
 Select a.RowGuide,a.ProductGuide,(CASE a.Unit When 3 Then d.Factor3 When 2 Then d.Factor2 Else 1 End) As Factor,a.Quantity+a.Quantity2 As Quantity,(CASE When c.InvoiceMovementSide=@InvSide Then 1 Else -1 End)As InvSide, 
 (a.TotalValue+ExtraValue-DiscountValue) As TotalValue,a.Unit From TBL023 a 
 Inner Join TBL022 b On a.MainGuide=b.CardGuide 
 Inner Join TBL020 c On b.MainGuide=c.CardGuide 
 Inner Join TBL007 d On a.ProductGuide=d.CardGuide 
 Where a.MainGuide=@G 
 ) 
 a Left Join 
 ( 
 Select a.ProductGuide,Sum(a.Factor*a.Quantity) As Received From 
 ( 
 Select a.ProductGuide,(CASE a.Unit When 3 Then d.Factor3 When 2 Then d.Factor2 Else 1 End) As Factor,a.Quantity+a.Quantity2 As Quantity,(CASE When c.InvoiceMovementSide=@InvSide Then 1 Else -1 End)As InvSide From TBL023 a 
 Inner Join TBL022 b On a.MainGuide=b.CardGuide 
 Inner Join TBL020 c On b.MainGuide=c.CardGuide 
 Inner Join TBL007 d On a.ProductGuide=d.CardGuide 
 Where a.SourceBill=@G 
 )a 
 Group By a.ProductGuide 
 )b 
 On a.ProductGuide=b.ProductGuide 
 )a 
 )a 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun165]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun165](@CalcType int,@G uniqueidentifier,@Ratio float)returns float 
 as begin 
 --CalcType : 1=Tax Total,2=Values Total 
 Set @Ratio=@Ratio/100 
 declare @Rt float 
 Set @Rt=(Select Round(Sum(a.Value),4) From  
 (Select (CASE @CalcType When 1 Then a.TaxValue When 2 Then (a.TotalValue+a.ExtraValue-a.DiscountValue) End) As Value,Round((CASE c.TotalIncludeTax When 1 Then dbo.Ratio(a.TaxValue,(a.TotalValue+a.ExtraValue-a.DiscountValue)-a.TaxValue) 
 Else dbo.Ratio(a.TaxValue,(a.TotalValue+a.ExtraValue-a.DiscountValue)) End),4)As TaxRatio From TBL023 a 
 Inner Join TBl022 b On a.MainGuide=b.CardGuide 
 Inner join TBL020 c On b.MainGuide=c.CardGuide 
 Where a.MainGuide=@G)a 
 Where a.TaxRatio=@Ratio) 
 return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun166]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun166](@Mth uniqueidentifier,@ForQty float)returns @Tb table (ProductGuide uniqueidentifier,Quantity float,Unit int,RelatedMethod uniqueidentifier,GroupGuide uniqueidentifier) 
 as begin 
 declare @Ratio float 
 Set @Ratio=dbo.Ratio(@ForQty,(Select Sum((CASE a.Unit When 3 Then b.Factor3 When 2 Then b.Factor2 Else 1 End)*a.Quantity) From TBL079 a Inner Join TBL007 b On a.ProductGuide=b.CardGuide 
 Where a.MainGuide=@Mth And IsInPut=1)) 
 if(@Ratio=0)return 
 declare @Im uniqueidentifier 
 declare @Gr uniqueidentifier 
 declare @Qty float 
 declare @RMth uniqueidentifier 
 declare @TmpQty float 
 DECLARE CFun166 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select a.ProductGuide,b.GroupGuid,(CASE a.Unit When 3 Then b.Factor3 When 2 Then b.Factor2 Else 1 End)*a.Quantity As Quantity,a.RelatedMethod From TBL079 a 
 	Inner Join TBL007 b On a.ProductGuide=b.CardGuide 
 	Where a.MainGuide=@Mth And a.IsInPut=0 Order By a.ID 
 	OPEN CFun166 
 FETCH NEXT FROM CFun166 INTO @Im,@Gr,@Qty,@RMth 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	if(@RMth Is Not Null) 
 	begin 
 		Set @TmpQty=@Qty*@Ratio 
 		Insert Into @Tb(ProductGuide,Quantity,Unit,RelatedMethod,GroupGuide)Select ProductGuide,Quantity,Unit,RelatedMethod,GroupGuide From dbo.Fun166(@RMth,@TmpQty) 
 	end 
 	else 
 		Insert Into @Tb(ProductGuide,Quantity,Unit,RelatedMethod,GroupGuide)Values(@Im,@Qty*@Ratio,1,@Mth,@Gr) 
 	FETCH NEXT FROM CFun166 INTO @Im,@Gr,@Qty,@RMth 
 END 
 CLOSE CFun166 
 Deallocate CFun166 
 return 
 end 
GO
/****** Object:  UserDefinedFunction [dbo].[Fun167]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun167](@I1 int)returns @Tb table (ProductGuide uniqueidentifier,Quantity float,Unit int,RelatedMethod uniqueidentifier,GroupGuide uniqueidentifier) 
 as begin 
 declare @Im uniqueidentifier 
 declare @Gr uniqueidentifier 
 declare @Qty float 
 declare @RMth uniqueidentifier 
 DECLARE CFun167 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select a.CardID,b.GroupGuid,(CASE a.Int01 When 3 Then b.Factor3 When 2 Then b.Factor2 Else 1 End)*a.Number01 As Quantity,a.CardID2 
 	From TBL139 a Inner Join TBL007 b On a.CardID=b.CardGuide 
 	Where a.TypeID=@I1 Order By a.ID 
 OPEN CFun167 
 FETCH NEXT FROM CFun167 INTO @Im,@Gr,@Qty,@RMth 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	if(@RMth Is Not Null) 
 	begin 
 		Insert Into @Tb(ProductGuide,Quantity,Unit,RelatedMethod,GroupGuide)Select ProductGuide,Round(Quantity,4),Unit,RelatedMethod,GroupGuide From dbo.Fun166(@RMth,@Qty) 
 	end 
 	else 
 		Insert Into @Tb(ProductGuide,Quantity,Unit)Values(@Im,Round(@Qty,4),1) 
 	FETCH NEXT FROM CFun167 INTO @Im,@Gr,@Qty,@RMth 
 END 
 CLOSE CFun167 
 Deallocate CFun167 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun168]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun168](@G uniqueidentifier,@InG uniqueidentifier,@Lv int)returns bit 
 as begin 
 	if(@G=@InG) 
 		return 1 
 	declare @R bit 
 	declare @MG uniqueidentifier 
 	Select @MG=MainGuide,@R=0 From TBL006 Where CardGuide=@G 
 	if(@MG Is Null) 
 		return 0 
 	else if(@MG=@InG) 
 		return 1 
 	else if(@Lv>0) 
 	begin 
 		Set @Lv=@Lv-1 
 		Set @R=dbo.Fun168(@MG,@InG,@Lv) 
 	end 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun169]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun169](@Im uniqueidentifier,@InG uniqueidentifier)returns bit 
 as begin 
 	declare @Mg uniqueidentifier 
 	declare @R bit 
 	Set @MG=(Select GroupGuid From TBL007 Where CardGuide=@Im) 
 	Set @R=dbo.Fun168(@MG,@InG,10) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun170]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun170](@G uniqueidentifier,@Tp int)returns @Tb table(CardGuide uniqueidentifier,CardLevel int) 
 as begin 
 Insert Into @Tb(CardGuide,CardLevel)Values(@G,0) 
 declare @Lvl int 
 Set @Lvl=0 
 if(@Tp=4) 
 begin 
 	while(@Lvl<10 And (Select COUNT(*) From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL004 b On a.CardGuide=b.MainAccount)>0) 
 	begin 
 		Insert Into @Tb(CardGuide,CardLevel) 
 			Select b.CardGuide,@Lvl+1 From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL004 b On a.CardGuide=b.MainAccount 
 		Set @Lvl=@Lvl+1 
 	end 
 end 
 else if(@Tp=5) 
 begin 
 	while(@Lvl<10 And (Select COUNT(*) From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL005 b On a.CardGuide=b.MainCostCenter)>0) 
 	begin 
 		Insert Into @Tb(CardGuide,CardLevel) 
 			Select b.CardGuide,@Lvl+1 From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL005 b On a.CardGuide=b.MainCostCenter 
 		Set @Lvl=@Lvl+1 
 	end 
 end 
 else if(@Tp=6) 
 begin 
 	while(@Lvl<10 And (Select COUNT(*) From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL006 b On a.CardGuide=b.MainGuide)>0) 
 	begin 
 		Insert Into @Tb(CardGuide,CardLevel) 
 			Select b.CardGuide,@Lvl+1 From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL006 b On a.CardGuide=b.MainGuide 
 		Set @Lvl=@Lvl+1 
 	end 
 end 
 else if(@Tp=8) 
 begin 
 	while(@Lvl<10 And (Select COUNT(*) From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL008 b On a.CardGuide=b.MainWareHouse)>0) 
 	begin 
 		Insert Into @Tb(CardGuide,CardLevel) 
 			Select b.CardGuide,@Lvl+1 From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL008 b On a.CardGuide=b.MainWareHouse 
 		Set @Lvl=@Lvl+1 
 	end 
 end 
 else if(@Tp=49) 
 begin 
 	while(@Lvl<10 And (Select COUNT(*) From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL049 b On a.CardGuide=b.MainProject)>0) 
 	begin 
 		Insert Into @Tb(CardGuide,CardLevel) 
 			Select b.CardGuide,@Lvl+1 From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL049 b On a.CardGuide=b.MainProject 
 		Set @Lvl=@Lvl+1 
 	end 
 end 
 else if(@Tp=50) 
 begin 
 	while(@Lvl<10 And (Select COUNT(*) From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL050 b On a.CardGuide=b.MainBronch)>0) 
 	begin 
 		Insert Into @Tb(CardGuide,CardLevel) 
 			Select b.CardGuide,@Lvl+1 From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL050 b On a.CardGuide=b.MainBronch 
 		Set @Lvl=@Lvl+1 
 	end 
 end 
 else if(@Tp=15) 
 begin 
 	while(@Lvl<10 And (Select COUNT(*) From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL015 b On a.CardGuide=b.MainGuide)>0) 
 	begin 
 		Insert Into @Tb(CardGuide,CardLevel) 
 			Select b.CardGuide,@Lvl+1 From (Select CardGuide From @Tb Where CardLevel=@Lvl) a 
 	Inner Join TBL015 b On a.CardGuide=b.MainGuide 
 		Set @Lvl=@Lvl+1 
 	end 
 end 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun171]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun171](@Tp int,@G uniqueidentifier,@InG uniqueidentifier)returns bit 
 as begin 
 declare @Cnt int 
 if(@Tp=7) 
 begin 
 	Set @G=(Select GroupGuid From TBL007 Where CardGuide=@G) 
 	Set @Tp=6 
 end 
 Set @Cnt=(Select Count(*) From dbo.Fun170(@InG,@Tp) Where CardGuide=@G) 
 if(@Cnt>0) 
  	return 1 
 return 0 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun172]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun172](@Tp int,@Lvl int)returns int 
 as begin 
 declare @CuLv int 
 Set @CuLv=1 
 declare @Tb table(G uniqueidentifier,Lvl int,Cnt int) 
 if(@Tp=4) 
 begin 
 	Insert Into @Tb(G,Lvl,Cnt) 
 		Select a.CardGuide,1,Count(*) From TBL004 a Left Join TBL004 b On a.CardGuide=b.MainAccount Where a.MainAccount Is Null Group By a.CardGuide 
 	while(@CuLv<@Lvl) 
 	begin 
 		Insert Into @Tb(G,Lvl,Cnt) 
 			Select a.CardGuide,@CuLv+1,Count(*) From @Tb c Inner Join TBL004 a On a.MainAccount=c.G Left Join TBL004 b On a.CardGuide=b.MainAccount 
 			Where c.Lvl=@CuLv 
 			Group By a.CardGuide 
 		Set @CuLv=@CuLv+1 
 	end 
 end 
 else if(@Tp=5) 
 begin 
 	Insert Into @Tb(G,Lvl,Cnt) 
 		Select a.CardGuide,1,Count(*) From TBL005 a Left Join TBL005 b On a.CardGuide=b.MainCostCenter Where a.MainCostCenter Is Null Group By a.CardGuide 
 	while(@CuLv<@Lvl) 
 	begin 
 		Insert Into @Tb(G,Lvl,Cnt) 
 			Select a.CardGuide,@CuLv+1,Count(*) From @Tb c Inner Join TBL005 a On a.MainCostCenter=c.G Left Join TBL005 b On a.CardGuide=b.MainCostCenter 
 			Where c.Lvl=@CuLv 
 			Group By a.CardGuide 
 		Set @CuLv=@CuLv+1 
 	end 
 end 
 else if(@Tp=6) 
 begin 
 	Insert Into @Tb(G,Lvl,Cnt) 
 		Select a.CardGuide,1,Count(*) From TBL006 a Left Join TBL006 b On a.CardGuide=b.MainGuide Where a.MainGuide Is Null Group By a.CardGuide 
 	while(@CuLv<@Lvl) 
 	begin 
 		Insert Into @Tb(G,Lvl,Cnt) 
 			Select a.CardGuide,@CuLv+1,Count(*) From @Tb c Inner Join TBL006 a On a.MainGuide=c.G Left Join TBL006 b On a.CardGuide=b.MainGuide 
 			Where c.Lvl=@CuLv 
 			Group By a.CardGuide 
 		Set @CuLv=@CuLv+1 
 	end 
 end 
 else if(@Tp=7) 
 begin 
 declare @GTb table(G uniqueidentifier,Lvl int,Cnt int) 
 Insert Into @GTb(G,Lvl,Cnt) 
  	Select a.CardGuide,1,Count(*) From TBL006 a Left Join TBL006 b On a.CardGuide=b.MainGuide Where a.MainGuide Is Null Group By a.CardGuide 
 while(@CuLv<@Lvl) 
 begin 
  	Insert Into @GTb(G,Lvl,Cnt) 
  		Select a.CardGuide,@CuLv+1,Count(*) From @GTb c Inner Join TBL006 a On a.MainGuide=c.G Left Join TBL006 b On a.CardGuide=b.MainGuide 
  		Where c.Lvl=@CuLv 
  		Group By a.CardGuide 
  	Set @CuLv=@CuLv+1 
 end 
 Insert Into @tb(G,Lvl,Cnt) 
 	Select a.G,a.Lvl,Count(*) From @GTb a Inner Join TBL007 b On a.G=b.GroupGuid Group By a.G,a.Lvl 
 end 
 else if(@Tp=8) 
 begin 
 	Insert Into @Tb(G,Lvl,Cnt) 
 		Select a.CardGuide,1,Count(*) From TBL008 a Left Join TBL008 b On a.CardGuide=b.MainWarehouse Where a.MainWarehouse Is Null Group By a.CardGuide 
 	while(@CuLv<@Lvl) 
 	begin 
 		Insert Into @Tb(G,Lvl,Cnt) 
 			Select a.CardGuide,@CuLv+1,Count(*) From @Tb c Inner Join TBL008 a On a.MainWarehouse=c.G Left Join TBL008 b On a.CardGuide=b.MainWarehouse 
 			Where c.Lvl=@CuLv 
 			Group By a.CardGuide 
 		Set @CuLv=@CuLv+1 
 	end 
 end 
 else if(@Tp=49) 
 begin 
 	Insert Into @Tb(G,Lvl,Cnt) 
 		Select a.CardGuide,1,Count(*) From TBL049 a Left Join TBL049 b On a.CardGuide=b.MainProject Where a.MainProject Is Null Group By a.CardGuide 
 	while(@CuLv<@Lvl) 
 	begin 
 		Insert Into @Tb(G,Lvl,Cnt) 
 			Select a.CardGuide,@CuLv+1,Count(*) From @Tb c Inner Join TBL049 a On a.MainProject=c.G Left Join TBL049 b On a.CardGuide=b.MainProject 
 			Where c.Lvl=@CuLv 
 			Group By a.CardGuide 
 		Set @CuLv=@CuLv+1 
 	end 
 end 
 else if(@Tp=50) 
 begin 
 	Insert Into @Tb(G,Lvl,Cnt) 
 		Select a.CardGuide,1,Count(*) From TBL050 a Left Join TBL050 b On a.CardGuide=b.MainBronch Where a.MainBronch Is Null Group By a.CardGuide 
 	while(@CuLv<@Lvl) 
 	begin 
 		Insert Into @Tb(G,Lvl,Cnt) 
 			Select a.CardGuide,@CuLv+1,Count(*) From @Tb c Inner Join TBL050 a On a.MainBronch=c.G Left Join TBL050 b On a.CardGuide=b.MainBronch 
 			Where c.Lvl=@CuLv 
 			Group By a.CardGuide 
 		Set @CuLv=@CuLv+1 
 	end 
 end 
 delete from @Tb Where Lvl!=@Lvl 
 declare @R int 
 Set @R=(Select Max(Cnt)From @Tb) 
 return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun173]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun173](@Ac uniqueidentifier)returns float 
 as begin 
 declare @R float 
 Set @R=(select SUM(a.Debit-a.Credit) from TBL038 a inner join TBL010 b On a.MainGuide=b.CardGuide 
 Inner Join TBL009 c On b.MainGuide=c.CardGuide 
 Where c.BondType=3 And a.AccountGuide=@Ac 
 And a.CollectDate is null And a.EndorsementDate Is Null And a.ReturnDate Is Null) 
 return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun174]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun174](@Im uniqueidentifier,@TD datetime,@Cr uniqueidentifier,@iCo uniqueidentifier,@iPr uniqueidentifier, 
 @iBr uniqueidentifier,@iSt uniqueidentifier,@iC1 uniqueidentifier,@iC2 uniqueidentifier,@iC3 uniqueidentifier,@iC4 uniqueidentifier,@iC5 uniqueidentifier)returns @Tb table(PriceRate float,Currency uniqueidentifier,Rate float,Factor2 float,Factor3 float,BillDate datetime)
 as begin
 Insert Into @Tb(PriceRate ,Currency ,Rate ,Factor2 ,Factor3 ,BillDate)
 Select Top 1
 (a.ItemTotalValueRate+a.ItemExtraValueRate-(a.ItemDiscountValueRate+a.ItemDiscount2))/Quantity,a.CurrencyGuide,a.Rate,a.Factor2 ,a.Factor3 ,a.BillDate
 From Qry101 a
 Where a.Posted=1 And a.AffectLastPurchasePrice=1 And ProductGuide=@Im
 And(@iCo Is Null Or CostCenter=@iCo)
 And(@iPr Is Null Or Project=@iPr)
 And(@iBr Is Null Or Branch=@iBr)
 And(@iSt Is Null Or StoreGuide=@iSt)
 And(@iC1 Is Null Or Category01=@iC1)
 And(@iC2 Is Null Or Category02=@iC2)
 And(@iC3 Is Null Or Category03=@iC3)
 And(@iC4 Is Null Or Category04=@iC4)
 And(@iC5 Is Null Or Category05=@iC5)
 And(@TD<5 Or a.BillDate<=@TD)
 Order By BillDate desc,ItemSortID desc
 if(@Cr Is Not Null)
 begin
 	declare @Rt float
 	declare @NCr uniqueidentifier
 	declare @NRte float
 	declare @Dte datetime
 	Select Top 1 @NCr=Currency,@NRte=Rate,@Rt=PriceRate,@Dte=BillDate From @Tb
 	if(@NCr Is Not Null And @NCr!=@Cr And @Rt>0)
 	begin
 		declare @Re float
 		Set @Re=dbo.Fun006(@Cr,null,@Dte)
 		--Set @Re=dbo.Fun006(@Cr,null,@TD)
 		--Set @NRte=dbo.Fun006(@NCr,null,@TD)
 		Set @Rt=(@Rt*@NRte)/@Re
 		Update @Tb Set[PriceRate]=@Rt,[Currency]=@Cr,[Rate]=@NRte
 	end
 end
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun175]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun175](@LIn datetime,@LOut datetime)returns uniqueidentifier 
 as begin 
 	declare @R uniqueidentifier 
 	Select @LIn=dbo.GetTime(@LIn),@LOut=dbo.GetTime(@LOut) 
 	if(@LIn is not null) 
 	begin 
 		Set @R=(Select Top 1 CardGuide From TBL014 Where CardType=1 And dbo.GetTime(Date01) Between DateAdd(Hour,-2,@LIn) And DateAdd(Hour,2,@LIn)) 
 	end 
 	if(@R Is Null And @LOut Is Not Null) 
 	begin 
 		Set @R=(Select Top 1 CardGuide From TBL014 Where CardType=1 And dbo.GetTime(Date02) Between DateAdd(Hour,-2,@LOut) And DateAdd(Hour,2,@LOut)) 
 	end 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun178]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun178](@Im uniqueidentifier,@TD datetime,@Cr uniqueidentifier,@iCo uniqueidentifier,@iPr uniqueidentifier, 
 @iBr uniqueidentifier,@iSt uniqueidentifier,@iC1 uniqueidentifier,@iC2 uniqueidentifier,@iC3 uniqueidentifier,@iC4 uniqueidentifier,@iC5 uniqueidentifier)returns @Tb table(PriceRate float,Currency uniqueidentifier,Rate float,Factor2 float,Factor3 float)
 as begin
 declare @Q float
 declare @T float
 Set @Q=0
 Set @T=0
 declare @mQ float
 declare @LP float
 declare @mT float
 declare @S smallint
 declare @Afct bit
 declare @CostSet bit
 declare @BDt datetime
 Set @CostSet=0
 declare @iTb table (ID int identity(1,1),ItemNetTotal float,Quantity float,InvoiceMovementSide int,AffectCost bit,BillDate datetime)
 Insert Into @iTb(ItemNetTotal ,Quantity ,InvoiceMovementSide,AffectCost,BillDate)
 Select (ItemTotalValueRate+ItemExtraValueRate-(ItemDiscountValueRate+ItemDiscount2))*(CASE When CurrencyGuide=@Cr Then 1 Else dbo.Ratio(Rate,dbo.Fun006(@Cr,null,BillDate)) End),Quantity
 ,InvoiceMovementSide,AffectLastPurchasePrice,BillDate
 From Qry100 Where Posted=1 And ProductGuide=@Im
 And (@iCo Is Null Or CostCenter=@iCo)
 And (@iPr Is Null Or Project=@iPr)
 And (@iBr Is Null Or Branch=@iBr)
 And (@iSt Is Null Or StoreGuide=@iSt)
 And (@iC1 Is Null Or Category01=@iC1)
 And (@iC2 Is Null Or Category02=@iC2)
 And (@iC3 Is Null Or Category03=@iC3)
 And (@iC4 Is Null Or Category04=@iC4)
 And (@iC5 Is Null Or Category05=@iC5)
 And(@TD Is Null Or @TD<5 Or BillDate<@TD Or BillDate<=@TD)
 And BillTypeID!=2 --And(InvoiceMovementSide<0 Or(InvoiceMovementSide>0 And AffectLastPurchasePrice>0))
 	Order By BillDate,BillNumber,ItemSortID
 declare @LQ float
 declare @LT float
 DECLARE N CURSOR READ_ONLY FAST_FORWARD FOR
 	Select ItemNetTotal,Quantity,InvoiceMovementSide,AffectCost,BillDate From @iTb Order By ID
 	OPEN N
 FETCH NEXT FROM N INTO @mT,@mQ,@S,@Afct,@BDt
 WHILE (@@FETCH_STATUS = 0)
 BEGIN
 	if(@S>0)
 	begin
 		if(@Afct=1)
 		begin
 			Set @Q=@Q+@mQ
 			Set @T=@T+@mT
 			Set @LP=dbo.Ratio(@T,@Q)
 			Set @CostSet = 1
 		end
 		else
 		begin
 			Set @T=dbo.Ratio(@T,@Q)
 			Set @Q=@Q+@mQ
 			Set @T=@T*@Q
 			if(@CostSet = 1 And Round(@T,5)=0)
 				Set @T=@LP*@Q
 		end
 	end
 	else
 	begin
 		if(@mQ>@Q)Set @mQ=@Q
 		if(@Afct=0)
 		begin
 			Set @T=@T-(@mQ*dbo.Ratio(@T,@Q))
 			Set @Q=@Q-@mQ
 		end
 		else
 		begin
 			if(@T<0)Set @T=@T*-1
 			Set @Q=@Q-@mQ
 			if(@CostSet=1)
 				Set @T=@T-@mT
 			else
 				Set @T=dbo.Ratio(@mT,@mQ)*@Q
 			Set @CostSet = 1
 			Set @LP=dbo.Ratio(@T,@Q)
 		end
 		if(@Q>0)
 		begin
 			Select @LQ=@Q,@LT=@T
 		end
 	end
 	FETCH NEXT FROM N INTO @mT,@mQ,@S,@Afct,@BDt
 END
 CLOSE N
 Deallocate N
 if(@Q=0 Or @T=0)
 begin
 	if(@LQ is null)
 		Select @Q=1,@T=@LP
 	else
 		Select @Q=@LQ,@T=@LP * @LQ
 end
 Insert Into @Tb(PriceRate,Currency,Rate,Factor2,Factor3)
 	Select dbo.Ratio(@T,@Q),@Cr,dbo.Fun006(@Cr,null,@TD),Factor2,Factor3 From TBL007 Where CardGuide=@Im
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun180]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun180](@Tp int,@PU uniqueidentifier,@PU2 uniqueidentifier,@PN float,@PN2 float)returns float
 as begin
 declare @R float
 if(@Tp=1)--Balance Before Current Bill Date With Unposted - By Agent Guide
 begin
 	Set @R=(Select Sum(a.Debit-a.Credit) From TBL012 a with(nolock) Inner Join TBL011 b with(nolock) On a.MainGuide=b.CardGuide Where
 	b.EntryDate<@PN
 	And a.AccountGuide=(Select g.AccountID From TBL016 g with(nolock) Where g.CardGuide=@PU))
 end
 else if(@Tp=2)--Balance Before Current Bill Date With Unposted - By Account Guide
 begin
 	Set @R=(Select Sum(a.Debit-a.Credit) From TBL012 a with(nolock) Inner Join TBL011 b with(nolock) On a.MainGuide=b.CardGuide Where
 	b.EntryDate<@PN
 	And a.AccountGuide=@PU)
 end
 else if(@Tp=3)--Balance Before Current Bill Date / posted only - By Agent Guide
 begin
 	Set @R=(Select Sum(a.Debit-a.Credit) From TBL012 a with(nolock) Inner Join TBL011 b with(nolock) On a.MainGuide=b.CardGuide Where
 	b.EntryDate<@PN And b.Posted=1
 	And a.AccountGuide=(Select g.AccountID From TBL016 g with(nolock) Where g.CardGuide=@PU))
 end
 else if(@Tp=4)--Balance Before Current Bill Date / posted only - By Account Guide
 begin
 	Set @R=(Select Sum(a.Debit-a.Credit) From TBL012 a with(nolock) Inner Join TBL011 b with(nolock) On a.MainGuide=b.CardGuide Where
 	b.EntryDate<@PN And b.Posted=1
 	And a.AccountGuide=@PU)
 end
 else if(@Tp=5)--Balance Before Current Bill Date / posted only - By Agent Guide With Bill Total
 begin--PN2 : Added Bill Total
 	Set @R=(Select Sum(a.Debit-a.Credit) From TBL012 a with(nolock) Inner Join TBL011 b with(nolock) On a.MainGuide=b.CardGuide Where
 	b.EntryDate<@PN And b.Posted=1
 	And a.AccountGuide=(Select g.AccountID From TBL016 g with(nolock) Where g.CardGuide=@PU))
 	Set @R=ISNULL(@R,0)+@PN2
 end
 else if(@Tp=6)--Balance Before Current Bill Date / posted only - By Account Guide With Bill Total
 begin--PN2 : Added Bill Total
 	Set @R=(Select Sum(a.Debit-a.Credit) From TBL012 a with(nolock) Inner Join TBL011 b with(nolock) On a.MainGuide=b.CardGuide Where
 	b.EntryDate<@PN And b.Posted=1
 	And a.AccountGuide=@PU)
 	Set @R=ISNULL(@R,0)+@PN2
 end
 else if(@Tp=7)--Agent Current Balance / posted only
 begin
 	Set @R=(Select Sum(a.Debit-a.Credit) From TBL012 a with(nolock) Inner Join TBL011 b with(nolock) On a.MainGuide=b.CardGuide Where
 	b.Posted=1
 	And a.AccountGuide=(Select g.AccountID From TBL016 g with(nolock) Where g.CardGuide=@PU))
 end
 else if(@Tp=8)--Account Current Balance / posted only
 begin
 	Set @R=(Select Sum(a.Debit-a.Credit) From TBL012 a with(nolock) Inner Join TBL011 b with(nolock) On a.MainGuide=b.CardGuide Where
 	b.Posted=1
 	And a.AccountGuide=@PU)
 end
 else if(@Tp=9)--Bill Total
 begin
 	Set @R=(Select Sum(b.Rate*(case c.TotalIncludeTax when 1 then a.TotalValue+a.ExtraValue-a.DiscountValue-a.Discount1 else a.TotalValue+a.ExtraValue-a.DiscountValue+a.TaxValue+a.BillTax-a.Discount1 end)) From TBL023 a with(nolock) Inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide Inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide Where a.MainGuide=@PU)
 end
 return @R
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun181]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun181](@G uniqueidentifier)returns float 
 as begin 
 declare @Dt datetime 
 declare @Cr uniqueidentifier 
 declare @Rate float 
 Select @Dt=DATEADD(Minute,-1,BondDate),@Cr=CurrencyGuide,@Rate=Rate From TBL010 with(nolock) Where CardGuide=@G 
 declare @Ac uniqueidentifier 
 declare @D float 
 Set @D=CONVERT(float,@Dt) 
 Select Top 1 @Ac=AccountGuide From TBL038 Where MainGuide=@G 
 declare @R float 
 Set @R=dbo.Fun008(@Ac,@Cr,@Rate,0,@D,0,null) 
 return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun182]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun182](@Tp int,@Unt int,@Im uniqueidentifier,@iTD datetime,@Cr uniqueidentifier,@iCo uniqueidentifier,@iPr uniqueidentifier, 
 @iBr uniqueidentifier,@iSt uniqueidentifier,@iC1 uniqueidentifier,@iC2 uniqueidentifier,@iC3 uniqueidentifier,@iC4 uniqueidentifier,@iC5 uniqueidentifier,@Qty float,@ForBill uniqueidentifier)returns float 
 as begin 
 declare @TD int 
 Set @TD=dbo.DateToInt(@iTD) 
 declare @PriceRate float 
 declare @Currency uniqueidentifier 
 declare @Rate float 
 declare @Factor2 float 
 declare @Factor3 float 
 if(@Tp=5) 
 begin 
 	Select @PriceRate=PriceRate,@Currency=Currency,@Rate=Rate,@Factor2=Factor2,@Factor3=Factor3 
 		From dbo.Fun177(@Im ,@TD ,@Cr ,@iCo ,@iPr ,@iBr ,@iSt ,@iC1 ,@iC2 ,@iC3 ,@iC4 ,@iC5 ) 
 end 
 else if(@Tp=8) 
 begin 
 	Select @PriceRate=PriceRate,@Currency=Currency,@Rate=Rate,@Factor2=Factor2,@Factor3=Factor3 
 		From dbo.Fun174(@Im ,@iTD ,@Cr ,@iCo ,@iPr ,@iBr ,@iSt ,@iC1 ,@iC2 ,@iC3 ,@iC4 ,@iC5 ) 
 end 
 else if(@Tp=10) 
 begin 
 	Select @PriceRate=PriceRate,@Currency=Currency,@Rate=Rate,@Factor2=Factor2,@Factor3=Factor3 
 		From dbo.Fun178(@Im ,@iTD ,@Cr ,@iCo ,@iPr ,@iBr ,@iSt ,@iC1 ,@iC2 ,@iC3 ,@iC4 ,@iC5 ) 
 end 
 else if(@Tp=11) 
 begin 
 	Select @PriceRate=PriceRate,@Currency=Currency,@Rate=Rate,@Factor2=Factor2,@Factor3=Factor3 
 		From dbo.Fun176(@Im ,@iTD ,@Cr ,@iCo ,@iPr ,@iBr ,@iSt ,@iC1 ,@iC2 ,@iC3 ,@iC4 ,@iC5 ,@Qty ,@ForBill) 
 end 
 else if(@Tp>150) 
 begin 
 	return dbo.Fun063(@Tp ,@Im ,@TD ,@Cr ,@iCo ,@iPr ,@iBr ,@iSt ,@iC1 ,@iC2 ,@iC3 ,@iC4 ,@iC5 ,@Qty ,@ForBill) 
 end 
 if(@PriceRate Is Not Null And @unt>1) 
 begin 
 	if(@Unt>2) 
 		Set @PriceRate=@PriceRate*@Factor3 
 	else if(@Unt>1) 
 		Set @PriceRate=@PriceRate*@Factor2 
 end 
 Set @PriceRate=IsNull(@PriceRate,0) 
 return @PriceRate 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun183]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun183](@Tp int)returns @Tb table (CardGuide uniqueidentifier,CardName nvarchar(Max),MainGuide uniqueidentifier,CardLevel int,RelatedCards int default(0),Checked bit default(0),LastLevel int) 
 begin 
 declare @nTb Table(G uniqueidentifier) 
 Insert Into @nTb(G)Select CardID From TBL139 
 declare @Lv int 
 Set @Lv=1 
 if(@Tp=7) 
 begin 
 	Insert Into @Tb(CardGuide,CardName,CardLevel) 
 		Select CardGuide,CardCode+'-'+GroupName,@Lv From TBL006 Where MainGuide is Null 
 	while(( 
 	Select COUNT(*) From (Select * From @Tb Where Checked=0) a 
 		Inner Join TBL006 b On a.CardGuide=b.MainGuide)>0) 
 	begin 
 		Set @Lv=@Lv+1 
 		Insert Into @Tb(CardGuide,CardName,MainGuide,CardLevel) 
 			Select b.CardGuide,CardCode+'-'+b.GroupName,b.MainGuide,@Lv From (Select * From @Tb Where Checked=0) a 
 		Inner Join TBL006 b On a.CardGuide=b.MainGuide 
 		Update @Tb Set[Checked]=1 Where Checked=0 And CardLevel=(@Lv-1) 
 	end 
 end 
 Update @Tb Set [LastLevel]=@Lv 
 Update a Set[RelatedCards]=ISNULL(RelatedCards,0)+1 From @Tb a Inner Join @nTb b On a.CardGuide=b.G 
 Delete b From @Tb a Inner Join @nTb b On a.CardGuide=b.G 
 while(@Lv>0) 
 begin 
 	Update b Set[RelatedCards]=ISNULL(b.RelatedCards,0)+1 From (Select * From @Tb Where RelatedCards>0) a 
 	Inner Join @Tb b On a.MainGuide=b.CardGuide 
 	Set @Lv=@Lv-1 
 end 
 Delete From @Tb Where RelatedCards<1 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun184]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun184](@D int,@ShiftID uniqueidentifier,@AttType uniqueidentifier)returns @Rt table(ShiftGuide uniqueidentifier,AgentGuide uniqueidentifier,PLogIn datetime,PLogOut datetime,OverTimeSignIn datetime,OverTimeSignOut datetime,NextSignIn datetime,PreviousSignOut datetime,ShiftIn datetime,ShiftOut datetime,FingerID int,NeedCheckSignIn bit default(0),NeedCheckSignOut bit default(0),CheckSign datetime,ResitValues bit default(0),DvcIn nvarchar(200),DvcOut nvarchar(200))
 --Signin = 1,
 --Signout = 2,
 --OvertimeIn = 10,
 --OvertimerOut = 11
 as begin
 declare @ShftDb table(CardGuide uniqueidentifier,TShiftIN datetime,TShiftOut datetime)
 Insert Into @ShftDb(CardGuide ,TShiftIN ,TShiftOut)
 	Select CardGuide,dbo.GetTime(c.Date01),dbo.GetTime(c.Date02) From TBL014 c Where c.CardType=1 And c.WindowType=1
 declare @AgDB table(CardGuide uniqueidentifier,FingerID int,RelatedAdministration uniqueidentifier,ShiftID uniqueidentifier)
 declare @BitValue4 bit
 Set @BitValue4=0
 if(@AttType is not null)
 	Select @BitValue4=BitValue4 From TBL014 Where CardGuide=@AttType
 declare @GrpTb table(G uniqueidentifier)
 declare @PrnTb table(ID int,SignID int)
 Insert Into @PrnTb(ID,SignID)
 	Select Value,Value2 From TBL053 Where OptionName='FingerprintTypes'
 declare @CustomTypes bit
 if((Select Count(*) From @PrnTb)>0)
 	Set @CustomTypes=1
 else
 	Set @CustomTypes=0
 Insert Into @GrpTb(G)
 	Select GroupGuide From TBL097 Where MainGuide=@AttType
 declare @SpGroups bit
 if((Select Count(*) From @GrpTb)>0)
 	Set @SpGroups=1
 else
 	Set @SpGroups=0
 declare @PTb table(ID int identity(1,1),DayValue int,EmpGuide uniqueidentifier,ShiftGuide uniqueidentifier,FingerID int,SignDate datetime,FingerType int,ShiftIN datetime,ShiftOut datetime,SignType int)
 declare @FldType int
 --0:CardNumber
 --1:Barcode
 Set @FldType=Isnull((Select Top 1 (case ValueString When 'Barcode' Then 1 Else 0 end) From TBL053 Where OptionName='FingerprintIdentifier'),0)
 if(@FldType=0)
 begin
 	Insert Into @AgDB(CardGuide,FingerID,RelatedAdministration,ShiftID)
 		Select a.CardGuide,a.CardNumber,a.RelatedAdministration,IsNull(a.RelatedAdministration,@ShiftID) From TBL016 a
 		left join @GrpTb b On a.MainGroupGuide=b.G
 		Where (@SpGroups=0 Or b.G is not null)
 end
 else
 begin
 	Insert Into @AgDB(CardGuide,FingerID,RelatedAdministration,ShiftID)
 		Select a.CardGuide,dbo.Number(left(a.Barcode,10)),a.RelatedAdministration,IsNull(a.RelatedAdministration,@ShiftID) From TBL016 a
 		left join @GrpTb b On a.MainGroupGuide=b.G
 		Where (@SpGroups=0 Or b.G is not null)
 end
 Insert Into @PTb(EmpGuide ,FingerID ,SignDate ,FingerType ,ShiftIN ,ShiftOut ,SignType ,ShiftGuide ,DayValue)
 Select a.EmpGuide,a.FingerID,a.SignDate,a.FingerType,dateadd(day,@D,a.TShiftIN),dateadd(day,@D,(case when a.TShiftOut<a.TShiftIN then a.TShiftOut+1 else a.TShiftOut end)),a.SignType,a.ShiftID,dbo.DateToInt(a.SignDate)
 From
 (Select a.CardGuide As EmpGuide,a.ShiftID,b.SignType,b.FingerID,b.SignDate,b.FingerType,c.TShiftIN,c.TShiftOut From @AgDB a
 Inner Join
 (Select a.FingerID,a.FingerType,a.SignDate,b.SignID As SignType From TBL115 a
 Left Join @PrnTb b On a.SignType=b.ID
 Where (a.SignDate>=@D-1 And a.SignDate<(@D+2))
 And (@CustomTypes=0 Or b.SignID is not null))b
 On a.FingerID=b.FingerID
 Left Join @ShftDb c On a.ShiftID=c.CardGuide)a
 Order By a.FingerID
 --Select * From @PTb Order By FingerID
 --------------------------------------------
 Update b Set[ShiftIn]= DATEADD(Second,a.MInSeconds*-1, a.ShiftIN) From
 (Select DATEPART(Second,a.ShiftIN) As MInSeconds,* From @PTb a)a
 Inner Join @PTb b On a.ID=b.ID
 Where a.MInSeconds>0 And a.MInSeconds<4
 --------------------------------------------
 Insert Into @Rt(AgentGuide,ShiftGuide,ShiftIn,ShiftOut,FingerID)Select EmpGuide,ShiftGuide,ShiftIn,ShiftOut,FingerID from @PTb Group By EmpGuide,ShiftGuide,ShiftIn,ShiftOut,FingerID
 --------------------------------------------
 Update b Set[PLogIn]=a.SignDate From
 (Select a.EmpGuide,a.ShiftGuide,Min(a.SignDate)As SignDate From @PTb a Where (a.SignType=1 Or @CustomTypes=0)
 And a.DayValue=@D
 Group By a.EmpGuide,a.ShiftGuide)a
 Inner Join @Rt b on a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 --------------------------------------------
 Update b Set[NextSignIn]=a.NextSign From
 (Select Min(a.SignDate) As NextSign,a.EmpGuide,a.ShiftGuide from @PTb a Where dbo.DateToInt(a.SignDate)=@D+1 And (a.SignType=1 Or @CustomTypes=0) Group By a.EmpGuide,a.ShiftGuide) a
 Inner join @Rt b On a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 -------------------------------------------
 Update b Set[PreviousSignOut]=a.PreviousSign From
 (Select Max(a.SignDate) As PreviousSign,a.EmpGuide,a.ShiftGuide from @PTb a Where dbo.DateToInt(a.SignDate)=@D-1 And (a.SignType=2 Or @CustomTypes=0) Group By a.EmpGuide,a.ShiftGuide) a
 Inner join @Rt b On a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 --------------------------------------------
 Update b Set[PLogOut]=a.SignDate From
 (Select a.EmpGuide,a.ShiftGuide,Max(a.SignDate) As SignDate From @PTb a Inner Join @Rt b
 On a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 Where (a.SignType=2 Or @CustomTypes=0) And (a.SignDate>b.PLogIn Or b.PLogIn Is Null) And (a.SignDate<b.NextSignIn or (b.NextSignIn Is Null And a.SignDate<@D+2))
 Group By a.EmpGuide,a.ShiftGuide)a
 Inner Join @Rt b On a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 --------------------------------------------
 Update b Set[PLogIn]=a.SignDate From
 (Select a.EmpGuide,a.ShiftGuide,Min(a.SignDate)As SignDate From @PTb a
 Inner Join @Rt b on a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 Where (a.SignType=1 Or @CustomTypes=0)
 And (a.SignDate>b.PreviousSignOut Or (b.PreviousSignOut Is Null And a.DayValue=(@D-1)))
 Group By a.EmpGuide,a.ShiftGuide)a
 Inner Join @Rt b on a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 Where b.PLogIn Is Null Or b.PLogOut Is Not Null And b.PLogIn>b.PLogOut
 --------------------------------------------
 Update @Rt set[PLogOut]=null Where NextSignIn is not null and PLogOut is not null and NextSignIn<PLogOut
 --------------------------------------------
 Update @Rt set[PLogin]=null Where PLogOut is not null and PLogin>PLogOut
 --------------------------------------------
 Update b Set[PLogIn]=a.SignDate From
 (Select a.EmpGuide,a.ShiftGuide,Min(a.SignDate) As SignDate From @PTb a Inner Join @Rt b
 On a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 Where (a.SignType=1 Or @CustomTypes=0) And (a.SignDate<b.PLogOut Or b.PLogOut Is Null) And (a.SignDate>b.PreviousSignOut or (b.PreviousSignOut Is Null And a.SignDate<@D))
 Group By a.EmpGuide,a.ShiftGuide)a
 Inner Join @Rt b On a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 Where b.PLogIn Is Null
 --------------------------------------------
 update a Set[PLogOut]=null From @Rt a Where dbo.DateToInt(a.PLogOut)<@D
 --------------------------------------------
 if(@BitValue4=0)
 begin
 	Update @Rt Set[NeedCheckSignIn]=1 Where ShiftOut Is Not Null And PLogIn Is Not Null And PLogIn>ShiftOut And (PLogOut>ShiftOut Or PLogOut is null)
 	if((Select Count(*) From @Rt Where NeedCheckSignIn=1)>0)
 	begin
 		Update a Set[CheckSign]=b.NewSign From @Rt a Inner Join
 		(Select Max(a.SignDate) as NewSign,b.AgentGuide,b.ShiftGuide From @PTb a
 		Inner Join @Rt b On a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 		Where dbo.DateToInt(SignDate)<=@D And (a.SignType=2 Or @CustomTypes=0)
 		Group By b.AgentGuide,b.ShiftGuide)b
 		On a.AgentGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 		--------------------------------------------
 		Update a Set[ResitValues]=1 From @Rt a Where a.NeedCheckSignIn=1 And dbo.DateToInt(a.CheckSign)=@D
 		--------------------------------------------
 		Update @Rt Set[PLogOut]=CheckSign Where ResitValues=1
 		--------------------------------------------
 		Update a Set[PreviousSignOut]=b.NewSign From @Rt a Inner Join
 		(Select Max(a.SignDate) as NewSign,b.AgentGuide,b.ShiftGuide From @PTb a
 		Left Join @Rt b On a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 		Where b.ResitValues=1 And (a.SignDate<dbo.DatetoInt(IsNull(b.PLogOut,b.PlogIn))) And (a.SignType=2 Or @CustomTypes=0)
 		Group By b.AgentGuide,b.ShiftGuide)b
 		On a.AgentGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 		--------------------------------------------
 		Update a Set[PLogIn]=b.NewSign,[ResitValues]=0 From @Rt a Inner Join
 		(Select Min(a.SignDate) as NewSign,b.AgentGuide,b.ShiftGuide From @PTb a
 		Inner Join @Rt b On a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 		Where b.ResitValues=1 And b.PreviousSignOut Is Not Null And a.SignDate>b.PreviousSignOut And (a.SignType=1 Or @CustomTypes=0)
 		Group By b.AgentGuide,b.ShiftGuide)b
 		On a.AgentGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 		--------------------------------------------
 		Update a Set[PLogIn]=b.NewSign,[ResitValues]=0 From @Rt a Inner Join
 		(Select Min(a.SignDate) as NewSign,b.AgentGuide,b.ShiftGuide From @PTb a
 		Inner Join @Rt b On a.EmpGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 		Where b.ResitValues=1 And a.SignDate>=(@D-1) And (a.SignType=1 Or @CustomTypes=0)
 		Group By b.AgentGuide,b.ShiftGuide)b
 		On a.AgentGuide=b.AgentGuide And (a.ShiftGuide=b.ShiftGuide Or (a.ShiftGuide is null And b.ShiftGuide is null))
 		--------------------------------------------
 		Update @Rt Set[ResitValues]=0
 		--------------------------------------------
 		update a Set[PLogIn]=null From @Rt a Inner Join TBL014 b On a.ShiftGuide=b.CardGuide
 		Where b.BitValue7=0 And day(a.PLogIn)<day(a.ShiftIn)
 		--------------------------------------------
 		update a Set[PLogOut]=null From @Rt a Inner Join TBL014 b On a.ShiftGuide=b.CardGuide
 		Where day(a.PLogOut)<day(a.ShiftIn)
 		--------------------------------------------
 		update a Set[PLogOut]=null From @Rt a Inner Join TBL014 b On a.ShiftGuide=b.CardGuide
 		Where b.BitValue6=0 And day(a.PLogOut)>day(a.ShiftOut)
 		--------------------------------------------
 		Delete From @Rt Where ShiftOut Is Not Null And PLogIn Is Not Null And PLogIn>ShiftOut And (PLogOut>ShiftOut Or PLogOut is null)
 		Delete From @Rt Where ShiftIn Is Not Null And PLogOut Is not Null And (PLogIn<ShiftIn Or PLogIn Is Null) And PLogOut<ShiftIn
 		Delete From @Rt Where ShiftOut Is Not Null And PLogIn Is Not Null And datediff(MINUTE,ShiftIn, PLogOut)<60
 		Delete From @Rt Where PLogIn Is Not Null And ShiftIn Is Not Null And datediff(MINUTE,PLogIn,ShiftIn)>900
 	end
 	Update @Rt Set[NeedCheckSignOut]=1 Where ShiftIn Is Not Null And PLogOut Is not Null And (PLogIn<ShiftIn Or PLogIn Is Null) And PLogOut<ShiftIn
 end
 Delete From @Rt Where PLogIn Is Null And PLogOut Is Null
 Delete From @Rt Where PLogIn Is Null And dbo.DateToInt(PLogOut)>@D And (ShiftIn Is Null Or ShiftOut Is Null Or dbo.DateToInt(ShiftIn)=dbo.DateToInt(ShiftOut))
 Delete From @Rt Where ShiftIn Is Not Null And PLogOut Is not Null And PLogOut<ShiftIn
 Delete From @Rt Where ShiftOut Is Not Null And PLogIn Is not Null And PLogIn>ShiftOut
 Update a Set[DvcIn]=b.DeviceName From @Rt a Inner Join TBL115 b On a.FingerID=b.FingerID And a.PLogIn=b.SignDate
 Update a Set[DvcOut]=b.DeviceName From @Rt a Inner Join TBL115 b On a.FingerID=b.FingerID And a.PLogOut=b.SignDate
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun185]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun185](@G uniqueidentifier,@Tp int,@Ev int)returns uniqueidentifier 
 as begin 
 declare @R uniqueidentifier 
 if(@Ev=0) 
 begin 
 	if(@Tp=22) 
 		Set @R=(Select ByUser From TBL022 Where CardGuide=@G) 
 	else if(@Tp=10) 
 		Set @R=(Select ByUser From TBL010 Where CardGuide=@G) 
 	else if(@Tp=11) 
 		Set @R=(Select ByUser From TBL011 Where CardGuide=@G) 
 end 
 if(@R is null) 
 	Set @R=(Select UserGuide From TBL091 Where ID=(Select Min(ID)From TBL091 Where ObjectID=@Tp And EventID=@Ev)) 
 return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun186]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun186](@G uniqueidentifier,@Tp int,@P1 int,@U1 uniqueidentifier)returns nvarchar(Max) 
 as begin
 declare @R nvarchar(Max)
 declare @T1 nvarchar(Max)
 declare @N1 float
 declare @D1 datetime
 if(@Tp=1)--Bond : Entry
 	Set @R=Convert(varchar(10),(Select Top 1 EntryNumber From TBL011 with(nolock) Where BondGuide=@G And (@U1 Is Null Or RowGuide=@U1) And TypeID=0 Order By ID))
 else if(@Tp=2)--Bond : Collect Entry
 	Set @R=Convert(varchar(10),(Select Top 1 EntryNumber From TBL011 with(nolock) Where BondGuide=@G And (@U1 Is Null Or RowGuide=@U1) And TypeID=1 Order By ID))
 else if(@Tp=3)--Bond : Setoff Entry
 	Set @R=Convert(varchar(10),(Select Top 1 EntryNumber From TBL011 with(nolock) Where BondGuide=@G And (@U1 Is Null Or RowGuide=@U1) And TypeID=2 Order By ID))
 else if(@Tp=4)--Bond : Returned Entry
 	Set @R=Convert(varchar(10),(Select Top 1 EntryNumber From TBL011 with(nolock) Where BondGuide=@G And (@U1 Is Null Or RowGuide=@U1) And TypeID=3 Order By ID))
 else if(@Tp=99)--Tax infos
 begin
 	if(@P1<100)
 		Set @R=ltrim(rtrim((Select Top 1 ValueString From TBL053 with(nolock) Where OptionName=N'FileInfo' And Value=@P1)))
 end
 else if(@Tp=101)
 begin
 	--------------------------SA QR--------------------------
 	if(@G is null)
 		return null
 	if((select Posted From TBL022 Where CardGuide=@G)=0)
 		return null
 	--Company Name--
 	Set @T1=dbo.Fun186(null,1001,null,null)
 	set @T1=((select dbo.Base64_EncodeUTF8 (@T1)))
 	set @T1=(SELECT CAST( CAST( @T1 as XML ).value('.','varbinary(max)') AS varchar(max) ))
 	Set @P1=Len(IsNull(@T1,''))
 	if(@P1=0)return null
 	Set @R=char(1)+char(@P1)+@T1
 	--Tax Code--
 	Set @T1=dbo.Fun186(null,1008,null,null)
 	Set @P1=Len(IsNull(@T1,''))
 	if(@P1=0)return null
 	Set @R=@R+char(2)+char(@P1)+@T1
 	--Bill Date--
 	Set @T1=(Select CONVERT(varchar,BillDate,127) From TBL022 with(nolock) Where CardGuide=@G)
 	Set @P1=Len(IsNull(@T1,''))
 	if(@P1=0)return null
 	Set @R=@R+char(3)+char(@P1)+@T1
 	--Bill Total--
 	Set @T1=Convert(varchar,Convert(Money,(Select Sum(b.Rate*(case c.TotalIncludeTax when 1 then a.TotalValue+a.ExtraValue-a.DiscountValue-a.Discount1 else a.TotalValue+a.ExtraValue-a.DiscountValue+a.TaxValue+a.BillTax-a.Discount1 end)) From TBL023 a with(nolock) Inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide Inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide Where a.MainGuide=@G)),2)
 	Set @T1=Round(@T1,0)
 	Set @P1=Len(IsNull(@T1,''))
 	if(@P1=0)return null
 	Set @P1=Len(@T1)
 	Set @R=@R+char(4)+char(@P1)+@T1
 	--Bill Tax--
 	Set @T1=Convert(varchar,Convert(Money,(Select Sum(b.Rate*(a.TaxValue+a.BillTax)) From TBL023 a with(nolock) Inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide Inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide Where a.MainGuide=@G)),2)
 	Set @T1=Round(@T1,0)
 	Set @P1=Len(IsNull(@T1,''))
 	if(@P1=0)return null
 	Set @P1=Len(@T1)
 	Set @R=@R+char(5)+char(@P1)+@T1
 	---------------------------------------------------------
 	Set @R=dbo.Base64_Encode(@R)
 end
 else if(@Tp=102)
 begin
 	if(@G is null)
 		return null
 	--------------------------SY QR--------------------------
 	--taxName--
 	set @T1=(Select ltrim(rtrim((Select Top 1 ValueString From TBL053 with(nolock) Where OptionName=N'FileInfo' And Value=8))))
 	set @R='#'+@T1
 	--companyCode--
 	set @T1=(Select ltrim(rtrim((Select Top 1 ValueString From TBL053 with(nolock) Where OptionName=N'FileInfo' And Value=1))))
 	set @R=@R+'_'+@T1
 	--posNumber--
 	set @T1=(Select Isnull(BillNumber2,0) From Tbl022 where CardGuide=@G)
 	set @R=@R+'_'+@T1+'#'
 	--billNumber--
 	set @T1=(Select BillNumber From Tbl022 where CardGuide=@G)
 	set @R=@R+@T1
 	--billDate--
 	set @T1=(Select CONVERT(varchar,BillDate,127) From TBL022 with(nolock) Where CardGuide=@G)
 	set @R=@R+'_'+@T1
 	--billTotal--
 	Set @T1=Convert(varchar,Convert(Money,(Select Sum(b.Rate*(case c.TotalIncludeTax when 1 then a.TotalValue else a.TotalValue+a.TaxValue+a.BillTax end)) From TBL023 a with(nolock) Inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide Inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide Where a.MainGuide=@G)),2)
 	set @R=@R+'_'+@T1
 	--billCurrencyShortcut--
 	set @R=@R+'_'+'SP'
 	--BillExporterapp--
 	set @R=@R+'_'+'ALYASEER'+'#'+Convert(nvarchar(255),@G)+'#'
 end
 else if(@Tp=100)
 	Set @R=Convert(varchar(100),@G)
 else if(@Tp=201)
 	Set @R=Convert(varchar(100),Round(dbo.Fun180(9,@G,null,0,0),0))
 else if(@Tp=202)
 	Set @R=Convert(varchar(100),(Select BillNumber From TBL022 with(nolock) Where CardGuide=@G))
 else if(@Tp=207)
 begin
 	Set @D1=(Select BillDate From TBL022 with(nolock) Where CardGuide=@G)
 	Set @R=Convert(varchar(10),YEAR(@D1))
 	-----------------------------------------
 	Set @T1=Convert(varchar(10),Month(@D1))
 	if(Len(@T1)<2)Set @T1='0'+@T1
 	Set @R=@R+'-'+@T1
 	-----------------------------------------
 	Set @T1=Convert(varchar(10),Day(@D1))
 	if(Len(@T1)<2)Set @T1='0'+@T1
 	Set @R=@R+'-'+@T1
 	-----------------------------------------
 	Set @T1=Convert(varchar(10),datepart(hour,@D1))
 	if(Len(@T1)<2)Set @T1='0'+@T1
 	Set @R=@R+'T'+@T1
 	-----------------------------------------
 	Set @T1=Convert(varchar(10),datepart(minute,@D1))
 	if(Len(@T1)<2)Set @T1='0'+@T1
 	Set @R=@R+':'+@T1
 	-----------------------------------------
 	Set @T1=Convert(varchar(10),datepart(SECOND,@D1))
 	if(Len(@T1)<2)Set @T1='0'+@T1
 	Set @R=@R+':'+@T1
 	-----------------------------------------
 	Set @T1=Convert(varchar(10),datepart(MILLISECOND,@D1))
 	while(Len(@T1)<4)Set @T1=@T1+'0'
 	Set @R=@R+'.'+@T1
 end
 else if(@Tp=211)
 	Set @R=(Select LatinName From TBL001 Where CardGuide=(Select CurrencyGuide From TBL022 Where CardGuide=@G))
 else if(@Tp>1000 And @Tp<2000)
 begin
 	--File Text Information--
 	Set @Tp=@Tp-1000
 	Set @R=ltrim(rtrim((Select Top 1 ValueString From TBL053 with(nolock) Where OptionName=N'FileInfo' And Value=@Tp)))
 end
 return @R
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun187]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun187](@Sp int)returns @Rt table(OfferID uniqueidentifier,OfferType int,ProductGuide uniqueidentifier,Unit int,OfferQty float,OfferValue float,OfferGifts float,OfferDiscount float,UseExtraQuantity bit)
 as begin
 declare @iRt table(OfferID uniqueidentifier,OfferType int,ProductGuide uniqueidentifier,Unit int,OfferQty float,OfferValue float,OfferGifts float,OfferDiscount float,UseExtraQuantity bit)
 declare @D as datetime
 Set @D=dbo.DateToint(getdate())
 ----------Offers Cards---------
 declare @Ofrs table(GID uniqueidentifier,OfferType int,ItemUseType int,UseExtraQuantity bit,AgentID uniqueidentifier,CostID uniqueidentifier,ProjectID uniqueidentifier,BranchID uniqueidentifier,OfferValue float,InCount int not null default(0))
 Insert Into @Ofrs(GID,OfferType,UseExtraQuantity,ItemUseType ,AgentID ,CostID ,ProjectID ,BranchID ,OfferValue)
 Select CardGuide,OfferType,UseExtraQuantity,ItemUseType ,AgentGuide ,CostCenterGuide ,ProjectGuide ,BranchGuide ,OfferValue From TBL144 Where NotActive=0 And ((DateStart Is Null Or DateStart<=@D) Or (DateEnd Is Null Or DateEnd<=@D)) And CardNumber=92 Order By ID
 --------Condition Items--------
 declare @CndItms table(MainID uniqueidentifier,GroupID uniqueidentifier,ItemID uniqueidentifier,Quantity float,UnitID tinyint,Gifts float, GiftUnit tinyint)
 Insert Into @CndItms(MainID ,GroupID ,ItemID ,Quantity ,UnitID ,Gifts , GiftUnit )
 Select b.MainGuide,b.GroupID,b.ItemID,b.Quantity,b.Unit,b.Gifts,b.Unit From @Ofrs a Inner Join TBL145 b On a.GID=b.MainGuide Where b.TypeID=0
 ----------Offer Gifts----------
 declare @Gfts table(MainID uniqueidentifier,ItemID uniqueidentifier,Quantity float,UnitID float)
 Insert Into @Gfts(MainID ,ItemID ,Quantity ,UnitID )
 Select b.MainGuide,b.ItemID,b.Quantity,b.Unit From @Ofrs a Inner Join TBL145 b On a.GID=b.MainGuide Where b.TypeID=1
 ---------Bills Totals---------
 declare @CndTotls table(MainID uniqueidentifier,FromValue float,ToValue float,NewTotal float,DiscountRatio float)
 Insert Into @CndTotls(MainID ,FromValue ,ToValue ,NewTotal ,DiscountRatio)
 Select b.MainGuide,b.ValueFrom,b.ValueTo,b.DiscountValue,b.DiscountRatio From @Ofrs a Inner Join TBL145 b On a.GID=b.MainGuide Where b.TypeID=2
 ---------Bills Rows---------
 declare @BillRows table(RowGuide uniqueidentifier,AgentGuide uniqueidentifier,CostGuide uniqueidentifier,ProductGuide uniqueidentifier,Quantity float,Unit int,Price float)
 insert into @BillRows(RowGuide ,AgentGuide ,CostGuide ,ProductGuide ,Quantity ,Unit ,Price)
 	Select RowGuide ,AgentGuide ,CostGuide ,ProductGuide ,Quantity ,Unit ,Price From TBL159 where ConnectionID=@Sp
 ----------------------------------------------Start Work----------------------------------------------
 declare @GID uniqueidentifier
 declare @OfferType int
 declare @ItemUseType int
 declare @UseExtraQuantity bit
 declare @AgentID uniqueidentifier
 declare @CostID uniqueidentifier
 declare @ProjectID uniqueidentifier
 declare @BranchID uniqueidentifier
 declare @InOffer bit
 declare @FrstRnd bit
 declare @OfferValue float
 declare @OfrItms table(MainID uniqueidentifier,GroupID uniqueidentifier,ItemID uniqueidentifier,Quantity float,Gifts float,RelatedQty float,InOffer bit not null default(0))
 declare @Itms table(ProductGuide uniqueidentifier,AgentGuide uniqueidentifier,CostGuide uniqueidentifier,GroupGuide uniqueidentifier,Quantity float ,Price float ,TotalValue float)
 Insert Into @Itms(ProductGuide ,AgentGuide ,CostGuide ,GroupGuide ,Quantity ,Price ,TotalValue )
 	Select a.ProductGuide ,a.AgentGuide ,a.CostGuide ,a.GroupGuid ,a.Quantity ,dbo.Ratio(a.TotalValue,a.Quantity),a.TotalValue From
 	(Select ProductGuide ,AgentGuide ,CostGuide ,b.GroupGuid ,Sum(a.Quantity*(case a.Unit When 3 Then b.Factor3 When 2 Then b.Factor2 else 1 end)) As Quantity ,Sum(a.Quantity*a.Price) As TotalValue From @BillRows a Inner Join TBL007 b On a.ProductGuide=b.CardGuide Group By a.ProductGuide ,AgentGuide ,CostGuide ,b.GroupGuid)a
 --OfferType 0 : Gifts , 1 : Fixed Total Value , 2 : Discount For Bill Total , 3 : Discount For Items , 4 : Points , 5 : Fixed Price
 DECLARE CFun187 CURSOR READ_ONLY FAST_FORWARD FOR
 	Select 1 ,GID ,OfferType ,UseExtraQuantity ,ItemUseType ,AgentID ,CostID ,ProjectID ,BranchID ,OfferValue From @Ofrs
 OPEN CFun187
 FETCH NEXT FROM CFun187 INTO @FrstRnd ,@GID ,@OfferType ,@UseExtraQuantity ,@ItemUseType ,@AgentID ,@CostID ,@ProjectID ,@BranchID ,@OfferValue
 WHILE (@@FETCH_STATUS = 0)
 BEGIN
 	Delete From @OfrItms
 	Insert Into @OfrItms(GroupID ,ItemID ,Quantity ,Gifts )
 		Select GroupID ,ItemID ,Sum(Quantity * (case a.UnitID when 3 then p.Factor3 when 2 then p.Factor2 else 1 end)),Sum(Gifts * (case a.GiftUnit when 3 then p.Factor3 when 2 then p.Factor2 else 1 end)) From @CndItms a
 		Left Join TBL007 p On a.ItemID=p.CardGuide group by GroupID ,ItemID
 	while(@FrstRnd=1 Or @InOffer=1)
 	begin
 		Set @FrstRnd=0
 		Set @InOffer=0
 		Update @OfrItms Set[InOffer]=0
 		---------Fixed Total Value---------
 		if(@OfferType in (0, 1, 3, 5))
 		begin
 			--Select * From @OfrItms
 			Update a Set[RelatedQty]=b.Quantity From @OfrItms a Left Join @Itms b
 			On (a.ItemID=b.ProductGuide Or (a.ItemID is null And a.GroupID=b.GroupGuide))
 			Update @OfrItms Set[InOffer]=1 Where RelatedQty>=Quantity
 			if (@ItemUseType=1)--Any Of Them
 			begin
 				if((Select Count(*) From @OfrItms Where InOffer=1)>0)
 					Set @InOffer=1
 			end
 			else if(@ItemUseType=2)--All Items Should be Together
 			begin
 				if((Select Count(*) From @OfrItms Where InOffer=0)=0)
 					Set @InOffer=1
 			end
 		end
 		if(@InOffer=1)
 		begin
 			Update b Set[Quantity]=b.Quantity-IsNull(a.Quantity,0) From @OfrItms a Left Join @Itms b
 			On (a.ItemID=b.ProductGuide Or (a.ItemID is null And a.GroupID=b.GroupGuide))
 			Where a.InOffer=1
 			if(@OfferType=0)--Gifts
 			begin
 				Insert Into @iRt(OfferID,ProductGuide,Unit,OfferType,OfferQty,OfferValue,OfferGifts,UseExtraQuantity)
 			Select a.MainID,b.ProductGuide,1,@OfferType,a.Quantity,0,a.Gifts,@UseExtraQuantity From @OfrItms a Left Join @Itms b
 			On (a.ItemID=b.ProductGuide Or (a.ItemID is null And a.GroupID=b.GroupGuide))
 					Where a.InOffer=1
 				Insert Into @iRt(OfferID,ProductGuide,Unit,OfferType,OfferQty,OfferValue,OfferGifts,UseExtraQuantity)
 			Select @GID,a.ItemID,1,@OfferType,0,0,a.Quantity,@UseExtraQuantity From @Gfts a
 					Where MainID=@GID
 			end
 			if(@OfferType=1)--Fixed Total Value
 			begin
 				Insert Into @iRt(OfferID,ProductGuide,OfferType,OfferQty,OfferValue,OfferGifts,OfferDiscount,UseExtraQuantity)
 			Select @GID,b.ProductGuide,@OfferType,a.Quantity,@OfferValue,0,(b.Price*a.Quantity)-@OfferValue,1 From @OfrItms a Left Join @Itms b
 			On (a.ItemID=b.ProductGuide Or (a.ItemID is null And a.GroupID=b.GroupGuide))
 					Where a.InOffer=1
 			end
 			Delete From @Itms Where Quantity<=0 Or Quantity is null
 			Update @Ofrs Set[InCount]=InCount+1 Where GID=@GID
 
 		end
 	end
 	FETCH NEXT FROM CFun187 INTO @FrstRnd ,@GID ,@OfferType ,@UseExtraQuantity ,@ItemUseType ,@AgentID ,@CostID ,@ProjectID ,@BranchID ,@OfferValue
 END
 CLOSE CFun187
 DEALLOCATE CFun187
 Insert Into @Rt(OfferID,OfferType,ProductGuide,Unit,OfferQty,OfferValue,OfferGifts,OfferDiscount,UseExtraQuantity)
 	Select OfferID,OfferType,ProductGuide,Unit,Sum(OfferQty),Sum(OfferValue),Sum(OfferGifts),Sum(OfferDiscount),UseExtraQuantity From @iRt Group By OfferID,OfferType,ProductGuide,UseExtraQuantity,Unit
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun188]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun188](@G uniqueidentifier,@Tp int)returns uniqueidentifier 
 as begin 
 	declare @R uniqueidentifier 
 	if(@Tp=1)--Main Address 
 	begin 
 		Set @R=(Select MainGuide From TBL030 Where CardGuide=@G) 
 		if(@R is not null) 
 			Set @R=dbo.Fun188(@R,@Tp) 
 		else 
 			Set @R=@G 
 	end 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun189]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun189]() returns @Tb table(CardLevel int,CardGuide uniqueidentifier,HeadGuide uniqueidentifier) 
 as begin 
 declare @Lv int 
 Set @Lv=1 
 declare @NTb table(CardGuide uniqueidentifier,MainGuide uniqueidentifier) 
 Insert Into @NTb(CardGuide,MainGuide) 
 	Select CardGuide,MainGuide From TBL030 
 Insert Into @Tb(CardLevel,CardGuide,HeadGuide) 
 	Select @Lv,CardGuide,CardGuide From @NTb Where MainGuide Is Null 
 while((Select COUNT(*) From @Tb a Inner Join @NTb b On a.CardGuide=b.MainGuide 
 Where a.CardLevel=@Lv)>0) 
 begin 
 	Set @Lv=@Lv+1 
 	Insert Into @Tb(CardLevel,CardGuide,HeadGuide) 
 	Select @Lv,b.CardGuide,a.HeadGuide From @Tb a Inner Join @NTb b On a.CardGuide=b.MainGuide 
 	Where a.CardLevel=@Lv-1 
 end 
 return 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun190]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun190](@LUnt int,@ByDefaultUnit bit)
 returns @Tb table(UnitsCount int,ID int,CardGuide uniqueidentifier,CardNumber int,SecurityLevel int,UnitName nvarchar(250),LatinName nvarchar(250),MainUnit tinyint,Quantity float,
 Barcode nvarchar(250),MainGuide uniqueidentifier,Price float,AgentPrice float,WholePrice float,EndUserPrice float,Price5Item float,Price6Item float,Price7Item float,StanderCost  float)
 as begin
 if(@ByDefaultUnit=1)
 begin
 	Insert Into @Tb(UnitsCount,ID,CardGuide,CardNumber,SecurityLevel,UnitName,LatinName,MainUnit,Quantity,
 	Barcode,MainGuide,Price,AgentPrice,WholePrice,EndUserPrice,Price5Item,Price6Item,Price7Item,StanderCost)
 	Select 1,b.ID,b.CardGuide,b.CardNumber,b.Security,b.UnitName,b.LatinName,b.MainUnit,b.Quantity,
 	b.Barcode,b.MainGuide,b.Price,b.AgentPrice,b.WholePrice,b.EndUserPrice,b.Price5Item,b.Price6Item,b.Price7Item,b.StanderCost From
 	TBL007 a
 	Inner Join TBL128 b On a.DefaultVariableUnit=b.CardGuide
 	Where a.DefaultVariableUnit is not null
 	return
 end
 Insert Into @Tb(UnitsCount,ID,CardGuide,CardNumber,SecurityLevel,UnitName,LatinName,MainUnit,Quantity,
 Barcode,MainGuide,Price,AgentPrice,WholePrice,EndUserPrice,Price5Item,Price6Item,Price7Item,StanderCost)
 Select a.UnitsCount,b.ID,b.CardGuide,b.CardNumber,b.Security,b.UnitName,b.LatinName,b.MainUnit,b.Quantity,
 b.Barcode,b.MainGuide,b.Price,b.AgentPrice,b.WholePrice,b.EndUserPrice,b.Price5Item,b.Price6Item,b.Price7Item,b.StanderCost From
 (
 Select Max(b.ID)As VariableID,Max(a.LastNumber)As VariableNumber,Max(a.UnitsCount)As UnitsCount,a.MainGuide From
 (Select MainGuide,MAX(CardNumber)As LastNumber,COUNT(*) As UnitsCount From TBL128 Where CardNumber<=@LUnt Group By MainGuide)a
 Inner Join TBL128 b On a.MainGuide=b.MainGuide And a.LastNumber=b.CardNumber
 Group By a.MainGuide
 )a Inner Join TBL128 b On a.VariableID=b.ID
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun191]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun191](@G uniqueidentifier) returns @Tb table(G uniqueidentifier) 
 as begin
 Insert Into @tb(G)Values(@G)
 while((Select Count(*) From @Tb a Inner Join TBL042 b On a.G=b.MainGuide
 Left join @Tb c On b.CardGuide=c.G
 Where c.G is null)>0)
 begin
 	Insert Into @Tb(G)
 	Select b.CardGuide From @Tb a Inner Join TBL042 b On a.G=b.MainGuide
 	Left join @Tb c On b.CardGuide=c.G
 	Where c.G is null
 end
 while((Select Count(*) From @Tb a
 Inner Join TBL042 b On a.G=b.CardGuide
 Inner Join TBL042 c On b.MainGuide=c.CardGuide
 Left Join @Tb d On c.CardGuide=d.G
 Where c.SeparateGroup=1
 And b.MainGuide Is Not null
 And d.G Is Null)>0)
 begin
 	Insert Into @Tb(G)Select c.CardGuide From @Tb a
 	Inner Join TBL042 b On a.G=b.CardGuide
 	Inner Join TBL042 c On b.MainGuide=c.CardGuide
 	Left Join @Tb d On c.CardGuide=d.G
 	Where c.SeparateGroup=1
 And b.MainGuide Is Not null
 	And d.G Is Null
 end
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Fun192]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Fun192](@G uniqueidentifier,@T nvarchar(max),@Tp int)returns nvarchar(max)
 as begin
 declare @Int1 int
 declare @Value1 nvarchar(200)
 declare @Value2 nvarchar(200)
 if(@Tp=1)--Syrian Tax
 begin
 	DECLARE CFun192 CURSOR READ_ONLY FAST_FORWARD FOR
 		Select '{'+Convert(varchar(10),Value)+'}',ValueString From TBL053 with(nolock) Where OptionName='FileInfo' Order By ID
 	OPEN CFun192
 	FETCH NEXT FROM CFun192 INTO @Value1,@Value2
 	WHILE (@@FETCH_STATUS = 0)
 	BEGIN
 		Set @T=REPLACE(@T,@Value1,@Value2)
 		FETCH NEXT FROM CFun192 INTO @Value1,@Value2
 	END
 	CLOSE CFun192
 	DEALLOCATE CFun192
 	declare @Tb table(ID int,InfoVal nvarchar(10))
 	Insert Into @Tb(ID,InfoVal)Values(100,'{100}')
 	Insert Into @Tb(ID,InfoVal)Values(201,'{201}')
 	Insert Into @Tb(ID,InfoVal)Values(202,'{202}')
 	Insert Into @Tb(ID,InfoVal)Values(207,'{207}')
 	Insert Into @Tb(ID,InfoVal)Values(211,'{211}')
 	DECLARE CFun192 CURSOR READ_ONLY FAST_FORWARD FOR
 		Select ID,InfoVal From @Tb order by ID
 	OPEN CFun192
 	FETCH NEXT FROM CFun192 INTO @Int1,@Value1
 	WHILE (@@FETCH_STATUS = 0)
 	BEGIN
 		Set @Value2=dbo.Fun186(@G,@Int1,0,null)
 		Set @T=REPLACE(@T,@Value1,@Value2)
 		FETCH NEXT FROM CFun192 INTO @Int1,@Value1
 	END
 	CLOSE CFun192
 	DEALLOCATE CFun192
 	return @T
 end
 return null
 end
GO
/****** Object:  UserDefinedFunction [dbo].[GetTime]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[GetTime](@FT datetime)returns datetime 
 as begin 
 if(@FT Is Null) 
 	return null 
 declare @FL float 
 Select @FL=DATEPART(Second,@FT)+(DATEPART(Minute,@FT)*60)+(DATEPART(HOUR,@FT)*3600) 
 declare @Rt datetime 
 Set @Rt=DateAdd(Second,@FL,0) 
 return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[GetTimeText]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[GetTimeText](@D datetime)returns nvarchar(20) 
 as begin 
 	declare @R varchar(20) 
 	Set @R=Convert(varchar(3),DATEPART(HOUR,@D))+':'+Convert(varchar(3),DATEPART(MINUTE,@D))--+':'+Convert(varchar(3),DATEPART(SECOND,@D)) 
 	return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[GetValueFromThreeVarchar]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[GetValueFromThreeVarchar](@ValueToGet tinyint, @Value1 nvarchar(255), @Value2 nvarchar(255), @Value3 nvarchar(255))returns nvarchar(255) 
 As begin 
 	declare @Rt nvarchar(255) 
 	if(@ValueToGet>2) 
 		set @Rt=@Value3 
 	else if(@ValueToGet>1) 
 		set @Rt=@Value2 
 	else 
 		set @Rt=@Value1 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[IFEqualReturnGuide]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[IFEqualReturnGuide](@Value1 int,@Value2 int,@GuideToReturn uniqueidentifier,@GuideIfNot uniqueidentifier)returns uniqueidentifier 
 as begin 
 declare @Rt uniqueidentifier 
 	if(@Value1=@Value2) 
 		set @Rt= @GuideToReturn 
 	else 
 		set @Rt= @GuideIfNot 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[IFNegative]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[IFNegative](@Cnn [int],@ReturnValue [float])returns [float] 
   as begin  
 	declare @Rt [float] 
 	if (@Cnn<0) 
 		set @Rt=@ReturnValue 
 	else 
 		set @Rt=0 
 return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[IFNullDate]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[IFNullDate](@Value datetime,@ReturnValue datetime)returns datetime 
    as begin   
      Declare @Rt datetime 
  	if (@Value is null)  
  		set @Rt = @ReturnValue  
  	else  
  		set @Rt = @Value  
  return @Rt  
  end
GO
/****** Object:  UserDefinedFunction [dbo].[IFNullGuide]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[IFNullGuide](@Value uniqueidentifier,@ReturnValue uniqueidentifier)returns uniqueidentifier 
    as begin   
      Declare @Rt uniqueidentifier 
  	if (@Value is null)  
  		set @Rt = @ReturnValue  
  	else  
  		set @Rt = @Value  
  return @Rt  
  end
GO
/****** Object:  UserDefinedFunction [dbo].[IFNullNumber]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[IFNullNumber](@Value Float,@ReturnValue Float)returns Float 
    as begin   
      Declare @Rt Float 
  	if (@Value is null)  
  		set @Rt = @ReturnValue  
  	else  
  		set @Rt = @Value  
  return @Rt  
  end
GO
/****** Object:  UserDefinedFunction [dbo].[IFNullString]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[IFNullString](@Value nvarchar(255),@ReturnValue nvarchar(255))returns nvarchar(255) 
    as begin   
      Declare @Rt nvarchar(255) 
  	if (@Value is null)  
  		set @Rt = @ReturnValue  
  	else  
  		begin  
  		    if (Len(@Value)>0)  
  		        set @Rt = @Value  
  		    else  
  		        set @Rt = @ReturnValue  
  		end  
  return @Rt  
  end
GO
/****** Object:  UserDefinedFunction [dbo].[IFPositive]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[IFPositive](@Cnn [int],@ReturnValue [float])returns [float] 
   as begin  
 	declare @Rt [float] 
 	if (@Cnn>0) 
 		set @Rt=@ReturnValue 
 	else 
 		set @Rt=0 
 return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[IIF]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[IIF](@IIFValue tinyint, @TrueValue tinyint, @TrueValue2 tinyint ,@ValueIFTrue float,@ValueIFFalse float)returns float 
 as begin 
 	if(@IIFValue=@TrueValue) 
 		return @ValueIFTrue 
 	if(@IIFValue=@TrueValue2) 
 		return @ValueIFTrue 
 	return @ValueIFFalse 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[IsEqualGuides]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Function [dbo].[IsEqualGuides](@G1 uniqueidentifier,@G2 uniqueidentifier)returns bit 
 as begin 
 declare @Rt bit 
 if(@G1 Is Null And @G2 Is Null) 
 	Set @Rt=1 
 else 
 begin 
 	if(@G1=@G2) 
 		Set @Rt=1 
 	else 
 		Set @Rt=0 
 end 
 return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[JsonToData]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Function [dbo].[JsonToData](@T nvarchar(max)) returns @Rt Table(iName nvarchar(200),iField nvarchar(max),iValue nvarchar(max))
 as begin
 Set @T=REPLACE(@T,'
"','
')
 if(left(@T,1))='{'
 begin
 	if(right(@T,1)='}')
 		Set @T=SUBSTRING(@T,2,len(@T)-4)
 	else
 		return
 end
 declare @N1 int
 declare @N2 int
 declare @vType int--1 : Text , 2 : Data
 Set @vType=0
 Set @N1=CHARINDEX(':',@T)
 declare @InSetValue bit
 declare @RtValue nvarchar(max)
 declare @Crh nvarchar(1)
 declare @Wrk bit
 declare @iVName nvarchar(max)
 declare @LV int
 Set @LV=1
 declare @DCnt int
 declare @GrStart int
 while(@N1>0)
 begin
 	Set @GrStart=0
 	Set @Wrk=1
 	Set @RtValue=''
 	Set @N2=@N1+1
 	Set @iVName=replace(SUBSTRING(@T,@LV,@N1-@LV),'"', '')
 	Set @iVName=ltrim(rtrim(REPLACE(@iVName, ',',' ')))
 	while(@Wrk=1 And @N2<=Len(@T))
 	begin
 		Set @Crh=SUBSTRING(@T,@N2,1)
 		if(@vType=0)
 		begin
 			Set @vType=(case @Crh
 			when '"' then 1
 			when '{' then 2
 			when '[' then 2
 			else 0 end)
 			if(@vType>0)
 			begin
 				Set @InSetValue=1
 				Set @DCnt=1
 			end
 		end
 		else if(@vType>0)
 		begin
 			if(@vType=1 And @Crh='"')
 			begin
 				Select @InSetValue=0,@Wrk=0
 				Insert Into @Rt(iName,iValue)values(@iVName,ltrim(rtrim(@RtValue)))
 			end
 			else if(@vType=2 And @DCnt<=1 And @Crh in(']','}'))
 			begin
 				Select @InSetValue=0,@Wrk=0
 				Insert Into @Rt(iName,iField,iValue)Select @iVName,ltrim(rtrim(iName)),iValue From dbo.JsonToData(@RtValue)
 			end
 			else if(@Crh in('[','{'))
 			begin
 				Set @DCnt=@DCnt+1
 			end
 			if(@InSetValue=1)
 				Set @RtValue=@RtValue+@Crh
 		end
 		Set @N2=@N2+1
 	end
 	--Select SUBSTRING(@T,@N1+1,1)
 --	return
 	Set @vType=0
 	Set @LV=@N2
 	Set @N1=CHARINDEX(':',@T,@N2)
 end
 return
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Number]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[Number](@Nmb as varchar(100))returns float 
 as begin 
 if(@Nmb Is Null)return 0 
 declare @Res float 
 declare @CIx int 
 Set @CIx=CHARINDEX('e+',@Nmb) 
 if(@CIx>0) 
 begin 
 	declare @Q float 
 	Set @Q=Convert(float,SUBSTRING(@Nmb,1,@CIx-1)) 
 	declare @Zc int 
 	Set @Zc=Convert(int,SUBSTRING(@Nmb,@CIx+1,len(@Nmb)-@CIx)) 
 	While(@Zc>0) 
 	begin 
 		Set @Q=@Q*10 
 		Set @Zc=@Zc-1 
 	end 
 	return @Q 
 end 
 declare @Len float 
 declare @I int 
 Set @Len=1 
 Set @I=0 
 Set @Res=0 
 declare @Allow bit 
 declare @Nom tinyint 
 declare @S varchar(5) 
 declare @It bit 
 while(@I<Len(@Nmb)) 
 begin 
 	Set @Allow=1 
 	Set @Nom=0 
 	Set @S=Substring(@Nmb,Len(@Nmb) - @I, 1) 
 	Set @It=0 
 	if(@S='1') 
 	begin 
 		Set @Nom = 1 
 		Set @It = 1 
 	end 
 	else if(@S='2') 
 	begin 
 		Set @Nom = 2 
 		Set @It = 1 
 	end 
 	else if(@S='3') 
 	begin 
 		Set @Nom = 3 
 		Set @It = 1 
 	end 
 	else if(@S='4') 
 	begin 
 		Set @Nom = 4 
 		Set @It = 1 
 	end 
 	else if(@S='5') 
 	begin 
 		Set @Nom = 5 
 		Set @It = 1 
 	end 
 	else if(@S='6') 
 	begin 
 		Set @Nom = 6 
 		Set @It = 1 
 	end 
 	else if(@S='7') 
 	begin 
 		Set @Nom = 7 
 		Set @It = 1 
 	end 
 	else if(@S='8') 
 	begin 
 		Set @Nom = 8 
 		Set @It = 1 
 	end 
 	else if(@S='9') 
 	begin 
 		Set @Nom = 9 
 		Set @It = 1 
 	end 
 	else if(@S='0') 
 	begin 
 		Set @Nom = 0 
 		Set @It = 1 
 	end 
 	else if(@S='.') 
 	begin 
 		Set @It = 0 
 		Set @Res = @Res / @Len 
 		Set @Len = 0.1 
 	end 
 	else 
 	begin 
 		Set @Allow = 0 
 	end 
 	if (@Allow = 1) 
 	begin 
 		if (@It = 1) 
 			Set @Res = @Res+(@Nom * @Len) 
 		Set @Len = @Len * 10 
 	end 
 	Set @I=@I+1 
 end 
 if (Len(@Nmb) > 0) 
 begin 
     if (Left(@Nmb,1) = '-') 
         return @Res * -1 
     else 
         return @Res 
 end 
 return @Res 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Ratio]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Ratio](@Num1 float,@Num2 float)returns float 
 as 
 begin 
 declare @Rt float 
 	if(@Num2<>0) 
 		set @Rt = @Num1/@Num2 
 	else 
 		set @Rt=0 
 	return @Rt 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[TextToDateTime]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[TextToDateTime](@V nvarchar(25))returns datetime 
 as begin 
 if(Len(IsNull(@V,''))<5) 
  	return null 
 declare @R datetime 
 declare @C varchar(1) 
 if(CHARINDEX('/',@V)>0) 
  	Set @C='/' 
 else if(CHARINDEX('',@V)>0) 
  	Set @C='' 
 else if(CHARINDEX('-',@V)>0) 
  	Set @C='-' 
 else if(CHARINDEX(' ',@V)>0) 
  	Set @C=' ' 
 else 
 begin 
 	Set @R=Convert(datetime,dbo.Number(@V)-2) 
  	return @R 
 end 
 if(CHARINDEX(@C,@V)>0) 
 begin 
  	Set @R=DATEADD(Year,dbo.Number(Left(@V,CHARINDEX(@C,@V)-1))-1900,0) 
  	Set @V=SUBSTRING(@V,CHARINDEX(@C,@V)+1,LEN(@V)-CHARINDEX(@C,@V)) 
 end 
 ----------------------------- 
 if(CHARINDEX(@C,@V)>0) 
 begin 
  	Set @R=DATEADD(Month,dbo.Number(Left(@V,CHARINDEX(@C,@V)-1))-1,@R) 
  	Set @V=SUBSTRING(@V,CHARINDEX(@C,@V)+1,LEN(@V)-CHARINDEX(@C,@V)) 
 end 
 else if(LEN(@V)<=2) 
 begin 
  	Set @R=DATEADD(Month,dbo.Number(@V)-1,@R) 
  	return @R 
 end 
 else 
 begin 
  	Set @R=DATEADD(Month,dbo.Number(Left(@V,2))-1,@R) 
  	return @R 
 end 
 ----------------------------- 
 if(CHARINDEX('T',@V)>0) 
 begin 
  	Set @R=DATEADD(Day,dbo.Number(Left(@V,CHARINDEX('T',@V)-1))-1,@R) 
  	Set @V=SUBSTRING(@V,CHARINDEX('T',@V)+1,LEN(@V)-CHARINDEX('T',@V)) 
 end 
 else if(LEN(@V)<=2) 
 begin 
  	Set @R=DATEADD(Day,dbo.Number(@V)-1,@R) 
  	return @R 
 end 
 else 
 begin 
  	Set @R=DATEADD(Day,dbo.Number(Left(@V,2))-1,@R) 
  	return @R 
 end 
 ----------------------------- 
 if(CHARINDEX(':',@V)>0) 
 begin 
  	Set @R=DATEADD(Hour,dbo.Number(Left(@V,CHARINDEX(':',@V)-1)),@R) 
  	Set @V=SUBSTRING(@V,CHARINDEX(':',@V)+1,LEN(@V)-CHARINDEX(':',@V)) 
  	if(CHARINDEX(':',@V)>0) 
  	begin 
  		Set @R=DATEADD(MINUTE,dbo.Number(Left(@V,CHARINDEX(':',@V)-1)),@R) 
  		Set @V=SUBSTRING(@V,CHARINDEX(':',@V)+1,LEN(@V)-CHARINDEX(':',@V)) 
  		if(LEN(@V)>=2) 
  			Set @R=DATEADD(SECOND,dbo.Number(Left(@V,2)),@R) 
  	end 
 end 
 return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[TimeCountsInPeriod]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[TimeCountsInPeriod](@P datetime,@T datetime)returns datetime 
 as begin 
 	declare @PS float 
 	declare @TS float 
 	if(Convert(float,@T)<0)Set @T=@T+1 
 	Select @PS=dbo.TimeSeconds(@P),@TS=dbo.TimeSeconds(@T) 
 	declare @Rt int 
 	Set @Rt=0 
 	while(@PS>@TS) 
 	begin 
 		Select @Rt=@Rt+1,@PS=@PS-@TS 
 	end 
 	declare @V datetime 
 	Set @V=DateAdd(day,@Rt,dateadd(Second,@PS,0)) 
 	return @V 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[TimeDifference]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[TimeDifference](@FT datetime,@TT datetime)returns datetime 
 as begin 
 if(@FT Is Null Or @TT Is Null Or @FT>@TT) 
 	return null 
 declare @FL float 
 declare @TL float 
 Select @FL=dbo.TimeSeconds(@FT) 
 Select @TL=dbo.TimeSeconds(@TT) 
 declare @R datetime 
 if(@TL>@FL)Set @R=DATEADD(Second,@TL-@FL,0) 
 return @R 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[TimeSeconds]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[TimeSeconds](@FT datetime)returns float 
 as begin 
 if(@FT Is Null) 
 	return null 
 declare @FL float 
 Select @FL=DATEPART(Second,@FT)+(DATEPART(Minute,@FT)*60)+(DATEPART(HOUR,@FT)*3600)+(dbo.DateToInt(@FT)*86400) 
 return @FL 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[UTF8_Encode]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[UTF8_Encode](@s nvarchar(Max)) 
 returns varbinary(Max) 
 as 
 begin 
 declare @i int = 1, @n int = datalength(@s)/2, @r varbinary(max) = 0x, @c int, @d varbinary(4) 
 while @i <= @n 
 begin 
     set @c = unicode(substring(@s, @i, 1)) 
     if (@c & 0xFC00) = 0xD800 
     begin 
         set @i += 1 
         set @c = ((@c & 0x3FF) * 0x400) | 0x10000 | (unicode(substring(@s, @i, 1)) & 0x3FF) 
     end 
     if @c < 0x80 
         set @d = cast(@c as binary(1)) 
     if @c >= 0x80 and @c < 0x800 
         set @d = cast(((@c * 4) & 0xFF00) | (@c & 0x3F) | 0xC080 as binary(2)) 
     if @c >= 0x800 and @c < 0x10000 
         set @d = cast(((@c * 0x10) & 0xFF0000) | ((@c * 4) & 0x3F00) | (@c & 0x3F) | 0xe08080 as binary(3)) 
     if @c >= 0x10000 
         set @d = cast(((@c * 0x40) & 0xFF000000) | ((@c * 0x10) & 0x3F0000) | ((@c * 4) & 0x3F00) | (@c & 0x3F) | 0xf0808080 as binary(4)) 
     set @r += @d 
     set @i += 1 
 end 
 return @r 
 end
GO
/****** Object:  UserDefinedFunction [dbo].[Val]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create function [dbo].[Val](@SNumber float)returns float 
 as begin 
 	declare @Nb float 
 	set @Nb=0 
 	if(@SNumber is not null) 
 		set @Nb=@SNumber 
 	return @Nb 
 end 
GO
/****** Object:  Table [dbo].[DBInformations]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DBInformations](
	[DBVer_1236] [int] IDENTITY(1,1) NOT NULL,
 CONSTRAINT [PK_DBInformations] PRIMARY KEY CLUSTERED 
(
	[DBVer_1236] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL000]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL000](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[InformationFor] [nvarchar](255) NOT NULL,
	[InformationValue] [ntext] NULL,
 CONSTRAINT [PK_TBL000] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL001]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL001](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CurrencyName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[Security] [tinyint] NOT NULL,
	[Rate] [float] NOT NULL,
	[CurrencyShortcut] [nvarchar](255) NULL,
	[CurrencyPartName] [nvarchar](255) NULL,
	[PartLatinName] [nvarchar](255) NULL,
	[Partity] [float] NOT NULL,
 CONSTRAINT [PK_TBL001_1] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL002]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL002](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardCode] [nvarchar](255) NOT NULL,
	[ClosingAccountName] [nvarchar](255) NOT NULL,
	[ClosingAccountLatinName] [nvarchar](255) NULL,
	[Security] [tinyint] NOT NULL,
	[MasterCloseAccount] [uniqueidentifier] NULL,
	[CloseAccounts] [tinyint] NOT NULL,
	[DebitBalanceCaption] [nvarchar](255) NULL,
	[CreditBalanceCaption] [nvarchar](255) NULL,
	[Notes] [ntext] NULL,
	[BeginningInventoryAccount] [uniqueidentifier] NULL,
	[ClosingInventoryAccount] [uniqueidentifier] NULL,
	[BalanceAccount] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL002] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL003]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL003](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [nvarchar](256) NOT NULL,
	[CardTerm] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_TBL003] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [IX_TBL003] UNIQUE NONCLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL004]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL004](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[NotActive] [bit] NOT NULL,
	[ClosingAccount] [uniqueidentifier] NOT NULL,
	[CardCode] [nvarchar](255) NOT NULL,
	[AccountName] [nvarchar](255) NOT NULL,
	[MainAccount] [uniqueidentifier] NULL,
	[DefaultCurrency] [uniqueidentifier] NULL,
	[DefaultCostCenter] [uniqueidentifier] NULL,
	[DefaultBranch] [uniqueidentifier] NULL,
	[DefaultProject] [uniqueidentifier] NULL,
	[Item_ID] [uniqueidentifier] NULL,
	[LatinName] [nvarchar](255) NULL,
	[TaxCode] [nvarchar](255) NULL,
	[Security] [tinyint] NOT NULL,
	[MaxDebit] [float] NOT NULL,
	[MaxCredit] [float] NOT NULL,
	[NotepaperMaxDebit] [float] NOT NULL,
	[NotepaperMaxCredit] [float] NOT NULL,
	[Caution] [smallint] NOT NULL,
	[BuiltIn] [datetime] NOT NULL,
	[Notes] [ntext] NULL,
	[CardImage] [image] NULL,
	[CalculatingField] [uniqueidentifier] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL004] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL005]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL005](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[NotActive] [bit] NOT NULL,
	[CardCode] [nvarchar](255) NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CostCenter] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[CardType] [tinyint] NOT NULL,
	[DefaultAccount] [uniqueidentifier] NULL,
	[DefaultAccount2] [uniqueidentifier] NULL,
	[DefaultAccount3] [uniqueidentifier] NULL,
	[MainCostCenter] [uniqueidentifier] NULL,
	[DefaultValue] [float] NULL,
	[IntValue] [int] NOT NULL,
	[Notes] [ntext] NULL,
	[CardImage] [image] NULL,
	[CostCenterNotes2] [nvarchar](255) NULL,
	[CostCenterNotes3] [nvarchar](255) NULL,
	[CostCenterNotes4] [nvarchar](255) NULL,
	[CostCenterNotes5] [nvarchar](255) NULL,
	[CostCenterNotes6] [nvarchar](255) NULL,
	[CostCenterNotes7] [nvarchar](255) NULL,
	[CostCenterNotes8] [nvarchar](255) NULL,
	[CostCenterNotes9] [nvarchar](255) NULL,
	[UsedInHR] [bit] NOT NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL005] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL006]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL006](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[CardCode] [nvarchar](255) NOT NULL,
	[TaxRatio] [float] NOT NULL,
	[GroupName] [nvarchar](255) NOT NULL,
	[Security] [tinyint] NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[MainAccount] [uniqueidentifier] NULL,
	[TradingClosing] [uniqueidentifier] NULL,
	[BarcodeType] [uniqueidentifier] NULL,
	[ForceCodesInInput] [bit] NOT NULL,
	[ForceCodesInOutput] [bit] NOT NULL,
	[ExpiryDateRequired] [bit] NOT NULL,
	[CostCenterRequired] [bit] NOT NULL,
	[Category01Required] [bit] NOT NULL,
	[Category02Required] [bit] NOT NULL,
	[Category03Required] [bit] NOT NULL,
	[Category04Required] [bit] NOT NULL,
	[Category05Required] [bit] NOT NULL,
	[PatchCodeRequired] [bit] NOT NULL,
	[ExpiryDateCheckInventory] [bit] NOT NULL,
	[CostCenterCheckInventory] [bit] NOT NULL,
	[Category01CheckInventory] [bit] NOT NULL,
	[Category02CheckInventory] [bit] NOT NULL,
	[Category03CheckInventory] [bit] NOT NULL,
	[Category04CheckInventory] [bit] NOT NULL,
	[Category05CheckInventory] [bit] NOT NULL,
	[PatchCodeCheckInventory] [bit] NOT NULL,
	[CannotDuplicateSerial] [bit] NOT NULL,
	[BalanceSheetClosing] [uniqueidentifier] NULL,
	[TextValue01] [nvarchar](255) NULL,
	[TextValue02] [nvarchar](255) NULL,
	[IsAssets] [bit] NOT NULL,
	[Notes] [ntext] NULL,
	[ButtonColor] [int] NOT NULL,
	[Balance_Selected] [bit] NOT NULL,
	[CardImage] [image] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL006] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL007]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL007](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardCode] [nvarchar](255) NOT NULL,
	[ProductName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[StatementName] [nvarchar](255) NULL,
	[Source] [nvarchar](255) NULL,
	[StockProduct] [smallint] NULL,
	[ListAlternatives] [bit] NULL,
	[GroupGuid] [uniqueidentifier] NOT NULL,
	[DefaultCurrency] [uniqueidentifier] NULL,
	[AccountID] [uniqueidentifier] NULL,
	[RelatedAgent] [uniqueidentifier] NULL,
	[Security] [tinyint] NOT NULL,
	[Specification] [nvarchar](max) NULL,
	[ProductType] [tinyint] NOT NULL,
	[ItemColor] [int] NULL,
	[DefaultUnit] [smallint] NULL,
	[NotActive] [bit] NOT NULL,
	[NotTaxable] [bit] NOT NULL,
	[NotDiscountable] [bit] NOT NULL,
	[ExpiryDateRequired] [bit] NOT NULL,
	[Custom] [nvarchar](255) NULL,
	[Custom2] [nvarchar](255) NULL,
	[Custom3] [nvarchar](255) NULL,
	[Custom4] [nvarchar](255) NULL,
	[Custom5] [nvarchar](255) NULL,
	[Unit] [nvarchar](255) NULL,
	[Unit2] [nvarchar](255) NULL,
	[Unit3] [nvarchar](255) NULL,
	[Barcode] [nvarchar](255) NULL,
	[Barcode2] [nvarchar](255) NULL,
	[Barcode3] [nvarchar](255) NULL,
	[Weight] [float] NOT NULL,
	[Value] [float] NOT NULL,
	[Length] [float] NOT NULL,
	[Width] [float] NOT NULL,
	[Hieght] [float] NOT NULL,
	[Weight2] [float] NOT NULL,
	[Value2] [float] NOT NULL,
	[Length2] [float] NOT NULL,
	[Width2] [float] NOT NULL,
	[Hieght2] [float] NOT NULL,
	[Weight3] [float] NOT NULL,
	[Value3] [float] NOT NULL,
	[Length3] [float] NOT NULL,
	[Width3] [float] NOT NULL,
	[Hieght3] [float] NOT NULL,
	[IsAssets] [bit] NOT NULL,
	[DefaultExpiryDate] [datetime] NULL,
	[Factor2] [float] NULL,
	[Factor3] [float] NULL,
	[TaxRatio] [float] NULL,
	[MaxLimit] [float] NULL,
	[MinLimit] [float] NULL,
	[AgentPrice] [float] NOT NULL,
	[AgentPrice2] [float] NOT NULL,
	[AgentPrice3] [float] NOT NULL,
	[AgentPriceTax] [float] NOT NULL,
	[AgentPriceCurrency] [uniqueidentifier] NULL,
	[WholePrice] [float] NOT NULL,
	[WholePrice2] [float] NOT NULL,
	[WholePrice3] [float] NOT NULL,
	[WholePriceTax] [float] NOT NULL,
	[WholePriceCurrency] [uniqueidentifier] NULL,
	[EndUserPrice] [float] NOT NULL,
	[EndUserPrice2] [float] NOT NULL,
	[EndUserPrice3] [float] NOT NULL,
	[EndUserPriceTax] [float] NOT NULL,
	[EndUserPriceCurrency] [uniqueidentifier] NULL,
	[Price5Item] [float] NOT NULL,
	[Price5Item2] [float] NOT NULL,
	[Price5Item3] [float] NOT NULL,
	[Price5ItemTax] [float] NOT NULL,
	[Price5ItemCurrency] [uniqueidentifier] NULL,
	[Price6Item] [float] NOT NULL,
	[Price6Item2] [float] NOT NULL,
	[Price6Item3] [float] NOT NULL,
	[Price6ItemTax] [float] NOT NULL,
	[Price6ItemCurrency] [uniqueidentifier] NULL,
	[Price7Item] [float] NOT NULL,
	[Price7Item2] [float] NOT NULL,
	[Price7Item3] [float] NOT NULL,
	[Price7ItemTax] [float] NOT NULL,
	[Price7ItemCurrency] [uniqueidentifier] NULL,
	[StanderCost] [float] NOT NULL,
	[StanderCost2] [float] NOT NULL,
	[StanderCost3] [float] NOT NULL,
	[StanderCostTax] [float] NOT NULL,
	[StanderCostCurrency] [uniqueidentifier] NULL,
	[CardOrder] [int] NOT NULL,
	[Points] [float] NOT NULL,
	[Points2] [float] NOT NULL,
	[Points3] [float] NOT NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[CardImage] [image] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[DefaultVariableUnit] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
	[ManuallyActivate] [bit] NULL,
 CONSTRAINT [PK_TBL007] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL008]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL008](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardCode] [nvarchar](255) NOT NULL,
	[Security] [tinyint] NOT NULL,
	[WarehouseName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[MainWarehouse] [uniqueidentifier] NULL,
	[TradingClosing] [uniqueidentifier] NULL,
	[BalanceSheetClosing] [uniqueidentifier] NULL,
	[Notes] [ntext] NULL,
	[CardImage] [image] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
	[NotActive] [bit] NOT NULL,
 CONSTRAINT [PK_TBL008] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL009]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL009](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[EntryName] [nvarchar](255) NOT NULL,
	[EntryLatinName] [nvarchar](255) NULL,
	[UseTerms] [tinyint] NOT NULL,
	[EntryType] [tinyint] NOT NULL,
	[EntryType2] [tinyint] NOT NULL,
	[CostCenterType] [tinyint] NOT NULL,
	[CostCenterType2] [tinyint] NOT NULL,
	[CostCenterType3] [tinyint] NOT NULL,
	[ProjectType] [tinyint] NOT NULL,
	[ProjectType2] [tinyint] NOT NULL,
	[ProjectType3] [tinyint] NOT NULL,
	[BranchType] [tinyint] NOT NULL,
	[BranchType2] [tinyint] NOT NULL,
	[BranchType3] [tinyint] NOT NULL,
	[CategoriesType] [tinyint] NOT NULL,
	[CategoriesType2] [tinyint] NOT NULL,
	[CategoriesType3] [tinyint] NOT NULL,
	[AgentType] [tinyint] NOT NULL,
	[AgentType2] [tinyint] NOT NULL,
	[AgentType3] [tinyint] NOT NULL,
	[DetailSearchBy] [ntext] NULL,
	[DoNotGenerateEntry] [bit] NOT NULL,
	[IsPayment] [tinyint] NOT NULL,
	[CurrencyUnChangeable] [bit] NOT NULL,
	[BooleanOption1] [tinyint] NOT NULL,
	[BooleanOption2] [tinyint] NOT NULL,
	[BooleanOption3] [tinyint] NOT NULL,
	[BooleanOption4] [tinyint] NOT NULL,
	[BooleanOption5] [tinyint] NOT NULL,
	[BooleanOption6] [tinyint] NOT NULL,
	[BooleanOption7] [tinyint] NOT NULL,
	[BooleanOption8] [tinyint] NOT NULL,
	[BooleanOption9] [tinyint] NOT NULL,
	[BooleanOption10] [tinyint] NOT NULL,
	[BooleanOption11] [tinyint] NOT NULL,
	[DoNotPostToAccounts] [bit] NOT NULL,
	[DoNotGenerateEntryOnCollect] [bit] NOT NULL,
	[UseSameAccountForCollect] [bit] NOT NULL,
	[SingleAccounts] [bit] NOT NULL,
	[BuiltTowEntries] [bit] NOT NULL,
	[AffectContraAccountInEntry] [bit] NOT NULL,
	[ReverseCollectEntry] [bit] NOT NULL,
	[Fields] [ntext] NULL,
	[BondType] [int] NOT NULL,
	[EntryMode] [int] NOT NULL,
	[DefaultValue] [float] NOT NULL,
	[CardMode] [tinyint] NOT NULL,
	[DefaultCurrency] [uniqueidentifier] NULL,
	[CollectAccount] [uniqueidentifier] NULL,
	[RelatedBondType] [uniqueidentifier] NULL,
	[DefaultCostCenter] [uniqueidentifier] NULL,
	[DefaultProject] [uniqueidentifier] NULL,
	[DefaultBranch] [uniqueidentifier] NULL,
	[IntermediateAccount] [uniqueidentifier] NULL,
	[TruncateAccount] [uniqueidentifier] NULL,
	[ReturnAccount] [uniqueidentifier] NULL,
	[DebitName] [nvarchar](255) NULL,
	[CreditName] [nvarchar](255) NULL,
	[ShortcutName] [nvarchar](255) NULL,
	[LatinShortcutName] [nvarchar](255) NULL,
	[Text01] [nvarchar](255) NULL,
	[Text02] [nvarchar](255) NULL,
	[Notes] [ntext] NULL,
	[TwoCurrencies] [bit] NOT NULL,
	[SaveImageAsLocation] [bit] NOT NULL,
	[DefaultAccount] [uniqueidentifier] NULL,
	[FinancialTransactionsBond] [uniqueidentifier] NULL,
	[AutoGenerateContraAccount] [bit] NOT NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[DefaultPrintType] [uniqueidentifier] NULL,
	[BankProcuringCommissionAccount] [uniqueidentifier] NULL,
	[AttachmentType] [tinyint] NOT NULL,
	[BooleanOption12] [tinyint] NOT NULL,
 CONSTRAINT [PK_TBL009] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL010]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL010](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[BondNumber] [int] NOT NULL,
	[PayType] [uniqueidentifier] NULL,
	[TimeLength] [int] NOT NULL,
	[BondNumber2] [int] NOT NULL,
	[DocumentNumber] [nvarchar](255) NULL,
	[Posted] [tinyint] NOT NULL,
	[Collected] [bit] NOT NULL,
	[Boolean01] [bit] NOT NULL,
	[Boolean02] [bit] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[MainGuide2] [uniqueidentifier] NULL,
	[BondDate] [datetime] NOT NULL,
	[BondDate2] [datetime] NULL,
	[OperationDate] [datetime] NULL,
	[DueDate] [datetime] NULL,
	[DoneIn] [datetime] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NOT NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[AccountGuide2] [uniqueidentifier] NULL,
	[AccountGuide3] [uniqueidentifier] NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[AgentGuide2] [uniqueidentifier] NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[DynamicBond] [uniqueidentifier] NULL,
	[RelatedAdministration] [uniqueidentifier] NULL,
	[Rate] [float] NOT NULL,
	[Value] [float] NOT NULL,
	[Value2] [float] NOT NULL,
	[Value3] [float] NOT NULL,
	[Notes] [nvarchar](255) NULL,
	[BondNotes2] [nvarchar](255) NULL,
	[BondNotes3] [nvarchar](255) NULL,
	[BondNotes4] [nvarchar](255) NULL,
	[BondNotes5] [nvarchar](255) NULL,
	[BondNotes6] [nvarchar](255) NULL,
	[BondNotes7] [nvarchar](255) NULL,
	[BondNotes8] [nvarchar](255) NULL,
	[BondNotes9] [nvarchar](255) NULL,
	[BondNotes10] [nvarchar](255) NULL,
	[BillGuide] [uniqueidentifier] NULL,
	[BillGuide2] [uniqueidentifier] NULL,
	[RelatedBillType] [uniqueidentifier] NULL,
	[MainBondType] [uniqueidentifier] NULL,
	[RelatedArchive] [uniqueidentifier] NULL,
	[RelatedArchive2] [uniqueidentifier] NULL,
	[InsertedIn] [datetime] NOT NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
	[CardType] [tinyint] NOT NULL,
	[CardImage] [image] NULL,
 CONSTRAINT [PK_TBL010] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL011]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL011](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[RowGuide] [uniqueidentifier] NULL,
	[EntryNumber] [int] NOT NULL,
	[Posted] [tinyint] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[EntryDate] [datetime] NOT NULL,
	[DoneIn] [datetime] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NOT NULL,
	[BillGuide] [uniqueidentifier] NULL,
	[BondGuide] [uniqueidentifier] NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[InsertedIn] [datetime] NOT NULL,
	[MainBillGuide] [uniqueidentifier] NULL,
	[TypeID] [smallint] NOT NULL,
	[Rate] [float] NOT NULL,
	[Notes] [nvarchar](255) NULL,
	[CardImage] [image] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
 CONSTRAINT [PK_Table1_1] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL012]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL012](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[RowGuide] [uniqueidentifier] NOT NULL,
	[AccountGuide] [uniqueidentifier] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NOT NULL,
	[Debit] [float] NOT NULL,
	[Credit] [float] NOT NULL,
	[DebitRate] [float] NOT NULL,
	[CreditRate] [float] NOT NULL,
	[EntryDetailsNotes2] [nvarchar](255) NULL,
	[EntryDetailsNotes3] [nvarchar](255) NULL,
	[EntryDetailsNotes4] [nvarchar](255) NULL,
	[EntryDetailsNotes5] [nvarchar](255) NULL,
	[ContraAccount] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Description] [nvarchar](255) NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[Checked] [tinyint] NOT NULL,
	[RowDate] [datetime] NULL,
	[CalcDate] [datetime] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[NoMerge] [bit] NOT NULL,
	[CreditCard] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL012] PRIMARY KEY CLUSTERED 
(
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL013]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL013](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[UsGuide] [uniqueidentifier] NOT NULL,
	[CardCode] [nvarchar](255) NULL,
	[NotActive] [bit] NOT NULL,
	[UserName] [nvarchar](255) NOT NULL,
	[Password] [nvarchar](50) NULL,
	[Informations] [ntext] NULL,
	[Security] [tinyint] NOT NULL,
	[UserLanguage] [smallint] NOT NULL,
	[POSGuide] [uniqueidentifier] NULL,
	[BuiltIn] [datetime] NOT NULL,
	[ShowInDropDown] [bit] NOT NULL,
	[Notes] [ntext] NULL,
	[UserColor] [int] NULL,
	[RelatedAgent] [uniqueidentifier] NULL,
	[OptionGuide] [uniqueidentifier] NULL,
	[CardImage] [image] NULL,
	[CostCenterGuide] [uniqueidentifier] NULL,
	[ProjectGuide] [uniqueidentifier] NULL,
	[BranchGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_Tbl001] PRIMARY KEY CLUSTERED 
(
	[UsGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [IX_TBL013] UNIQUE NONCLUSTERED 
(
	[BuiltIn] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL014]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL014](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[CardType] [int] NOT NULL,
	[WindowType] [int] NOT NULL,
	[IntValue01] [int] NOT NULL,
	[IntValue02] [int] NOT NULL,
	[IntValue03] [int] NOT NULL,
	[IntValue04] [int] NOT NULL,
	[NumberValue01] [float] NOT NULL,
	[NumberValue02] [float] NOT NULL,
	[NumberValue03] [float] NOT NULL,
	[NumberValue04] [float] NOT NULL,
	[NumberValue05] [float] NOT NULL,
	[NumberValue06] [float] NOT NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[AccountGuide02] [uniqueidentifier] NULL,
	[CurrencyGuide] [uniqueidentifier] NULL,
	[CurrencyGuide02] [uniqueidentifier] NULL,
	[AttendanceGuide] [uniqueidentifier] NULL,
	[RelatedCard] [uniqueidentifier] NULL,
	[RelatedCard2] [uniqueidentifier] NULL,
	[RelatedCard3] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[PeriodType] [uniqueidentifier] NULL,
	[TextValue01] [nvarchar](255) NULL,
	[TextValue02] [nvarchar](255) NULL,
	[TextValue03] [nvarchar](255) NULL,
	[TextValue04] [nvarchar](255) NULL,
	[TextValue05] [nvarchar](255) NULL,
	[IsSelected] [bit] NOT NULL,
	[BitValue1] [bit] NOT NULL,
	[BitValue2] [bit] NOT NULL,
	[BitValue3] [bit] NOT NULL,
	[BitValue4] [bit] NOT NULL,
	[BitValue5] [bit] NOT NULL,
	[BitValue6] [bit] NOT NULL,
	[BitValue7] [bit] NOT NULL,
	[BitValue8] [bit] NOT NULL,
	[BitValue9] [bit] NOT NULL,
	[BitValue10] [bit] NOT NULL,
	[LongText01] [nvarchar](max) NULL,
	[LongText02] [nvarchar](max) NULL,
	[LongText03] [nvarchar](max) NULL,
	[Date01] [datetime] NULL,
	[Date02] [datetime] NULL,
	[Date03] [datetime] NULL,
	[Date04] [datetime] NULL,
	[CalcDate01] [datetime] NULL,
	[CalcDate02] [datetime] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[AgentGroupGuide] [uniqueidentifier] NULL,
	[BillType] [uniqueidentifier] NULL,
	[BondType] [uniqueidentifier] NULL,
	[OperationBill] [uniqueidentifier] NULL,
	[CardImage] [image] NULL,
	[Notes] [nvarchar](255) NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
	[CardDate] [datetime] NULL,
	[AgentGuide2] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL014] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL015]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL015](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[RelatedAgent] [uniqueidentifier] NULL,
	[MainAccountGuide] [uniqueidentifier] NULL,
	[MainTaxAccountGuide] [uniqueidentifier] NULL,
	[DefaultPayType] [smallint] NOT NULL,
	[GroupName] [nvarchar](255) NOT NULL,
	[Security] [tinyint] NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[Notes] [ntext] NULL,
	[CardImage] [image] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL015] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL016]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL016](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[AgentName] [nvarchar](255) NOT NULL,
	[Prefix] [nvarchar](255) NULL,
	[LatinName] [nvarchar](255) NULL,
	[BirthPlace] [nvarchar](255) NULL,
	[Suffix] [nvarchar](255) NULL,
	[IDNumber] [nvarchar](255) NULL,
	[Passport] [nvarchar](255) NULL,
	[FirstName] [nvarchar](255) NULL,
	[FatherName] [nvarchar](255) NULL,
	[LastName] [nvarchar](255) NULL,
	[TaxCode] [nvarchar](255) NULL,
	[MotherName] [nvarchar](255) NULL,
	[CardNumber] [int] NOT NULL,
	[Gender] [int] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[SalaryType] [tinyint] NOT NULL,
	[FixedSalary] [float] NOT NULL,
	[DaySalary] [float] NOT NULL,
	[CostPercentage] [float] NOT NULL,
	[NotActive] [bit] NOT NULL,
	[Birthdate] [datetime] NULL,
	[DateStart] [datetime] NULL,
	[DateBegin] [datetime] NULL,
	[DateEnd] [datetime] NULL,
	[MaxDebit] [float] NOT NULL,
	[MaxCredit] [float] NOT NULL,
	[NotepaperMaxDebit] [float] NOT NULL,
	[NotepaperMaxCredit] [float] NOT NULL,
	[Religion] [nvarchar](255) NULL,
	[Maritalstatus] [nvarchar](255) NULL,
	[DateValue1] [datetime] NULL,
	[DateValue2] [datetime] NULL,
	[DateValue3] [datetime] NULL,
	[DateValue4] [datetime] NULL,
	[DateValue5] [datetime] NULL,
	[DateValue6] [datetime] NULL,
	[DateValue7] [datetime] NULL,
	[DateValue8] [datetime] NULL,
	[DateValue9] [datetime] NULL,
	[DateValue0] [datetime] NULL,
	[DetailingItems] [bit] NOT NULL,
	[BitValue1] [bit] NOT NULL,
	[BitValue2] [bit] NOT NULL,
	[BitValue3] [bit] NOT NULL,
	[BitValue4] [bit] NOT NULL,
	[BitValue5] [bit] NOT NULL,
	[BitValue6] [bit] NOT NULL,
	[BitValue7] [bit] NOT NULL,
	[BitValue8] [bit] NOT NULL,
	[BitValue9] [bit] NOT NULL,
	[BitValue10] [bit] NOT NULL,
	[BitValue11] [bit] NOT NULL,
	[CreditNotAllowed] [bit] NOT NULL,
	[DueAge] [int] NOT NULL,
	[DueAgeType] [uniqueidentifier] NULL,
	[FloatValue1] [float] NOT NULL,
	[FloatValue2] [float] NOT NULL,
	[FloatValue3] [float] NOT NULL,
	[FloatValue4] [float] NOT NULL,
	[FloatValue5] [float] NOT NULL,
	[FloatValue6] [float] NOT NULL,
	[Barcode] [nvarchar](255) NULL,
	[PriceType] [tinyint] NOT NULL,
	[Phone] [nvarchar](255) NULL,
	[Phone2] [nvarchar](255) NULL,
	[Mobile] [nvarchar](255) NULL,
	[SubjectToTax] [bit] NOT NULL,
	[Fax] [nvarchar](255) NULL,
	[MaxDiscountRatio] [float] NOT NULL,
	[DefaultPriceType] [int] NOT NULL,
	[Nationality] [nvarchar](255) NULL,
	[Sponsor] [nvarchar](255) NULL,
	[TextValue1] [nvarchar](255) NULL,
	[TextValue2] [nvarchar](255) NULL,
	[TextValue3] [nvarchar](255) NULL,
	[TextValue4] [nvarchar](255) NULL,
	[TextValue5] [nvarchar](255) NULL,
	[TextValue6] [nvarchar](255) NULL,
	[TextValue7] [nvarchar](255) NULL,
	[TextValue8] [nvarchar](255) NULL,
	[TextValue9] [nvarchar](255) NULL,
	[TextValue0] [nvarchar](255) NULL,
	[TextValue10] [nvarchar](255) NULL,
	[TextValue11] [nvarchar](255) NULL,
	[TextValue12] [nvarchar](255) NULL,
	[TextValue13] [nvarchar](255) NULL,
	[TextValue14] [nvarchar](255) NULL,
	[TextValue15] [nvarchar](255) NULL,
	[TextValue16] [nvarchar](255) NULL,
	[TextValue17] [nvarchar](255) NULL,
	[TextValue18] [nvarchar](255) NULL,
	[TextValue19] [nvarchar](255) NULL,
	[TextValue20] [nvarchar](255) NULL,
	[TextValue21] [nvarchar](255) NULL,
	[TextValue22] [nvarchar](255) NULL,
	[TextValue23] [nvarchar](255) NULL,
	[TextValue24] [nvarchar](255) NULL,
	[TextValue25] [nvarchar](255) NULL,
	[TextValue26] [nvarchar](255) NULL,
	[RadioValue1] [tinyint] NOT NULL,
	[NumberValue1] [int] NOT NULL,
	[NumberValue2] [int] NOT NULL,
	[NumberValue3] [int] NOT NULL,
	[NumberValue4] [int] NOT NULL,
	[NumberValue5] [int] NOT NULL,
	[ItemsDiscountRatio] [float] NOT NULL,
	[EMail] [nvarchar](255) NULL,
	[Website] [nvarchar](255) NULL,
	[CashAccountID] [uniqueidentifier] NULL,
	[TaxAccountID] [uniqueidentifier] NULL,
	[AccountID] [uniqueidentifier] NOT NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[MainAgent] [uniqueidentifier] NULL,
	[MainAgent2] [uniqueidentifier] NULL,
	[MainGroupGuide] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[CostCenter2] [uniqueidentifier] NULL,
	[Warehouse] [uniqueidentifier] NULL,
	[Suspended] [bit] NOT NULL,
	[RelatedAdministration] [uniqueidentifier] NULL,
	[RelatedAdministration2] [uniqueidentifier] NULL,
	[DefaultCurrency] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[Category06] [uniqueidentifier] NULL,
	[Category07] [uniqueidentifier] NULL,
	[Category08] [uniqueidentifier] NULL,
	[Category09] [uniqueidentifier] NULL,
	[Category10] [uniqueidentifier] NULL,
	[Category11] [uniqueidentifier] NULL,
	[Category12] [uniqueidentifier] NULL,
	[Category13] [uniqueidentifier] NULL,
	[Category14] [uniqueidentifier] NULL,
	[Category15] [uniqueidentifier] NULL,
	[LongText01] [ntext] NULL,
	[LongText02] [ntext] NULL,
	[LongText03] [ntext] NULL,
	[LongTextValue] [nvarchar](max) NULL,
	[CardImage] [image] NULL,
	[CardImage2] [image] NULL,
	[Notes] [ntext] NULL,
	[FullAdress] [nvarchar](510) NULL,
	[Country] [nvarchar](255) NULL,
	[City] [nvarchar](255) NULL,
	[IsEmployee] [bit] NOT NULL,
	[MapLink] [ntext] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
	[AddressID] [uniqueidentifier] NULL,
	[RegionID] [uniqueidentifier] NULL,
	[DueAgeAmount] [int] NOT NULL,
 CONSTRAINT [PK_TBL016] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL017]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL017](
	[ID] [tinyint] NOT NULL,
	[PriceColumnName] [nvarchar](255) NOT NULL,
	[PriceTerm] [nvarchar](255) NOT NULL,
	[PricePercent] [float] NOT NULL,
	[PriceOrder] [int] NOT NULL,
	[PriceFunction] [nvarchar](max) NULL,
	[TypeID] [int] NOT NULL,
	[DetailingByCostCenter] [bit] NOT NULL,
	[DetailingByProject] [bit] NOT NULL,
	[DetailingByBranch] [bit] NOT NULL,
	[DetailingByCategory01] [bit] NOT NULL,
	[DetailingByCategory02] [bit] NOT NULL,
	[DetailingByCategory03] [bit] NOT NULL,
	[DetailingByCategory04] [bit] NOT NULL,
	[DetailingByCategory05] [bit] NOT NULL,
	[DetailingByPatchCode] [bit] NOT NULL,
	[DetailingByExpiryDate] [bit] NOT NULL,
	[DetailingByUnit] [bit] NOT NULL,
	[DetailingByVariableUnit] [bit] NOT NULL,
 CONSTRAINT [PK_TBL017] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [IX_TBL017] UNIQUE NONCLUSTERED 
(
	[PriceTerm] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL018]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL018](
	[ID] [smallint] NOT NULL,
	[MoveTerm] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_TBL018] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL019]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL019](
	[ID] [smallint] NOT NULL,
	[PayTerm] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_TBL019] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [IX_TBL019] UNIQUE NONCLUSTERED 
(
	[PayTerm] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL020]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL020](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[InvoiceName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[Shortcut] [nvarchar](255) NULL,
	[CustomFormatForTotal] [nvarchar](255) NULL,
	[LatinShortcut] [nvarchar](255) NULL,
	[DiscountCaption] [nvarchar](255) NULL,
	[QtyCalculation] [smallint] NOT NULL,
	[BillType] [smallint] NOT NULL,
	[BillKind] [smallint] NOT NULL,
	[PriceType] [tinyint] NOT NULL,
	[PriceType2] [tinyint] NOT NULL,
	[POSType] [tinyint] NOT NULL,
	[DefaultPayType] [smallint] NOT NULL,
	[DefaultItemUnit] [smallint] NOT NULL,
	[DefaultCommission] [float] NOT NULL,
	[InstalmentBondGuide] [uniqueidentifier] NULL,
	[RelatedBondType] [uniqueidentifier] NULL,
	[PaymentsBondType] [uniqueidentifier] NULL,
	[LocalAdministrativeTaxAccount] [uniqueidentifier] NULL,
	[LocalAdministrativeTaxRatio] [float] NOT NULL,
	[TaxRatio] [float] NOT NULL,
	[WithoutItemTax] [bit] NOT NULL,
	[InvoiceMovementSide] [smallint] NOT NULL,
	[AgentAccountSide] [smallint] NOT NULL,
	[Fields] [ntext] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[ShowTotals] [bit] NOT NULL,
	[SearchAgentOnNewBill] [bit] NOT NULL,
	[OfficialInvoice] [bit] NOT NULL,
	[BooleanOption1] [bit] NOT NULL,
	[BooleanOption2] [bit] NOT NULL,
	[BooleanOption3] [bit] NOT NULL,
	[BooleanOption4] [bit] NOT NULL,
	[BooleanOption5] [bit] NOT NULL,
	[BooleanOption6] [bit] NOT NULL,
	[BooleanOption7] [bit] NOT NULL,
	[BooleanOption8] [bit] NOT NULL,
	[BooleanOption9] [bit] NOT NULL,
	[BooleanOption10] [bit] NOT NULL,
	[BooleanOption11] [bit] NOT NULL,
	[BooleanOption12] [bit] NOT NULL,
	[BooleanOption13] [bit] NOT NULL,
	[BooleanOption14] [bit] NOT NULL,
	[BooleanOption15] [bit] NOT NULL,
	[BooleanOption16] [bit] NOT NULL,
	[BooleanOption17] [bit] NOT NULL,
	[BooleanOption18] [bit] NOT NULL,
	[BooleanOption19] [bit] NOT NULL,
	[BooleanOption20] [bit] NOT NULL,
	[BooleanOption21] [bit] NOT NULL,
	[BooleanOption22] [bit] NOT NULL,
	[BooleanOption23] [bit] NOT NULL,
	[BooleanOption24] [bit] NOT NULL,
	[BooleanOption25] [bit] NOT NULL,
	[BooleanOption26] [bit] NOT NULL,
	[BooleanOption27] [bit] NOT NULL,
	[BooleanOption28] [bit] NOT NULL,
	[BooleanOption29] [bit] NOT NULL,
	[BooleanOption30] [bit] NOT NULL,
	[BooleanOption31] [bit] NOT NULL,
	[BooleanOption32] [bit] NOT NULL,
	[BooleanOption33] [bit] NOT NULL,
	[BooleanOption34] [bit] NOT NULL,
	[BooleanOption35] [bit] NOT NULL,
	[BooleanOption36] [bit] NOT NULL,
	[BooleanOption37] [bit] NOT NULL,
	[BooleanOption38] [bit] NOT NULL,
	[BooleanOption39] [bit] NOT NULL,
	[UsePointsSystem] [bit] NOT NULL,
	[TotalIncludeTax] [bit] NOT NULL,
	[NumberOption1] [float] NOT NULL,
	[NumberOption2] [float] NOT NULL,
	[NumberOption3] [float] NOT NULL,
	[ExpiryDateRequired] [bit] NOT NULL,
	[IntOption1] [int] NOT NULL,
	[EntryType] [tinyint] NOT NULL,
	[GenerateEntry] [smallint] NOT NULL,
	[GenerateBill] [uniqueidentifier] NULL,
	[SearchInCodes] [bit] NOT NULL,
	[SingleSaveButton] [bit] NOT NULL,
	[DoNotPostToStores] [bit] NOT NULL,
	[ManualPostToStores] [bit] NOT NULL,
	[AutoPrintWhenAdd] [bit] NOT NULL,
	[AutoPrintWhenEdit] [bit] NOT NULL,
	[ShowPreviewWhenAdd] [bit] NOT NULL,
	[ShowPreviewWhenEdit] [bit] NOT NULL,
	[AffectCostomerPrice] [bit] NOT NULL,
	[PayTermIsButtons] [bit] NOT NULL,
	[ShowPaidAndRest] [bit] NOT NULL,
	[AffectLastPurchasePrice] [bit] NOT NULL,
	[AlwaysDetailing] [bit] NOT NULL,
	[ShowPrintingButtons] [bit] NOT NULL,
	[AddCommissionToTotal] [bit] NOT NULL,
	[SearchInEmptyProductsCards] [bit] NOT NULL,
	[WithButtons] [tinyint] NOT NULL,
	[StartMaxmized] [bit] NOT NULL,
	[BillMethod] [tinyint] NOT NULL,
	[TotalCanChangeQty] [bit] NOT NULL,
	[ClearCostCenterOnNew] [bit] NOT NULL,
	[NetTotalColor] [int] NOT NULL,
	[CashBalanceColor] [int] NOT NULL,
	[ColorValue1] [int] NOT NULL,
	[Color1] [int] NOT NULL,
	[Color2] [int] NOT NULL,
	[CashAccount] [uniqueidentifier] NULL,
	[BankAccount] [uniqueidentifier] NULL,
	[MainBill] [uniqueidentifier] NULL,
	[MainBill2] [uniqueidentifier] NULL,
	[PostToBill] [uniqueidentifier] NULL,
	[PostToBill2] [uniqueidentifier] NULL,
	[BankProcuringCommissionAccount] [uniqueidentifier] NULL,
	[PostPrintType] [uniqueidentifier] NULL,
	[SavePrintType] [uniqueidentifier] NULL,
	[DefaultPostPrintType] [uniqueidentifier] NULL,
	[ProductsAccount] [uniqueidentifier] NULL,
	[DiscountsAccount] [uniqueidentifier] NULL,
	[SubjectToTaxAccount] [uniqueidentifier] NULL,
	[ExtrasAccount] [uniqueidentifier] NULL,
	[BonusAccount] [uniqueidentifier] NULL,
	[AgentProfitAccount] [uniqueidentifier] NULL,
	[DefaultStore] [uniqueidentifier] NULL,
	[DefaultCostCenter] [uniqueidentifier] NULL,
	[DefaultProject] [uniqueidentifier] NULL,
	[DefaultBranch] [uniqueidentifier] NULL,
	[DefaultCurrency] [uniqueidentifier] NULL,
	[DefaultGroup] [uniqueidentifier] NULL,
	[RecipientBill] [uniqueidentifier] NULL,
	[AutoGenerateContraAccount] [bit] NOT NULL,
	[ContinuousInventoryAdoption] [bit] NOT NULL,
	[ContinuousInventoryPriceType] [tinyint] NOT NULL,
	[ContinuousInventoryCostAccount] [uniqueidentifier] NULL,
	[ContinuousInventoryStoreAccount] [uniqueidentifier] NULL,
	[ContinuousInventoryGiftsAccount] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[OperationBill] [uniqueidentifier] NULL,
	[CostCenterType] [tinyint] NOT NULL,
	[CostCenterType2] [tinyint] NOT NULL,
	[CostCenterType3] [tinyint] NOT NULL,
	[ProjectType] [tinyint] NOT NULL,
	[ProjectType2] [tinyint] NOT NULL,
	[BranchType] [tinyint] NOT NULL,
	[BranchType2] [tinyint] NOT NULL,
	[CategoriesType] [tinyint] NOT NULL,
	[CategoriesType2] [tinyint] NOT NULL,
	[AgentType] [tinyint] NOT NULL,
	[AgentType2] [tinyint] NOT NULL,
	[AttachmentType] [tinyint] NOT NULL,
	[TabOrder] [ntext] NULL,
	[AgentsGroup] [uniqueidentifier] NULL,
	[AgentsGroup2] [uniqueidentifier] NULL,
	[AgentsGroup3] [uniqueidentifier] NULL,
	[AgentsGroup4] [uniqueidentifier] NULL,
	[AgentsGroup5] [uniqueidentifier] NULL,
	[RoundAccount] [uniqueidentifier] NULL,
	[FinancialTransactionsBond] [uniqueidentifier] NULL,
	[BarcodeType] [uniqueidentifier] NULL,
	[RoundValue] [float] NOT NULL,
	[SearchInPatchCode] [bit] NOT NULL,
	[TextValue01] [nvarchar](255) NULL,
	[TaxInvoiceNo] [nvarchar](255) NULL,
	[TaxMethod] [uniqueidentifier] NULL,
	[CostCenterType4] [tinyint] NOT NULL,
	[ProjectType4] [tinyint] NOT NULL,
	[BranchType4] [tinyint] NOT NULL,
	[NotAffectCostActivity] [bit] NOT NULL,
	[OutPrintType] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL020] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL021]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL021](
	[ID] [int] NOT NULL,
	[TimeTerm] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_TBL021] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL022]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL022](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[StoreGuide] [uniqueidentifier] NOT NULL,
	[BillDate] [datetime] NOT NULL,
	[DateValue01] [datetime] NULL,
	[PayMethod] [smallint] NOT NULL,
	[LockRelations] [bit] NOT NULL,
	[TaxMethod] [uniqueidentifier] NULL,
	[DoneIn] [datetime] NOT NULL,
	[InsertedIn] [datetime] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NOT NULL,
	[BillNumber] [int] NOT NULL,
	[BillNumber2] [int] NOT NULL,
	[OrderNumber] [int] NOT NULL,
	[Rate] [float] NOT NULL,
	[Discount] [float] NOT NULL,
	[LocalAdministrativeTax] [float] NOT NULL,
	[TaxValue] [float] NOT NULL,
	[DownPayment] [float] NOT NULL,
	[DownPaymentNotes] [nvarchar](255) NULL,
	[ChangeValue] [float] NOT NULL,
	[Notes] [nvarchar](255) NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[MainBillGuide] [uniqueidentifier] NULL,
	[POSGuide] [uniqueidentifier] NULL,
	[PostToAccount] [uniqueidentifier] NULL,
	[ProductsAccount] [uniqueidentifier] NULL,
	[CommissionAccount] [uniqueidentifier] NULL,
	[CreditCard] [uniqueidentifier] NULL,
	[Paid] [float] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CustomerName] [nvarchar](255) NULL,
	[Posted] [tinyint] NOT NULL,
	[CardImage] [image] NULL,
	[ContraGuide] [uniqueidentifier] NULL,
	[ContraStore] [uniqueidentifier] NULL,
	[CashAccount] [uniqueidentifier] NULL,
	[ReturnDate] [datetime] NULL,
	[Returned] [bit] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[BillNotes2] [nvarchar](255) NULL,
	[BillNotes3] [nvarchar](255) NULL,
	[BillNotes4] [nvarchar](255) NULL,
	[BillNotes5] [nvarchar](255) NULL,
	[RelatedArchive] [uniqueidentifier] NULL,
	[GeneratedBill] [int] NULL,
	[IntValue01] [int] NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[CurrentStage] [uniqueidentifier] NULL,
	[CalculatingField] [uniqueidentifier] NULL,
	[RoundValue] [float] NOT NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
	[CheckID01] [int] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[APIReply] [nvarchar](max) NULL,
 CONSTRAINT [PK_TBL022] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL023]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL023](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[InsertedIn] [datetime] NOT NULL,
	[RowGuide] [uniqueidentifier] NOT NULL,
	[ProductGuide] [uniqueidentifier] NOT NULL,
	[Quantity] [float] NOT NULL,
	[ExtraQuantity] [float] NOT NULL,
	[Unit] [tinyint] NOT NULL,
	[TotalValue] [float] NOT NULL,
	[TotalValue2] [float] NOT NULL,
	[DiscountValue] [float] NOT NULL,
	[Discount1] [float] NOT NULL,
	[Discount2] [float] NOT NULL,
	[Discount3] [float] NOT NULL,
	[ExtraValue] [float] NOT NULL,
	[TaxValue] [float] NOT NULL,
	[BillTax] [float] NOT NULL,
	[StoreID] [uniqueidentifier] NULL,
	[StatementName] [nvarchar](255) NULL,
	[ExpiryDate] [datetime] NULL,
	[EstablishDate] [datetime] NULL,
	[Color] [ntext] NULL,
	[Weight] [float] NOT NULL,
	[Value] [float] NOT NULL,
	[Length] [float] NOT NULL,
	[Width] [float] NOT NULL,
	[Hieght] [float] NOT NULL,
	[Description] [ntext] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[BillCustom1] [nvarchar](255) NULL,
	[BillCustom2] [nvarchar](255) NULL,
	[BillCustom3] [nvarchar](255) NULL,
	[BillCustom4] [nvarchar](255) NULL,
	[BillCustom5] [nvarchar](255) NULL,
	[PatchCode] [nvarchar](255) NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[SourceBill] [uniqueidentifier] NULL,
	[ProductsAccount] [uniqueidentifier] NULL,
	[RelatedAgent] [uniqueidentifier] NULL,
	[CurrentStage] [uniqueidentifier] NULL,
	[RelatedUnit] [uniqueidentifier] NULL,
	[UnitQuantity] [float] NOT NULL,
	[SalesPrice] [float] NOT NULL,
	[Quantity2] [float] NOT NULL,
	[Description2] [nvarchar](255) NULL,
	[RelatedObjects] [nvarchar](255) NULL,
	[Printed] [bit] NOT NULL,
	[Nonmergeable] [bit] NOT NULL,
	[ReserveDate] [datetime] NULL,
	[RecordDate] [datetime] NULL,
	[RecordSecurity] [tinyint] NOT NULL,
	[CalcKeyField] [uniqueidentifier] NULL,
	[ActivateDate] [datetime] NULL,
	[Discount0] [float] NOT NULL,
	[TotalCost] [float] NOT NULL,
	[ExternalRelation] [ntext] NULL,
 CONSTRAINT [PK_TBL023] PRIMARY KEY CLUSTERED 
(
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL024]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL024](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[AccountID] [uniqueidentifier] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NOT NULL,
	[ContraAccount] [uniqueidentifier] NULL,
	[Discount] [float] NOT NULL,
	[Extra] [float] NOT NULL,
	[DiscountToSave] [float] NOT NULL,
	[ExtraToSave] [float] NOT NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Description] [ntext] NULL,
	[OperationBond] [uniqueidentifier] NULL,
	[NotEffectPrice] [bit] NOT NULL,
	[NotEffectTax] [bit] NOT NULL,
	[RecordType] [smallint] NOT NULL,
 CONSTRAINT [PK_TBL024] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL025]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL025](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NULL,
	[AccountID] [uniqueidentifier] NULL,
	[TaxAccountID] [uniqueidentifier] NULL,
	[TaxNotes] [nvarchar](255) NULL,
	[TaxRatio] [float] NOT NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[CommissionRatio] [float] NOT NULL,
	[Notes] [ntext] NULL,
	[CardImage] [image] NULL,
 CONSTRAINT [PK_TBL025] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL026]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL026](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[GenerateEntry1] [smallint] NOT NULL,
	[GenerateEntry2] [smallint] NOT NULL,
	[DoNotGenerateBill1] [bit] NOT NULL,
	[DoNotGenerateBill2] [bit] NOT NULL,
	[PriceType] [tinyint] NOT NULL,
	[PriceType2] [tinyint] NOT NULL,
	[BillType] [smallint] NOT NULL,
	[BillName] [nvarchar](255) NOT NULL,
	[BillLatinName] [nvarchar](255) NULL,
	[TextValue01] [nvarchar](255) NULL,
	[TextValue02] [nvarchar](255) NULL,
	[TextValue03] [nvarchar](255) NULL,
	[TextValue04] [nvarchar](255) NULL,
	[TextValue05] [nvarchar](255) NULL,
	[DefaultStore1] [uniqueidentifier] NULL,
	[DefaultStore2] [uniqueidentifier] NULL,
	[DefaultCostCenter1] [uniqueidentifier] NULL,
	[DefaultCostCenter2] [uniqueidentifier] NULL,
	[DefaultProject1] [uniqueidentifier] NULL,
	[DefaultProject2] [uniqueidentifier] NULL,
	[DefaultBranch1] [uniqueidentifier] NULL,
	[DefaultBranch2] [uniqueidentifier] NULL,
	[DefaultCurrency1] [uniqueidentifier] NULL,
	[DefaultCurrency2] [uniqueidentifier] NULL,
	[BuildBillTypeGuide1] [uniqueidentifier] NULL,
	[BuildBillTypeGuide2] [uniqueidentifier] NULL,
	[AccountOFOption1] [uniqueidentifier] NULL,
	[AccountOFOption2] [uniqueidentifier] NULL,
	[AccountOFOption3] [uniqueidentifier] NULL,
	[AccountOFOption4] [uniqueidentifier] NULL,
	[AccountOFOption5] [uniqueidentifier] NULL,
	[AccountOFOption6] [uniqueidentifier] NULL,
	[AccountOFOption7] [uniqueidentifier] NULL,
	[AccountOFOption8] [uniqueidentifier] NULL,
	[AccountOFOption9] [uniqueidentifier] NULL,
	[AccountOFOption10] [uniqueidentifier] NULL,
	[WithoutItemTax] [bit] NOT NULL,
	[IntValue01] [int] NOT NULL,
	[IntValue02] [int] NOT NULL,
	[BooleanOption1] [bit] NOT NULL,
	[BooleanOption2] [bit] NOT NULL,
	[BooleanOption3] [bit] NOT NULL,
	[BooleanOption4] [bit] NOT NULL,
	[BooleanOption5] [bit] NOT NULL,
	[BooleanOption6] [bit] NOT NULL,
	[BooleanOption7] [bit] NOT NULL,
	[BooleanOption8] [bit] NOT NULL,
	[BooleanOption9] [bit] NOT NULL,
	[BooleanOption10] [bit] NOT NULL,
	[BooleanOption11] [bit] NOT NULL,
	[BooleanOption12] [bit] NOT NULL,
	[BooleanOption13] [bit] NOT NULL,
	[BooleanOption14] [bit] NOT NULL,
	[BooleanOption15] [bit] NOT NULL,
	[BooleanOption16] [bit] NOT NULL,
	[BooleanOption17] [bit] NOT NULL,
	[BooleanOption18] [bit] NOT NULL,
	[BooleanOption19] [bit] NOT NULL,
	[BooleanOption20] [bit] NOT NULL,
	[BooleanOption21] [bit] NOT NULL,
	[BooleanOption22] [bit] NOT NULL,
	[BooleanOption23] [bit] NOT NULL,
	[BooleanOption24] [bit] NOT NULL,
	[BooleanOption25] [bit] NOT NULL,
	[BooleanOption26] [bit] NOT NULL,
	[BooleanOption27] [bit] NOT NULL,
	[BooleanOption28] [bit] NOT NULL,
	[BooleanOption29] [bit] NOT NULL,
	[BooleanOption30] [bit] NOT NULL,
	[BooleanOption31] [bit] NOT NULL,
	[BooleanOption32] [bit] NOT NULL,
	[BooleanOption33] [bit] NOT NULL,
	[BooleanOption34] [bit] NOT NULL,
	[BarcodeType] [uniqueidentifier] NULL,
	[ExpiryDateRequired] [bit] NOT NULL,
	[SearchInPatchCode] [bit] NOT NULL,
	[DoNotPostToStores] [bit] NOT NULL,
	[DefaultAgent] [uniqueidentifier] NULL,
	[DefaultAgent2] [uniqueidentifier] NULL,
	[DefaultManufacturerModel] [uniqueidentifier] NULL,
	[BondTypeGuide1] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[Notes] [ntext] NULL,
	[SavePrintType] [uniqueidentifier] NULL,
	[Fields] [nvarchar](512) NULL,
	[Color1] [int] NOT NULL,
	[Color2] [int] NOT NULL,
	[PriceType3] [tinyint] NOT NULL,
	[BooleanOption35] [bit] NOT NULL,
	[BooleanOption36] [bit] NOT NULL,
	[BooleanOption37] [bit] NOT NULL,
	[BooleanOption38] [bit] NOT NULL,
	[BooleanOption39] [bit] NOT NULL,
	[BooleanOption40] [bit] NOT NULL,
	[BooleanOption41] [bit] NOT NULL,
	[BooleanOption42] [bit] NOT NULL,
	[Number01] [float] NOT NULL,
	[Number02] [float] NOT NULL,
 CONSTRAINT [PK_TBL026] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL027]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL027](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[DoneIn] [datetime] NOT NULL,
	[InsertedIn] [datetime] NOT NULL,
	[CurrencyGuide1] [uniqueidentifier] NULL,
	[CurrencyGuide2] [uniqueidentifier] NULL,
	[RelatedBill1] [uniqueidentifier] NULL,
	[RelatedBill2] [uniqueidentifier] NULL,
	[MainBillGuide] [uniqueidentifier] NULL,
	[Rate1] [float] NOT NULL,
	[Rate2] [float] NOT NULL,
	[CreditCard] [uniqueidentifier] NULL,
	[ManufacturerModel] [uniqueidentifier] NULL,
	[MainTransaction] [uniqueidentifier] NULL,
	[PayMethod1] [smallint] NOT NULL,
	[StoreGuide1] [uniqueidentifier] NOT NULL,
	[StoreGuide2] [uniqueidentifier] NULL,
	[AgentGuide1] [uniqueidentifier] NULL,
	[AgentGuide2] [uniqueidentifier] NULL,
	[AccountA1] [uniqueidentifier] NULL,
	[AccountA2] [uniqueidentifier] NULL,
	[AccountB1] [uniqueidentifier] NULL,
	[AccountB2] [uniqueidentifier] NULL,
	[CostCenter1] [uniqueidentifier] NULL,
	[CostCenter2] [uniqueidentifier] NULL,
	[Project1] [uniqueidentifier] NULL,
	[Project2] [uniqueidentifier] NULL,
	[Branch1] [uniqueidentifier] NULL,
	[Branch2] [uniqueidentifier] NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[InDate] [datetime] NULL,
	[InDate2] [datetime] NULL,
	[Customer] [nvarchar](255) NULL,
	[CustomerName] [nvarchar](255) NULL,
	[Security] [tinyint] NOT NULL,
	[BuildBillNotes1] [nvarchar](255) NULL,
	[BuildBillNotes2] [nvarchar](255) NULL,
	[BuildBillNotes3] [nvarchar](255) NULL,
	[BuildBillNotes4] [nvarchar](255) NULL,
	[BuildBillNotes5] [nvarchar](255) NULL,
	[BuildBillNotes6] [nvarchar](255) NULL,
	[Ready] [bit] NOT NULL,
	[TimeLong] [float] NOT NULL,
	[CostLimit] [float] NOT NULL,
	[SentTo] [nvarchar](255) NULL,
	[Cost] [float] NOT NULL,
	[Price] [float] NOT NULL,
	[Returned] [bit] NOT NULL,
	[Posted] [bit] NOT NULL,
	[Posted1] [bit] NOT NULL,
	[Posted2] [bit] NOT NULL,
	[IntValue01] [int] NOT NULL,
	[IntValue02] [int] NOT NULL,
	[CardImage] [image] NULL,
	[DownPayment1] [float] NOT NULL,
	[ChangeValue] [float] NOT NULL,
	[Receiver] [nvarchar](255) NULL,
	[Delivered] [bit] NOT NULL,
	[WithAttachment] [bit] NOT NULL,
	[CurrentStage] [uniqueidentifier] NULL,
	[Barcode] [nvarchar](255) NULL,
	[Description] [ntext] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
	[TaxValue] [float] NOT NULL,
 CONSTRAINT [PK_TBL027] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL028]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL028](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RowGuide] [uniqueidentifier] NOT NULL,
	[IsInPut] [bit] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[ItemGuide] [uniqueidentifier] NOT NULL,
	[Quantity] [float] NOT NULL,
	[Unit] [tinyint] NOT NULL,
	[TotalValue] [float] NOT NULL,
	[Discount1] [float] NOT NULL,
	[Discount2] [float] NOT NULL,
	[Discount3] [float] NOT NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[StoreID] [uniqueidentifier] NULL,
	[StatementName] [nvarchar](255) NULL,
	[Notes] [ntext] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[RelatedAgent] [uniqueidentifier] NULL,
	[RelatedUnit] [uniqueidentifier] NULL,
	[UnitQuantity] [float] NOT NULL,
	[QuantityRatio] [float] NOT NULL,
	[ExpiryDate] [datetime] NULL,
	[EstablishDate] [datetime] NULL,
	[DiscountValue] [float] NOT NULL,
	[ExtraValue] [float] NOT NULL,
	[TaxValue] [float] NOT NULL,
	[BillTax] [float] NOT NULL,
	[BillCustom1] [nvarchar](255) NULL,
	[BillCustom2] [nvarchar](255) NULL,
	[BillCustom3] [nvarchar](255) NULL,
	[BillCustom4] [nvarchar](255) NULL,
	[BillCustom5] [nvarchar](255) NULL,
	[PatchCode] [nvarchar](255) NULL,
	[SplitBill] [tinyint] NOT NULL,
	[ExtraQuantity] [float] NOT NULL,
	[Length] [float] NOT NULL,
	[Width] [float] NOT NULL,
	[Hieght] [float] NOT NULL,
	[Weight] [float] NOT NULL,
	[Value] [float] NOT NULL,
	[SalesPrice] [float] NOT NULL,
	[Description] [ntext] NULL,
	[ProductsAccount] [uniqueidentifier] NULL,
	[SourceBill] [uniqueidentifier] NULL,
	[SourceOperationBill] [uniqueidentifier] NULL,
	[ManufacturerModel] [uniqueidentifier] NULL,
	[Nonmergeable] [bit] NOT NULL,
	[Printed] [bit] NOT NULL,
	[CurrentStage] [uniqueidentifier] NULL,
	[ReserveDate] [datetime] NULL,
	[ActivateDate] [datetime] NULL,
	[Discount0] [float] NOT NULL,
	[TotalCost] [float] NOT NULL,
 CONSTRAINT [PK_TBL028] PRIMARY KEY CLUSTERED 
(
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL029]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL029](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[IsInPut] [bit] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[AccountID] [uniqueidentifier] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NOT NULL,
	[ContraAccount] [uniqueidentifier] NULL,
	[Discount] [float] NOT NULL,
	[Extra] [float] NOT NULL,
	[DiscountToSave] [float] NOT NULL,
	[ExtraToSave] [float] NOT NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[OperationBond] [uniqueidentifier] NULL,
	[Description] [ntext] NULL,
	[NotEffectPrice] [bit] NOT NULL,
	[NotEffectTax] [bit] NOT NULL,
	[Security] [tinyint] NULL,
 CONSTRAINT [PK_TBL029] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL030]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL030](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[CardNumber] [int] NOT NULL,
	[CardCode] [nvarchar](255) NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[Security] [tinyint] NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[Notes] [ntext] NULL,
	[CardImage] [image] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL030] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL031]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL031](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[Attachment] [nvarchar](255) NULL,
	[SerialNumber] [nvarchar](255) NULL,
	[Type] [nvarchar](255) NULL,
	[Description] [ntext] NULL,
 CONSTRAINT [PK_TBL031] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL032]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL032](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[Damage] [ntext] NOT NULL,
	[WarrantyIncluded] [bit] NOT NULL,
	[MaintenanceMan] [uniqueidentifier] NULL,
	[DamageDescription] [ntext] NULL,
	[Description] [ntext] NULL,
	[Cost] [float] NOT NULL,
	[Security] [tinyint] NULL,
 CONSTRAINT [PK_TBL032] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL033]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL033](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[Option01] [int] NOT NULL,
	[CardType] [nvarchar](max) NOT NULL,
	[ShowButton] [bit] NOT NULL,
	[PrintCount] [int] NOT NULL,
	[CardName] [nvarchar](max) NOT NULL,
	[LatinName] [nvarchar](max) NULL,
	[ClassID] [nvarchar](max) NULL,
	[CardTypeID] [int] NOT NULL,
	[CardFile] [image] NULL,
 CONSTRAINT [PK_TBL033] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL034]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL034](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[ControlName] [nvarchar](max) NOT NULL,
	[ControlType] [int] NOT NULL,
	[IntValue01] [int] NULL,
	[CardImage] [image] NULL,
	[PrintType] [tinyint] NOT NULL,
	[MainCr] [nvarchar](max) NULL,
	[TextValue] [ntext] NULL,
 CONSTRAINT [PK_TBL034] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL035]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL035](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainID] [int] NOT NULL,
	[PropertyName] [nvarchar](max) NOT NULL,
	[PropertyValue] [nvarchar](max) NULL,
	[PropertyValue2] [nvarchar](max) NULL,
	[PropertyValue3] [nvarchar](max) NULL,
	[PropertyNumberValue] [float] NOT NULL,
	[ControlImage] [image] NULL,
 CONSTRAINT [PK_TBL035] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL036]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL036](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TermKey] [nvarchar](255) NOT NULL,
	[Lang00] [nvarchar](255) NULL,
	[Lang01] [nvarchar](255) NULL,
	[Lang02] [nvarchar](255) NULL,
	[Lang03] [nvarchar](255) NULL,
	[Lang04] [nvarchar](255) NULL,
	[Lang05] [nvarchar](255) NULL,
	[Lang06] [nvarchar](255) NULL,
	[Lang07] [nvarchar](255) NULL,
	[Lang08] [nvarchar](255) NULL,
	[Lang09] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL036] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL037]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL037](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[TypeName] [nvarchar](255) NOT NULL,
	[TypeLatinName] [nvarchar](255) NULL,
	[MCount] [int] NOT NULL,
	[MainID] [int] NOT NULL,
	[Notes] [ntext] NULL,
 CONSTRAINT [PK_TBL037] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL038]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL038](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[RowGuide] [uniqueidentifier] NOT NULL,
	[AccountGuide] [uniqueidentifier] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NOT NULL,
	[TruncatedValue] [float] NOT NULL,
	[TruncatedValueRate] [float] NOT NULL,
	[TruncatedValueAccount] [uniqueidentifier] NULL,
	[AffectCost] [bit] NOT NULL,
	[TruncatedNotes] [nvarchar](255) NULL,
	[Debit] [float] NOT NULL,
	[Credit] [float] NOT NULL,
	[DebitRate] [float] NOT NULL,
	[CreditRate] [float] NOT NULL,
	[ContraAccount] [uniqueidentifier] NULL,
	[CollectDate] [datetime] NULL,
	[RowDate] [datetime] NULL,
	[DueDate] [datetime] NULL,
	[Collected] [bit] NOT NULL,
	[CollectEntry] [uniqueidentifier] NULL,
	[Notes] [nvarchar](255) NULL,
	[ChequeNumber] [nvarchar](255) NULL,
	[BondDetailsNotes2] [nvarchar](255) NULL,
	[BondDetailsNotes3] [nvarchar](255) NULL,
	[BondDetailsNotes4] [nvarchar](255) NULL,
	[BondDetailsNotes5] [nvarchar](255) NULL,
	[BondDetailsNotes6] [nvarchar](255) NULL,
	[BondDetailsNotes7] [nvarchar](255) NULL,
	[BondDetailsNotes8] [nvarchar](255) NULL,
	[BondDetailsNotes9] [nvarchar](255) NULL,
	[Beneficiary] [nvarchar](255) NULL,
	[EndorseToAccountGuide] [uniqueidentifier] NULL,
	[EndorsementDate] [datetime] NULL,
	[ReturnDate] [datetime] NULL,
	[RelatedBond] [uniqueidentifier] NULL,
	[Checked] [tinyint] NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[ReturnedAccount] [uniqueidentifier] NULL,
	[IntermediateAccount] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[TransferToAccount] [uniqueidentifier] NULL,
	[SetoffDate] [datetime] NULL,
	[SourceBill] [uniqueidentifier] NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[CreditCard] [uniqueidentifier] NULL,
	[ContraNotAffected] [bit] NOT NULL,
	[NotEndorsable] [bit] NOT NULL,
	[CollectOnlyOnItsDate] [bit] NOT NULL,
	[CanNotWithdrawAsCash] [bit] NOT NULL,
	[ExternalRelation] [ntext] NULL,
 CONSTRAINT [PK_TBL038] PRIMARY KEY CLUSTERED 
(
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL039]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL039](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[CardGuide] [nvarchar](256) NOT NULL,
	[CardValue] [float] NOT NULL,
	[Browsing] [bit] NOT NULL,
	[Inserting] [bit] NOT NULL,
	[Updating] [bit] NOT NULL,
	[Deleting] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL040]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL040](
	[ID] [int] NOT NULL,
	[TypeTerm] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_TBL040_2] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL041]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL041](
	[ID] [int] NOT NULL,
	[TypeTerm] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_TBL041_2] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL042]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL042](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[IsUser] [bit] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[CardLatinName] [nvarchar](255) NULL,
	[Security] [tinyint] NOT NULL,
	[JustForPOS] [bit] NOT NULL,
	[SeparateGroup] [bit] NOT NULL,
	[Notes] [ntext] NULL,
	[CheckAccounts] [bit] NOT NULL,
	[CheckCostCenters] [bit] NOT NULL,
	[CheckProjects] [bit] NOT NULL,
	[CheckBranches] [bit] NOT NULL,
	[CheckStores] [bit] NOT NULL,
	[CheckGroups] [bit] NOT NULL,
	[CheckAgentsGroups] [bit] NOT NULL,
	[CostCenterID] [uniqueidentifier] NULL,
	[ProjectID] [uniqueidentifier] NULL,
	[BranchID] [uniqueidentifier] NULL,
	[StoreID] [uniqueidentifier] NULL,
	[CashAccountID] [uniqueidentifier] NULL,
	[UseCostCenters] [bit] NOT NULL,
	[UseProjects] [bit] NOT NULL,
	[UseBranches] [bit] NOT NULL,
	[UseStores] [bit] NOT NULL,
	[UseCashAccount] [bit] NOT NULL,
	[CardImage] [image] NULL,
	[FirstTransactionsNo] [int] NOT NULL,
	[SeparateFinancialReports] [bit] NOT NULL,
	[HideSeparatesColumn] [bit] NOT NULL,
 CONSTRAINT [PK_TBL042] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [IX_TBL042] UNIQUE NONCLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL043]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL043](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [nvarchar](255) NOT NULL,
	[CardTerm] [nvarchar](255) NOT NULL,
	[ObjectID] [tinyint] NOT NULL,
 CONSTRAINT [PK_TBL043] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [IX_TBL043] UNIQUE NONCLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL044]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL044](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[CardGuide] [nvarchar](255) NOT NULL,
	[CardValue] [float] NOT NULL,
	[Browsing] [tinyint] NOT NULL,
	[Inserting] [tinyint] NOT NULL,
	[Updating] [tinyint] NOT NULL,
	[Deleting] [tinyint] NOT NULL,
	[Printing] [tinyint] NOT NULL,
	[CardUsing] [tinyint] NOT NULL,
	[ModelPrint] [tinyint] NOT NULL,
	[ModelDelete] [tinyint] NOT NULL,
	[ModelAdd] [tinyint] NOT NULL,
	[ModelUpdate] [tinyint] NOT NULL,
	[ShowBalance] [tinyint] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL045]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL045](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[HideRecord] [bit] NOT NULL,
	[CardValue] [float] NOT NULL,
	[BrowsingPosted] [tinyint] NOT NULL,
	[InsertingPosted] [tinyint] NOT NULL,
	[UpdatingPosted] [tinyint] NOT NULL,
	[DeletingPosted] [tinyint] NOT NULL,
	[PrintingPosted] [tinyint] NOT NULL,
	[Posting] [tinyint] NOT NULL,
	[BrowsingUnPosted] [tinyint] NOT NULL,
	[InsertingUnPosted] [tinyint] NOT NULL,
	[UpdatingUnPosted] [tinyint] NOT NULL,
	[DeletingUnPosted] [tinyint] NOT NULL,
	[PrintingUnSaved] [tinyint] NOT NULL,
	[ModelPrint] [tinyint] NOT NULL,
	[ModelDelete] [tinyint] NOT NULL,
	[ModelAdd] [tinyint] NOT NULL,
	[ModelUpdate] [tinyint] NOT NULL,
	[DefaultAccount] [uniqueidentifier] NULL,
	[DefaultCostCenter] [uniqueidentifier] NULL,
	[DefaultProject] [uniqueidentifier] NULL,
	[DefaultBranch] [uniqueidentifier] NULL,
	[PrintingUnPosted] [tinyint] NOT NULL,
	[ChangeCardNumber] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL046]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL046](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [nvarchar](255) NOT NULL,
	[CardTerm] [nvarchar](255) NOT NULL,
	[CardImage] [image] NULL,
 CONSTRAINT [PK_TBL046] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [IX_TBL046] UNIQUE NONCLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL047]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL047](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[CardGuide] [nvarchar](255) NOT NULL,
	[CardValue] [float] NOT NULL,
	[Browsing] [bit] NOT NULL,
	[Saving] [bit] NOT NULL,
	[Exporting] [bit] NOT NULL,
	[Deleting] [bit] NOT NULL,
	[AdvancedPrint] [bit] NOT NULL,
	[ExcelTemplates] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL048]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL048](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardValue] [ntext] NOT NULL,
 CONSTRAINT [PK_TBL048] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL049]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL049](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[NotActive] [bit] NOT NULL,
	[CardCode] [nvarchar](255) NOT NULL,
	[Security] [tinyint] NOT NULL,
	[IntValue] [int] NOT NULL,
	[DefaultAccount] [uniqueidentifier] NULL,
	[DefaultAccount2] [uniqueidentifier] NULL,
	[ProjectName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[MainProject] [uniqueidentifier] NULL,
	[Notes] [nvarchar](255) NULL,
	[ProjectNotes2] [nvarchar](255) NULL,
	[ProjectNotes3] [nvarchar](255) NULL,
	[ProjectNotes4] [nvarchar](255) NULL,
	[ProjectNotes5] [nvarchar](255) NULL,
	[ProjectNotes6] [nvarchar](255) NULL,
	[CardImage] [image] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL049] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL050]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL050](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[NotActive] [bit] NOT NULL,
	[CardCode] [nvarchar](255) NOT NULL,
	[Security] [tinyint] NOT NULL,
	[BronchName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[DefaultAccount] [uniqueidentifier] NULL,
	[BranchNotes2] [nvarchar](255) NULL,
	[BranchNotes3] [nvarchar](255) NULL,
	[MainBronch] [uniqueidentifier] NULL,
	[Notes] [ntext] NULL,
	[CardImage] [image] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL050] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL051]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL051](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[FrmName] [nvarchar](255) NOT NULL,
	[DefaultCurrency] [uniqueidentifier] NULL,
	[DefaultAccount] [uniqueidentifier] NULL,
	[Notes] [ntext] NULL,
	[Fields] [ntext] NULL,
	[Bonds] [ntext] NULL,
	[Bills] [ntext] NULL,
	[Options1] [ntext] NULL,
	[CardImage] [image] NULL,
 CONSTRAINT [PK_TBL051] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [IX_TBL051] UNIQUE NONCLUSTERED 
(
	[FrmName] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL052]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL052](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[FormKey] [nvarchar](255) NOT NULL,
	[ControlKey] [nvarchar](255) NOT NULL,
	[Property] [nvarchar](255) NOT NULL,
	[ForUser] [uniqueidentifier] NULL,
	[Value1] [ntext] NULL,
	[Value2] [ntext] NULL,
 CONSTRAINT [PK_TBL052] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL053]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL053](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[OptionName] [nvarchar](255) NOT NULL,
	[ValueKey] [uniqueidentifier] NULL,
	[ValueKey2] [uniqueidentifier] NULL,
	[ForUser] [uniqueidentifier] NULL,
	[ValueString] [nvarchar](512) NULL,
	[ValueString2] [nvarchar](512) NULL,
	[Value] [float] NOT NULL,
	[Value2] [float] NOT NULL,
	[ValueBoolean] [bit] NOT NULL,
	[ValueBoolean2] [bit] NOT NULL,
	[ValueBoolean3] [bit] NOT NULL,
	[ByteValue] [smallint] NOT NULL,
	[DateValue] [datetime] NULL,
	[DateValue2] [datetime] NULL,
	[ValueText] [ntext] NULL,
 CONSTRAINT [PK_TBL053] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL054]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL054](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[CreditCardGuide] [uniqueidentifier] NULL,
	[InDate] [datetime] NULL,
	[Value] [float] NOT NULL,
	[ValueRate] [float] NOT NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL054] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL055]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL055](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[MainGroup] [uniqueidentifier] NULL,
	[BillGuide] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_TBL055] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL056]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL056](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ItemGuide] [uniqueidentifier] NOT NULL,
	[BillGuide] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_TBL056] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL057]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL057](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TypeGuide] [uniqueidentifier] NOT NULL,
	[BillGuide] [uniqueidentifier] NOT NULL,
	[ShowButton] [bit] NOT NULL,
	[PrintCount] [int] NOT NULL,
	[CardImage] [image] NULL,
 CONSTRAINT [PK_TBL057] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL058]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL058](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TypeIDENTITY] [nvarchar](255) NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[DoneIn] [datetime] NOT NULL,
	[CardType] [int] NOT NULL,
	[Notes] [ntext] NULL,
	[CardImage] [image] NULL,
 CONSTRAINT [PK_TBL058] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL059]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL059](
	[ID] [tinyint] NOT NULL,
	[TypeTerm] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_TBL059] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL060]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL060](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[BillGuide] [uniqueidentifier] NOT NULL,
	[Value] [float] NOT NULL,
	[CollectDate] [datetime] NOT NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL060] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL061]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL061](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[OperationName] [nvarchar](255) NULL,
	[Allow] [bit] NOT NULL,
 CONSTRAINT [PK_TBL061] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL062]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL062](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[TabName] [nvarchar](255) NULL,
	[Allow] [bit] NOT NULL,
 CONSTRAINT [PK_TBL062] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL063]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL063](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ItemGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[Unit] [tinyint] NOT NULL,
	[Quantity] [float] NOT NULL,
	[PriceRatio] [float] NOT NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL063] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL064]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL064](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardValue] [float] NOT NULL,
	[BrowsingPosted] [tinyint] NOT NULL,
	[InsertingPosted] [tinyint] NOT NULL,
	[UpdatingPosted] [tinyint] NOT NULL,
	[DeletingPosted] [tinyint] NOT NULL,
	[PrintingPosted] [tinyint] NOT NULL,
	[BrowsePrices] [tinyint] NOT NULL,
	[Posting] [tinyint] NOT NULL,
	[BuildEntryPosted] [tinyint] NOT NULL,
	[ChangePricesPosted] [tinyint] NOT NULL,
	[PostedDiscountRatio] [float] NOT NULL,
	[PostedExtraRatio] [float] NOT NULL,
	[SubtractOutput] [bit] NOT NULL,
	[BrowsingUnPosted] [tinyint] NOT NULL,
	[InsertingUnPosted] [tinyint] NOT NULL,
	[UpdatingUnPosted] [tinyint] NOT NULL,
	[DeletingUnPosted] [tinyint] NOT NULL,
	[PrintingUnPosted] [tinyint] NOT NULL,
	[PrintingUnSaved] [tinyint] NOT NULL,
	[BuildEntryUnPosted] [tinyint] NOT NULL,
	[ChangePricesUnPosted] [tinyint] NOT NULL,
	[UnPostedExtraRatio] [float] NOT NULL,
	[UnPostedDiscountRatio] [float] NOT NULL,
	[ChangeStockItemsPrice] [bit] NOT NULL,
	[ModelPrint] [tinyint] NOT NULL,
	[ModelDelete] [tinyint] NOT NULL,
	[ModelAdd] [tinyint] NOT NULL,
	[ModelUpdate] [tinyint] NOT NULL,
	[MinimumPrice] [tinyint] NOT NULL,
	[MaximumPrice] [tinyint] NOT NULL,
	[ChangeServiceItemsPrice] [bit] NOT NULL,
	[ChangeQuantity] [bit] NOT NULL,
	[ChangeQuantity2] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL065]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL065](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PriceType] [tinyint] NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[Permission] [int] NOT NULL,
 CONSTRAINT [PK_TBL065] PRIMARY KEY CLUSTERED 
(
	[PriceType] ASC,
	[GroupGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL066]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL066](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[SerialCode] [nvarchar](255) NOT NULL,
	[ExpiryDate] [datetime] NULL,
	[EstablishDate] [datetime] NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL066] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL067]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL067](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[Notes] [nvarchar](255) NULL,
	[CategoryType] [tinyint] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL067] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL068]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL068](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[InDate] [datetime] NOT NULL,
	[DoneIn] [datetime] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[AccountGuide] [uniqueidentifier] NOT NULL,
	[ContraAccountGuide] [uniqueidentifier] NULL,
	[CurrencyGuide] [uniqueidentifier] NOT NULL,
	[Debit] [float] NOT NULL,
	[Credit] [float] NOT NULL,
	[DebitRate] [float] NOT NULL,
	[CreditRate] [float] NOT NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL068] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL069]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL069](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SortID] [int] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[Accessory] [nvarchar](255) NOT NULL,
	[Price] [float] NOT NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL069] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL070]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL070](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GroupGuide] [uniqueidentifier] NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[HideRecord] [bit] NOT NULL,
	[CardValue] [float] NOT NULL,
	[BrowsingPosted] [tinyint] NOT NULL,
	[InsertingPosted] [tinyint] NOT NULL,
	[UpdatingPosted] [tinyint] NOT NULL,
	[DeletingPosted] [tinyint] NOT NULL,
	[PrintingPosted] [tinyint] NOT NULL,
	[BuildEntryPosted] [tinyint] NOT NULL,
	[ChangePricesPosted] [tinyint] NOT NULL,
	[PostedExtraRatio] [float] NOT NULL,
	[PostedDiscountRatio] [float] NOT NULL,
	[PostedBillExtraRatio] [float] NOT NULL,
	[PostedBillDiscountRatio] [float] NOT NULL,
	[Posting] [tinyint] NOT NULL,
	[BrowsePrices] [tinyint] NOT NULL,
	[BrowsingUnPosted] [tinyint] NOT NULL,
	[InsertingUnPosted] [tinyint] NOT NULL,
	[UpdatingUnPosted] [tinyint] NOT NULL,
	[DeletingUnPosted] [tinyint] NOT NULL,
	[PrintingUnPosted] [tinyint] NOT NULL,
	[PrintingUnSaved] [tinyint] NOT NULL,
	[BuildEntryUnPosted] [tinyint] NOT NULL,
	[UnPostedExtraRatio] [float] NOT NULL,
	[UnPostedDiscountRatio] [float] NOT NULL,
	[UnPostedBillExtraRatio] [float] NOT NULL,
	[UnPostedBillDiscountRatio] [float] NOT NULL,
	[ChangePricesUnPosted] [tinyint] NOT NULL,
	[ChangeStockItemsPrice] [tinyint] NOT NULL,
	[ChangeServiceItemsPrice] [tinyint] NOT NULL,
	[CloseCashBox] [bit] NOT NULL,
	[PayExpense] [bit] NOT NULL,
	[SubtractOutput] [bit] NOT NULL,
	[EditPostedItems] [tinyint] NOT NULL,
	[EditUnPostedItems] [tinyint] NOT NULL,
	[BrowsingPosted2] [tinyint] NOT NULL,
	[InsertingPosted2] [tinyint] NOT NULL,
	[UpdatingPosted2] [tinyint] NOT NULL,
	[DeletingPosted2] [tinyint] NOT NULL,
	[PrintingPosted2] [tinyint] NOT NULL,
	[BuildEntryPosted2] [tinyint] NOT NULL,
	[ChangePricesPosted2] [tinyint] NOT NULL,
	[PostedExtraRatio2] [float] NOT NULL,
	[PostedDiscountRatio2] [float] NOT NULL,
	[BrowsingUnPosted2] [tinyint] NOT NULL,
	[InsertingUnPosted2] [tinyint] NOT NULL,
	[UpdatingUnPosted2] [tinyint] NOT NULL,
	[DeletingUnPosted2] [tinyint] NOT NULL,
	[PrintingUnPosted2] [tinyint] NOT NULL,
	[PrintingUnSaved2] [tinyint] NOT NULL,
	[BuildEntryUnPosted2] [tinyint] NOT NULL,
	[UnPostedExtraRatio2] [float] NOT NULL,
	[UnPostedDiscountRatio2] [float] NOT NULL,
	[ChangePricesUnPosted2] [tinyint] NOT NULL,
	[ChangeStockItemsPrice2] [tinyint] NOT NULL,
	[ChangeServiceItemsPrice2] [tinyint] NOT NULL,
	[ModifyForOthers] [tinyint] NOT NULL,
	[ModelPrint] [tinyint] NOT NULL,
	[ModelDelete] [tinyint] NOT NULL,
	[ModelAdd] [tinyint] NOT NULL,
	[ModelUpdate] [tinyint] NOT NULL,
	[UnlimitedExtrasPosted] [bit] NOT NULL,
	[UnlimitedExtrasUnPosted] [bit] NOT NULL,
	[ProductsAccount] [uniqueidentifier] NULL,
	[StoreGuide] [uniqueidentifier] NULL,
	[CashAccount] [uniqueidentifier] NULL,
	[DefaultCostCenter] [uniqueidentifier] NULL,
	[DefaultProject] [uniqueidentifier] NULL,
	[DefaultBranch] [uniqueidentifier] NULL,
	[MinimumPrice] [tinyint] NOT NULL,
	[MaximumPrice] [tinyint] NOT NULL,
	[ChangeCardNumber] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL071]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL071](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[AccountGuide] [uniqueidentifier] NOT NULL,
	[DebitValue] [float] NOT NULL,
	[CreditValue] [float] NOT NULL,
	[SideType] [int] NOT NULL,
	[Ratio] [float] NOT NULL,
	[Notes] [ntext] NULL,
 CONSTRAINT [PK_TBL071] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL072]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL072](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[Term] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_TBL072] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL073]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL073](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[InsertedIn] [datetime] NOT NULL,
	[InDate] [datetime] NOT NULL,
	[TypeGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[BitValue01] [bit] NOT NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL073_2] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL074]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL074](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PriceType] [tinyint] NOT NULL,
	[LastCalulatedDate] [datetime] NOT NULL,
	[ItemUnit] [tinyint] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NULL,
	[ItemGuide] [uniqueidentifier] NOT NULL,
	[PriceValue] [float] NOT NULL,
	[PriceRate] [float] NOT NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[DiscountRation] [float] NOT NULL,
	[ExtraRatio] [float] NOT NULL,
	[CostCenterGuide] [uniqueidentifier] NULL,
	[ProjectGuide] [uniqueidentifier] NULL,
	[BranchGuide] [uniqueidentifier] NULL,
	[CategoryGuide01] [uniqueidentifier] NULL,
	[CategoryGuide02] [uniqueidentifier] NULL,
	[CategoryGuide03] [uniqueidentifier] NULL,
	[CategoryGuide04] [uniqueidentifier] NULL,
	[CategoryGuide05] [uniqueidentifier] NULL,
	[ExpiryDate] [datetime] NULL,
	[PatchCode] [nvarchar](250) NULL,
	[BillRowGuide] [uniqueidentifier] NULL,
	[StoreGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL074_2] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL075]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL075](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardCode] [nvarchar](255) NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CardType] [tinyint] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[Notes] [ntext] NULL,
 CONSTRAINT [PK_TBL075] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL076]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL076](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[ItemsGuide] [uniqueidentifier] NULL,
	[AccountRatio] [float] NOT NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL076] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL077]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL077](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[GrouptID] [uniqueidentifier] NOT NULL,
	[InvoiceID] [uniqueidentifier] NOT NULL,
	[ItemsAccount] [uniqueidentifier] NULL,
	[DiscountAccount] [uniqueidentifier] NULL,
	[ExtraAccount] [uniqueidentifier] NULL,
	[StoreAccount] [uniqueidentifier] NULL,
	[CostAccount] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL077] PRIMARY KEY CLUSTERED 
(
	[GrouptID] ASC,
	[InvoiceID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL078]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL078](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardCode] [nvarchar](255) NULL,
	[CardNumber] [int] NOT NULL,
	[CardDate] [datetime] NULL,
	[CurrencyGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[Rate] [float] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CardStatus] [tinyint] NOT NULL,
	[ClassificationCard] [bit] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[Notes] [ntext] NULL,
	[CardImage] [image] NULL,
 CONSTRAINT [PK_TBL078] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL079]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL079](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[IsInPut] [bit] NOT NULL,
	[ProductGuide] [uniqueidentifier] NOT NULL,
	[Quantity] [float] NOT NULL,
	[TotalValue] [float] NOT NULL,
	[Unit] [tinyint] NOT NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[RelatedMethod] [uniqueidentifier] NULL,
	[Length] [float] NOT NULL,
	[Width] [float] NOT NULL,
	[Hieght] [float] NOT NULL,
	[RelatedUnit] [uniqueidentifier] NULL,
	[UnitQuantity] [float] NOT NULL,
	[Weight] [float] NOT NULL,
	[Value] [float] NOT NULL,
	[Description] [ntext] NULL,
	[Notes] [nvarchar](255) NULL,
	[BillCustom1] [nvarchar](255) NULL,
	[BillCustom2] [nvarchar](255) NULL,
	[BillCustom3] [nvarchar](255) NULL,
	[BillCustom4] [nvarchar](255) NULL,
	[BillCustom5] [nvarchar](255) NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL079] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL080]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL080](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[IsInPut] [bit] NOT NULL,
	[AccountID] [uniqueidentifier] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NOT NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Discount] [float] NOT NULL,
	[Extra] [float] NOT NULL,
	[ContraAccount] [uniqueidentifier] NULL,
	[DiscountToSave] [float] NOT NULL,
	[ExtraToSave] [float] NOT NULL,
	[Description] [ntext] NULL,
 CONSTRAINT [PK_TBL080] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL081]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL081](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardOrder] [int] NOT NULL,
	[NotActive] [bit] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[MainCard] [uniqueidentifier] NULL,
	[CategoryType] [uniqueidentifier] NOT NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL081] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL082]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL082](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[Category] [uniqueidentifier] NOT NULL,
	[CategoryType] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_TBL082] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL083]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL083](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[PeriodGuide] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[IntValue] [int] NOT NULL,
	[FloatValue] [float] NOT NULL,
	[TextValue1] [nvarchar](255) NULL,
	[Notes] [ntext] NULL,
 CONSTRAINT [PK_TBL083] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL084]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL084](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_TBL084] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL085]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL085](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[TypeGuide] [uniqueidentifier] NOT NULL,
	[CardDate] [datetime] NULL,
	[CardDate2] [datetime] NULL,
	[DateValue01] [datetime] NULL,
	[RelatedArchive] [uniqueidentifier] NULL,
	[RelatedArchive2] [uniqueidentifier] NULL,
	[RelatedCostCenter] [uniqueidentifier] NULL,
	[Security] [tinyint] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[NumberValue01] [float] NOT NULL,
	[IntValue01] [int] NOT NULL,
	[IntValue02] [int] NOT NULL,
	[IntValue03] [int] NOT NULL,
	[TextValue01] [nvarchar](max) NULL,
	[TextValue02] [nvarchar](max) NULL,
	[TextValue03] [nvarchar](max) NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Store] [uniqueidentifier] NULL,
	[UserGuide] [uniqueidentifier] NULL,
	[BooleanValue01] [bit] NOT NULL,
	[BooleanValue02] [bit] NOT NULL,
	[BooleanValue03] [bit] NOT NULL,
	[BooleanValue04] [bit] NOT NULL,
	[BooleanValue05] [bit] NOT NULL,
	[BooleanValue06] [bit] NOT NULL,
	[BooleanValue07] [bit] NOT NULL,
	[BooleanValue08] [bit] NOT NULL,
	[CardName] [nvarchar](max) NULL,
	[Notes] [nvarchar](max) NULL,
	[CardImage] [image] NULL,
	[ByUser] [uniqueidentifier] NULL,
	[ByGroup] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL085] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL086]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL086](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[Notes] [nvarchar](255) NULL,
	[AccountID] [uniqueidentifier] NULL,
	[AccountID2] [uniqueidentifier] NULL,
	[AccountCondition] [ntext] NULL,
	[AgentGroupID] [uniqueidentifier] NULL,
	[AgentGroupID2] [uniqueidentifier] NULL,
	[AgentCondition] [ntext] NULL,
	[Option1] [tinyint] NOT NULL,
	[Option2] [tinyint] NOT NULL,
	[ContraAccountNotAffected] [bit] NOT NULL,
	[ValueToGenerate] [ntext] NOT NULL,
	[AccountToGenerate] [ntext] NULL,
	[ContraAccountToGenerate] [ntext] NULL,
	[ContraAccountID] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[NoteToGenerate] [ntext] NULL,
	[NoteToGenerate2] [ntext] NULL,
	[ValueToGenerate2] [ntext] NULL,
 CONSTRAINT [PK_TBL086] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL087]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL087](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Caption] [nvarchar](255) NOT NULL,
	[AccountID] [uniqueidentifier] NOT NULL,
	[CurrencyID] [uniqueidentifier] NOT NULL,
	[DoneIn] [datetime] NOT NULL,
	[Value] [float] NOT NULL,
	[CurrencyBalance] [float] NOT NULL,
	[Notes] [ntext] NULL,
 CONSTRAINT [PK_TBL087] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL088]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL088](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CurrencyID] [uniqueidentifier] NOT NULL,
	[ContraCurrencyID] [uniqueidentifier] NULL,
	[DoneIn] [datetime] NOT NULL,
	[Rate] [float] NOT NULL,
	[Notes] [ntext] NULL,
 CONSTRAINT [PK_TBL088] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL089]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL089](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[UserGuide] [uniqueidentifier] NOT NULL,
	[InsertedIn] [datetime] NOT NULL,
	[TypeID] [tinyint] NOT NULL,
	[Boolean01] [bit] NOT NULL,
	[DoneIn] [datetime] NOT NULL,
	[CostCenter01] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Description1] [nvarchar](255) NULL,
	[Description2] [nvarchar](255) NULL,
	[Description3] [nvarchar](255) NULL,
	[Notes1] [ntext] NULL,
	[Notes2] [ntext] NULL,
	[Notes3] [ntext] NULL,
 CONSTRAINT [PK_TBL089] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL090]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL090](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[DoneIn] [datetime] NOT NULL,
	[RememberIn] [datetime] NULL,
	[InsertedIn] [datetime] NOT NULL,
	[UserGuide] [uniqueidentifier] NOT NULL,
	[HideIt] [tinyint] NOT NULL,
	[Description1] [nvarchar](255) NULL,
	[Description2] [nvarchar](255) NULL,
	[Description3] [nvarchar](255) NULL,
	[Notes1] [ntext] NULL,
	[Notes2] [ntext] NULL,
	[Notes3] [ntext] NULL,
 CONSTRAINT [PK_TBL090] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL091]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL091](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[InsertedIn] [datetime] NOT NULL,
	[EventID] [smallint] NOT NULL,
	[ObjectID] [int] NOT NULL,
	[UserGuide] [uniqueidentifier] NULL,
	[CardGuide] [uniqueidentifier] NULL,
	[PCID] [nvarchar](255) NOT NULL,
	[CardName] [nvarchar](500) NULL,
	[FormName] [varchar](50) NULL,
	[FormKey] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL091] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL092]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL092](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[AgentGuide] [uniqueidentifier] NOT NULL,
	[JobGuide] [uniqueidentifier] NULL,
	[TypeID] [smallint] NOT NULL,
	[SalaryType] [smallint] NOT NULL,
	[TextValue01] [nvarchar](255) NULL,
	[TextValue02] [nvarchar](255) NULL,
	[TextValue03] [nvarchar](255) NULL,
	[TextValue04] [nvarchar](255) NULL,
	[TextValue05] [nvarchar](255) NULL,
	[DateValue01] [datetime] NULL,
	[DateValue02] [datetime] NULL,
	[NumberValue01] [float] NOT NULL,
	[NumberValue02] [float] NOT NULL,
	[NumberValue03] [float] NOT NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[IntValue01] [float] NOT NULL,
	[IntValue02] [int] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[RelatedAdministration] [uniqueidentifier] NULL,
	[CardImage] [image] NULL,
	[Attachment] [image] NULL,
	[LongText01] [nvarchar](max) NULL,
	[LongText02] [nvarchar](max) NULL,
	[Notes] [nvarchar](255) NULL,
	[TextValue06] [nvarchar](255) NULL,
	[TextValue07] [nvarchar](255) NULL,
	[LongTextValue] [nvarchar](max) NULL,
 CONSTRAINT [PK_TBL092] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL093]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL093](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[CardDate] [datetime] NULL,
	[CardNumber] [int] NOT NULL,
	[CardNumber2] [int] NOT NULL,
	[NumberValue] [float] NOT NULL,
	[NumberValue2] [float] NOT NULL,
	[NumberValue3] [float] NOT NULL,
	[NumberValue4] [float] NOT NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[AgentGuide2] [uniqueidentifier] NULL,
	[StoreGuide] [uniqueidentifier] NULL,
	[ItemGuide] [uniqueidentifier] NULL,
	[Item01] [uniqueidentifier] NULL,
	[JobGuide] [uniqueidentifier] NULL,
	[ProjectGuide] [uniqueidentifier] NULL,
	[BranchGuide] [uniqueidentifier] NULL,
	[RelatedArchive] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[BooleanValue01] [bit] NOT NULL,
	[ByteValue01] [tinyint] NOT NULL,
	[TypeID] [smallint] NOT NULL,
	[Notes] [nvarchar](255) NULL,
	[Notes2] [nvarchar](255) NULL,
	[Attachment] [image] NULL,
 CONSTRAINT [PK_TBL093] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL094]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL094](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[FormName] [nvarchar](max) NOT NULL,
	[FormKey] [nvarchar](max) NULL,
	[ControlName] [nvarchar](max) NOT NULL,
	[FieldName] [nvarchar](max) NULL,
	[MainID] [int] NULL,
	[EventID] [tinyint] NOT NULL,
	[BuildEvent] [nvarchar](max) NULL,
	[MessageQuery] [nvarchar](max) NULL,
	[DataValidation] [nvarchar](max) NULL,
	[MessageType] [tinyint] NOT NULL,
	[IsActive] [bit] NOT NULL,
	[ResultFormat] [nvarchar](50) NULL,
 CONSTRAINT [PK_TBL094] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL095]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL095](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[AccountGuide] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_TBL095] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL096]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL096](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[CardLatinName] [nvarchar](255) NULL,
	[Security] [tinyint] NOT NULL,
	[DefaultShift] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[Category06] [uniqueidentifier] NULL,
	[Category07] [uniqueidentifier] NULL,
	[MainAttendance] [uniqueidentifier] NULL,
	[Fields] [ntext] NOT NULL,
	[BitValue1] [bit] NOT NULL,
	[BitValue2] [bit] NOT NULL,
	[BitValue3] [bit] NOT NULL,
	[BitValue4] [bit] NOT NULL,
	[BitValue5] [bit] NOT NULL,
	[BitValue6] [bit] NOT NULL,
 CONSTRAINT [PK_TBL096] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL097]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL097](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[GroupGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL097] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL098]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL098](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[CardDate] [datetime] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[AttendanceGuide] [uniqueidentifier] NULL,
	[ShiftGuide] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[Notes] [nvarchar](255) NULL,
	[TextValue01] [nvarchar](255) NULL,
	[TextValue02] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL098] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL099]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL099](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RecordGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[PLogIn] [datetime] NULL,
	[PLogOut] [datetime] NULL,
	[CLogIn] [datetime] NULL,
	[CLogOut] [datetime] NULL,
	[ShiftGuide] [uniqueidentifier] NULL,
	[AgentGuide] [uniqueidentifier] NOT NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[Category06] [uniqueidentifier] NULL,
	[Category07] [uniqueidentifier] NULL,
	[Notes] [nvarchar](255) NULL,
	[TextValue01] [nvarchar](255) NULL,
	[TextValue02] [nvarchar](255) NULL,
	[TextValue03] [nvarchar](255) NULL,
	[TextValue04] [nvarchar](255) NULL,
	[TextValue05] [nvarchar](255) NULL,
	[DvcIn] [nvarchar](255) NULL,
	[DvcOut] [nvarchar](255) NULL,
	[NumberValue01] [float] NOT NULL,
	[IgnoreDifferenceForLogin] [bit] NOT NULL,
	[IgnoreDifferenceForLogout] [bit] NOT NULL,
	[ManuallyEdit] [bit] NOT NULL,
	[CType] [int] NOT NULL,
	[CLateEntrance] [datetime] NULL,
	[CEarlyEntrance] [datetime] NULL,
	[CLateLeave] [datetime] NULL,
	[CEarlyLeave] [datetime] NULL,
	[DetailsGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL099] PRIMARY KEY CLUSTERED 
(
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL100]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL100](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[TypeID] [int] NOT NULL,
	[CardName] [nvarchar](255) NULL,
	[ItemGroupGuide] [uniqueidentifier] NULL,
	[MainGroup] [uniqueidentifier] NULL,
	[ItemGuide] [uniqueidentifier] NULL,
	[CardImage] [image] NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL100] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL101]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL101](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[TextValue] [nvarchar](255) NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[UserGuide] [uniqueidentifier] NULL,
	[TypeID] [tinyint] NOT NULL,
	[MainType] [tinyint] NOT NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL101] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL102]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL102](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[DeviceType] [tinyint] NOT NULL,
	[DeviceName] [nvarchar](255) NULL,
	[ConnectionType] [tinyint] NOT NULL,
	[Details] [nvarchar](255) NULL,
	[Info01] [nvarchar](255) NULL,
	[Info02] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL102] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL103]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL103](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ItemGuide] [uniqueidentifier] NULL,
	[GroupGuide] [uniqueidentifier] NULL,
	[MinQuantity] [float] NOT NULL,
	[BillType] [uniqueidentifier] NULL,
	[RelatedUnit] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[Project] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[AgentGroup] [uniqueidentifier] NULL,
	[AgentCostCenter] [uniqueidentifier] NULL,
	[AgentBranch] [uniqueidentifier] NULL,
	[AgentProject] [uniqueidentifier] NULL,
	[AgentCategory01] [uniqueidentifier] NULL,
	[AgentCategory02] [uniqueidentifier] NULL,
	[AgentCategory03] [uniqueidentifier] NULL,
	[AgentCategory04] [uniqueidentifier] NULL,
	[AgentCategory05] [uniqueidentifier] NULL,
	[Price] [float] NOT NULL,
	[DiscountRatio] [float] NOT NULL,
	[ExtraRatio] [float] NOT NULL,
 CONSTRAINT [PK_TBL103] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL104]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL104](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[TypeID] [smallint] NOT NULL,
	[Text01] [nvarchar](200) NULL,
 CONSTRAINT [PK_TBL104] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL105]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL105](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[AgentGuide] [uniqueidentifier] NOT NULL,
	[ItemGuide] [uniqueidentifier] NULL,
	[GroupGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL105] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL106]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL106](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[AgentGuide] [uniqueidentifier] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[Coding] [nvarchar](4000) NOT NULL,
 CONSTRAINT [PK_TBL106] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL107]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL107](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Notes] [nvarchar](255) NULL,
	[Notes2] [nvarchar](255) NULL,
	[Notes3] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL107] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL108]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL108](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ArchiveType] [uniqueidentifier] NOT NULL,
	[FieldName] [nvarchar](255) NOT NULL,
	[TemplateType] [int] NOT NULL,
	[CardImage] [image] NULL,
 CONSTRAINT [PK_TBL108] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL109]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL109](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[MainCardGuide] [uniqueidentifier] NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[ControlName] [nvarchar](255) NOT NULL,
	[OperationID] [int] NULL,
	[TypeID] [int] NULL,
	[CardImage] [image] NULL,
 CONSTRAINT [PK_TBL109] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL110]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL110](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[CardType] [int] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[Notes] [nvarchar](255) NULL,
	[DateFormat] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL110] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL111]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL111](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[ItemField] [nvarchar](255) NOT NULL,
	[FieldName] [nvarchar](255) NULL,
	[StartIndex] [int] NOT NULL,
	[CodeLength] [int] NOT NULL,
	[TypeGuide] [uniqueidentifier] NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL111] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL112]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL112](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[FormName] [nvarchar](255) NOT NULL,
	[Category] [nvarchar](255) NULL,
	[Notes] [nvarchar](255) NULL,
	[MainGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL112] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL113]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL113](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[MainID] [int] NULL,
	[ControlName] [nvarchar](255) NOT NULL,
	[TextValue] [nvarchar](255) NOT NULL,
	[TextValue02] [nvarchar](255) NULL,
	[NumberValue] [float] NULL,
	[NumberValue02] [float] NULL,
 CONSTRAINT [PK_TBL113] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL114]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL114](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[RelatedAgent] [uniqueidentifier] NULL,
	[MainGuide2] [uniqueidentifier] NULL,
	[RelatedCard] [uniqueidentifier] NULL,
	[MainID] [int] NULL,
	[Notes] [nvarchar](255) NULL,
	[TextValue01] [nvarchar](255) NULL,
	[TextValue02] [nvarchar](255) NULL,
	[TextValue03] [nvarchar](255) NULL,
	[TextValue04] [nvarchar](255) NULL,
	[TextValue05] [nvarchar](255) NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[TypeID] [int] NOT NULL,
	[IntValue01] [int] NOT NULL,
	[IntValue02] [int] NOT NULL,
	[IntValue03] [int] NOT NULL,
	[NumberValue01] [float] NULL,
	[NumberValue02] [float] NULL,
	[NumberValue03] [float] NULL,
	[NumberValue04] [float] NULL,
	[NumberValue05] [float] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[CurrencyGuide] [uniqueidentifier] NULL,
	[BitValue01] [bit] NOT NULL,
	[BitValue02] [bit] NOT NULL,
	[DateValue01] [datetime] NULL,
	[DateValue02] [datetime] NULL,
	[DateValue03] [datetime] NULL,
	[DateValue04] [datetime] NULL,
	[LongText01] [ntext] NULL,
	[LongText02] [ntext] NULL,
	[LongText03] [ntext] NULL,
	[CardImage] [image] NULL,
	[Attachment] [image] NULL,
 CONSTRAINT [PK_TBL114] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL115]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL115](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[FingerID] [int] NOT NULL,
	[SignDate] [datetime] NOT NULL,
	[FingerType] [int] NOT NULL,
	[SignType] [tinyint] NOT NULL,
	[DeviceName] [nvarchar](255) NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL115] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL116]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL116](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[SignOut] [datetime] NULL,
	[SignIn] [datetime] NULL,
	[Notes] [nvarchar](255) NULL,
	[DetailsGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL116] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL117]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL117](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[IntValue01] [int] NOT NULL,
	[IntValue02] [int] NOT NULL,
 CONSTRAINT [PK_TBL117] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL118]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL118](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[AccountGuide] [uniqueidentifier] NOT NULL,
	[DebitValue] [float] NOT NULL,
	[CreditValue] [float] NOT NULL,
	[SideType] [int] NOT NULL,
	[Ratio] [float] NOT NULL,
	[RoundUpValue] [float] NOT NULL,
	[Notes] [ntext] NULL,
	[NotEffectPrice] [bit] NOT NULL,
	[NotEffectTax] [bit] NOT NULL,
	[RatioCalculationAsDivision] [bit] NOT NULL,
 CONSTRAINT [PK_TBL118] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL119]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL119](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[CardLatinName] [nvarchar](255) NULL,
	[BondGuide] [uniqueidentifier] NULL,
	[BillGuide] [uniqueidentifier] NULL,
	[DefaultCurrency] [uniqueidentifier] NULL,
	[DefaultAccount] [uniqueidentifier] NULL,
	[Security] [tinyint] NOT NULL,
	[BondType] [int] NOT NULL,
	[CardType] [int] NOT NULL,
	[AutoBuildBond] [bit] NOT NULL,
	[Boolean01] [bit] NOT NULL,
	[Option01] [int] NOT NULL,
	[Option02] [int] NOT NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL119] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL120]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL120](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[CurrencyGuide] [uniqueidentifier] NULL,
	[Rate] [float] NOT NULL,
	[MainAdmin] [uniqueidentifier] NULL,
	[MainBill] [uniqueidentifier] NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[CardDate] [datetime] NOT NULL,
	[CardDate2] [datetime] NULL,
	[DoneIn] [datetime] NOT NULL,
	[NumberValue01] [float] NOT NULL,
	[IntValue01] [int] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CardImage] [image] NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL120] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL121]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL121](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RecordGuide] [uniqueidentifier] NOT NULL,
	[TypeID] [smallint] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[CurrencyGuide] [uniqueidentifier] NULL,
	[OperationBill] [uniqueidentifier] NULL,
	[BillGuide] [uniqueidentifier] NULL,
	[CardDate] [datetime] NULL,
	[Value] [float] NOT NULL,
	[ValueRate] [float] NOT NULL,
	[Debit] [float] NOT NULL,
	[Credit] [float] NOT NULL,
	[DebitRate] [float] NOT NULL,
	[CreditRate] [float] NOT NULL,
	[RelatedAdministration] [uniqueidentifier] NULL,
	[ContraAccount] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Project] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[ProductGuide] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[Description] [nvarchar](255) NULL,
	[Notes] [nvarchar](255) NULL,
	[RecordActivated] [bit] NOT NULL,
 CONSTRAINT [PK_TBL121] PRIMARY KEY CLUSTERED 
(
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL122]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL122](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[CardType] [int] NOT NULL,
	[CardMode] [int] NOT NULL,
	[IntValue01] [int] NOT NULL,
	[IntValue02] [int] NOT NULL,
	[IntValue03] [int] NOT NULL,
	[IntValue04] [int] NOT NULL,
	[NumberValue02] [float] NOT NULL,
	[TextValue01] [nvarchar](max) NULL,
	[TextValue02] [nvarchar](max) NULL,
	[BitValue01] [bit] NOT NULL,
	[BitValue02] [bit] NOT NULL,
	[BitValue03] [bit] NOT NULL,
	[DateValue01] [datetime] NULL,
	[DateValue02] [datetime] NULL,
	[LongText01] [ntext] NULL,
	[Notes] [ntext] NULL,
	[MainGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL122] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL123]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL123](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[RowGuide] [uniqueidentifier] NOT NULL,
	[MainID] [int] NULL,
	[AccountID] [uniqueidentifier] NULL,
	[StoreID] [uniqueidentifier] NULL,
	[CostCenterID] [uniqueidentifier] NULL,
	[ProjectID] [uniqueidentifier] NULL,
	[BranchID] [uniqueidentifier] NULL,
	[KeyValue01] [uniqueidentifier] NULL,
	[KeyValue02] [uniqueidentifier] NULL,
	[RecordType] [int] NOT NULL,
	[TypeID] [int] NOT NULL,
	[IntValue01] [int] NOT NULL,
	[IntValue02] [int] NOT NULL,
	[NumberValue01] [float] NOT NULL,
	[NumberValue02] [float] NOT NULL,
	[TextValue01] [nvarchar](max) NULL,
	[TextValue02] [nvarchar](max) NULL,
	[TextValue03] [nvarchar](max) NULL,
	[TextValue04] [nvarchar](max) NULL,
	[TextValue05] [nvarchar](max) NULL,
	[BitValue01] [bit] NOT NULL,
	[BitValue02] [bit] NOT NULL,
	[BitValue03] [bit] NOT NULL,
	[BitValue04] [bit] NOT NULL,
	[DateValue01] [datetime] NULL,
	[DateValue02] [datetime] NULL,
	[LongText01] [ntext] NULL,
	[LongText02] [ntext] NULL,
	[LongText03] [ntext] NULL,
	[LongText04] [ntext] NULL,
 CONSTRAINT [PK_TBL123] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL124]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL124](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TableID] [int] NOT NULL,
	[FieldName] [varchar](200) NOT NULL,
 CONSTRAINT [PK_TBL124] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL125]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL125](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TypeID] [smallint] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[JobGuide] [uniqueidentifier] NULL,
	[TextValue01] [nvarchar](255) NULL,
	[TextValue02] [nvarchar](255) NULL,
	[TextValue03] [nvarchar](255) NULL,
	[TextValue04] [nvarchar](255) NULL,
	[TextValue05] [nvarchar](255) NULL,
	[IntValue01] [int] NOT NULL,
	[IntValue02] [int] NOT NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL125] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL126]    Script Date: 8/14/2023 4:54:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL126](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[UserGuide] [uniqueidentifier] NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[CardNumber] [int] NOT NULL,
	[CardDate] [datetime] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[NoteState] [tinyint] NOT NULL,
	[NoteTitle] [nvarchar](250) NULL,
	[NoteBody] [nvarchar](max) NOT NULL,
 CONSTRAINT [PK_TBL126] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL127]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL127](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[ReceiverGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL127] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL128]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL128](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[UnitName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[MainUnit] [tinyint] NOT NULL,
	[IsFixed] [bit] NOT NULL,
	[Quantity] [float] NOT NULL,
	[Price] [float] NOT NULL,
	[AgentPrice] [float] NOT NULL,
	[WholePrice] [float] NOT NULL,
	[EndUserPrice] [float] NOT NULL,
	[Price5Item] [float] NOT NULL,
	[Price6Item] [float] NOT NULL,
	[Price7Item] [float] NOT NULL,
	[StanderCost] [float] NOT NULL,
	[Barcode] [nvarchar](255) NULL,
	[Notes] [nvarchar](255) NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_TBL128] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL129]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL129](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[BillGuide] [uniqueidentifier] NOT NULL,
	[BillSide] [smallint] NULL,
	[IsHidden] [bit] NOT NULL,
 CONSTRAINT [PK_TBL129] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL130]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL130](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[TypeID] [tinyint] NOT NULL,
	[ResultType] [tinyint] NOT NULL,
	[PeriodID] [tinyint] NOT NULL,
	[LongText01] [nvarchar](max) NULL,
	[LongText02] [nvarchar](max) NULL,
	[Number01] [float] NOT NULL,
	[Number02] [float] NOT NULL,
	[Number03] [float] NOT NULL,
	[Number04] [float] NOT NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[CurrencyGuide] [uniqueidentifier] NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[ContraAccount] [uniqueidentifier] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[Branch] [uniqueidentifier] NULL,
	[Project] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL130] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL131]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL131](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[PeriodGuide] [uniqueidentifier] NULL,
	[DueAfter] [int] NOT NULL,
	[DueDate] [datetime] NOT NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[DiscountValue] [float] NOT NULL,
	[DiscountRatio] [float] NOT NULL,
 CONSTRAINT [PK_TBL131] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL132]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL132](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[TypeID] [int] NOT NULL,
	[TypeGuide] [uniqueidentifier] NULL,
	[Color] [int] NOT NULL,
	[LatinName] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL132] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL133]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL133](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[AccountGuide] [uniqueidentifier] NULL,
	[CostCenterGuide] [uniqueidentifier] NULL,
	[ProjectGuide] [uniqueidentifier] NULL,
	[BranchGuide] [uniqueidentifier] NULL,
	[StoreGuide] [uniqueidentifier] NULL,
	[GroupGuide] [uniqueidentifier] NULL,
	[AgentsGroupGuide] [uniqueidentifier] NULL,
	[FormType] [nvarchar](max) NULL,
 CONSTRAINT [PK_TBL133] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL134]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL134](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[AffectItemsTax] [bit] NOT NULL,
	[AffectBillTax] [bit] NOT NULL,
	[BillTaxRatio] [float] NOT NULL,
	[CheckConditions] [bit] NOT NULL,
 CONSTRAINT [PK_TBL134] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL135]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL135](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardType] [int] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[Fields] [ntext] NULL,
	[NormalAbcenteeVacation] [uniqueidentifier] NULL,
	[UnjustifiedAbcenteeVacation] [uniqueidentifier] NULL,
	[LateEntranceHourlyVacation] [uniqueidentifier] NULL,
	[EarlyLeaveHourlyVacation] [uniqueidentifier] NULL,
	[AbsenteeTimeHourlyVacation] [uniqueidentifier] NULL,
	[NormalVacationExecutions] [uniqueidentifier] NULL,
	[NormalAbcenteeExecutions] [uniqueidentifier] NULL,
	[LateEntranceExecutions] [uniqueidentifier] NULL,
	[EarlyLeaveExecutions] [uniqueidentifier] NULL,
	[EarlyEntranceExecutions] [uniqueidentifier] NULL,
	[LateLeaveExecutions] [uniqueidentifier] NULL,
	[AbsenteeTimeExecutions] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL135] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL136]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL136](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[CardDate] [datetime] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL136] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL137]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL137](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RecordGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[AgentGuide] [uniqueidentifier] NOT NULL,
	[PLogIn] [datetime] NULL,
	[PLogOut] [datetime] NULL,
	[CLogIn] [datetime] NULL,
	[CLogOut] [datetime] NULL,
	[TimeoutInWork01] [datetime] NULL,
	[TimeinInWork01] [datetime] NULL,
	[TimeoutInWork02] [datetime] NULL,
	[TimeinInWork02] [datetime] NULL,
	[TimeoutInWork03] [datetime] NULL,
	[TimeinInWork03] [datetime] NULL,
	[TimeoutInWork04] [datetime] NULL,
	[TimeinInWork04] [datetime] NULL,
	[TimeoutInWork05] [datetime] NULL,
	[TimeinInWork05] [datetime] NULL,
 CONSTRAINT [PK_TBL137] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL138]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL138](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardNumber] [int] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL138] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL139]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL139](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardID] [uniqueidentifier] NULL,
	[CardID2] [uniqueidentifier] NULL,
	[Number01] [float] NOT NULL,
	[Number02] [float] NOT NULL,
	[Number03] [float] NOT NULL,
	[Number04] [float] NOT NULL,
	[TypeID] [int] NOT NULL,
	[Int01] [int] NOT NULL,
	[Int02] [int] NOT NULL,
 CONSTRAINT [PK_TBL139] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL140]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL140](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ItemID] [uniqueidentifier] NOT NULL,
	[StoreID] [uniqueidentifier] NOT NULL,
	[MinLimit] [float] NOT NULL,
	[MaxLimit] [float] NOT NULL,
 CONSTRAINT [PK_TBL140] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL141]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL141](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RowGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[LCNumber] [nvarchar](255) NULL,
	[ManualLCNumber] [nvarchar](255) NULL,
	[LCDate] [datetime] NULL,
	[LCEndDate] [datetime] NULL,
	[SupplierBank] [nvarchar](255) NULL,
	[LCAccount] [uniqueidentifier] NULL,
	[LCClosed] [bit] NOT NULL,
	[PurchaseOrderNo] [nvarchar](255) NULL,
	[FreightType] [uniqueidentifier] NULL,
	[DeliveryDate] [datetime] NULL,
	[DeadlineDeliveryDate] [datetime] NULL,
	[LCAmount] [float] NOT NULL,
	[LCCurrency] [uniqueidentifier] NULL,
	[LCAmountRate] [float] NOT NULL,
	[LCIssuingBank] [nvarchar](255) NULL,
	[LCAdvisingBank] [nvarchar](255) NULL,
	[LCConfirmingBank] [nvarchar](255) NULL,
	[LCTransferringBank] [nvarchar](255) NULL,
	[CoverRatio] [float] NOT NULL,
	[CoverAmount] [float] NOT NULL,
	[HSCode] [nvarchar](255) NULL,
	[PaymentType] [uniqueidentifier] NULL,
	[LCType] [uniqueidentifier] NULL,
	[TermsOfPayment] [uniqueidentifier] NULL,
	[GoodsType] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL141] PRIMARY KEY CLUSTERED 
(
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL142]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL142](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[CardDate] [datetime] NOT NULL,
	[Security] [tinyint] NOT NULL,
	[BillGuide] [uniqueidentifier] NULL,
	[AgentGuide] [uniqueidentifier] NOT NULL,
	[Additions] [float] NOT NULL,
	[Discounts] [float] NOT NULL,
	[CardImage] [image] NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL142] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL143]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL143](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[SerialCode] [nvarchar](255) NOT NULL,
	[ExpiryDate] [datetime] NULL,
	[EstablishDate] [datetime] NULL,
	[Notes] [nvarchar](255) NULL,
 CONSTRAINT [PK_TBL143] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL144]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL144](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[CardDate] [datetime] NOT NULL,
	[CardName] [nvarchar](250) NULL,
	[Security] [tinyint] NOT NULL,
	[NotActive] [bit] NOT NULL,
	[UseExtraQuantity] [bit] NOT NULL,
	[Quantity] [float] NOT NULL,
	[BillsCount] [float] NOT NULL,
	[AgentGroupGuide] [uniqueidentifier] NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[CostCenterGuide] [uniqueidentifier] NULL,
	[ProjectGuide] [uniqueidentifier] NULL,
	[BranchGuide] [uniqueidentifier] NULL,
	[PayMethod] [tinyint] NOT NULL,
	[OfferType] [int] NOT NULL,
	[OfferValue] [float] NOT NULL,
	[OfferDiscount] [float] NOT NULL,
	[DateStart] [datetime] NULL,
	[DateEnd] [datetime] NULL,
	[TimeStart] [datetime] NULL,
	[TimeEnd] [datetime] NULL,
	[ItemUseType] [int] NOT NULL,
	[Notes] [ntext] NULL,
	[AgentCostCenter] [uniqueidentifier] NULL,
	[AgentProject] [uniqueidentifier] NULL,
	[AgentBranch] [uniqueidentifier] NULL,
	[AgentAddress] [uniqueidentifier] NULL,
	[AgentCategory01] [uniqueidentifier] NULL,
	[AgentCategory02] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL144] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL145]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL145](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[GroupID] [uniqueidentifier] NULL,
	[TypeID] [int] NOT NULL,
	[ItemID] [uniqueidentifier] NULL,
	[Quantity] [float] NOT NULL,
	[Gifts] [float] NOT NULL,
	[ExtraQuantityRule] [int] NOT NULL,
	[Unit] [int] NOT NULL,
	[PriceValue] [float] NOT NULL,
	[ValueFrom] [float] NOT NULL,
	[ValueTo] [float] NOT NULL,
	[DiscountValue] [float] NOT NULL,
	[DiscountRatio] [float] NOT NULL,
	[Notes] [ntext] NULL,
 CONSTRAINT [PK_TBL145] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL146]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL146](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[MethodGuide] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_TBL146] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL147]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL147](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[TypeID] [int] NOT NULL,
	[Text01] [nvarchar](250) NULL,
	[Number01] [float] NOT NULL,
	[Number02] [float] NOT NULL,
	[Bit01] [bit] NOT NULL,
	[Bit02] [bit] NOT NULL,
	[Int01] [int] NOT NULL,
	[Int02] [int] NOT NULL,
	[Notes] [ntext] NULL,
 CONSTRAINT [PK_TBL147] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL148]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL148](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Col01] [nvarchar](max) NULL,
	[Col02] [nvarchar](max) NULL,
	[Col03] [nvarchar](max) NULL,
	[Col04] [nvarchar](max) NULL,
	[Col05] [nvarchar](max) NULL,
	[Col06] [nvarchar](max) NULL,
	[Col07] [nvarchar](max) NULL,
	[Col08] [nvarchar](max) NULL,
	[Col09] [nvarchar](max) NULL,
	[Col10] [nvarchar](max) NULL,
	[Col11] [nvarchar](max) NULL,
	[Col12] [nvarchar](max) NULL,
	[Col13] [nvarchar](max) NULL,
	[Col14] [nvarchar](max) NULL,
	[Col15] [nvarchar](max) NULL,
	[Col16] [nvarchar](max) NULL,
	[Col17] [nvarchar](max) NULL,
	[Col18] [nvarchar](max) NULL,
	[Col19] [nvarchar](max) NULL,
	[Col20] [nvarchar](max) NULL,
	[Col21] [nvarchar](max) NULL,
	[Col22] [nvarchar](max) NULL,
	[Col23] [nvarchar](max) NULL,
	[Col24] [nvarchar](max) NULL,
	[Col25] [nvarchar](max) NULL,
	[Col26] [nvarchar](max) NULL,
	[Col27] [nvarchar](max) NULL,
	[Col28] [nvarchar](max) NULL,
	[Col29] [nvarchar](max) NULL,
	[Col30] [nvarchar](max) NULL,
	[Col31] [nvarchar](max) NULL,
	[Col32] [nvarchar](max) NULL,
	[Col33] [nvarchar](max) NULL,
	[Col34] [nvarchar](max) NULL,
	[Col35] [nvarchar](max) NULL,
	[Col36] [nvarchar](max) NULL,
	[Col37] [nvarchar](max) NULL,
	[Col38] [nvarchar](max) NULL,
	[Col39] [nvarchar](max) NULL,
	[Col40] [nvarchar](max) NULL,
	[Col41] [nvarchar](max) NULL,
 CONSTRAINT [PK_TBL148] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL149]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL149](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[FieldTypeID] [int] NOT NULL,
	[FieldName] [nvarchar](max) NOT NULL,
 CONSTRAINT [PK_TBL149] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL150]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL150](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[TypeID] [int] NOT NULL,
	[FormName] [nvarchar](max) NOT NULL,
	[FormID] [nvarchar](max) NULL,
	[Caption] [nvarchar](max) NOT NULL,
	[RelatedFile] [image] NOT NULL,
	[PrintCount] [int] NOT NULL,
 CONSTRAINT [PK_TBL150] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL151]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL151](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[GroupGuide] [uniqueidentifier] NULL,
 CONSTRAINT [PK_TBL151] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL152]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL152](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[TypeID] [smallint] NOT NULL,
	[Text01] [nvarchar](max) NULL,
	[CardImage] [image] NULL,
	[Att01] [image] NULL,
	[Att02] [image] NULL,
 CONSTRAINT [PK_TBL152] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL153]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL153](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[TypeID] [smallint] NOT NULL,
	[Text01] [nvarchar](max) NULL,
 CONSTRAINT [PK_TBL153] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL154]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL154](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NULL,
	[TypeID] [smallint] NOT NULL,
	[RangeValue] [float] NOT NULL,
	[CommissionRatio] [float] NOT NULL,
 CONSTRAINT [PK_TBL154] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL155]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL155](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ControlName] [nvarchar](max) NOT NULL,
	[FormName] [nvarchar](max) NOT NULL,
	[TypeID] [smallint] NOT NULL,
	[TabIndex] [int] NOT NULL,
	[ShortcutKey] [int] NOT NULL,
	[TabStop] [bit] NOT NULL,
 CONSTRAINT [PK_TBL155] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL156]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL156](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[Security] [tinyint] NOT NULL,
	[TypeID] [smallint] NOT NULL,
	[CardType] [smallint] NOT NULL,
	[Notes] [ntext] NULL,
 CONSTRAINT [PK_TBL156] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL157]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL157](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CardGuide] [uniqueidentifier] NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[CardNumber] [int] NOT NULL,
	[ValueType] [tinyint] NOT NULL,
	[MonthStart] [tinyint] NOT NULL,
	[MonthEnd] [tinyint] NOT NULL,
	[DayStart] [tinyint] NOT NULL,
	[DayEnd] [tinyint] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[LatinName] [nvarchar](255) NULL,
	[AccountID] [uniqueidentifier] NULL,
	[Security] [tinyint] NOT NULL,
	[Notes] [ntext] NULL,
	[Script01] [ntext] NULL,
	[Script02] [ntext] NULL,
 CONSTRAINT [PK_TBL157] PRIMARY KEY CLUSTERED 
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL158]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL158](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[Damage] [ntext] NOT NULL,
	[WarrantyIncluded] [bit] NOT NULL,
	[MaintenanceMan] [nvarchar](255) NULL,
	[DamageDescription] [ntext] NULL,
	[Description] [ntext] NULL,
	[Cost] [float] NOT NULL,
 CONSTRAINT [PK_TBL158] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL159]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL159](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ConnectionID] [smallint] NOT NULL,
	[RowGuide] [uniqueidentifier] NOT NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[CostGuide] [uniqueidentifier] NULL,
	[ProductGuide] [uniqueidentifier] NOT NULL,
	[Quantity] [float] NOT NULL,
	[Unit] [int] NOT NULL,
	[Price] [float] NOT NULL,
 CONSTRAINT [PK_TBL159] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL160]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL160](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[BillGuide] [uniqueidentifier] NOT NULL,
	[IsHidden] [bit] NOT NULL,
 CONSTRAINT [PK_TBL160] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL161]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL161](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MainGuide] [uniqueidentifier] NOT NULL,
	[UserGuide] [uniqueidentifier] NULL,
	[GroupGuide] [uniqueidentifier] NULL,
	[PCName] [nvarchar](255) NULL,
	[PrinterName] [nvarchar](255) NULL,
	[PrintCount] [int] NOT NULL,
 CONSTRAINT [PK_TBL161] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL162]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL162](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RecordDate] [datetime] NOT NULL,
	[CardName] [nvarchar](255) NOT NULL,
	[ValueText] [ntext] NOT NULL,
	[ErrorMessage] [ntext] NULL,
	[Executed] [bit] NOT NULL,
 CONSTRAINT [PK_TBL162] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL163]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL163](
	[SP_ID] [int] NULL,
	[AccountSecurity] [tinyint] NULL,
	[AffectCostomerPrice] [bit] NULL,
	[AffectLastPurchasePrice] [bit] NULL,
	[AgentGuide] [uniqueidentifier] NULL,
	[AgentLatinName] [nvarchar](255) NULL,
	[AgentName] [nvarchar](255) NULL,
	[AgentSecurity] [tinyint] NULL,
	[AllBillNetDiscount] [float] NULL,
	[AllBillNetDiscountRate] [float] NULL,
	[AllTaxBill] [float] NULL,
	[AllTaxBillRate] [float] NULL,
	[BillCustom1] [nvarchar](255) NULL,
	[BillCustom2] [nvarchar](255) NULL,
	[BillCustom3] [nvarchar](255) NULL,
	[BillCustom4] [nvarchar](255) NULL,
	[BillCustom5] [nvarchar](255) NULL,
	[BillDate] [datetime] NULL,
	[BillDiscountsAndExtras] [float] NULL,
	[BillDiscountsAndExtrasRatio] [float] NULL,
	[BillItemNetTotalAfterTax] [float] NULL,
	[BillItemNetTotalAfterTaxRate] [float] NULL,
	[BillItemNetTotalBeforeTax] [float] NULL,
	[BillItemNetTotalBeforeTaxRate] [float] NULL,
	[BillKindID] [smallint] NULL,
	[BillMethod] [tinyint] NULL,
	[BillNotes] [nvarchar](255) NULL,
	[BillNotes2] [nvarchar](255) NULL,
	[BillNotes3] [nvarchar](255) NULL,
	[BillNotes4] [nvarchar](255) NULL,
	[BillNotes5] [nvarchar](255) NULL,
	[BillNumber] [int] NULL,
	[BillNumber2] [int] NULL,
	[BillQty] [float] NULL,
	[BillQuantity] [float] NULL,
	[BillSecurity] [tinyint] NULL,
	[BillTotalDiscounts] [float] NULL,
	[BillTotalExtras] [float] NULL,
	[BillTotalValue] [float] NULL,
	[BillType] [smallint] NULL,
	[BillTypeGuide] [uniqueidentifier] NULL,
	[BillTypeID] [smallint] NULL,
	[Branch] [uniqueidentifier] NULL,
	[BranchCode] [nvarchar](255) NULL,
	[BranchName] [nvarchar](255) NULL,
	[ByGroup] [uniqueidentifier] NULL,
	[CalcKeyField] [uniqueidentifier] NULL,
	[CalculatingField] [uniqueidentifier] NULL,
	[Category01] [uniqueidentifier] NULL,
	[Category02] [uniqueidentifier] NULL,
	[Category03] [uniqueidentifier] NULL,
	[Category04] [uniqueidentifier] NULL,
	[Category05] [uniqueidentifier] NULL,
	[CategoryName01] [nvarchar](255) NULL,
	[CategoryName02] [nvarchar](255) NULL,
	[CategoryName03] [nvarchar](255) NULL,
	[CategoryName04] [nvarchar](255) NULL,
	[CategoryName05] [nvarchar](255) NULL,
	[CommissionAccount] [nvarchar](511) NULL,
	[CommissionAccountCode] [nvarchar](255) NULL,
	[CommissionAccountGuide] [uniqueidentifier] NULL,
	[CommissionAccountLatinName] [nvarchar](255) NULL,
	[CommissionAccountName] [nvarchar](255) NULL,
	[CommissionAccSecurity] [tinyint] NULL,
	[CommissionSecurity] [tinyint] NULL,
	[CostCenter] [uniqueidentifier] NULL,
	[CostCenterCode] [nvarchar](255) NULL,
	[CostCenterName] [nvarchar](255) NULL,
	[CreditCardCommissionRatio] [float] NULL,
	[CreditCardGuide] [uniqueidentifier] NULL,
	[CreditCardName] [nvarchar](255) NULL,
	[CurrencyGuide] [uniqueidentifier] NULL,
	[CurrencyLatinName] [nvarchar](255) NULL,
	[CurrencyName] [nvarchar](255) NULL,
	[CurrencyShortcut] [nvarchar](255) NULL,
	[CustomerName] [nvarchar](255) NULL,
	[DateValue] [float] NULL,
	[Description] [ntext] NULL,
	[Description2] [nvarchar](255) NULL,
	[DetailsStore] [uniqueidentifier] NULL,
	[DiscountsAccountSecurity] [tinyint] NULL,
	[DiscountsAndEctrasDistributed] [bit] NULL,
	[DoneIn] [datetime] NULL,
	[DoNotAffectCosts] [bit] NULL,
	[DownPayment] [float] NULL,
	[EstablishDate] [datetime] NULL,
	[ExpiryDate] [datetime] NULL,
	[ExtraQty] [float] NULL,
	[ExtraQuantity] [float] NULL,
	[Factor] [float] NULL,
	[Factor2] [float] NULL,
	[Factor3] [float] NULL,
	[GroupCode] [nvarchar](255) NULL,
	[GroupGuid] [uniqueidentifier] NULL,
	[GroupLatinName] [nvarchar](255) NULL,
	[GroupName] [nvarchar](255) NULL,
	[HeadStore] [uniqueidentifier] NULL,
	[Hieght] [float] NULL,
	[InPut] [float] NULL,
	[InPutNetTotal] [float] NULL,
	[InsertedIn] [datetime] NULL,
	[InvoiceGuide] [uniqueidentifier] NULL,
	[InvoiceID] [int] NULL,
	[InvoiceLatinName] [nvarchar](255) NULL,
	[InvoiceMovementSide] [smallint] NULL,
	[InvoiceName] [nvarchar](255) NULL,
	[IsAssets] [bit] NULL,
	[Item] [nvarchar](511) NULL,
	[ItemBillDiscount] [float] NULL,
	[ItemBillDiscountRate] [float] NULL,
	[ItemBillTax] [float] NULL,
	[ItemCategory01Guide] [uniqueidentifier] NULL,
	[ItemCategory02Guide] [uniqueidentifier] NULL,
	[ItemDiscount0] [float] NULL,
	[ItemDiscount1] [float] NULL,
	[ItemDiscount2] [float] NULL,
	[ItemDiscount3] [float] NULL,
	[ItemDiscountValue] [float] NULL,
	[ItemDiscountValueRate] [float] NULL,
	[ItemExtraValue] [float] NULL,
	[ItemExtraValueRate] [float] NULL,
	[ItemFirstNetTotal] [float] NULL,
	[ItemFirstNetTotalRate] [float] NULL,
	[ItemGroup] [nvarchar](511) NULL,
	[ItemLatinName] [nvarchar](255) NULL,
	[ItemName] [nvarchar](255) NULL,
	[ItemNetPrice] [float] NULL,
	[ItemNetPriceAfterTax] [float] NULL,
	[ItemNetPriceAfterTaxRate] [float] NULL,
	[ItemNetPriceBeforeTax] [float] NULL,
	[ItemNetPriceBeforeTaxRate] [float] NULL,
	[ItemNetPriceRate] [float] NULL,
	[ItemNetTotal] [float] NULL,
	[ItemNetTotalAfterTax] [float] NULL,
	[ItemNetTotalAfterTaxRate] [float] NULL,
	[ItemNetTotalBeforeTax] [float] NULL,
	[ItemNetTotalBeforeTaxRate] [float] NULL,
	[ItemNetTotalRate] [float] NULL,
	[ItemOverBillDiscountsAndExtras] [float] NULL,
	[ItemPreparedNetTotal] [float] NULL,
	[ItemPriceRatio] [float] NULL,
	[ItemQuantity] [float] NULL,
	[ItemSecurity] [tinyint] NULL,
	[ItemSortID] [int] NULL,
	[ItemSource] [nvarchar](255) NULL,
	[ItemTaxValue] [float] NULL,
	[ItemTaxValueRate] [float] NULL,
	[ItemTotalValue] [float] NULL,
	[ItemTotalValueRate] [float] NULL,
	[Length] [float] NULL,
	[MainGroupGuide] [uniqueidentifier] NULL,
	[MainQuantity] [float] NULL,
	[MBillQty] [float] NULL,
	[MBillQuantity] [float] NULL,
	[MExtraQty] [float] NULL,
	[MQuantity] [float] NULL,
	[NetAfterTax] [float] NULL,
	[NetBeforeTax] [float] NULL,
	[NetBillQuantity] [float] NULL,
	[NotAffectCostActivity] [bit] NULL,
	[OrderNumber] [int] NULL,
	[OutPut] [float] NULL,
	[OutPutNetTotal] [float] NULL,
	[OverBillDiscounts] [float] NULL,
	[OverBillDiscountsAndExtras] [float] NULL,
	[OverBillDiscountsAndExtrasRatio] [float] NULL,
	[OverBillExtras] [float] NULL,
	[Paid] [float] NULL,
	[PatchCode] [nvarchar](255) NULL,
	[PayMethod] [smallint] NULL,
	[PayTerm] [nvarchar](255) NULL,
	[POSDiscount] [float] NULL,
	[POSGuide] [uniqueidentifier] NULL,
	[POSTaxValue] [float] NULL,
	[POSTaxValueRate] [float] NULL,
	[Posted] [tinyint] NULL,
	[PostToAccount] [nvarchar](511) NULL,
	[PostToAccountCode] [nvarchar](255) NULL,
	[PostToAccountGuide] [uniqueidentifier] NULL,
	[PostToAccountLatinName] [nvarchar](255) NULL,
	[PostToAccountName] [nvarchar](255) NULL,
	[PriceBillNetDiscount] [float] NULL,
	[PriceBillNetDiscountRate] [float] NULL,
	[ProductCode] [nvarchar](255) NULL,
	[ProductGuide] [uniqueidentifier] NULL,
	[ProductsAccount] [uniqueidentifier] NULL,
	[ProductType] [tinyint] NULL,
	[Project] [uniqueidentifier] NULL,
	[ProjectCode] [nvarchar](255) NULL,
	[ProjectName] [nvarchar](255) NULL,
	[Qty] [float] NULL,
	[Quantity] [float] NULL,
	[Rate] [float] NULL,
	[RecordDate] [datetime] NULL,
	[RecordSecurity] [tinyint] NULL,
	[RelatedAgent] [uniqueidentifier] NULL,
	[RelatedObjects] [nvarchar](255) NULL,
	[ReserveDate] [datetime] NULL,
	[RowDiscountRatio] [float] NULL,
	[RowExtraRatio] [float] NULL,
	[RowGuide] [uniqueidentifier] NULL,
	[RowInsertedIn] [datetime] NULL,
	[RowTaxRatio] [float] NULL,
	[SalesPrice] [float] NULL,
	[SavedCostPrice] [float] NULL,
	[SavedTotalCost] [float] NULL,
	[StatementName] [nvarchar](255) NULL,
	[StockProduct] [smallint] NULL,
	[Store] [nvarchar](511) NULL,
	[StoreCode] [nvarchar](255) NULL,
	[StoreGuide] [uniqueidentifier] NULL,
	[StoreID] [uniqueidentifier] NULL,
	[StoreName] [nvarchar](255) NULL,
	[StoreSecurity] [tinyint] NULL,
	[TaxAffectNetPrice] [bit] NULL,
	[TaxAffectPrice] [bit] NULL,
	[TaxBillNetDiscount] [float] NULL,
	[TaxBillNetDiscountRate] [float] NULL,
	[TaxMethod] [uniqueidentifier] NULL,
	[TaxValue] [float] NULL,
	[TaxValueRate] [float] NULL,
	[TotalIncludeTax] [bit] NULL,
	[Unit] [tinyint] NULL,
	[UnitName] [nvarchar](255) NULL,
	[UnitPrice] [float] NULL,
	[Value] [float] NULL,
	[VariableUnit] [uniqueidentifier] NULL,
	[VariableUnitName] [nvarchar](255) NULL,
	[VariableUnitPrice] [float] NULL,
	[VariableUnitQuantity] [float] NULL,
	[Weight] [float] NULL,
	[Width] [float] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [dbo].[Qry179]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry179] As Select a.AgentName,Convert(varchar(15),TBL022.BillNumber) As InvoiceNumber,TBL022.*,TBL020.BillType As TypeID,CONVERT(varchar(15), TBL022.BillNumber) As CardNumber,TBL020.InvoiceName As BillType From TBL022 
 Left Join TBL020 On TBL022.MainGuide=TBL020.CardGuide 
 Left Join TBL016 a On TBL022.AgentGuide=a.CardGuide
GO
/****** Object:  View [dbo].[Qry180]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry180] As Select * From Qry179 Where TypeID<2 Or TypeID=16
GO
/****** Object:  View [dbo].[Qry185]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry185] As Select * From TBL100 Where TypeID=1
GO
/****** Object:  View [dbo].[QryOprBill001]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create View [dbo].[QryOprBill001] As 
 Select TBL007.ID As SortID, 
 TBL007.*,a.Qty As Quantity,q.Qty as StoreQuantity,TBL006.GroupName,TBL007.LatinName As MainLatinName,TBL006.LatinName As GroupLatinName,TBL006.CardCode As GroupCardCode From 
 TBL007 Left Join (Select * From Qry185 Where MainGuide = '81db777b-4961-4b52-a803-2c26ce84fc98') l On l.ItemGroupGuide=TBL007.GroupGuid 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a Left Join TBL022 b On a.MainGuide=b.CardGuide 
 Left Join TBL020 c On b.MainGuide=c.CardGuide 
 Left Join TBL007 d On a.ProductGuide=d.CardGuide 
 Where b.Posted>0)a 
 Group By ProductGuide 
 )a On TBL007.CardGuide=a.ProductGuide 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a inner Join TBL022 b On a.MainGuide=b.CardGuide 
 inner Join TBL020 c On b.MainGuide=c.CardGuide 
 inner Join TBL007 d On a.ProductGuide=d.CardGuide 
 Where b.Posted>0 
 )a 
 Group By ProductGuide 
 )q On a.ProductGuide=q.ProductGuide 
 Left Join TBL006 On TBL007.GroupGuid=TBL006.CardGuide 
 Where (Select Count(*) From Qry185 Where MainGuide = '81db777b-4961-4b52-a803-2c26ce84fc98')=0 Or l.ID Is not null  
GO
/****** Object:  View [dbo].[Qry054]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry054] As SELECT    a.ControlType As MainCrType,TBL033.CardTypeID, TBL035.ID AS SortID, TBL034.ID, TBL033.CardGuide, TBL033.CardType, TBL033.CardName, TBL034.ControlName, TBL034.PrintType, 
                       TBL034.ControlType, TBL034.MainCr, TBL035.MainID, TBL035.PropertyName, TBL035.PropertyValue, TBL035.PropertyValue2, 
                       TBL035.PropertyNumberValue, TBL035.ControlImage 
 FROM         TBL035 with (nolock) RIGHT OUTER JOIN 
                       TBL034 with (nolock) ON TBL035.MainID = TBL034.ID RIGHT OUTER JOIN 
                       TBL033 with (nolock) ON TBL034.MainGuide = TBL033.CardGuide 
                       Left Join TBL034 a with (nolock) on a.MainGuide = TBL033.CardGuide And TBL034.MainCr=Convert(nvarchar(255),a.ID)
GO
/****** Object:  View [dbo].[Qry216]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry216] As Select a.*,b.TabIndex From Qry054 a 
 Left Join 
 (Select MainID As CrID,MAX(PropertyNumberValue) As TabIndex From TBL035 Where PropertyName='TabIndex' Group By MainID)b On a.ID=b.CrID
GO
/****** Object:  View [dbo].[Qry056]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry056] As SELECT Sum((CASE TBL020.InvoiceMovementSide When 1 Then 
 (case TBL023.Unit When 2 then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor2 When 3 Then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor3 Else (TBL023.Quantity+ExtraQuantity) End)Else 0 End)) 
 -Sum((CASE TBL020.InvoiceMovementSide When -1 Then (case TBL023.Unit When 2 then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor2 When 3 Then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor3 Else (TBL023.Quantity+ExtraQuantity) End)Else 0 End)) AS Quantity, 
 TBL023.ProductGuide 
 FROM TBL023 with (nolock) INNER JOIN 
 TBL022 with (nolock) ON TBL023.MainGuide = TBL022.CardGuide 
 INNER JOIN TBL020 with (nolock) ON TBL022.MainGuide = TBL020.CardGuide 
 INNER JOIN TBL007 with (nolock) ON TBL023.ProductGuide = TBL007.CardGuide 
 LEFT JOIN TBL128 with (nolock) On TBL023.RelatedUnit=TBL128.CardGuide 
 Where TBL022.Posted>0 And TBL007.StockProduct>0 
 GROUP BY TBL023.ProductGuide
GO
/****** Object:  View [dbo].[Qry057]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry057] As SELECT     TBL007.*, Qry056.Quantity, Qry056.Quantity As StoreQuantity 
 FROM         TBL007 with (nolock) LEFT OUTER JOIN 
                       Qry056 ON TBL007.CardGuide = Qry056.ProductGuide 
GO
/****** Object:  View [dbo].[Qry089]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry089] As SELECT     Qry057.*,Null as Lump,'' As CustomValue ,TBL006.CardCode AS GroupCardCode, TBL006.GroupName, TBL006.LatinName AS GroupLatinName,TBL006.ForceCodesInInput,TBL006.ForceCodesInOutput,TBL006.CannotDuplicateSerial, 
                       TBL006.Notes AS GroupNotes 
 FROM          Qry057 LEFT JOIN TBL006 
                       ON Qry057.GroupGuid = TBL006.CardGuide
GO
/****** Object:  View [dbo].[Qry141]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry141] As SELECT     Qry057.*, TBL006.CardCode AS GroupCardCode, TBL006.GroupName, TBL006.LatinName AS GroupLatinName, 
                       TBL006.Notes AS GroupNotes 
 FROM          Qry057 LEFT JOIN TBL006 
                       ON Qry057.GroupGuid = TBL006.CardGuide Where Qry057.Quantity>0
GO
/****** Object:  View [dbo].[Qry173]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry173] As SELECT     Qry057.*,Null as Lump,'' As CustomValue ,TBL006.CardCode AS GroupCardCode, TBL006.GroupName, TBL006.LatinName AS GroupLatinName, 
                       TBL006.Notes AS GroupNotes 
 FROM          Qry057 LEFT JOIN TBL006 
                       ON Qry057.GroupGuid = TBL006.CardGuide 
 Where Qry057.IsAssets>0
GO
/****** Object:  View [dbo].[Qry060]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry060] As SELECT     MainGuide, COUNT(ID) AS Serials 
 FROM         TBL066 with (nolock) 
 GROUP BY MainGuide
GO
/****** Object:  View [dbo].[Qry061]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry061] As SELECT     TBL023.*, Qry060.Serials 
 FROM         Qry060 RIGHT OUTER JOIN 
                       TBL023 with (nolock) ON Qry060.MainGuide = TBL023.RowGuide
GO
/****** Object:  View [dbo].[Qry065]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry065] As SELECT * From dbo.Fun032() 
GO
/****** Object:  View [dbo].[Qry006]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry006] As SELECT a.ReserveDate,a.RelatedAgent,c.BooleanOption10 As TaxAffectNetPrice,a.ID, a.MainGuide,a.RecordDate,a.RecordSecurity, a.RowGuide, a.ProductGuide,a.SalesPrice,
 a.Quantity + a.ExtraQuantity AS Quantity, a.Unit, a.TotalValue, a.DiscountValue, a.ExtraValue, a.TaxValue,
 dbo.Ratio(a.DiscountValue,a.TotalValue)*100 As RowDiscountRatio,dbo.Ratio(a.ExtraValue,a.TotalValue)*100 As RowExtraRatio,
 (CASE When c.TotalIncludeTax=0 Then dbo.Ratio(a.TaxValue,a.TotalValue) When a.TaxValue>a.TaxValue And a.TaxValue>0 Then dbo.Ratio(a.TotalValue,a.TaxValue)-1 Else 0 End)*100 As RowTaxRatio, a.Weight, a.Value, a.StoreID,
 a.ExpiryDate,a.EstablishDate,a.PatchCode ,c.TotalIncludeTax , a.Quantity As BillQty, a.ExtraQuantity As ExtraQty,
 a.Length, a.Width, a.Hieght, a.Description, a.CostCenter, a.BillCustom1, a.BillCustom2, a.BillCustom3, a.BillCustom4, a.BillCustom5, a.Description2, a.RelatedObjects, a.InsertedIn,a.StatementName,a.CalcKeyField
 , a.Category01, a.Category02, a.Category03, a.Category04, a.Category05,a.RelatedUnit As VariableUnit,a.UnitQuantity As VariableUnitQuantity,(CASE When a.UnitQuantity>0 Then a.TotalValue/a.UnitQuantity Else 0 End)*b.Rate As VariableUnitPrice
 ,a.Discount0 As ItemDiscount0, a.Discount1 As ItemDiscount1, a.Discount2 As ItemDiscount2, a.Discount3 As ItemDiscount3,a.BillTax As ItemBillTax
 ,a.TotalValue+a.ExtraValue-a.DiscountValue-(case c.TotalIncludeTax when 1 then a.TaxValue else 0 end) As ItemNetTotalBeforeTax
 ,a.TotalValue+a.ExtraValue-a.DiscountValue+(case c.TotalIncludeTax when 1 then 0 else a.TaxValue end) As ItemNetTotalAfterTax
 ,p.PriceValue As SavedTotalCost,p.PriceValue/(a.Quantity+a.ExtraQuantity) As UnitSavedCost
 FROM TBL023 a with(nolock) Inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide Inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide
 Left Join (Select * From TBL074 with(nolock) Where PriceType=200) p On a.RowGuide=p.BillRowGuide
GO
/****** Object:  View [dbo].[Qry096]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry096] As SELECT TBL007.NotDiscountable,TBL022.Discount*TBL022.Rate As POSDiscountRate,TBL022.Discount As POSDiscount,Qry006.ReserveDate, Qry006.TaxValue*TBL022.Rate As TaxValueRate ,Qry006.RelatedAgent,TBL022.ByGroup,Qry006.ItemDiscount0,Qry006.ItemDiscount1,
 Qry006.ItemDiscount2, Qry006.ItemDiscount3,Qry006.ItemBillTax,Qry006.TaxAffectNetPrice,Qry006.SalesPrice,TBL022.DownPayment*TBL022.Rate As DownPayment,Qry006.RelatedObjects,Qry006.Description2,TBL022.TaxMethod,TBL128.UnitName As VariableUnitName,TBL007.IsAssets,
 TBL022.CustomerName,TBL016.MainGroupGuide,TBL022.CalculatingField, Qry006.RecordDate,Qry006.RecordSecurity,Cast (TBL022.BillDate As float)As DateValue,Qry006.StoreID As DetailsStore,Qry006.CalcKeyField,TBL022.StoreGuide as HeadStore,Qry006.Unit, Qry006.ProductGuide, (CASE Qry006.Unit When 3 Then TBL007.Unit3 When 2 Then TBL007.Unit2 Else TBL007.Unit End) AS UnitName,
 Qry006.Quantity As MQuantity, isnull(Qry006.DiscountValue,0) AS ItemDiscountValueRate,Qry006.StoreID, isnull(Qry006.ExtraValue,0)
 AS ItemExtraValueRate, isnull(Qry006.TaxValue,0) ItemTaxValueRate ,Qry006.RowDiscountRatio,Qry006.RowExtraRatio,Qry006.RowTaxRatio, Qry006.ExpiryDate,Qry006.EstablishDate, Qry006.PatchCode, Qry006.Length, Qry006.Width, Qry006.Hieght, Qry006.Weight, Qry006.Value, Qry006.Description,
 TBL022.CardGuide AS InvoiceGuide,Qry006.BillQty As MBillQty, Qry006.ExtraQty As MExtraQty,(CASE Qry006.Unit When 3 Then TBL007.Factor3 When 2 Then TBL007.Factor2 Else 1 End)As Factor, Qry006.ID AS ItemSortID, TBL022.ID AS InvoiceID, isnull(Qry006.StoreID, TBL022.StoreGuide)
 AS StoreGuide, Qry006.TotalValue AS ItemTotalValueRate, TBL022.BillDate, TBL022.PayMethod, TBL019.PayTerm, TBL022.DoneIn,TBL007.Source As ItemSource,
 TBL022.CurrencyGuide, TBL022.BillNumber,TBL022.BillNumber2, TBL022.Rate, TBL001.CurrencyName, TBL001.LatinName AS CurrencyLatinName,
 TBL001.CurrencyShortcut, TBL022.AgentGuide, TBL022.Notes AS BillNotes, TBL016.AgentName, TBL016.LatinName AS AgentLatinName,
 TBL022.PostToAccount AS PostToAccountGuide, TBL004.CardCode AS PostToAccountCode, TBL004.AccountName AS PostToAccountName,
 TBL022.CommissionAccount AS CommissionAccountGuide, TBL004_1.CardCode AS CommissionAccountCode,TBL022.ProductsAccount,
 TBL004_1.AccountName AS CommissionAccountName, TBL004_1.LatinName AS CommissionAccountLatinName, TBL004.LatinName AS PostToAccountLatinName,
 TBL022.CreditCard AS CreditCardGuide, TBL022.Paid, TBL022.Posted, TBL025.CardName AS CreditCardName,Qry006.TotalIncludeTax ,
 TBL025.CommissionRatio AS CreditCardCommissionRatio, TBL022.MainGuide AS BillTypeGuide, TBL022.Security AS BillSecurity,
 TBL007.Security AS ItemSecurity, TBL004.Security AS AccountSecurity, TBL016.Security AS AgentSecurity,
 TBL004_1.Security AS CommissionAccSecurity, TBL025.Security AS CommissionSecurity, Qry006.Quantity AS MBillQuantity, TBL007.ProductType,
 Qry006.BillCustom1, Qry006.BillCustom2, Qry006.BillCustom3, Qry006.BillCustom4, Qry006.BillCustom5, Qry006.RowGuide,TBL022.TaxValue As POSTaxValueRate,TBL022.TaxValue*TBL022.Rate As POSTaxValue,
 TBL022.InsertedIn, TBL022.POSGuide, isnull(Qry006.CostCenter, TBL022.CostCenter) AS CostCenter, TBL022.BillNotes2,
 TBL022.BillNotes3, TBL022.BillNotes4, TBL022.BillNotes5, Qry006.TaxValue ,Qry006.InsertedIn As RowInsertedIn,Qry006.StatementName,TBL022.Project,TBL022.Branch
 ,TBL022.OrderNumber, dbo.Qry006.Category01, dbo.Qry006.Category02, dbo.Qry006.Category03, dbo.Qry006.Category04, dbo.Qry006.Category05,Qry006.VariableUnit,Qry006.VariableUnitQuantity,Qry006.VariableUnitPrice,TBL007.Category01 As ItemCategory01Guide,TBL007.Category02 As ItemCategory02Guide,
 Qry006.ItemNetTotalBeforeTax As ItemNetTotalBeforeTaxRate,Qry006.ItemNetTotalAfterTax As ItemNetTotalAfterTaxRate
 ,Qry006.SavedTotalCost,Qry006.UnitSavedCost/(CASE Qry006.Unit When 3 Then TBL007.Factor3 When 2 Then TBL007.Factor2 Else 1 End) As SavedCostPrice
 FROM TBL007 with (nolock) RIGHT OUTER JOIN
 Qry006 LEFT OUTER JOIN
 TBL128 with (nolock) ON Qry006.VariableUnit = TBL128.CardGuide LEFT JOIN
 TBL025 with (nolock) RIGHT OUTER JOIN
 TBL022 with (nolock) ON TBL025.CardGuide = TBL022.CreditCard LEFT OUTER JOIN
 TBL004 TBL004_1 with (nolock) ON TBL022.CommissionAccount = TBL004_1.CardGuide LEFT OUTER JOIN
 TBL004 with (nolock) ON TBL022.PostToAccount = TBL004.CardGuide LEFT OUTER JOIN
 TBL016 with (nolock) ON TBL022.AgentGuide = TBL016.CardGuide LEFT OUTER JOIN
 TBL001 with (nolock) ON TBL022.CurrencyGuide = TBL001.CardGuide LEFT OUTER JOIN
 TBL019 with (nolock) ON TBL022.PayMethod = TBL019.ID ON Qry006.MainGuide = TBL022.CardGuide ON TBL007.CardGuide = Qry006.ProductGuide
GO
/****** Object:  View [dbo].[Qry097]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry097] As SELECT     Qry096.*,Qry096.MBillQty * Qry096.Factor As BillQty,Qry096.MBillQuantity * Qry096.Factor As BillQuantity,Qry096.MExtraQty*Qry096.Factor As ExtraQty,Qry096.MQuantity*Qry096.Factor As Quantity, ItemTotalValueRate * Rate AS ItemTotalValue, ItemDiscountValueRate * Rate AS ItemDiscountValue, ItemExtraValueRate * Rate AS ItemExtraValue, ItemTaxValueRate * Rate AS ItemTaxValue ,ItemNetTotalBeforeTaxRate * Rate As ItemNetTotalBeforeTax,ItemNetTotalAfterTaxRate * Rate As ItemNetTotalAfterTax 
 FROM         Qry096
GO
/****** Object:  View [dbo].[Qry098]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry098] As SELECT     Qry097.*,Qry097.Quantity as Qty,Qry097.BillQty as MainQuantity,Qry097.ExtraQty as ExtraQuantity, TBL007.CardCode AS ProductCode, TBL007.ProductName AS ItemName, TBL007.LatinName AS ItemLatinName, TBL007.GroupGuid, 
 TBL006.CardCode AS GroupCode, TBL006.GroupName, TBL006.LatinName AS GroupLatinName, TBL007.StockProduct, TBL007.Factor2, TBL007.Factor3 
 FROM         TBL006 with (nolock) RIGHT OUTER JOIN 
 TBL007 with (nolock) ON TBL006.CardGuide = TBL007.GroupGuid RIGHT OUTER JOIN 
 Qry097 ON TBL007.CardGuide = Qry097.ProductGuide
GO
/****** Object:  View [dbo].[Qry016]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry016] As Select d.MainGuide,b.BillExtras As OverBillExtras,b.BillDiscounts As OverBillDiscounts,a.BillExtras,a.BillDiscounts,d.AccountSecurity
 ,(case t.BillMethod when 1 then h.Discount else IsNull(d.BillDiscounts,0) end)/h.Rate As AllBillDiscountsRate,IsNull(d.BillExtras,0)/h.Rate As AllBillExtrasRate ,(case t.BillMethod when 1 then h.Discount else IsNull(d.BillDiscounts-d.BillExtras,0) end)/h.Rate As AllBillNetDiscountRate
 ,(case t.BillMethod when 1 then h.Discount else IsNull(d.BillDiscounts,0) end) As AllBillDiscounts,IsNull(d.BillExtras,0) As AllBillExtras ,(case t.BillMethod when 1 then h.Discount else IsNull(d.BillDiscounts-d.BillExtras,0)end) As AllBillNetDiscount
 -----------------------------------------------------------------------------------------------------
 ,(case t.BillMethod when 1 then h.Discount else IsNull(a.BillDiscounts,0) end)/h.Rate As PriceBillDiscountsRate,IsNull(a.BillExtras,0)/h.Rate As PriceBillExtrasRate ,(case t.BillMethod when 1 then h.Discount else IsNull(a.BillDiscounts-a.BillExtras,0) end)/h.Rate As PriceBillNetDiscountRate
 ,(case t.BillMethod when 1 then h.Discount else IsNull(a.BillDiscounts,0) end) As PriceBillDiscounts,IsNull(a.BillExtras,0) As PriceBillExtras ,(case t.BillMethod when 1 then h.Discount else IsNull(a.BillDiscounts-a.BillExtras,0) end) As PriceBillNetDiscount
 -----------------------------------------------------------------------------------------------------
 ,(case t.BillMethod when 1 then h.Discount else IsNull(c.BillDiscounts,0) end)/h.Rate As TaxBillDiscountsRate,IsNull(c.BillExtras,0)/h.Rate As TaxBillExtrasRate ,(case t.BillMethod when 1 then h.Discount else IsNull(c.BillDiscounts-c.BillExtras,0) end)/h.Rate As TaxBillNetDiscountRate
 ,(case t.BillMethod when 1 then h.Discount else IsNull(c.BillDiscounts,0) end) As TaxBillDiscounts,IsNull(c.BillExtras,0) As TaxBillExtras ,(case t.BillMethod when 1 then h.Discount else IsNull(c.BillDiscounts-c.BillExtras,0) end) As TaxBillNetDiscount
 -----------------------------------------------------------------------------------------------------
 ,(case t.BillMethod when 1 then h.TaxValue else IsNull(x.BillTaxes,0) end)/h.Rate As AllTaxBillRate
 ,(case t.BillMethod when 1 then h.TaxValue else IsNull(x.BillTaxes,0) end) As AllTaxBill
 from TBL022 h with(nolock)
 inner join TBL020 t with(nolock) On h.MainGuide=t.CardGuide
 -----------------------------------------------------------------------------------------------------
 inner join
 (SELECT TBL024.MainGuide,SUM(TBL024.ExtraToSave) / TBL022.Rate AS BillExtras, SUM(TBL024.DiscountToSave) / TBL022.Rate AS BillDiscounts,
 MIN(TBL004.Security) AS AccountSecurity
 FROM TBL024 with(nolock)
 LEFT OUTER JOIN TBL022 with(nolock) ON TBL024.MainGuide = TBL022.CardGuide
 LEFT OUTER JOIN TBL004 with(nolock) ON TBL024.AccountID = TBL004.CardGuide
 Inner Join (Select CardGuide ,TotalIncludeTax, SubjectToTaxAccount As TaxAccount From TBL020 with(nolock)) a On TBL022.MainGuide=a.CardGuide And (a.TaxAccount Is Null Or TBL024.AccountID<>a.TaxAccount)
 GROUP BY TBL024.MainGuide,a.TotalIncludeTax, TBL022.Rate)d
 On h.CardGuide=d.MainGuide
 -----------------------------------------------------------------------------------------------------
 left join
 (SELECT TBL024.MainGuide,SUM(TBL024.ExtraToSave) / TBL022.Rate AS BillExtras, SUM(TBL024.DiscountToSave) / TBL022.Rate AS BillDiscounts,
 MIN(TBL004.Security) AS AccountSecurity
 FROM TBL024 with(nolock)
 LEFT OUTER JOIN TBL022 with(nolock) ON TBL024.MainGuide = TBL022.CardGuide
 LEFT OUTER JOIN TBL004 with(nolock) ON TBL024.AccountID = TBL004.CardGuide
 Inner Join (Select CardGuide,TotalIncludeTax, SubjectToTaxAccount As TaxAccount From TBL020 with(nolock)) a On TBL022.MainGuide=a.CardGuide And (a.TaxAccount Is Null Or TBL024.AccountID<>a.TaxAccount)
 Where TBL024.NotEffectPrice=0
 GROUP BY TBL024.MainGuide,a.TotalIncludeTax, TBL022.Rate)a
 on h.CardGuide=a.MainGuide
 -----------------------------------------------------------------------------------------------------
 left Join
 (SELECT TBL024.MainGuide,SUM(TBL024.ExtraToSave) / TBL022.Rate AS BillExtras, SUM(TBL024.DiscountToSave) / TBL022.Rate AS BillDiscounts,
 MIN(TBL004.Security) AS AccountSecurity
 FROM TBL024 with(nolock)
 LEFT OUTER JOIN TBL022 with(nolock) ON TBL024.MainGuide = TBL022.CardGuide
 LEFT OUTER JOIN TBL004 with(nolock) ON TBL024.AccountID = TBL004.CardGuide
 Inner Join (Select CardGuide,TotalIncludeTax,(CASE BooleanOption10 When 0 Then Null Else SubjectToTaxAccount End)As TaxAccount From TBL020) a On TBL022.MainGuide=a.CardGuide And (a.TaxAccount Is Null Or TBL024.AccountID<>a.TaxAccount)
 Where TBL024.NotEffectPrice=1
 GROUP BY TBL024.MainGuide,a.TotalIncludeTax, TBL022.Rate)b
 On h.CardGuide=b.MainGuide
 -----------------------------------------------------------------------------------------------------
 left Join
 (SELECT TBL024.MainGuide,SUM(TBL024.ExtraToSave) / TBL022.Rate AS BillExtras, SUM(TBL024.DiscountToSave) / TBL022.Rate AS BillDiscounts,
 MIN(TBL004.Security) AS AccountSecurity
 FROM TBL024 with(nolock)
 LEFT OUTER JOIN TBL022 with(nolock) ON TBL024.MainGuide = TBL022.CardGuide
 LEFT OUTER JOIN TBL004 with(nolock) ON TBL024.AccountID = TBL004.CardGuide
 Inner Join (Select CardGuide, TotalIncludeTax, SubjectToTaxAccount As TaxAccount From TBL020) a On TBL022.MainGuide=a.CardGuide And (a.TaxAccount Is Null Or TBL024.AccountID<>a.TaxAccount)
 Where TBL024.NotEffectTax=0
 GROUP BY TBL024.MainGuide,a.TotalIncludeTax, TBL022.Rate)c
 On h.CardGuide=c.MainGuide
 -----------------------------------------------------------------------------------------------------
 left join
 (SELECT TBL024.MainGuide,SUM(TBL024.ExtraToSave-TBL024.DiscountToSave) / TBL022.Rate AS BillTaxes,
 MIN(TBL004.Security) AS AccountSecurity
 FROM TBL024 with(nolock)
 LEFT OUTER JOIN TBL022 with(nolock) ON TBL024.MainGuide = TBL022.CardGuide
 LEFT OUTER JOIN TBL004 with(nolock) ON TBL024.AccountID = TBL004.CardGuide
 Inner Join (Select CardGuide,TotalIncludeTax,SubjectToTaxAccount As TaxAccount From TBL020 where SubjectToTaxAccount is not null) a On TBL022.MainGuide=a.CardGuide And TBL024.AccountID=a.TaxAccount
 GROUP BY TBL024.MainGuide,a.TotalIncludeTax, TBL022.Rate)x
 On h.CardGuide=x.MainGuide
GO
/****** Object:  View [dbo].[Qry017]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry017] As SELECT a.MainGuide As BillGuide, SUM(a.Quantity) AS TotalQuantity, SUM(a.TotalValue) AS TotalValue, SUM((case i.NotDiscountable when 0 then a.TotalValue else 0 end)) AS TotalValueForPrice,
 SUM(a.DiscountValue) AS DiscountValue, SUM(a.ExtraValue) AS ExtraValue, SUM(a.TaxValue) AS TaxValue,
 SUM(a.TotalValue-a.DiscountValue+a.ExtraValue+(CASE c.TotalIncludeTax When 0 Then a.TaxValue Else 0 End)) As ItemsNetTotal,
 SUM((case i.NotDiscountable when 0 then a.TotalValue-a.DiscountValue+a.ExtraValue+(CASE c.TotalIncludeTax When 0 Then a.TaxValue Else 0 End) else 0 end)) As ItemsNetTotalForPrice,
 Sum((CASE c.TotalIncludeTax When 0 Then a.TaxValue Else 0 End)) As ItemTax
 FROM TBL023 a with(nolock)
 Inner Join TBL007 i with(nolock) On a.ProductGuide=i.CardGuide
 Inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide Inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide
 GROUP BY a.MainGuide
GO
/****** Object:  View [dbo].[Qry099]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry099] As SELECT TBL020.NotAffectCostActivity,dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValue)As ItemPriceRatio,(case Qry098.NotDiscountable when 0 then dbo.Ratio(Qry098.ItemTotalValue,
 	Qry017.TotalValueForPrice) else 0 end)As ItemPriceRatioForPrice,TBL020.BooleanOption10 As TaxAffectPrice,Qry016.OverBillExtras,
 	Qry016.OverBillDiscounts,Qry098.*, TBL020.BillMethod,Qry016.BillExtras AS BillTotalExtras, Qry016.BillDiscounts AS BillTotalDiscounts,TBL020.BillType,
 	(case Qry098.NotDiscountable when 0 then dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.AllBillNetDiscountRate,0) else 0 end) As AllBillNetDiscountRate,
 	(case Qry098.NotDiscountable when 0 then dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.AllBillNetDiscount,0) else 0 end) As AllBillNetDiscount,
 	(case Qry098.NotDiscountable when 0 then dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.PriceBillNetDiscountRate,0) else 0 end) As PriceBillNetDiscountRate,
 	(case Qry098.NotDiscountable when 0 then dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.PriceBillNetDiscount,0) else 0 end) As PriceBillNetDiscount,
 	(case Qry098.NotDiscountable when 0 then dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.TaxBillNetDiscountRate,0) else 0 end) As TaxBillNetDiscountRate,
 	(case Qry098.NotDiscountable when 0 then dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValue)*IsNull(Qry016.TaxBillNetDiscount,0) else 0 end) As TaxBillNetDiscount,
 	dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValue)*IsNull(Qry016.AllTaxBillRate,0) As AllTaxBillRate,
 	dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValue)*IsNull(Qry016.AllTaxBill,0) As AllTaxBill,
 	Qry016.OverBillExtras-Qry016.OverBillDiscounts AS OverBillDiscountsAndExtras,
 	TBL020.BooleanOption25 As DiscountsAndEctrasDistributed,
 	dbo.Ratio( isnull((Qry016.OverBillDiscounts - Qry016.OverBillExtras),0) ,
 	(case TBL020.BooleanOption10 When 1 Then
 	(case TBL020.BillMethod When 1 Then Qry017.ItemsNetTotal Else Qry017.ItemsNetTotal-Qry017.ItemTax End)
 	Else Qry017.ItemsNetTotal End)) AS OverBillDiscountsAndExtrasRatio,
 	Qry016.BillDiscounts - Qry016.BillExtras AS BillDiscountsAndExtras, Qry017.TotalValueForPrice AS BillTotalValue,
 	(case Qry098.NotDiscountable when 0 then(case when Qry098.ItemDiscount1>0 then 0 else dbo.Ratio( isnull((Qry016.BillDiscounts - Qry016.BillExtras),0) ,
 	(case TBL020.BooleanOption10 When 1 Then
 	(case TBL020.BillMethod When 1 Then Qry017.ItemsNetTotal Else Qry017.ItemsNetTotalForPrice-Qry017.ItemTax End)
 	Else Qry017.ItemsNetTotal End))end) else 0 end) AS BillDiscountsAndExtrasRatio,
 TBL008.CardCode AS StoreCode,
 	TBL020.BillKind As BillKindID,TBL008.WarehouseName AS StoreName, TBL008.CardCode + '-' + TBL008.WarehouseName AS Store,
 	Qry098.ProductCode + '-' + Qry098.ItemName AS Item, Qry098.PostToAccountCode + '-' + Qry098.PostToAccountName AS PostToAccount,
 	Qry098.CommissionAccountCode + '-' + Qry098.CommissionAccountName AS CommissionAccount,
 	Qry098.GroupCode + '-' + Qry098.GroupName AS ItemGroup,
 	(case TBL020.BooleanOption10 When 1 Then
 	(case TBL020.TotalIncludeTax When 0 Then
 	(Qry098.ItemTotalValue+Qry098.ItemExtraValue-Qry098.ItemDiscountValue)
 	Else
 	((Qry098.ItemTotalValue+Qry098.ItemExtraValue-Qry098.ItemDiscountValue) - ((dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValue)*Qry098.POSTaxValue)+Qry098.ItemTaxValue))
 	End)
 	Else
 	(case TBL020.TotalIncludeTax When 0 Then
 	((Qry098.ItemTotalValue+Qry098.ItemExtraValue-Qry098.ItemDiscountValue) + ((dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValue)*Qry098.POSTaxValue)+Qry098.ItemTaxValue))
 	Else
 	(Qry098.ItemTotalValue+Qry098.ItemExtraValue-Qry098.ItemDiscountValue)
 	End)
 	End) AS ItemFirstNetTotal,
 	(Qry098.ItemTotalValue+Qry098.ItemExtraValue-Qry098.ItemDiscountValue) As ItemPreparedNetTotal,
 	TBL020.LatinName AS InvoiceLatinName, TBL020.InvoiceMovementSide, dbo.IFPositive(TBL020.InvoiceMovementSide, Qry098.Quantity) AS InPut,
 	TBL020.InvoiceName, dbo.IFNegative(TBL020.InvoiceMovementSide, Qry098.Quantity) AS OutPut, Qry098.ItemTotalValue / Qry098.Quantity AS UnitPrice,TBL020.BillType As BillTypeID,
 	TBL020.AffectCostomerPrice, TBL020.AffectLastPurchasePrice, Qry016.AccountSecurity AS DiscountsAccountSecurity,
 	TBL008.Security AS StoreSecurity ,NetBillQuantity=( TBL020.InvoiceMovementSide* Qry098.BillQuantity),TBL020.BooleanOption10 as DoNotAffectCosts,
 	Qry098.ItemNetTotalBeforeTaxRate+ (dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValue)*((IsNull(Qry016.AllBillExtrasRate,0)- IsNull(Qry016.AllBillDiscountsRate,0))))-
 	(dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValue)*(case when TBL020.TotalIncludeTax=1 And TBL020.BillMethod>0 then Qry098.POSTaxValue else 0 end )) As BillItemNetTotalBeforeTaxRate,
 	Qry098.ItemNetTotalAfterTaxRate+ (dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValue)*((IsNull(Qry016.AllBillExtrasRate,0)- IsNull(Qry016.AllBillDiscountsRate,0))))+
 	(dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValue)*(case when TBL020.TotalIncludeTax=0 then Qry098.POSTaxValue else 0 end )) As BillItemNetTotalAfterTaxRate,
 	(dbo.Ratio(Qry098.ItemTotalValue,Qry017.TotalValueForPrice)*(case when TBL020.TotalIncludeTax=0 then Qry098.POSTaxValue else 0 end )) As BillItemNetTotalAfterTaxRateForPrice
 FROM Qry098 INNER JOIN
 	TBL020 with (nolock) ON Qry098.BillTypeGuide = TBL020.CardGuide LEFT OUTER JOIN
 	TBL008 with (nolock) ON Qry098.StoreGuide = TBL008.CardGuide LEFT OUTER JOIN
 	Qry017 ON Qry098.InvoiceGuide = Qry017.BillGuide LEFT OUTER JOIN
 	Qry016 ON Qry098.InvoiceGuide = Qry016.MainGuide
GO
/****** Object:  View [dbo].[Qry100]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry100] As SELECT *, 
 BillItemNetTotalBeforeTaxRate*Rate As BillItemNetTotalBeforeTax,BillItemNetTotalAfterTaxRate*Rate As BillItemNetTotalAfterTax,BillItemNetTotalAfterTaxRateForPrice*Rate As BillItemNetTotalAfterTaxForPrice, 
	IsNull(OverBillDiscountsAndExtrasRatio,0)*ItemFirstNetTotal As ItemOverBillDiscountsAndExtras, 
	ItemFirstNetTotal * BillDiscountsAndExtrasRatio AS ItemBillDiscount,(Case When Rate>0 Then ItemFirstNetTotal/Rate Else 0 End) As ItemFirstNetTotalRate, 
	ItemFirstNetTotal - (((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio)+(ItemDiscount1*Rate)) AS ItemNetTotal, 
	(Case When Rate>0 Then  (ItemFirstNetTotal - ((((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio))+ItemDiscount1) / Rate) Else 0 End) AS ItemNetTotalRate, 
	ItemFirstNetTotal - (((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio)+(ItemDiscount2*Rate)) AS ItemNetTotalForPrice, 
	(Case When Rate>0 Then  (ItemFirstNetTotal - ((((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio))+ItemDiscount2) / Rate) Else 0 End) AS ItemNetTotalRateForPrice, 
	ItemFirstNetTotal - (((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio)+(ItemDiscount0*Rate)) AS ItemNetTotalAllDiscounts, 
	(Case When Rate>0 Then  (ItemFirstNetTotal - ((((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio))+ItemDiscount0) / Rate) Else 0 End) AS ItemNetTotalAllDiscountsRate, 
 ItemFirstNetTotal * BillDiscountsAndExtrasRatio / Rate AS ItemBillDiscountRate, 
 InvoiceMovementSide * Quantity AS ItemQuantity 
 FROM Qry099
GO
/****** Object:  View [dbo].[Qry101]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry101] As 
 SELECT Qry100.*, Qry100.ItemNetTotal / Qry100.Quantity AS ItemNetPrice, Qry100.ItemNetTotalRate / Qry100.Quantity AS ItemNetPriceRate,
 (case Qry100.InvoiceMovementSide when -1 then Qry100.ItemNetTotal else 0 end) AS OutPutNetTotal,
 (case Qry100.InvoiceMovementSide when 1 then Qry100.ItemNetTotal else 0 end) AS InPutNetTotal,
 (case Qry100.InvoiceMovementSide when -1 then Qry100.ItemNetTotalForPrice else 0 end) AS OutPutNetTotalForPrice,
 (case Qry100.InvoiceMovementSide when 1 then Qry100.ItemNetTotalForPrice else 0 end) AS InPutNetTotalForPrice,
 TBL005.CardCode AS CostCenterCode, TBL005.CostCenter AS CostCenterName
 ,TBL049.CardCode As ProjectCode,TBL049.ProjectName,TBL050.CardCode As BranchCode,TBL050.BronchName As BranchName
 , c1.CardName As CategoryName01, c2.CardName As CategoryName02, c3.CardName As CategoryName03, c4.CardName As CategoryName04, c5.CardName As CategoryName05
 ,Qry100.ItemNetTotal As NetBeforeTax,Qry100.ItemNetTotal+Qry100.ItemTaxValue As NetAfterTax
 ,Qry100.BillItemNetTotalBeforeTax/Qry100.Quantity AS ItemNetPriceBeforeTax,Qry100.BillItemNetTotalAfterTax/Qry100.Quantity AS ItemNetPriceAfterTax
 ,Qry100.BillItemNetTotalBeforeTax/Qry100.Quantity / Rate AS ItemNetPriceBeforeTaxRate,Qry100.BillItemNetTotalAfterTax/Qry100.Quantity / Rate AS ItemNetPriceAfterTaxRate
 	FROM Qry100 LEFT OUTER JOIN
 dbo.TBL081 c1 with (nolock) ON dbo.Qry100.Category01 = c1.CardGuide LEFT OUTER JOIN
 dbo.TBL081 c2 with (nolock) ON dbo.Qry100.Category02 = c2.CardGuide LEFT OUTER JOIN
 dbo.TBL081 c3 with (nolock) ON dbo.Qry100.Category03 = c3.CardGuide LEFT OUTER JOIN
 dbo.TBL081 c4 with (nolock) ON dbo.Qry100.Category04 = c4.CardGuide LEFT OUTER JOIN
 dbo.TBL081 c5 with (nolock) ON dbo.Qry100.Category05 = c5.CardGuide LEFT OUTER JOIN
 TBL005 ON Qry100.CostCenter = TBL005.CardGuide Left Join
 TBL049 with (nolock) ON Qry100.Project = TBL049.CardGuide Left Join
 TBL050 with (nolock) ON Qry100.Branch = TBL050.CardGuide
GO
/****** Object:  View [dbo].[Qry102]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry102] As SELECT     Qry101.*, TBL066.SerialCode,TBL066.ExpiryDate As SerialExpiryDate,TBL066.EstablishDate As SerialEstablishDate, TBL066.Notes AS SerialNotes ,TBL066.ID AS SerialSortID
 FROM         Qry101 LEFT OUTER JOIN 
 TBL066 ON Qry101.RowGuide = TBL066.MainGuide
GO
/****** Object:  View [dbo].[Qry117]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry117] As SELECT Qry102.ItemNetTotalBeforeTax,Qry102.PriceBillNetDiscount,Qry102.TotalIncludeTax,Qry102.AllTaxBill,Qry102.TaxAffectPrice, 
 Qry102.Unit,Qry102.NetBeforeTax,Qry102.NetAfterTax,Qry102.RecordDate,Qry102.RecordSecurity, Qry102.ProductGuide, Qry102.UnitName, isnull(Qry065.Qty,Qry102.Quantity) AS Quantity, Qry102.ItemDiscountValueRate, Qry102.ItemExtraValueRate,Qry102.StoreID As DetailsStore,Qry102.StoreGuide as HeadStore, 
 Qry102.ExpiryDate,Qry102.EstablishDate,Qry102.PatchCode, Qry102.Length, Qry102.Width, Qry102.Hieght, Qry102.Description, Qry102.InvoiceGuide,Qry102.VariableUnit,Qry102.VariableUnitQuantity,Qry102.VariableUnitName,Qry102.CalcKeyField,Qry102.BillType, 
 Qry102.ItemSortID, Qry102.InvoiceID, Qry102.StoreGuide, Qry102.ItemTotalValueRate, Qry102.BillDate, Qry102.PayMethod, Qry102.MainQuantity, Qry102.ExtraQuantity, 
 Qry102.PayTerm, Qry102.DoneIn, Qry102.CurrencyGuide, Qry102.BillNumber, Qry102.Rate, Qry102.CurrencyName, 
 Qry102.CurrencyLatinName, Qry102.CurrencyShortcut, Qry102.AgentGuide, Qry102.BillNotes, Qry102.AgentName, Qry102.AgentLatinName, 
 Qry102.PostToAccountGuide, Qry102.PostToAccountCode, Qry102.PostToAccountName, Qry102.CommissionAccountGuide, 
 Qry102.CommissionAccountCode, Qry102.CommissionAccountName, Qry102.CommissionAccountLatinName, Qry102.PostToAccountLatinName, 
 Qry102.CreditCardGuide, Qry102.Paid, Qry102.Posted, Qry102.CreditCardName, Qry102.CreditCardCommissionRatio, Qry102.BillTypeGuide, 
 Qry102.BillSecurity, Qry102.ItemSecurity, Qry102.AccountSecurity, Qry102.AgentSecurity, Qry102.CommissionAccSecurity, 
 Qry102.CommissionSecurity, Qry102.BillQuantity, Qry102.ProductType, Qry102.BillCustom1, Qry102.BillCustom2, Qry102.BillCustom3, 
 Qry102.BillCustom4, Qry102.BillCustom5, Qry102.RowGuide, Qry102.InsertedIn, Qry102.POSGuide, Qry102.CostCenter, 
 Qry102.BillNotes2, Qry102.BillNotes3, Qry102.BillNotes4, Qry102.BillNotes5, Qry102.TaxValue, Qry102.RowInsertedIn, 
 Qry102.ItemDiscountValue, Qry102.ItemExtraValue, Qry102.ProductCode, Qry102.ItemName, Qry102.ItemLatinName, Qry102.GroupGuid, 
 Qry102.GroupCode, Qry102.GroupName, Qry102.GroupLatinName, Qry102.StockProduct, Qry102.Factor2, Qry102.Factor3, 
 Qry102.BillTotalExtras, Qry102.BillTotalDiscounts, Qry102.BillDiscountsAndExtras, Qry102.BillTotalValue, Qry102.BillDiscountsAndExtrasRatio, 
 Qry102.StoreCode, Qry102.StoreName, Qry102.Store, Qry102.Item, Qry102.PostToAccount, Qry102.CommissionAccount, 
 Qry102.ItemGroup, Qry102.ItemFirstNetTotal, Qry102.InvoiceName, Qry102.InvoiceLatinName, Qry102.AffectCostomerPrice, 
 Qry102.AffectLastPurchasePrice, Qry102.DiscountsAccountSecurity, Qry102.StoreSecurity, Qry102.NetBillQuantity, Qry102.ItemBillDiscount, 
 Qry102.ItemBillDiscountRate, Qry102.CostCenterCode, Qry102.CostCenterName, Qry102.SerialCode AS Serial, Qry102.SerialNotes, 
 isnull(Qry065.Qty,Qry102.Quantity) * Qry102.InvoiceMovementSide AS ItemQuantity, (CASE Qry102.InvoiceMovementSide WHEN 1 THEN isnull(Qry065.Qty,Qry102.Quantity) ELSE 0 END) AS InPut, 
 (CASE Qry102.InvoiceMovementSide WHEN 1 THEN 0 ELSE isnull(Qry065.Qty,Qry102.Quantity) END) AS OutPut, 
 (CASE Qry102.InvoiceMovementSide WHEN 1 THEN isnull(Qry065.Qty,Qry102.Quantity) * Qry102.ItemNetPrice ELSE 0 END) AS InPutNetTotal, 
 (CASE Qry102.InvoiceMovementSide WHEN 1 THEN 0 ELSE isnull(Qry065.Qty,Qry102.Quantity) * Qry102.ItemNetPrice END) AS OutPutNetTotal, 
 isnull(Qry065.Qty,Qry102.Quantity) * Qry102.UnitPrice AS ItemTotalValue, isnull(Qry065.Qty,Qry102.Quantity) * Qry102.ItemNetPrice AS ItemNetTotal, Qry102.ItemNetPrice, 
 Qry102.ItemNetPriceRate, Qry102.ItemNetPriceRate * isnull(Qry065.Qty,Qry102.Quantity) AS ItemNetTotalRate, Qry102.UnitPrice, Qry102.InvoiceMovementSide, dbo.Qry102.Project, dbo.Qry102.Branch 
 ,Qry102.Factor,dbo.Qry102.Category01, dbo.Qry102.Category02, dbo.Qry102.Category03, dbo.Qry102.Category04, dbo.Qry102.Category05, dbo.Qry102.CategoryName01,  
 dbo.Qry102.CategoryName02, dbo.Qry102.CategoryName03, dbo.Qry102.CategoryName04, dbo.Qry102.CategoryName05, dbo.Qry102.ItemTaxValue, dbo.Qry102.Value, Qry102.VariableUnitPrice 
 ,Qry102.ProjectCode,Qry102.ProjectName,Qry102.BranchCode,Qry102.BranchName,Qry102.BillItemNetTotalAfterTax 
 FROM Qry102 LEFT OUTER JOIN 
 Qry065 ON Qry102.SerialSortID = Qry065.ID
GO
/****** Object:  View [dbo].[Qry004]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry004] As Select * From TBL007 with(nolock) Where ProductType=1
GO
/****** Object:  View [dbo].[Qry005]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry005] As Select * From TBL007 with(nolock) Where ProductType=2
GO
/****** Object:  View [dbo].[Qry007]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry007] As SELECT TBL007.NotDiscountable,TBL022.Discount As POSDiscount,Qry006.ReserveDate,Qry006.TaxValue*TBL022.Rate As TaxValueRate ,Qry006.RelatedAgent,TBL022.ByGroup,
 Qry006.ItemDiscount0,Qry006.ItemDiscount1, Qry006.ItemDiscount2, Qry006.ItemDiscount3,Qry006.ItemBillTax,Qry006.TaxAffectNetPrice,Qry006.SalesPrice,
 TBL022.DownPayment*TBL022.Rate As DownPayment,Qry006.RelatedObjects,Qry006.Description2,TBL128.UnitName As VariableUnitName,TBL007.IsAssets,
 TBL022.CustomerName,Qry006.BillQty As MBillQty, Qry006.ExtraQty As MExtraQty,TBL016.MainGroupGuide,TBL022.CalculatingField,Qry006.RecordDate,
 Qry006.RecordSecurity,Qry006.StoreID As DetailsStore,Qry006.CalcKeyField,Cast(TBL022.BillDate As float)As DateValue,TBL022.StoreGuide as HeadStore,
 isnull(TBL063.MainGuide, isnull(TBL063_1.ItemGuide, Qry006.ProductGuide)) AS ProductGuide,(CASE When IsNull(Qry005.ProductType, TBL007.ProductType)>0 Then 1 Else Qry006.Unit End)As Unit,
 IsNull(TBL007_2.Unit,(CASE Qry006.Unit When 3 Then TBL007.Unit3 When 2 Then TBL007.Unit2 Else TBL007.Unit End)) AS UnitName,
 (CASE When IsNull(Qry005.ProductType, TBL007.ProductType)>1 Then
 	IsNull(Qry006.Quantity*dbo.Fun001(TBL063_1.ItemGuide,TBL063_1.Unit,TBL063_1.Quantity) ,Qry006.Quantity)
 When IsNull(Qry005.ProductType, TBL007.ProductType)>0 then
 	IsNull(Qry006.Quantity*dbo.Fun001(TBL063.MainGuide,TBL063.Unit,TBL063.Quantity) ,Qry006.Quantity)
 Else
 	Qry006.Quantity End) AS MQuantity, (CASE Qry006.Unit When 3 Then TBL007.Factor3 When 2 Then TBL007.Factor2 Else 1 End)As Factor,
 isnull(dbo.Fun043(TBL007.ProductType, Qry006.TotalValue,
 Qry006.TotalValue * isnull(TBL063.PriceRatio,0) / 100),0) AS ItemTotalValueRate, isnull(Qry006.DiscountValue,0) AS ItemDiscountValueRate,
 isnull(Qry006.ExtraValue,0) AS ItemExtraValueRate, isnull(Qry006.TaxValue,0) AS ItemTaxValueRate,Qry006.RowDiscountRatio,Qry006.RowExtraRatio,Qry006.RowTaxRatio, Qry006.ExpiryDate,Qry006.EstablishDate,Qry006.PatchCode, Qry006.Length, Qry006.Width, Qry006.Hieght, Qry006.Weight, Qry006.Value,
 Qry006.Description, TBL022.CardGuide AS InvoiceGuide, Qry006.ID AS ItemSortID, TBL022.ID AS InvoiceID, isnull(Qry006.StoreID,
 TBL022.StoreGuide) AS StoreGuide, TBL022.BillDate, TBL022.PayMethod, TBL019.PayTerm, TBL022.DoneIn,TBL007.Source As ItemSource, TBL022.CurrencyGuide,
 TBL022.BillNumber,TBL022.TaxMethod,TBL022.BillNumber2, TBL022.Rate, TBL001.CurrencyName, TBL001.LatinName AS CurrencyLatinName, TBL001.CurrencyShortcut,
 TBL022.AgentGuide, TBL022.Notes AS BillNotes, TBL016.AgentName, TBL016.LatinName AS AgentLatinName,Qry006.TotalIncludeTax ,
 TBL022.PostToAccount AS PostToAccountGuide, TBL004.CardCode AS PostToAccountCode, TBL004.AccountName AS PostToAccountName,
 TBL022.CommissionAccount AS CommissionAccountGuide, TBL004_1.CardCode AS CommissionAccountCode,TBL022.ProductsAccount,
 TBL004_1.AccountName AS CommissionAccountName, TBL004_1.LatinName AS CommissionAccountLatinName, TBL004.LatinName AS PostToAccountLatinName,
 TBL022.CreditCard AS CreditCardGuide, TBL022.Paid, TBL022.Posted, TBL025.CardName AS CreditCardName,TBL022.TaxValue As POSTaxValueRate,TBL022.TaxValue*TBL022.Rate As POSTaxValue,
 TBL025.CommissionRatio AS CreditCardCommissionRatio, TBL022.MainGuide AS BillTypeGuide, TBL022.Security AS BillSecurity,
 TBL007.Security AS ItemSecurity, TBL004.Security AS AccountSecurity, TBL016.Security AS AgentSecurity,
 TBL004_1.Security AS CommissionAccSecurity, TBL025.Security AS CommissionSecurity, Qry006.Quantity AS MBillQuantity,
 TBL063.ItemGuide AS MainItem, TBL007.ProductType, TBL063_1.ItemGuide, Qry006.BillCustom1, Qry006.BillCustom2, Qry006.BillCustom3,
 Qry006.BillCustom4, Qry006.BillCustom5, Qry006.RowGuide, TBL022.InsertedIn, TBL022.POSGuide, isnull(Qry006.CostCenter,
 TBL022.CostCenter) AS CostCenter, TBL022.BillNotes2, TBL022.BillNotes3, TBL022.BillNotes4, TBL022.BillNotes5 , Qry006.TaxValue ,Qry006.InsertedIn As RowInsertedIn,Qry006.StatementName,TBL022.Project,TBL022.Branch
 ,isnull(Qry006.Category01, isnull(TBL063.Category01, TBL063_1.Category01)) AS Category01,
 isnull(Qry006.Category02, isnull(TBL063.Category02, TBL063_1.Category02)) AS Category02,
 isnull(Qry006.Category03, isnull(TBL063.Category03, TBL063_1.Category03)) AS Category03,
 isnull(Qry006.Category04, isnull(TBL063.Category04, TBL063_1.Category04)) AS Category04,
 isnull(Qry006.Category05, isnull(TBL063.Category05, TBL063_1.Category05)) AS Category05,Qry006.VariableUnit,Qry006.VariableUnitQuantity,Qry006.VariableUnitPrice,TBL007.Category01 As ItemCategory01Guide,TBL007.Category02 As ItemCategory02Guide,
 Qry006.ItemNetTotalBeforeTax As ItemNetTotalBeforeTaxRate,Qry006.ItemNetTotalAfterTax As ItemNetTotalAfterTaxRate
 ,Qry006.SavedTotalCost,Qry006.UnitSavedCost/(CASE Qry006.Unit When 3 Then TBL007.Factor3 When 2 Then TBL007.Factor2 Else 1 End) As SavedCostPrice
 FROM TBL007 with(nolock) RIGHT OUTER JOIN
 TBL025 with(nolock) RIGHT OUTER JOIN
 TBL022 with(nolock) ON TBL025.CardGuide = TBL022.CreditCard LEFT OUTER JOIN
 TBL004 TBL004_1 with(nolock) ON TBL022.CommissionAccount = TBL004_1.CardGuide LEFT OUTER JOIN
 TBL004 with(nolock) ON TBL022.PostToAccount = TBL004.CardGuide LEFT OUTER JOIN
 TBL016 with(nolock) ON TBL022.AgentGuide = TBL016.CardGuide LEFT OUTER JOIN
 TBL001 with(nolock) ON TBL022.CurrencyGuide = TBL001.CardGuide LEFT OUTER JOIN
 TBL019 with(nolock) ON TBL022.PayMethod = TBL019.ID RIGHT OUTER JOIN
 Qry006 LEFT OUTER JOIN
 TBL128 with(nolock) ON Qry006.VariableUnit = TBL128.CardGuide LEFT JOIN
 TBL063 TBL063_1 with(nolock) RIGHT OUTER JOIN
 Qry005 ON TBL063_1.ItemGuide = Qry005.CardGuide ON Qry006.ProductGuide = TBL063_1.MainGuide LEFT OUTER JOIN
 Qry004 ON Qry006.ProductGuide = Qry004.CardGuide LEFT OUTER JOIN
 TBL063 with(nolock) ON Qry004.CardGuide = TBL063.ItemGuide ON TBL022.CardGuide = Qry006.MainGuide ON
 TBL007.CardGuide = Qry006.ProductGuide
 Left Join TBL007 TBL007_2 with(nolock) On TBL063.MainGuide=TBL007_2.CardGuide
GO
/****** Object:  View [dbo].[Qry008]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry008] As Select Qry007.*,Qry007.MBillQuantity * Qry007.Factor As BillQuantity,Qry007.MBillQty * Qry007.Factor As BillQty,Qry007.MExtraQty*Qry007.Factor As ExtraQty,Qry007.MQuantity*Qry007.Factor As Quantity,ItemTotalValueRate*Rate As ItemTotalValue,ItemDiscountValueRate*Rate As ItemDiscountValue ,ItemExtraValueRate*Rate As ItemExtraValue ,ItemTaxValueRate*Rate As ItemTaxValue ,ItemNetTotalBeforeTaxRate * Rate As ItemNetTotalBeforeTax,ItemNetTotalAfterTaxRate * Rate As ItemNetTotalAfterTax From Qry007
GO
/****** Object:  View [dbo].[Qry015]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry015] As SELECT     Qry008.*,Qry008.Quantity * Qry008.Factor as Qty,Qry008.BillQty as MainQuantity,Qry008.ExtraQty as ExtraQuantity, TBL007.CardCode AS ProductCode, TBL007.ProductName AS ItemName, TBL007.LatinName AS ItemLatinName, TBL007.GroupGuid, 
                       TBL006.CardCode AS GroupCode, TBL006.GroupName, TBL006.LatinName AS GroupLatinName, TBL007.StockProduct, TBL007.Factor2, TBL007.Factor3 
 FROM         TBL006 with(nolock) RIGHT OUTER JOIN 
                       TBL007 with(nolock) ON TBL006.CardGuide = TBL007.GroupGuid RIGHT OUTER JOIN 
                       Qry008 ON TBL007.CardGuide = Qry008.ProductGuide
GO
/****** Object:  View [dbo].[Qry018]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry018] As SELECT TBL020.NotAffectCostActivity,dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValue)As ItemPriceRatio,(case Qry015.NotDiscountable when 0 then dbo.Ratio(Qry015.ItemTotalValue, Qry017.TotalValueForPrice) else 0 end) As ItemPriceRatioForPrice,
 	TBL020.BooleanOption10 As TaxAffectPrice,Qry016.OverBillExtras,Qry016.OverBillDiscounts,
 	Qry015.*,TBL020.BillMethod, Qry016.BillExtras AS BillTotalExtras, Qry016.BillDiscounts AS BillTotalDiscounts,TBL020.BillType,
 	(case Qry015.NotDiscountable when 0 then dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.AllBillNetDiscountRate,0) else 0 end) As AllBillNetDiscountRate,
 	(case Qry015.NotDiscountable when 0 then dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.AllBillNetDiscount,0) else 0 end) As AllBillNetDiscount,
 	(case Qry015.NotDiscountable when 0 then dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.PriceBillNetDiscountRate,0) else 0 end) As PriceBillNetDiscountRate,
 	(case Qry015.NotDiscountable when 0 then dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.PriceBillNetDiscount,0) else 0 end) As PriceBillNetDiscount,
 	(case Qry015.NotDiscountable when 0 then dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.TaxBillNetDiscountRate,0) else 0 end) As TaxBillNetDiscountRate,
 	(case Qry015.NotDiscountable when 0 then dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValueForPrice)*IsNull(Qry016.TaxBillNetDiscount,0) else 0 end) As TaxBillNetDiscount,
 	dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValue)*IsNull(Qry016.AllTaxBillRate,0) As AllTaxBillRate,
 	dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValue)*IsNull(Qry016.AllTaxBill,0) As AllTaxBill,
 	Qry016.OverBillExtras-Qry016.OverBillDiscounts AS OverBillDiscountsAndExtras,
 	TBL020.BooleanOption25 As DiscountsAndEctrasDistributed,
 	dbo.Ratio(isnull((Qry016.OverBillDiscounts - Qry016.OverBillExtras),0) ,
 	(case TBL020.BooleanOption10 When 1 Then
 	(case TBL020.BillMethod When 1 Then Qry017.ItemsNetTotal Else Qry017.ItemsNetTotal-Qry017.ItemTax End)
 	Else Qry017.ItemsNetTotal End)) AS OverBillDiscountsAndExtrasRatio,
 	Qry016.BillDiscounts - Qry016.BillExtras AS BillDiscountsAndExtras, Qry017.TotalValue AS BillTotalValue,
 	(case Qry015.NotDiscountable when 0 then dbo.Ratio(isnull((Qry016.BillDiscounts - Qry016.BillExtras),0) , (case TBL020.BooleanOption10 When 1 Then Qry017.ItemsNetTotal-Qry017.ItemTax Else Qry017.ItemsNetTotalForPrice End)) else 0 end) AS BillDiscountsAndExtrasRatio,
 	TBL008.CardCode AS StoreCode,
 	TBL020.BillKind As BillKindID,TBL008.WarehouseName AS StoreName, TBL008.CardCode + '-' + TBL008.WarehouseName AS Store,
 	Qry015.ProductCode + '-' + Qry015.ItemName AS Item, Qry015.PostToAccountCode + '-' + Qry015.PostToAccountName AS PostToAccount,
 	Qry015.CommissionAccountCode + '-' + Qry015.CommissionAccountName AS CommissionAccount,
 	Qry015.GroupCode + '-' + Qry015.GroupName AS ItemGroup,
 	(case TBL020.BooleanOption10 When 1 Then
 	(case TBL020.TotalIncludeTax When 0 Then
 	(Qry015.ItemTotalValue+Qry015.ItemExtraValue-Qry015.ItemDiscountValue)
 	Else
 	((Qry015.ItemTotalValue+Qry015.ItemExtraValue-Qry015.ItemDiscountValue) - ((dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValue)*Qry015.POSTaxValue)+Qry015.ItemTaxValue))
 	End)
 	Else
 	(case TBL020.TotalIncludeTax When 0 Then
 	((Qry015.ItemTotalValue+Qry015.ItemExtraValue-Qry015.ItemDiscountValue) + ((dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValue)*Qry015.POSTaxValue)+Qry015.ItemTaxValue))
 	Else
 	(Qry015.ItemTotalValue+Qry015.ItemExtraValue-Qry015.ItemDiscountValue)
 	End)
 	End) AS ItemFirstNetTotal,
 	TBL020.InvoiceName, TBL020.LatinName AS InvoiceLatinName, TBL020.InvoiceMovementSide, (case TBL020.InvoiceMovementSide when 1 then Qry015.Quantity else 0 end) AS InPut,
 	(case TBL020.InvoiceMovementSide when -1 then Qry015.Quantity else 0 end) AS OutPut ,Qry015.ItemTotalValue/Qry015.Quantity As UnitPrice, TBL020.AffectCostomerPrice, TBL020.AffectLastPurchasePrice, Qry016.AccountSecurity AS DiscountsAccountSecurity,
 	TBL008.Security AS StoreSecurity,TBL020.BooleanOption10 as DoNotAffectCosts,
 	(case when Qry015.ItemTotalValue>0 And Qry017.TotalValue>0 Then Qry015.ItemTotalValue/Qry017.TotalValue else 0 end) As PriceRatio
 	,Qry016.AllBillDiscounts,Qry016.AllBillExtras,
 	Qry015.ItemNetTotalBeforeTaxRate+ (dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValue)*((IsNull(Qry016.AllBillExtrasRate,0)- IsNull(Qry016.AllBillDiscountsRate,0))))-
 	(dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValue)*(case when TBL020.TotalIncludeTax=1 And TBL020.BillMethod>0 then Qry015.POSTaxValue else 0 end )) As BillItemNetTotalBeforeTaxRate,
 	Qry015.ItemNetTotalAfterTaxRate + (dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValue)*((IsNull(Qry016.AllBillExtrasRate,0)- IsNull(Qry016.AllBillDiscountsRate,0))))+
 	(dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValue)*(case when TBL020.TotalIncludeTax=0 then Qry015.POSTaxValue else 0 end )) As BillItemNetTotalAfterTaxRate,
 	(dbo.Ratio(Qry015.ItemTotalValue,Qry017.TotalValueForPrice)*(case when TBL020.TotalIncludeTax=0 then Qry015.POSTaxValue else 0 end )) As BillItemNetTotalAfterTaxRateForPrice
 FROM Qry015 INNER JOIN
 	TBL020 with(nolock) ON Qry015.BillTypeGuide = TBL020.CardGuide LEFT OUTER JOIN
 	TBL008 with(nolock) ON Qry015.StoreGuide = TBL008.CardGuide LEFT OUTER JOIN
 	Qry017 ON Qry015.InvoiceGuide = Qry017.BillGuide LEFT OUTER JOIN
 	Qry016 ON Qry015.InvoiceGuide = Qry016.MainGuide
GO
/****** Object:  View [dbo].[Qry019]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry019] As SELECT     *,
 BillItemNetTotalBeforeTaxRate*Rate As BillItemNetTotalBeforeTax,BillItemNetTotalAfterTaxRate*Rate As BillItemNetTotalAfterTax,BillItemNetTotalAfterTaxRateForPrice*Rate As BillItemNetTotalAfterTaxForPrice, 
	IsNull(OverBillDiscountsAndExtrasRatio,0)*ItemFirstNetTotal As ItemOverBillDiscountsAndExtras, 
	ItemFirstNetTotal * BillDiscountsAndExtrasRatio AS ItemBillDiscount,(Case When Rate>0 Then ItemFirstNetTotal/Rate Else 0 End) As ItemFirstNetTotalRate, 
	ItemFirstNetTotal * BillDiscountsAndExtrasRatio / Rate AS ItemBillDiscountRate, 
	ItemFirstNetTotal - (((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio)+(ItemDiscount1*Rate)) AS ItemNetTotal, 
	(Case When Rate>0 Then  (ItemFirstNetTotal - ((((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio))+ItemDiscount1) / Rate) Else 0 End) AS ItemNetTotalRate, 
	ItemFirstNetTotal - (((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio)+(ItemDiscount2*Rate)) AS ItemNetTotalForPrice, 
	(Case When Rate>0 Then  (ItemFirstNetTotal - ((((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio))+ItemDiscount2) / Rate) Else 0 End) AS ItemNetTotalRateForPrice, 
	ItemFirstNetTotal - (((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio)+(ItemDiscount0*Rate)) AS ItemNetTotalAllDiscounts, 
	(Case When Rate>0 Then  (ItemFirstNetTotal - ((((case When BillMethod=1 And TotalIncludeTax=0 Then ItemFirstNetTotal + POSTaxValue Else ItemFirstNetTotal end) * BillDiscountsAndExtrasRatio))+ItemDiscount0) / Rate) Else 0 End) AS ItemNetTotalAllDiscountsRate, 
	InvoiceMovementSide*Quantity As ItemQuantity
 FROM         Qry018
GO
/****** Object:  View [dbo].[Qry020]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry020] As SELECT Qry019.*, Qry019.ItemNetTotal / Qry019.Quantity AS ItemNetPrice, Qry019.ItemNetTotalRate / Qry019.Quantity AS ItemNetPriceRate,
 (case Qry019.InvoiceMovementSide when -1 then Qry019.ItemNetTotal else 0 end) AS OutPutNetTotal,
 (case Qry019.InvoiceMovementSide when 1 then Qry019.ItemNetTotal else 0 end) AS InPutNetTotal,
 (case Qry019.InvoiceMovementSide when -1 then Qry019.ItemNetTotalForPrice else 0 end) AS OutPutNetTotalForPrice,
 (case Qry019.InvoiceMovementSide when 1 then Qry019.ItemNetTotalForPrice else 0 end) AS InPutNetTotalForPrice,
 TBL005.CardCode AS CostCenterCode, TBL005.CostCenter AS CostCenterName
 ,TBL049.CardCode As ProjectCode,TBL049.ProjectName,TBL050.CardCode As BranchCode,TBL050.BronchName As BranchName
 , c1.CardName As CategoryName01, c2.CardName As CategoryName02, c3.CardName As CategoryName03, c4.CardName As CategoryName04, c5.CardName As CategoryName05
 ,Qry019.ItemNetTotal As NetBeforeTax,Qry019.ItemNetTotal+Qry019.ItemTaxValue As NetAfterTax
 ,Qry019.BillItemNetTotalBeforeTax/Qry019.Quantity AS ItemNetPriceBeforeTax,Qry019.ItemNetTotalAfterTax/Qry019.Quantity AS ItemNetPriceAfterTax
 ,Qry019.BillItemNetTotalBeforeTax/Qry019.Quantity / Rate AS ItemNetPriceBeforeTaxRate,Qry019.ItemNetTotalAfterTax/Qry019.Quantity / Rate AS ItemNetPriceAfterTaxRate
 	FROM Qry019 LEFT OUTER JOIN
 dbo.TBL081 c1 with(nolock) ON dbo.Qry019.Category01 = c1.CardGuide LEFT OUTER JOIN
 dbo.TBL081 c2 with(nolock) ON dbo.Qry019.Category02 = c2.CardGuide LEFT OUTER JOIN
 dbo.TBL081 c3 with(nolock) ON dbo.Qry019.Category03 = c3.CardGuide LEFT OUTER JOIN
 dbo.TBL081 c4 with(nolock) ON dbo.Qry019.Category04 = c4.CardGuide LEFT OUTER JOIN
 dbo.TBL081 c5 with(nolock) ON dbo.Qry019.Category05 = c5.CardGuide LEFT OUTER JOIN
 TBL005 with(nolock) ON Qry019.CostCenter = TBL005.CardGuide Left Join
 TBL049 with(nolock) ON Qry019.Project = TBL049.CardGuide Left Join
 TBL050 with(nolock) ON Qry019.Branch = TBL050.CardGuide
GO
/****** Object:  View [dbo].[Qry066]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry066] As SELECT     Qry020.*, TBL066.SerialCode,TBL066.ExpiryDate As SerialExpiryDate,TBL066.EstablishDate As SerialEstablishDate, TBL066.Notes, TBL066.ID AS SerialSortID 
 FROM         Qry020 with (nolock) LEFT OUTER JOIN 
                       TBL066 with (nolock) ON Qry020.RowGuide = TBL066.MainGuide
GO
/****** Object:  View [dbo].[Qry118]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry118] As SELECT Qry066.BillType,Qry066.Unit, Qry066.ProductGuide, Qry066.UnitName, Qry066.Factor, Qry066.MainQuantity, Qry066.ExtraQuantity,isnull( Qry065.Qty,Qry066.Quantity) AS Quantity, Qry066.ItemDiscountValueRate, Qry066.ItemExtraValueRate, 
 Qry066.ExpiryDate,Qry066.PatchCode,Qry066.VariableUnit,Qry066.VariableUnitName,Qry066.Value, Qry066.Length, Qry066.Width, Qry066.Hieght, Qry066.Description, Qry066.InvoiceGuide,Qry066.VariableUnitQuantity,Qry066.VariableUnitPrice, 
 Qry066.ItemSortID, Qry066.InvoiceID, Qry066.StoreGuide, Qry066.ItemTotalValueRate, Qry066.BillDate, Qry066.PayMethod, Qry066.ItemTaxValue, 
 Qry066.PayTerm, Qry066.DoneIn, Qry066.CurrencyGuide, Qry066.BillNumber, Qry066.Rate, Qry066.CurrencyName, 
 Qry066.CurrencyLatinName, Qry066.CurrencyShortcut, Qry066.AgentGuide, Qry066.BillNotes, Qry066.AgentName, Qry066.AgentLatinName, 
 Qry066.PostToAccountGuide, Qry066.PostToAccountCode, Qry066.PostToAccountName, Qry066.CommissionAccountGuide, 
 Qry066.CommissionAccountCode, Qry066.CommissionAccountName, Qry066.CommissionAccountLatinName, Qry066.PostToAccountLatinName, 
 Qry066.CreditCardGuide, Qry066.Paid, Qry066.Posted, Qry066.CreditCardName, Qry066.CreditCardCommissionRatio, Qry066.BillTypeGuide, 
 Qry066.BillSecurity, Qry066.ItemSecurity, Qry066.AccountSecurity, Qry066.AgentSecurity, Qry066.CommissionAccSecurity, 
 Qry066.CommissionSecurity, Qry066.BillQuantity, Qry066.ProductType, Qry066.BillCustom1, Qry066.BillCustom2, Qry066.BillCustom3, 
 Qry066.BillCustom4, Qry066.BillCustom5, Qry066.RowGuide, Qry066.InsertedIn, Qry066.POSGuide, Qry066.CostCenter, 
 Qry066.BillNotes2, Qry066.BillNotes3, Qry066.BillNotes4, Qry066.BillNotes5, Qry066.TaxValue, Qry066.RowInsertedIn, 
 Qry066.ItemDiscountValue, Qry066.ItemExtraValue, Qry066.ProductCode, Qry066.ItemName, Qry066.ItemLatinName, Qry066.GroupGuid, 
 Qry066.GroupCode, Qry066.GroupName, Qry066.GroupLatinName, Qry066.StockProduct, Qry066.Factor2, Qry066.Factor3, 
 Qry066.BillTotalExtras, Qry066.BillTotalDiscounts, Qry066.BillDiscountsAndExtras, Qry066.BillTotalValue, Qry066.BillDiscountsAndExtrasRatio, 
 Qry066.StoreCode, Qry066.StoreName, Qry066.Store, Qry066.Item, Qry066.PostToAccount, Qry066.CommissionAccount, 
 Qry066.ItemGroup, Qry066.ItemFirstNetTotal, Qry066.InvoiceName, Qry066.InvoiceLatinName, Qry066.AffectCostomerPrice, 
 Qry066.AffectLastPurchasePrice, Qry066.DiscountsAccountSecurity, Qry066.StoreSecurity, Qry066.ItemBillDiscount, 
 Qry066.ItemBillDiscountRate, Qry066.CostCenterCode, Qry066.CostCenterName, Qry066.SerialCode AS Serial, 
 isnull(Qry065.Qty,Qry066.ItemQuantity) AS ItemQuantity, (CASE Qry066.InvoiceMovementSide WHEN 1 THEN isnull(Qry065.Qty,Qry066.InPut) ELSE 0 END) AS InPut, 
 (CASE Qry066.InvoiceMovementSide WHEN 1 THEN 0 ELSE IsNull(Qry065.Qty,Qry066.OutPut) END) AS OutPut, 
 (CASE Qry066.InvoiceMovementSide WHEN 1 THEN isnull(Qry065.Qty,Qry066.InPutNetTotal) * Qry066.ItemNetPrice ELSE 0 END) AS InPutNetTotal, 
 (CASE Qry066.InvoiceMovementSide WHEN 1 THEN 0 ELSE isnull(Qry065.Qty,Qry066.OutPutNetTotal) * Qry066.ItemNetPrice END) AS OutPutNetTotal, 
 isnull(Qry065.Qty,Qry066.Quantity) * Qry066.UnitPrice AS ItemTotalValue, isnull(Qry065.Qty,Qry066.Quantity) * Qry066.ItemNetPrice AS ItemNetTotal, Qry066.ItemNetPrice, 
 Qry066.ItemNetPriceRate, Qry066.ItemNetPriceRate * isnull(Qry065.Qty,Qry066.Quantity) AS ItemNetTotalRate, Qry066.UnitPrice , Qry066.InvoiceMovementSide
 ,dbo.Qry066.Category01, dbo.Qry066.Category02, dbo.Qry066.Category03, dbo.Qry066.Category04, dbo.Qry066.Category05, dbo.Qry066.CategoryName01  
 ,Qry066.ProjectCode,Qry066.ProjectName,Qry066.BranchCode,Qry066.BranchName,Qry066.EstablishDate 
 ,dbo.Qry066.CategoryName02, dbo.Qry066.CategoryName03, dbo.Qry066.CategoryName04, dbo.Qry066.CategoryName05, Qry066.Project,Qry066.Branch 
 FROM Qry066 LEFT OUTER JOIN 
 Qry065 ON Qry066.SerialSortID = Qry065.ID
GO
/****** Object:  View [dbo].[Qry213]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry213] As Select a.*,IsNull(n.SonsCount,0) As SonsCount From 
 (Select 0 As TypeID,CheckCostCenters From TBL042 Where CardGuide=dbo.Fun159()) c 
 Inner Join 
 TBL005 a On c.TypeID=0 
 Left Join (Select MainCostCenter,Count(*) As SonsCount From TBL005 Group By MainCostCenter) n On a.CardGuide=n.MainCostCenter 
 Left Join (Select CostCenterGuide From TBL133 Where CostCenterGuide Is Not Null And MainGuide=dbo.Fun159())b 
 On ((a.MainCostCenter=b.CostCenterGuide And n.MainCostCenter Is Null) Or (a.CardGuide=b.CostCenterGuide)) 
 Where a.NotActive=0 And (c.CheckCostCenters Is Null Or c.CheckCostCenters=0 Or b.CostCenterGuide Is Not Null)
GO
/****** Object:  View [dbo].[Qry225]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry225] As Select a.*,b.ReletedCards From Qry213 a Inner Join 
 (Select MainCostCenter,Count(*) As ReletedCards From TBL005 Group By MainCostCenter) b On a.CardGuide=b.MainCostCenter
GO
/****** Object:  View [dbo].[Qry230]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry230] As Select a.* From Qry213 a Left Join TBL005 b On a.CardGuide=b.MainCostCenter Where b.ID Is Null
GO
/****** Object:  View [dbo].[Qry079]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry079] As SELECT     TBL012.ID,TBL012.RowDate, TBL012.MainGuide, TBL012.AccountGuide, TBL012.CurrencyGuide, TBL012.Debit, TBL012.Credit, TBL012.DebitRate, 
                       TBL012.CreditRate, TBL012.ContraAccount, TBL012.Description, TBL012.Checked, ISNULL(TBL012.CostCenter, TBL011.CostCenter)  
                       AS CostCenter, TBL001.CurrencyName, TBL001.LatinName AS CurrencyLatinName, TBL004.CardCode, TBL004.AccountName,  
                       ISNULL(TBL012.Project, TBL011.Project)As ProjectGuide,ISNULL(TBL012.Branch, TBL011.Branch)As BranchGuide,TBL012.AgentGuide, 
                       TBL004.CardCode + '-' + TBL004.AccountName AS Account, TBL004.LatinName AS AccountLatinName, TBL004_1.CardCode AS ContraAccountCode,  
                       TBL004_1.AccountName AS ContraAccountName, TBL004_1.LatinName AS ContraAccountLatinName, ISNULL(ISNULL(TBL022.MainGuide,  
                       TBL010.MainGuide), '00000000-0000-0000-0000-000000000000') AS SourceTypeGuide, TBL011.EntryNumber, TBL011.EntryDate,  
                       TBL011.Security AS EntrySecurity, TBL011.Posted,TBL012.Category01,TBL012.Category02,TBL012.Category03,TBL012.Category04,TBL012.Category05 
                       ,(TBL012.Debit+TBL012.Credit)/(TBL012.DebitRate+TBL012.CreditRate)As CrRate 
 FROM         TBL012 with (nolock) LEFT OUTER JOIN 
                       TBL022 with (nolock) RIGHT OUTER JOIN 
                       TBL011 with (nolock) LEFT OUTER JOIN 
                       TBL010 with (nolock) ON TBL011.BondGuide = TBL010.CardGuide ON TBL022.CardGuide = TBL011.BillGuide ON 
                       TBL012.MainGuide = TBL011.CardGuide LEFT OUTER JOIN 
                       TBL004 with (nolock) ON TBL012.AccountGuide = TBL004.CardGuide LEFT OUTER JOIN 
                       TBL001 with (nolock) ON TBL012.CurrencyGuide = TBL001.CardGuide LEFT OUTER JOIN 
                       TBL004 TBL004_1 with (nolock) ON TBL012.ContraAccount = TBL004_1.CardGuide
GO
/****** Object:  View [dbo].[Qry086]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry086] As SELECT     Qry079.*, TBL005.CardCode AS CostCenterCode, TBL005.CostCenter AS CostCenterName, (CASE Qry079.CostCenter WHEN NULL THEN NULL 
                       ELSE TBL005.CardCode + '-' + TBL005.CostCenter END) AS CostCenterFullName, 
                       TBL049.CardCode As ProjectCode,TBL049.ProjectName,(CASE Qry079.ProjectGuide WHEN NULL THEN NULL ELSE TBL049.CardCode + '-' + TBL049.ProjectName END) AS Project, 
                       TBL050.CardCode As BranchCode,TBL050.BronchName As BranchName,(CASE Qry079.BranchGuide WHEN NULL THEN NULL ELSE TBL050.CardCode + '-' + TBL050.BronchName END) AS Branch, 
                       TBL016.AgentName,c1.CardName As Category01Name,c2.CardName As Category02Name,c3.CardName As Category03Name,c4.CardName As Category04Name,c5.CardName As Category05Name 
 FROM         Qry079 LEFT OUTER JOIN 
                       TBL016 with (nolock) ON Qry079.AgentGuide = TBL016.CardGuide 
                       LEFT JOIN TBL049 with (nolock) ON Qry079.ProjectGuide = TBL049.CardGuide 
                       LEFT JOIN TBL050 with (nolock) ON Qry079.BranchGuide = TBL050.CardGuide 
                       LEFT JOIN TBL005 with (nolock) ON Qry079.CostCenter = TBL005.CardGuide
                       LEFT JOIN TBL081 c1 with (nolock) ON Qry079.Category01 = c1.CardGuide
                       LEFT JOIN TBL081 c2 with (nolock) ON Qry079.Category02 = c2.CardGuide
                       LEFT JOIN TBL081 c3 with (nolock) ON Qry079.Category03 = c3.CardGuide
                       LEFT JOIN TBL081 c4 with (nolock) ON Qry079.Category04 = c4.CardGuide
                       LEFT JOIN TBL081 c5 with (nolock) ON Qry079.Category05 = c5.CardGuide
GO
/****** Object:  View [dbo].[Qry214]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry214] As Select a.*,IsNull(n.SonsCount,0) As SonsCount From 
 (Select 0 As TypeID,CheckProjects From TBL042 Where CardGuide=dbo.Fun159()) c 
 Inner Join 
 TBL049 a On c.TypeID=0 
 Left Join (Select MainProject,Count(*) As SonsCount From TBL049 Group By MainProject) n On a.CardGuide=n.MainProject 
 Left Join (Select ProjectGuide From TBL133 Where ProjectGuide Is Not Null And MainGuide=dbo.Fun159())b 
 On ((a.MainProject=b.ProjectGuide And n.MainProject Is Null) Or (a.CardGuide=b.ProjectGuide)) 
 Where a.NotActive=0 And (c.CheckProjects Is Null Or c.CheckProjects=0 Or b.ProjectGuide Is Not Null)
GO
/****** Object:  View [dbo].[Qry226]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry226] As Select *,a.SonsCount As ReletedCards From Qry214 a Where a.SonsCount>0
GO
/****** Object:  View [dbo].[Qry231]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry231] As Select a.* From Qry214 a Left Join TBL049 b On a.CardGuide=b.MainProject Where b.ID Is Null
GO
/****** Object:  View [dbo].[Qry215]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry215] As Select a.*,IsNull(n.SonsCount,0) As SonsCount From 
 (Select 0 As TypeID,CheckBranches From TBL042 Where CardGuide=dbo.Fun159()) c 
 Inner Join 
 TBL050 a On c.TypeID=0 
 Left Join (Select MainBronch,Count(*) As SonsCount From TBL050 Group By MainBronch) n On a.CardGuide=n.MainBronch 
 Left Join (Select BranchGuide From TBL133 Where BranchGuide Is Not Null And MainGuide=dbo.Fun159())b 
 On ((a.MainBronch=b.BranchGuide And n.MainBronch Is Null) Or (a.CardGuide=b.BranchGuide)) 
 Where a.NotActive=0 And (c.CheckBranches Is Null Or c.CheckBranches=0 Or b.BranchGuide Is Not Null)
GO
/****** Object:  View [dbo].[Qry227]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry227] As Select *,a.SonsCount As ReletedCards From Qry215 a Where a.SonsCount>0
GO
/****** Object:  View [dbo].[Qry232]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry232] As Select a.* From Qry215 a Left Join TBL050 b On a.CardGuide=b.MainBronch Where b.ID Is Null
GO
/****** Object:  View [dbo].[Qry087]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry087] As Select bh.ID,bh.CardGuide,bh.BillNumber,bh.BillDate,bh.MainGuide As BillTypeGuide,bt.TaxRatio/100 As BillTypeTaxRatio,bt.LocalAdministrativeTaxRatio/100 As BillTypeLcTaxRatio
 ,bi.TotalValue As ItemsTotalValue,bi.ExtraValue As ItemsExtraValue,bi.DiscountValue As ItemsDiscountValue,bi.TaxValue As ItemsTaxValue,bi.TotalValueForDiscount As ItemsTotalValueForDiscount
 ,IsNull((case bt.BillMethod when 1 then bh.Discount else dsal.BillDiscounts end),0) As SavedAllDiscounts
 ,IsNull((case bt.BillMethod when 1 then bh.Discount else dstx.BillDiscounts end),0) As SavedDiscountsAffectTax
 ,Isnull((case bt.BillMethod when 1 then bh.Discount else dspc.BillDiscounts end),0) As SavedDiscountsAffectPrice
 ,Isnull((case when bt.BillMethod=1 or bh.POSGuide is not null then bh.TaxValue else tx.BillTaxes end),0) As SavedTaxes
 ,bt.TotalIncludeTax,bt.BillMethod
 From TBL022 bh with (nolock)
 inner join TBL020 bt with (nolock) on bh.MainGuide=bt.CardGuide
 Inner join
 (select a.MainGuide,sum(a.TotalValue)as TotalValue,Sum(a.ExtraValue)as ExtraValue,Sum(a.DiscountValue)As DiscountValue,Sum(a.TaxValue) As TaxValue
 ,sum((case i.NotDiscountable when 0 then a.TotalValue else 0 end))as TotalValueForDiscount
 from TBL023 a with (nolock)
 Inner Join TBL007 i On a.ProductGuide=i.CardGuide
 Group By a.MainGuide
 )bi On bh.CardGuide=bi.MainGuide
 Left Join
 (Select Sum((case when a.CurrencyGuide=b.Currencyguide then a.Discount-a.Extra else (a.DiscountToSave-a.ExtraToSave)/b.Rate end))As BillDiscounts,a.MainGuide From TBL024 a with (nolock)
 Inner Join TBL022 b with (nolock) On a.MainGuide=b.CardGuide
 Inner Join TBL020 c with (nolock) On b.MainGuide=c.CardGuide
 Where c.BillMethod<>1 And a.NotEffectTax=0 And (c.SubjectToTaxAccount Is Null Or a.AccountID<>c.SubjectToTaxAccount) Group By a.MainGuide) dstx On bh.CardGuide=dstx.MainGuide
 Left Join
 (Select Sum((case when a.CurrencyGuide=b.Currencyguide then a.Discount-a.Extra else (a.DiscountToSave-a.ExtraToSave)/b.Rate end))As BillDiscounts,a.MainGuide From TBL024 a with (nolock)
 Inner Join TBL022 b with (nolock) On a.MainGuide=b.CardGuide
 Inner Join TBL020 c with (nolock) On b.MainGuide=c.CardGuide
 Where c.BillMethod<>1 And a.NotEffectPrice=0 And (c.SubjectToTaxAccount Is Null Or a.AccountID<>c.SubjectToTaxAccount) Group By a.MainGuide) dspc On bh.CardGuide=dspc.MainGuide
 Left Join
 (Select Sum((case when a.CurrencyGuide=b.Currencyguide then a.Discount-a.Extra else (a.DiscountToSave-a.ExtraToSave)/b.Rate end))As BillDiscounts,a.MainGuide From TBL024 a with (nolock)
 Inner Join TBL022 b with (nolock) On a.MainGuide=b.CardGuide
 Inner Join TBL020 c with (nolock) On b.MainGuide=c.CardGuide
 Where c.BillMethod<>1 And (c.SubjectToTaxAccount Is Null Or a.AccountID<>c.SubjectToTaxAccount) Group By a.MainGuide) dsal On bh.CardGuide=dsal.MainGuide
 Left Join
 (Select Sum((case when a.CurrencyGuide=b.Currencyguide then a.Extra-a.Discount else (a.ExtraToSave-a.DiscountToSave)/b.Rate end))As BillTaxes,a.MainGuide From TBL024 a with (nolock)
 Inner Join TBL022 b with (nolock) On a.MainGuide=b.CardGuide
 Inner Join TBL020 c with (nolock) On b.MainGuide=c.CardGuide
 Where c.BillMethod<>1 And a.AccountID=c.SubjectToTaxAccount Group By a.MainGuide) tx On bh.CardGuide=tx.MainGuide
GO
/****** Object:  View [dbo].[Qry264]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry264] As Select a.ItemAllDiscountFromBill As NewDiscount0,a.ItemTaxDiscountFromBill As NewDiscount1,a.ItemPriceDiscountFromBill As NewDiscount2
 ,* From (
 	Select a.ItemRecordTotal-a.ItemTaxDiscountFromBill-(case a.TotalIncludeTax when 1 then (a.NewItemRecordTax+a.NewBillRecordTax) else 0 end) As NetRecordTotalWithoutTax
 	,a.ItemRecordTotal-a.ItemTaxDiscountFromBill+(case a.TotalIncludeTax when 0 then (a.NewItemRecordTax+a.NewBillRecordTax) else 0 end) As NetRecordTotalAfterTax
 	,* From (
 		Select *,(case when a.AffectBillTax=1 then
 		(case when a.BillMethod=2 or a.POSGuide is not null then a.SItemTaxFromBill else a.ItemTaxFromBill end)
 		when a.BillMethod=0 and a.SubjectToTaxAccount is not null then a.SItemTaxFromBill
 		else 0 end)As NewBillRecordTax From (
 		Select *,(case a.TotalIncludeTax
 		when 1 then (a.ItemRecordTotalValue +a.ItemRecordExtraValue-a.ItemRecordDiscountValue-(a.PriceRatio*a.SavedDiscountsAffectTax))-((a.ItemRecordTotalValue +a.ItemRecordExtraValue-a.ItemRecordDiscountValue-(a.PriceRatio*a.SavedDiscountsAffectTax))/(1+a.BillTypeTaxRatio))
 		else (a.NewItemRecordTax+a.ItemRecordTotalValue +a.ItemRecordExtraValue-a.ItemRecordDiscountValue-(a.PriceRatio*a.SavedDiscountsAffectTax))*a.BillTypeTaxRatio
 		end) As ItemTaxFromBill
 		From (
 			Select (case when a.AffectItemsTax=1 then
 			(case a.TotalIncludeTax when 1 then
 			NetForCalculatingTax-(NetForCalculatingTax / (1+a.ItemTaxRatio))
 			else
 			NetForCalculatingTax * a.ItemTaxRatio
 			end)
 			else 0 end)As NewItemRecordTax
 			,* From (
 				Select a.ItemRecordTotalValue+a.ItemRecordExtraValue-a.ItemRecordDiscountValue As ItemRecordTotal
 				,a.ItemRecordTotalValue+a.ItemRecordExtraValue-(a.ItemRecordDiscountValue+a.ItemTaxDiscountFromBill) As NetForCalculatingTax
 				,* From (
 					Select (case when ISNULL(x.AffectBillTax,1)=1 And a.AgentSubjectToTax=1 then 1 else 0 end) As AffectBillTax
 					,(case when ISNULL(x.AffectItemsTax,1)=1 And a.AgentSubjectToTax=1 then 1 else 0 end) As AffectItemsTax
 					,(case a.NotDiscountable When 0 then a.PriceRatioForDiscount*a.SavedDiscountsAffectTax else 0 end) As ItemTaxDiscountFromBill
 					,(case a.NotDiscountable When 0 then a.PriceRatioForDiscount*a.SavedDiscountsAffectPrice else 0 end) As ItemPriceDiscountFromBill
 					,(case a.NotDiscountable When 0 then a.PriceRatioForDiscount*a.SavedAllDiscounts else 0 end) As ItemAllDiscountFromBill
 					,a.PriceRatio*a.SavedTaxes As SItemTaxFromBill
 					,a.*
 					From (
 						Select c.NotDiscountable,h.POSGuide,t.SubjectToTaxAccount,ISNULL(h.TaxMethod,t.TaxMethod)As TaxMethod,IsNull(g.SubjectToTax,1) As AgentSubjectToTax,b.ID As ItemRecordID,b.TotalValue As ItemRecordTotalValue,b.ExtraValue As ItemRecordExtraValue,b.DiscountValue As ItemRecordDiscountValue
 						,dbo.Ratio(b.TotalValue,a.ItemsTotalValue) As PriceRatio,dbo.Ratio(b.TotalValue,a.ItemsTotalValueForDiscount) As PriceRatioForDiscount
 						,a.*,c.TaxRatio/100 As ItemTaxRatio
 						From (
 							select (case a.TotalIncludeTax when 1 then a.ItemsTotalValue+a.ItemsExtraValue-(a.ItemsDiscountValue+a.SavedAllDiscounts)
 							else a.ItemsTotalValue+a.ItemsExtraValue+a.ItemsTaxValue+a.SavedTaxes-(a.ItemsDiscountValue+a.SavedAllDiscounts) end)As SavedNetTotal
 							,(case a.TotalIncludeTax when 1 then a.ItemsTotalValueForDiscount+a.ItemsExtraValue-(a.ItemsDiscountValue+a.SavedDiscountsAffectPrice)
 							else a.ItemsTotalValueForDiscount+a.ItemsExtraValue+a.ItemsTaxValue+a.SavedTaxes-(a.ItemsDiscountValue+a.SavedDiscountsAffectPrice) end)As SavedAffectedPricesNetTotal
 							,(case a.TotalIncludeTax when 1 then a.ItemsTotalValue+a.ItemsExtraValue-(a.ItemsDiscountValue+a.SavedDiscountsAffectTax)
 							else a.ItemsTotalValue+a.ItemsExtraValue+a.ItemsTaxValue+a.SavedTaxes-(a.ItemsDiscountValue+a.SavedDiscountsAffectTax) end)As SavedAffectedTaxesNetTotal
 							,* from Qry087 a
 							)a
 							inner join TBL023 b with(nolock) on a.CardGuide=b.MainGuide
 							inner join TBL022 h with(nolock) on b.MainGuide=h.CardGuide
 							inner join TBL020 t with(nolock) On h.MainGuide=t.CardGuide
 							Left join TBL016 g with(nolock) On h.AgentGuide=g.CardGuide
 							inner join TBL007 c with(nolock) On b.ProductGuide=c.CardGuide
 						)a
 					Left Join TBL134 x with(nolock) On a.TaxMethod=x.CardGuide
 					)a
 				)a
 			)a
 		)a
 	)a
 )a
GO
/****** Object:  View [dbo].[Grp004Qry246]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry246] As Select a.* From 
 (Select CardGuide,0 As TypeID,CheckGroups From TBL042 Where CardGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678') c 
 Inner Join 
 Qry089 a On c.TypeID=0 
 Left Join (Select GroupGuide,MainGuide From TBL133 Where GroupGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And a.GroupGuid=b.GroupGuide 
 Where (c.CheckGroups=0 Or b.GroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Qry244]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry244] As SELECT * From Qry089 Where NotActive=0
GO
/****** Object:  View [dbo].[Qry246]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry246] As Select a.* From 
 (Select CardGuide,0 As TypeID,CheckGroups From TBL042 Where CardGuide=dbo.Fun159()) c 
 Inner Join 
 Qry089 a On c.TypeID=0 
 Left Join (Select GroupGuide,MainGuide From TBL133 Where GroupGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And a.GroupGuid=b.GroupGuide 
 Where (c.CheckGroups=0 Or b.GroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp003Qry246]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry246] As Select a.* From 
 (Select CardGuide,0 As TypeID,CheckGroups From TBL042 Where CardGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') c 
 Inner Join 
 Qry089 a On c.TypeID=0 
 Left Join (Select GroupGuide,MainGuide From TBL133 Where GroupGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And a.GroupGuid=b.GroupGuide 
 Where (c.CheckGroups=0 Or b.GroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp002Qry246]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry246] As Select a.* From 
 (Select CardGuide,0 As TypeID,CheckGroups From TBL042 Where CardGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec') c 
 Inner Join 
 Qry089 a On c.TypeID=0 
 Left Join (Select GroupGuide,MainGuide From TBL133 Where GroupGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And a.GroupGuid=b.GroupGuide 
 Where (c.CheckGroups=0 Or b.GroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp001Qry246]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry246] As Select a.* From 
 (Select CardGuide,0 As TypeID,CheckGroups From TBL042 Where CardGuide='fd70821f-164f-4e1a-992b-1129a071785b') c 
 Inner Join 
 Qry089 a On c.TypeID=0 
 Left Join (Select GroupGuide,MainGuide From TBL133 Where GroupGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And a.GroupGuid=b.GroupGuide 
 Where (c.CheckGroups=0 Or b.GroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Qry228]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry228] As Select a.* From 
 (Select CardGuide,0 As TypeID,CheckStores From TBL042 Where CardGuide=dbo.Fun159()) c 
 Inner Join 
 TBL008 a On c.TypeID=0 
 Left Join (Select StoreGuide,MainGuide From TBL133 Where StoreGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And (a.CardGuide=b.StoreGuide) 
 Where a.NotActive=0 And (c.CheckStores=0 Or b.StoreGuide Is Not Null)
GO
/****** Object:  View [dbo].[Qry239]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry239] As Select a.* From Qry228 a Left Join TBL008 b On a.CardGuide=b.MainWarehouse Where a.NotActive=0 And b.ID Is Null
GO
/****** Object:  View [dbo].[Qry105]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry105] As SELECT     TBL010.ID, TBL010.CardGuide AS BondGuide, TBL010.Value2, TBL010.MainGuide2, TBL010.BondNumber, TBL010.PayType, TBL010.TimeLength, TBL010.BondNumber2, 
                       TBL010.Posted, TBL010.Security, TBL010.MainGuide, TBL010.BondDate, TBL010.BondDate2, TBL038.ID AS RwID, TBL038.RowGuide, 
                       TBL038.AccountGuide, TBL038.CurrencyGuide, TBL038.Debit, TBL038.Credit, TBL038.DebitRate, TBL038.CreditRate, 
                       TBL038.ContraAccount, TBL038.CollectDate, TBL038.DueDate, TBL038.Collected, TBL038.CollectEntry, TBL038.Notes, 
                       isnull(TBL038.CostCenter, TBL010.CostCenter) AS CostCenter, TBL009.EntryName, TBL009.EntryLatinName, TBL004.AccountName, 
                       TBL004.CardCode AS AccountCode, TBL004.AccountName + '-' + TBL004.CardCode AS Account, TBL010.AgentGuide, TBL016.AgentName, 
                       dbo.Fun054(TBL038.ID) AS AllowDate, TBL009.BondType, TBL001.CurrencyName, TBL001.LatinName AS CurrencyLatinName, 
                       TBL038.Debit + TBL038.Credit AS Value, TBL038.DebitRate + TBL038.CreditRate AS ValueRate, TBL037.TypeName 
 FROM         TBL037 RIGHT OUTER JOIN 
                       TBL010 ON TBL037.CardGuide = TBL010.PayType LEFT OUTER JOIN 
                       TBL004 RIGHT OUTER JOIN 
                       TBL001 RIGHT OUTER JOIN 
                       TBL038 ON TBL001.CardGuide = TBL038.CurrencyGuide ON TBL004.CardGuide = TBL038.AccountGuide ON 
                       TBL010.CardGuide = TBL038.MainGuide LEFT OUTER JOIN 
                       TBL009 ON TBL010.MainGuide = TBL009.CardGuide LEFT OUTER JOIN 
                       TBL016 ON TBL010.AgentGuide = TBL016.CardGuide 
 WHERE     (TBL009.BondType = 6)
GO
/****** Object:  View [dbo].[Qry106]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry106] As SELECT     Qry105.*,TBL005.CardCode AS CostCenterCode, TBL005.CostCenter AS CostCenterName, TBL005.CardCode + '-' + TBL005.CostCenter AS BondCostCenter,dbo.Fun055(Qry105.BondGuide)As RemainingDays 
 FROM         Qry105 LEFT OUTER JOIN 
                       TBL005 ON Qry105.CostCenter = TBL005.CardGuide
GO
/****** Object:  View [dbo].[Qry107]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry107] As SELECT     SUM(dbo.Fun001(TBL023.ProductGuide, TBL023.Unit, TBL023.Quantity+TBL023.ExtraQuantity) * TBL020.InvoiceMovementSide) AS Quantity, 
                       TBL023.ProductGuide, TBL023.ExpiryDate 
 FROM         TBL023 INNER JOIN 
                       TBL022 ON TBL023.MainGuide = TBL022.CardGuide INNER JOIN 
                       TBL020 ON TBL022.MainGuide = TBL020.CardGuide 
 Where TBL022.Posted>0 
 GROUP BY TBL023.ProductGuide, TBL023.ExpiryDate
GO
/****** Object:  View [dbo].[Qry108]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry108] As SELECT     TBL007.*, Qry107.Quantity , Qry107.ExpiryDate
 FROM         TBL007 LEFT OUTER JOIN 
                       Qry107 ON TBL007.CardGuide = Qry107.ProductGuide
GO
/****** Object:  View [dbo].[Qry116]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry116] As Select TBL023.ProductGuide,Max(a.InsertedIn)As InsertedIn,Max(TBL023.ID)As RowID From 
 TBL023 INNER JOIN 
 TBL022 ON TBL023.MainGuide = TBL022.CardGuide INNER JOIN 
 TBL020 ON TBL022.MainGuide = TBL020.CardGuide 
 Inner Join( Select TBL023.ProductGuide,Max(TBL022.BillDate) InsertedIn From TBL023 Inner Join TBL022 ON TBL023.MainGuide = TBL022.CardGuide INNER JOIN 
 	TBL020 ON TBL022.MainGuide = TBL020.CardGuide 
 WHERE     (TBL020.AffectLastPurchasePrice > 0 And TBL023.TotalValue>0 ) 
 Group By TBL023.ProductGuide)a On TBL023.ProductGuide=a.ProductGuide 
 WHERE     (TBL020.AffectLastPurchasePrice > 0 And TBL022.BillDate>=a.InsertedIn) And TBL023.TotalValue>0 
 Group By TBL023.ProductGuide
GO
/****** Object:  View [dbo].[Qry129]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry129] As Select *,a.SavedCost As PriceValue From (Select a.*,p.LastCalulatedDate,p.ItemGuide,b.ExpiryDate,b.PatchCode,Null As CostCenter,Null Project,Null as Branch,Null as StoreGuide,Null as Category01,Null as Category02,Null as Category03,Null as Category04,Null as Category05,p.PriceValue/((b.Quantity+b.ExtraQuantity)*(case b.Unit when 3 then c.Factor3 when 2 then c.Factor2 else 1 end)) As SavedCost from Qry116 a 
 Inner Join TBL023 b On a.RowID=b.ID 
 Inner Join TBL022 h On b.MainGuide=h.CardGuide 
 Inner Join TBL074 p On p.BillRowGuide=b.RowGuide  
 Inner Join TBL007 c On a.ProductGuide=c.CardGuide 
 Where p.PriceType=200)a 
GO
/****** Object:  View [dbo].[Grp001Qry001]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry001] As Select a.*,b.CardCode AS ClosingAccountCode, b.ClosingAccountName, b.ClosingAccountLatinName,a.CardCode+'-'+ a.LatinName As LatinAccount,IsNull(c.SonsCount,0) As SonsCount From 
 (Select a.* From 
 (Select 0 As TypeID,CheckAccounts From TBL042 Where CardGuide='fd70821f-164f-4e1a-992b-1129a071785b') c 
 Inner Join 
 TBL004 a On c.TypeID=0 
 Left Join (Select AccountGuide From TBL133 Where AccountGuide Is Not Null And MainGuide='fd70821f-164f-4e1a-992b-1129a071785b')b 
 On ((a.CardGuide=b.AccountGuide And a.MainAccount Is Null) Or a.MainAccount=b.AccountGuide) 
 Where a.NotActive=0 And (c.CheckAccounts Is Null Or c.CheckAccounts=0 Or b.AccountGuide Is Not Null))a 
 Left Join TBL002 b On a.ClosingAccount=b.CardGuide 
 Left Join (Select MainAccount,Count(*) As SonsCount From TBL004 Where MainAccount Is Not Null Group By MainAccount) c On a.CardGuide=c.MainAccount
GO
/****** Object:  View [dbo].[Grp001Qry010]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry010] As SELECT     a.ID, a.CardGuide, a.NotActive, a.CardCode, a.AccountName, a.MainAccount, a.LatinName, a.SonsCount, 
 a.ClosingAccount, a.Security, COUNT(TBL012.ID) + COUNT(TBL016.ID) AS UsedCount 
 FROM         Grp001Qry001 a LEFT OUTER JOIN 
 TBL016 ON a.CardGuide = TBL016.AccountID LEFT OUTER JOIN 
 TBL012 ON a.CardGuide = TBL012.AccountGuide 
 GROUP BY a.ID, a.CardGuide, a.NotActive, a.CardCode, a.AccountName, a.MainAccount, a.LatinName, a.SonsCount,  
 a.ClosingAccount, a.Security
GO
/****** Object:  View [dbo].[Grp001Qry002]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry002] As Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AccountGuide From TBL012 with(nolock) Left Join TBL011 with(nolock) 
 On TBL012.MainGuide=TBL011.CardGuide 
 Left Join (Select 0 As TypeID,SeparateGroup From TBL042 Where CardGuide='fd70821f-164f-4e1a-992b-1129a071785b') c On c.TypeID=0 
 Where TBL011.Posted>0 And (c.SeparateGroup=0 Or TBL011.ByGroup='fd70821f-164f-4e1a-992b-1129a071785b') 
 Group By AccountGuide
GO
/****** Object:  View [dbo].[Grp001Qry011]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry011] As SELECT     a.*,c.Debit-c.Credit As Balance, dbo.TBL004.CardCode AS MainAccountCode, dbo.TBL004.AccountName AS MainAccountName 
 FROM          Grp001Qry001 a  LEFT OUTER JOIN 
                       dbo.TBL004 ON a.MainAccount = dbo.TBL004.CardGuide 
                       LEFT OUTER JOIN Grp001Qry002 c ON c.AccountGuide = a.CardGuide 
 WHERE     (a.SonsCount = 0)
GO
/****** Object:  View [dbo].[Grp001Qry087]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry087] As SELECT     a.CardCode, a.AccountName, a.LatinName, a.SonsCount, TBL011.EntryNumber, TBL010.BondNumber, 
                       TBL009.EntryName, TBL009.EntryLatinName, TBL022.BillNumber, TBL020.InvoiceName, TBL020.LatinName AS InvoiceLatinName 
 FROM         TBL010 LEFT OUTER JOIN 
                       TBL009 ON TBL010.MainGuide = TBL009.CardGuide RIGHT OUTER JOIN 
                       TBL022 LEFT OUTER JOIN 
                       TBL020 ON TBL022.MainGuide = TBL020.CardGuide RIGHT OUTER JOIN 
                       TBL011 ON TBL022.CardGuide = TBL011.BillGuide ON TBL010.CardGuide = TBL011.BondGuide RIGHT OUTER JOIN 
                       Grp001Qry001 a INNER JOIN 
                       TBL012 ON a.CardGuide = TBL012.AccountGuide ON TBL011.CardGuide = TBL012.MainGuide 
 WHERE     (a.SonsCount > 0) 
 GROUP BY a.CardCode, a.AccountName, a.LatinName, a.SonsCount, TBL011.EntryNumber, TBL010.BondNumber,  
                       TBL009.EntryName, TBL009.EntryLatinName, TBL022.BillNumber, TBL020.InvoiceName, TBL020.LatinName
GO
/****** Object:  View [dbo].[Grp001Qry003]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry003] As Select a.*,b.CardCode AS ClosingAccountCode, b.ClosingAccountName, b.ClosingAccountLatinName,a.CardCode+'-'+ a.LatinName As LatinAccount,IsNull(c.SonsCount,0) As SonsCount From 
 (Select a.* From 
 (Select 0 As TypeID,CheckAccounts From TBL042 Where CardGuide='fd70821f-164f-4e1a-992b-1129a071785b') c 
 Inner Join 
 TBL004 a On c.TypeID=0 
 Left Join (Select MainAccount From TBL004 Group By MainAccount) n On a.CardGuide=n.MainAccount 
 Left Join (Select AccountGuide From TBL133 Where AccountGuide Is Not Null And MainGuide='fd70821f-164f-4e1a-992b-1129a071785b')b 
 On ((a.MainAccount=b.AccountGuide And n.MainAccount Is Null) Or (a.CardGuide=b.AccountGuide)) 
 Where (c.CheckAccounts Is Null Or c.CheckAccounts=0 Or b.AccountGuide Is Not Null))a 
 Left Join TBL002 b On a.ClosingAccount=b.CardGuide 
 Left Join (Select MainAccount,Count(*) As SonsCount From TBL004 Where MainAccount Is Not Null Group By MainAccount) c On a.CardGuide=c.MainAccount
GO
/****** Object:  View [dbo].[Grp001Qry174]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry174] As SELECT a.*, c.Debit-c.Credit As Balance, b.CardCode AS MainAccountCode, b.AccountName AS MainAccountName 
 FROM Grp001Qry003 a LEFT JOIN TBL004 b ON a.MainAccount = b.CardGuide
 LEFT JOIN Grp001Qry002 c ON a.CardGuide = c.AccountGuide 
GO
/****** Object:  View [dbo].[Grp001Qry030]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry030] As SELECT     a.*,Null As Balance, dbo.TBL004.CardCode AS MainAccountCode, dbo.TBL004.AccountName AS MainAccountName 
 FROM         Grp001Qry010 a LEFT OUTER JOIN 
                       dbo.TBL004 ON a.MainAccount = dbo.TBL004.CardGuide 
 WHERE     (a.UsedCount = 0)
GO
/****** Object:  View [dbo].[Grp001Qry187]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry187] As Select a.MainGuide As BondGuide, b.* From TBL095 a Inner Join Grp001Qry011 b On a.AccountGuide=b.MainAccount
GO
/****** Object:  View [dbo].[Qry255]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry255] As Select * From TBL133 Where FormType Is Not Null
GO
/****** Object:  View [dbo].[Grp001Qry228]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry228] As Select a.* From 
 (Select CardGuide,0 As TypeID,CheckStores From TBL042 Where CardGuide='fd70821f-164f-4e1a-992b-1129a071785b') c 
 Inner Join 
 TBL008 a On c.TypeID=0 
 Left Join (Select StoreGuide,MainGuide From TBL133 Where StoreGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And (a.CardGuide=b.StoreGuide) 
 Left Join (Select MainGuide,1 As Activated From Qry255 Where MainGuide='fd70821f-164f-4e1a-992b-1129a071785b' And FormType='Warehouses')l On (l.Activated is null Or a.ByGroup='fd70821f-164f-4e1a-992b-1129a071785b') 
 Where a.NotActive=0 And (c.CheckStores=0 Or b.StoreGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp002Qry228]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry228] As Select a.* From 
 (Select CardGuide,0 As TypeID,CheckStores From TBL042 Where CardGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec') c 
 Inner Join 
 TBL008 a On c.TypeID=0 
 Left Join (Select StoreGuide,MainGuide From TBL133 Where StoreGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And (a.CardGuide=b.StoreGuide) 
 Left Join (Select MainGuide,1 As Activated From Qry255 Where MainGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec' And FormType='Warehouses')l On (l.Activated is null Or a.ByGroup='8995f620-03c5-4643-8c4b-d6a1b33639ec') 
 Where a.NotActive=0 And (c.CheckStores=0 Or b.StoreGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp003Qry228]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry228] As Select a.* From 
 (Select CardGuide,0 As TypeID,CheckStores From TBL042 Where CardGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') c 
 Inner Join 
 TBL008 a On c.TypeID=0 
 Left Join (Select StoreGuide,MainGuide From TBL133 Where StoreGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And (a.CardGuide=b.StoreGuide) 
 Left Join (Select MainGuide,1 As Activated From Qry255 Where MainGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac' And FormType='Warehouses')l On (l.Activated is null Or a.ByGroup='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') 
 Where a.NotActive=0 And (c.CheckStores=0 Or b.StoreGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp004Qry228]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry228] As Select a.* From 
 (Select CardGuide,0 As TypeID,CheckStores From TBL042 Where CardGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678') c 
 Inner Join 
 TBL008 a On c.TypeID=0 
 Left Join (Select StoreGuide,MainGuide From TBL133 Where StoreGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And (a.CardGuide=b.StoreGuide) 
 Left Join (Select MainGuide,1 As Activated From Qry255 Where MainGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678' And FormType='Warehouses')l On (l.Activated is null Or a.ByGroup='22cf4629-3349-4d5c-bc95-a40f8ffd7678') 
 Where a.NotActive=0 And (c.CheckStores=0 Or b.StoreGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp001Qry239]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry239] As Select a.* From Grp001Qry228 a Left Join TBL008 b On a.CardGuide=b.MainWarehouse Where a.NotActive=0 And b.ID Is Null
GO
/****** Object:  View [dbo].[Qry132]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry132] As Select b.AgentsGroupGuide,a.*,g.GroupName,g.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 TBL016 a 
 Left Join TBL015 g On a.MainGroupGuide=g.CardGuide 
 Left Join (Select AgentsGroupGuide From TBL133 Where AgentsGroupGuide Is Not Null And MainGuide=dbo.Fun159())b 
 On a.MainGroupGuide=b.AgentsGroupGuide 
 Left Join (Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AgentGuide From TBL012 Left Join TBL011 
 On TBL012.MainGuide=TBL011.CardGuide 
 Where TBL012.AgentGuide Is Not Null And TBL011.Posted>0 
 Group By TBL012.AgentGuide) e On a.CardGuide=e.AgentGuide 
 Where a.NotActive=0
GO
/****** Object:  View [dbo].[Qry182]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry182] As Select TBL095.MainGuide As BondGuide, Qry132.* From TBL095 Inner Join TBL004 On TBL095.AccountGuide=TBL004.MainAccount 
 Inner Join Qry132 On Qry132.AccountID=TBL004.CardGuide
GO
/****** Object:  View [dbo].[Grp002Qry001]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry001] As Select a.*,b.CardCode AS ClosingAccountCode, b.ClosingAccountName, b.ClosingAccountLatinName,a.CardCode+'-'+ a.LatinName As LatinAccount,IsNull(c.SonsCount,0) As SonsCount From 
 (Select a.* From 
 (Select 0 As TypeID,CheckAccounts From TBL042 Where CardGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec') c 
 Inner Join 
 TBL004 a On c.TypeID=0 
 Left Join (Select AccountGuide From TBL133 Where AccountGuide Is Not Null And MainGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec')b 
 On ((a.CardGuide=b.AccountGuide And a.MainAccount Is Null) Or a.MainAccount=b.AccountGuide) 
 Where a.NotActive=0 And (c.CheckAccounts Is Null Or c.CheckAccounts=0 Or b.AccountGuide Is Not Null))a 
 Left Join TBL002 b On a.ClosingAccount=b.CardGuide 
 Left Join (Select MainAccount,Count(*) As SonsCount From TBL004 Where MainAccount Is Not Null Group By MainAccount) c On a.CardGuide=c.MainAccount
GO
/****** Object:  View [dbo].[Grp002Qry010]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry010] As SELECT     a.ID, a.CardGuide, a.NotActive, a.CardCode, a.AccountName, a.MainAccount, a.LatinName, a.SonsCount, 
 a.ClosingAccount, a.Security, COUNT(TBL012.ID) + COUNT(TBL016.ID) AS UsedCount 
 FROM         Grp002Qry001 a LEFT OUTER JOIN 
 TBL016 ON a.CardGuide = TBL016.AccountID LEFT OUTER JOIN 
 TBL012 ON a.CardGuide = TBL012.AccountGuide 
 GROUP BY a.ID, a.CardGuide, a.NotActive, a.CardCode, a.AccountName, a.MainAccount, a.LatinName, a.SonsCount,  
 a.ClosingAccount, a.Security
GO
/****** Object:  View [dbo].[Grp002Qry002]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry002] As Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AccountGuide From TBL012 with(nolock) Left Join TBL011 with(nolock) 
 On TBL012.MainGuide=TBL011.CardGuide 
 Left Join (Select 0 As TypeID,SeparateGroup From TBL042 Where CardGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec') c On c.TypeID=0 
 Where TBL011.Posted>0 And (c.SeparateGroup=0 Or TBL011.ByGroup='8995f620-03c5-4643-8c4b-d6a1b33639ec') 
 Group By AccountGuide
GO
/****** Object:  View [dbo].[Grp002Qry011]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry011] As SELECT     a.*,c.Debit-c.Credit As Balance, dbo.TBL004.CardCode AS MainAccountCode, dbo.TBL004.AccountName AS MainAccountName 
 FROM          Grp002Qry001 a  LEFT OUTER JOIN 
                       dbo.TBL004 ON a.MainAccount = dbo.TBL004.CardGuide 
                       LEFT OUTER JOIN Grp002Qry002 c ON c.AccountGuide = a.CardGuide 
 WHERE     (a.SonsCount = 0)
GO
/****** Object:  View [dbo].[Grp002Qry087]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry087] As SELECT     a.CardCode, a.AccountName, a.LatinName, a.SonsCount, TBL011.EntryNumber, TBL010.BondNumber, 
                       TBL009.EntryName, TBL009.EntryLatinName, TBL022.BillNumber, TBL020.InvoiceName, TBL020.LatinName AS InvoiceLatinName 
 FROM         TBL010 LEFT OUTER JOIN 
                       TBL009 ON TBL010.MainGuide = TBL009.CardGuide RIGHT OUTER JOIN 
                       TBL022 LEFT OUTER JOIN 
                       TBL020 ON TBL022.MainGuide = TBL020.CardGuide RIGHT OUTER JOIN 
                       TBL011 ON TBL022.CardGuide = TBL011.BillGuide ON TBL010.CardGuide = TBL011.BondGuide RIGHT OUTER JOIN 
                       Grp002Qry001 a INNER JOIN 
                       TBL012 ON a.CardGuide = TBL012.AccountGuide ON TBL011.CardGuide = TBL012.MainGuide 
 WHERE     (a.SonsCount > 0) 
 GROUP BY a.CardCode, a.AccountName, a.LatinName, a.SonsCount, TBL011.EntryNumber, TBL010.BondNumber,  
                       TBL009.EntryName, TBL009.EntryLatinName, TBL022.BillNumber, TBL020.InvoiceName, TBL020.LatinName
GO
/****** Object:  View [dbo].[Qry268]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry268] As Select a.RowGuide,a.ID,a.EstablishDate,b.Notes,a.TotalValue,dbo.Ratio(a.TotalValue,a.Quantity) As UnitPrice,b.CardGuide As InvoiceGuide,b.BillNumber
 ,dbo.Ratio(a.TotalValue-a.DiscountValue-a.Discount1+a.ExtraValue+(CASE c.TotalIncludeTax When 0 Then a.TaxValue Else 0 End),a.Quantity) As NetPrice
 ,b.BillDate,c.InvoiceName,c.LatinName As InvoiceLatinName,i.CardCode As ItemCode,i.ProductName
 ,r.UnitName As VariableUnit,g.CardCode As ItemGroupCode,g.GroupName As ItemGroupName,a.Unit As Unit
 ,b.MainGuide As InvoiceTypeGuide,a.ProductGuide,i.GroupGuid As ItemGroup,a.RelatedUnit As VariableUnitGuide
 ,a.Quantity,a.ExtraQuantity,a.UnitQuantity,ISNULL(a.StoreID,b.StoreGuide)As StoreGuide,b.AgentGuide,a.RelatedAgent As RecipientGuide
 ,(case a.Unit When 3 Then i.Factor3 When 2 Then i.Factor2 Else 1 end) As Factor 
 ,(case a.Unit When 3 Then i.Unit3 When 2 Then i.Unit2 Else i.Unit end) As iUnit 
 ,(case r.MainUnit When 3 Then i.Factor3 When 2 Then i.Factor2 Else 1 end) As VariableUnitFactor,r.Quantity As VariableUnitCardQty
 ,Isnull(a.CostCenter,b.CostCenter) As CostCenter
 ,a.Category01,a.Category02,a.Category03,a.Category04,a.Category05,a.ExpiryDate
 ,c.InvoiceMovementSide,IsNull(l.BillSide,c.InvoiceMovementSide) As ReportBillSide,i.Factor2 As ItemFactor2,i.Factor3 As ItemFactor3,c.BooleanOption22 As SubtractingPreviouslyRelatedItems
 ,c.BooleanOption28 As AutoSetLockField,a.SourceBill,s.MainGuide As SourceInvoiceTypeID,b.LockRelations,c.BooleanOption39 As NotIncludedInSubtractedRelatedQuantities
 ,a.Length,a.Width,a.Hieght,a.Weight,a.Value,a.BillCustom1,a.BillCustom2,a.BillCustom3,a.BillCustom4,a.BillCustom5,a.PatchCode,a.ReserveDate
 ,dbo.Ratio(a.DiscountValue,a.TotalValue)*100 As DiscountRatio,
 dbo.Ratio(a.ExtraValue,a.TotalValue)*100 ExtraRatio,
 (case c.TotalIncludeTax when 0 then dbo.Ratio(a.TaxValue,a.TotalValue+a.ExtraValue-(a.DiscountValue+a.Discount1))*100 else dbo.Ratio(a.TaxValue*100,(a.TotalValue+a.ExtraValue-(a.DiscountValue+a.Discount1)-a.BillTax)-a.TaxValue) end) as TaxRatio,
 a.TotalValue-a.DiscountValue-a.Discount1+a.ExtraValue+(CASE c.TotalIncludeTax When 0 Then a.TaxValue Else 0 End) As NetTotal,a.TotalValue2,a.DiscountValue,a.ExtraValue,a.TaxValue
 ,dbo.Ratio(a.TotalValue,a.UnitQuantity) As VariableUnitPrice,a.ProductsAccount
 From TBL023 a with(nolock)
 Inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide
 Inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide
 Inner Join TBL007 i with(nolock) On a.ProductGuide=i.CardGuide
 Inner Join TBL006 g with(nolock) On i.GroupGuid=g.CardGuide
 Left Join TBL022 s with(nolock) On a.SourceBill=s.CardGuide
 Left Join TBL128 r with(nolock) On a.RelatedUnit=r.CardGuide
 Left Join TBL129 l with(nolock) On l.MainGuide=s.MainGuide And l.BillGuide=b.MainGuide
GO
/****** Object:  View [dbo].[Qry269]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry269] As Select a.*,a.InvoiceGuide As CardGuide,a.Factor As ItemBillFactor,a.InvoiceGuide As MainGuide,IsNull(b.Quantity/a.Factor,0) As RelatedQuantity,IsNull(b.ExtraQuantity/a.Factor,0)As RelatedExtraQuantity,Isnull(b.UnitQuantity,0)As RelatedUnitQuantity
 ,(a.Quantity-IsNull(b.Quantity*-1,0))*a.InvoiceMovementSide/a.Factor As iNetQuantity,(a.ExtraQuantity-IsNull(b.ExtraQuantity*-1,0))*a.InvoiceMovementSide/a.Factor As iNetExtraQuantity,(a.UnitQuantity-Isnull(b.UnitQuantity*-1,0))*a.InvoiceMovementSide As iNetUnitQuantity
 ,a.ItemCode+'-'+a.ProductName As iItem,a.StoreGuide As StoreID,s.CardCode+'-'+s.WarehouseName As iStoreID,c1.CardName as iCategory01,c2.CardName as iCategory02,c3.CardName as iCategory03,c4.CardName as iCategory04,c5.CardName as iCategory05
 ,i.StatementName,a.Notes As Description,c.CardCode+'-'+c.CostCenter As iCostCenter,a.VariableUnitGuide As RelatedUnit,a.InvoiceName As iBill,(a.Quantity/a.Factor)*a.InvoiceMovementSide As iQuantity,(a.ExtraQuantity/a.Factor)*a.InvoiceMovementSide As iExtraQuantity
 From (
 Select ID,StoreGuide,InvoiceMovementSide,EstablishDate,TotalValue,UnitPrice,NetPrice,SubtractingPreviouslyRelatedItems,InvoiceGuide,BillDate,BillNumber,InvoiceName,ReportBillSide,ProductGuide,ItemCode,ProductName,ItemGroup,ItemGroupCode,ItemGroupName,ItemFactor2,ItemFactor3
 ,Factor,VariableUnit,VariableUnitCardQty,VariableUnitFactor,VariableUnitGuide,CostCenter,Category01,Category02,Category03,Category04,Category05,ExpiryDate
 ,Sum(Quantity*Factor)*InvoiceMovementSide As Quantity,Sum(ExtraQuantity*Factor)*InvoiceMovementSide As ExtraQuantity,Sum(UnitQuantity*Factor)*InvoiceMovementSide As UnitQuantity,iUnit,Unit
 ,DiscountRatio,ExtraRatio,TaxRatio,NetTotal,TotalValue2,DiscountValue,ExtraValue,TaxValue,VariableUnitPrice,Notes
 ,Length,Width,Hieght,Weight,Value,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,PatchCode,ReserveDate,ProductsAccount
 From Qry268 Group By
 ID,StoreGuide,InvoiceMovementSide,EstablishDate,TotalValue,UnitPrice,NetPrice,SubtractingPreviouslyRelatedItems,InvoiceGuide,BillDate,BillNumber,InvoiceName,ReportBillSide,ProductGuide,ItemCode,ProductName,ItemGroup,ItemGroupCode,ItemGroupName,ItemFactor2,ItemFactor3
 ,Factor,VariableUnit,VariableUnitCardQty,VariableUnitFactor,VariableUnitGuide,CostCenter,Category01,Category02,Category03,Category04,Category05,ExpiryDate,iUnit,Unit
 ,DiscountRatio,ExtraRatio,TaxRatio,NetTotal,TotalValue2,DiscountValue,ExtraValue,TaxValue,VariableUnitPrice,Notes
 ,Length,Width,Hieght,Weight,Value,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,PatchCode,ReserveDate,ProductsAccount
 ) a
 Left Join (
 Select SourceBill,ProductGuide,CostCenter,Category01,Category02,Category03,Category04,Category05,ExpiryDate
 ,Sum(Quantity*Factor*ReportBillSide)As Quantity,Sum(ExtraQuantity*ReportBillSide*Factor)As ExtraQuantity,Sum(UnitQuantity*VariableUnitFactor*ReportBillSide)As UnitQuantity
 From Qry268 Where NotIncludedInSubtractedRelatedQuantities=0 Group By
 SourceBill,ProductGuide,CostCenter,Category01,Category02,Category03,Category04,Category05,ExpiryDate
 ) b On a.InvoiceGuide=b.SourceBill
 And a.ProductGuide=b.ProductGuide
 And (b.CostCenter=a.CostCenter Or b.CostCenter is null and a.CostCenter is null)
 And (b.Category01=a.Category01 Or b.Category01 is null and a.Category01 is null)
 And (b.Category02=a.Category02 Or b.Category02 is null and a.Category02 is null)
 And (b.Category03=a.Category03 Or b.Category03 is null and a.Category03 is null)
 And (b.Category04=a.Category04 Or b.Category04 is null and a.Category04 is null)
 And (b.Category05=a.Category05 Or b.Category05 is null and a.Category05 is null)
 And (b.ExpiryDate=a.ExpiryDate Or b.ExpiryDate is null and a.ExpiryDate is null)
 Inner Join TBL007 i On a.ProductGuide=i.CardGuide
 Left join TBL008 s On a.StoreGuide=s.CardGuide
 Left join TBL081 c1 On a.Category01=c1.CardGuide
 Left join TBL081 c2 On a.Category02=c2.CardGuide
 Left join TBL081 c3 On a.Category03=c3.CardGuide
 Left join TBL081 c4 On a.Category04=c4.CardGuide
 Left join TBL081 c5 On a.Category05=c5.CardGuide
 Left Join TBL005 c on a.CostCenter=c.CardGuide
GO
/****** Object:  View [dbo].[Grp002Qry003]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry003] As Select a.*,b.CardCode AS ClosingAccountCode, b.ClosingAccountName, b.ClosingAccountLatinName,a.CardCode+'-'+ a.LatinName As LatinAccount,IsNull(c.SonsCount,0) As SonsCount From 
 (Select a.* From 
 (Select 0 As TypeID,CheckAccounts From TBL042 Where CardGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec') c 
 Inner Join 
 TBL004 a On c.TypeID=0 
 Left Join (Select MainAccount From TBL004 Group By MainAccount) n On a.CardGuide=n.MainAccount 
 Left Join (Select AccountGuide From TBL133 Where AccountGuide Is Not Null And MainGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec')b 
 On ((a.MainAccount=b.AccountGuide And n.MainAccount Is Null) Or (a.CardGuide=b.AccountGuide)) 
 Where (c.CheckAccounts Is Null Or c.CheckAccounts=0 Or b.AccountGuide Is Not Null))a 
 Left Join TBL002 b On a.ClosingAccount=b.CardGuide 
 Left Join (Select MainAccount,Count(*) As SonsCount From TBL004 Where MainAccount Is Not Null Group By MainAccount) c On a.CardGuide=c.MainAccount
GO
/****** Object:  View [dbo].[Grp002Qry174]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry174] As SELECT a.*, c.Debit-c.Credit As Balance, b.CardCode AS MainAccountCode, b.AccountName AS MainAccountName 
 FROM Grp002Qry003 a LEFT JOIN TBL004 b ON a.MainAccount = b.CardGuide
 LEFT JOIN Grp002Qry002 c ON a.CardGuide = c.AccountGuide 
GO
/****** Object:  View [dbo].[Grp002Qry030]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry030] As SELECT     a.*,Null As Balance, dbo.TBL004.CardCode AS MainAccountCode, dbo.TBL004.AccountName AS MainAccountName 
 FROM         Grp002Qry010 a LEFT OUTER JOIN 
                       dbo.TBL004 ON a.MainAccount = dbo.TBL004.CardGuide 
 WHERE     (a.UsedCount = 0)
GO
/****** Object:  View [dbo].[Qry001]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry001] As Select a.*,b.CardCode AS ClosingAccountCode, b.ClosingAccountName, b.ClosingAccountLatinName,a.CardCode+'-'+ a.LatinName As LatinAccount,IsNull(c.SonsCount,0) As SonsCount From 
 (Select a.* From 
 (Select 0 As TypeID,CheckAccounts From TBL042 with(nolock) Where CardGuide=dbo.Fun159()) c 
 Inner Join 
 TBL004 a with(nolock) On c.TypeID=0 
 Left Join (Select AccountGuide From TBL133 with(nolock) Where AccountGuide Is Not Null And MainGuide=dbo.Fun159())b 
 On ((a.CardGuide=b.AccountGuide And a.MainAccount Is Null) Or a.MainAccount=b.AccountGuide) 
 Where a.NotActive=0 And (c.CheckAccounts Is Null Or c.CheckAccounts=0 Or b.AccountGuide Is Not Null))a 
 Left Join TBL002 b with(nolock) On a.ClosingAccount=b.CardGuide 
 Left Join (Select MainAccount,Count(*) As SonsCount From TBL004 with(nolock) Where MainAccount Is Not Null Group By MainAccount) c On a.CardGuide=c.MainAccount
GO
/****** Object:  View [dbo].[Qry010]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry010] As SELECT     Qry001.ID, Qry001.CardGuide, Qry001.NotActive, Qry001.CardCode, Qry001.AccountName, Qry001.MainAccount, Qry001.LatinName, Qry001.SonsCount, 
 Qry001.ClosingAccount, Qry001.Security, COUNT(TBL012.ID) + COUNT(TBL016.ID) AS UsedCount 
 FROM         Qry001 LEFT OUTER JOIN 
 TBL016 with(nolock) ON Qry001.CardGuide = TBL016.AccountID LEFT OUTER JOIN 
 TBL012 with(nolock) ON Qry001.CardGuide = TBL012.AccountGuide 
 GROUP BY Qry001.ID, Qry001.CardGuide, Qry001.NotActive, Qry001.CardCode, Qry001.AccountName, Qry001.MainAccount, Qry001.LatinName, Qry001.SonsCount,  
 Qry001.ClosingAccount, Qry001.Security
GO
/****** Object:  View [dbo].[Qry002]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry002] As Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AccountGuide From TBL012 with(nolock) Left Join TBL011 with(nolock) 
 On TBL012.MainGuide=TBL011.CardGuide 
 Where TBL011.Posted>0 
 Group By AccountGuide
GO
/****** Object:  View [dbo].[Qry011]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry011] As SELECT     dbo.Qry001.*,Qry002.Debit-Qry002.Credit As Balance, dbo.TBL004.CardCode AS MainAccountCode, dbo.TBL004.AccountName AS MainAccountName 
 FROM         dbo.Qry001 LEFT OUTER JOIN 
                       dbo.TBL004 with (nolock) ON dbo.Qry001.MainAccount = dbo.TBL004.CardGuide 
                       LEFT OUTER JOIN Qry002 ON Qry002.AccountGuide = dbo.Qry001.CardGuide 
 WHERE     (dbo.Qry001.SonsCount = 0)
GO
/****** Object:  View [dbo].[Grp002Qry187]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry187] As Select a.MainGuide As BondGuide, b.* From TBL095 a Inner Join Grp002Qry011 b On a.AccountGuide=b.MainAccount
GO
/****** Object:  View [dbo].[Qry206]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry206] As Select a.*,d.GroupName,d.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 (Select CardGuide,0 As TypeID,CheckAgentsGroups As CheckGroups From TBL042 Where CardGuide=dbo.Fun159()) c 
 Inner Join 
 TBL016 a On c.TypeID=0 
 Left Join TBL015 d On a.MainGroupGuide=d.CardGuide 
 Left Join Qry002 e On a.AccountID=e.AccountGuide 
 Left Join (Select AgentsGroupGuide,MainGuide From TBL133 Where AgentsGroupGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And a.MainGroupGuide=b.AgentsGroupGuide 
 Where (c.CheckGroups=0 Or b.AgentsGroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp001Qry206]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry206] As Select a.*,d.GroupName,d.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 (Select CardGuide,0 As TypeID,CheckAgentsGroups As CheckGroups From TBL042 Where CardGuide='fd70821f-164f-4e1a-992b-1129a071785b') c 
 Inner Join 
 TBL016 a On c.TypeID=0 
 Left Join TBL015 d On a.MainGroupGuide=d.CardGuide 
 Left Join Qry002 e On a.AccountID=e.AccountGuide 
 Left Join (Select AgentsGroupGuide,MainGuide From TBL133 Where AgentsGroupGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And a.MainGroupGuide=b.AgentsGroupGuide 
 Where (c.CheckGroups=0 Or b.AgentsGroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp002Qry206]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry206] As Select a.*,d.GroupName,d.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 (Select CardGuide,0 As TypeID,CheckAgentsGroups As CheckGroups From TBL042 Where CardGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec') c 
 Inner Join 
 TBL016 a On c.TypeID=0 
 Left Join TBL015 d On a.MainGroupGuide=d.CardGuide 
 Left Join Qry002 e On a.AccountID=e.AccountGuide 
 Left Join (Select AgentsGroupGuide,MainGuide From TBL133 Where AgentsGroupGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And a.MainGroupGuide=b.AgentsGroupGuide 
 Where (c.CheckGroups=0 Or b.AgentsGroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp003Qry206]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry206] As Select a.*,d.GroupName,d.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 (Select CardGuide,0 As TypeID,CheckAgentsGroups As CheckGroups From TBL042 Where CardGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') c 
 Inner Join 
 TBL016 a On c.TypeID=0 
 Left Join TBL015 d On a.MainGroupGuide=d.CardGuide 
 Left Join Qry002 e On a.AccountID=e.AccountGuide 
 Left Join (Select AgentsGroupGuide,MainGuide From TBL133 Where AgentsGroupGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And a.MainGroupGuide=b.AgentsGroupGuide 
 Where (c.CheckGroups=0 Or b.AgentsGroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Qry003]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry003] As Select a.*,b.CardCode AS ClosingAccountCode, b.ClosingAccountName, b.ClosingAccountLatinName,a.CardCode+'-'+ a.LatinName As LatinAccount,IsNull(c.SonsCount,0) As SonsCount From 
 (Select a.* From 
 TBL004 a with(nolock) 
 Left Join (Select MainAccount From TBL004 with(nolock) Group By MainAccount) n On a.CardGuide=n.MainAccount 
 )a 
 Left Join TBL002 b with(nolock) On a.ClosingAccount=b.CardGuide 
 Left Join (Select MainAccount,Count(*) As SonsCount From TBL004 with(nolock) Where MainAccount Is Not Null Group By MainAccount) c On a.CardGuide=c.MainAccount
GO
/****** Object:  View [dbo].[Qry174]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry174] As SELECT a.*, c.Debit-c.Credit As Balance, b.CardCode AS MainAccountCode, b.AccountName AS MainAccountName 
 FROM Qry003 a LEFT JOIN TBL004 b ON a.MainAccount = b.CardGuide
 LEFT JOIN Qry002 c ON a.CardGuide = c.AccountGuide 
GO
/****** Object:  View [dbo].[Grp004Qry206]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry206] As Select a.*,d.GroupName,d.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 (Select CardGuide,0 As TypeID,CheckAgentsGroups As CheckGroups From TBL042 Where CardGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678') c 
 Inner Join 
 TBL016 a On c.TypeID=0 
 Left Join TBL015 d On a.MainGroupGuide=d.CardGuide 
 Left Join Qry002 e On a.AccountID=e.AccountGuide 
 Left Join (Select AgentsGroupGuide,MainGuide From TBL133 Where AgentsGroupGuide Is Not Null)b 
 On c.CardGuide=b.MainGuide And a.MainGroupGuide=b.AgentsGroupGuide 
 Where (c.CheckGroups=0 Or b.AgentsGroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Qry021]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry021] As SELECT     ProductGuide, Quantity AS Quantity, ItemNetTotal AS ItemNetTotal, AffectLastPurchasePrice 
 FROM         Qry019 
 WHERE     (AffectLastPurchasePrice = 1)
GO
/****** Object:  View [dbo].[Qry022]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry022] As SELECT     ProductGuide, SUM(ItemNetTotal) AS ItemNetTotal, SUM(Quantity) AS TotalQuantity 
 FROM         Qry021 
 GROUP BY ProductGuide
GO
/****** Object:  View [dbo].[Qry059]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry059] As SELECT     isnull(TBL063.MainGuide, isnull(TBL063_1.ItemGuide, TBL023.ProductGuide)) AS ProductGuide, TBL023.Unit, (CASE TBL023.Unit When 3 Then TBL007.Unit3 When 2 Then TBL007.Unit2 Else TBL007.Unit End) AS UnitName, dbo.Fun029(TBL007.ProductType, TBL023.ProductGuide, TBL023.Unit, TBL023.Quantity, TBL063.ItemGuide, TBL063.Unit,  
                       TBL063.Quantity, TBL063_1.MainGuide, TBL063_1.Unit, TBL063_1.Quantity) * TBL020.InvoiceMovementSide AS Quantity, isnull(TBL023.TotalValue,0)  
                       AS ItemTotalValue, isnull(TBL023.DiscountValue,0) AS ItemDiscountValue, isnull(TBL023.ExtraValue,0) AS ItemExtraValue, TBL023.Length, TBL023.Width,  
                       TBL023.Hieght, TBL022.BillDate, TBL022.Posted, TBL022.Security AS BillSecurity, TBL007.Security AS ItemSecurity, TBL025.Security AS CommissionSecurity,  
                       TBL063.ItemGuide AS MainItem, TBL007.ProductType, TBL063_1.ItemGuide, TBL023.BillCustom1, TBL023.BillCustom2, TBL023.BillCustom3, TBL023.BillCustom4,  
                       TBL023.BillCustom5, TBL006.BalanceSheetClosing, TBL006.TradingClosing, TBL007.AgentPrice, TBL007.WholePrice, TBL007.EndUserPrice, TBL007.StanderCost,  
                       Qry022.ItemNetTotal , TBL020.InvoiceMovementSide
 FROM         TBL006 with (nolock) INNER JOIN 
                       TBL007 with (nolock) ON TBL006.CardGuide = TBL007.GroupGuid LEFT OUTER JOIN 
                       Qry022 ON TBL007.CardGuide = Qry022.ProductGuide RIGHT OUTER JOIN 
                       TBL023 with (nolock) LEFT OUTER JOIN 
                       TBL063 AS TBL063_1 with (nolock) RIGHT OUTER JOIN 
                       Qry005 ON TBL063_1.ItemGuide = Qry005.CardGuide ON TBL023.ProductGuide = TBL063_1.MainGuide LEFT OUTER JOIN 
                       Qry004 ON TBL023.ProductGuide = Qry004.CardGuide LEFT OUTER JOIN 
                       TBL063 with (nolock) ON Qry004.CardGuide = TBL063.ItemGuide LEFT OUTER JOIN 
                       TBL020 with (nolock) INNER JOIN 
                       TBL022 with (nolock) ON TBL020.CardGuide = TBL022.MainGuide LEFT OUTER JOIN 
                       TBL025 with (nolock) ON TBL022.CreditCard = TBL025.CardGuide ON TBL023.MainGuide = TBL022.CardGuide ON TBL007.CardGuide = TBL023.ProductGuide
GO
/****** Object:  View [dbo].[Qry142]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry142] As Select * From TBL011 Where BillGuide Is Null And BondGuide Is Null
GO
/****** Object:  View [dbo].[Qry143]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry143] As SELECT TBL012.*,Qry142.CardGuide,Qry142.EntryNumber,Qry142.EntryDate,Qry142.Notes,Qry142.Posted,Qry142.Security,Qry142.CostCenter AS MainCostCenter FROM Qry142 LEFT OUTER JOIN TBL012 ON Qry142.CardGuide = TBL012.MainGuide
GO
/****** Object:  View [dbo].[Qry144]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry144] As Select 1 as TypeID,CardGuide, AccountGuide, CurrencyGuide, EntryDate AS InDate, Debit, Credit, DebitRate, CreditRate, ISNULL(CostCenter,MainCostCenter)AS CostCenterGuide, Checked, ISNULL(Description,Notes)AS Notes From Qry143
GO
/****** Object:  View [dbo].[Grp002Qry239]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry239] As Select a.* From Grp002Qry228 a Left Join TBL008 b On a.CardGuide=b.MainWarehouse Where a.NotActive=0 And b.ID Is Null
GO
/****** Object:  View [dbo].[Qry030]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry030] As SELECT     dbo.Qry010.*,Null As Balance, dbo.TBL004.CardCode AS MainAccountCode, dbo.TBL004.AccountName AS MainAccountName 
 FROM         dbo.Qry010 LEFT OUTER JOIN 
                       dbo.TBL004 ON dbo.Qry010.MainAccount = dbo.TBL004.CardGuide 
 WHERE     (dbo.Qry010.UsedCount = 0)
GO
/****** Object:  View [dbo].[Qry187]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry187] As Select a.MainGuide As BondGuide, b.* From TBL095 a Inner Join Qry011 b On a.AccountGuide=b.MainAccount
GO
/****** Object:  View [dbo].[Qry012]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry012] As SELECT     TBL011.ByGroup,TBL012.ID, TBL012.Checked, TBL012.AccountGuide, TBL004.AccountName, TBL004.CardCode AS AccountCode,TBL004.MainAccount, 
 TBL004.CardCode + '-' + TBL004.AccountName AS Account, TBL004.LatinName AS AccountLatinName, TBL012.CurrencyGuide, 
 TBL012.Description, TBL001.CurrencyName, TBL001.LatinName AS CurrencyLatinName, TBL001.Partity, TBL012.Debit, TBL012.Credit, 
 TBL012.DebitRate, TBL012.CreditRate, (TBL012.Debit + TBL012.Credit) / (TBL012.CreditRate + TBL012.DebitRate) AS Rate, 
 TBL012.ContraAccount AS ContraAccountGuide, TBL004_1.CardCode AS ContraAccountCode, TBL004_1.AccountName AS ContraAccountName, 
 TBL004_1.CardCode + '-' + TBL004_1.AccountName AS ContraAccount, TBL004_1.LatinName AS ContraAccountLatinName, TBL011.ID AS EntryID, 
 TBL011.CardGuide AS EntryGuide, TBL011.EntryNumber, TBL011.Posted, TBL012.MainGuide,IsNull(TBL012.RowDate,TBL011.EntryDate)As EntryDate, TBL011.DoneIn, 
 TBL011.BillGuide, TBL022.MainGuide AS BillTypeGuide, TBL022.BillNumber, TBL011.BondGuide, TBL010.BondNumber, 
 ISNULL(ISNULL(TBL010.MainGuide, TBL022.MainGuide), '00000000-0000-0000-0000-000000000000') AS SourceType, 
 TBL004.Security AS AccountSecurity, TBL011.Security AS EntrySecurity, TBL010.Security AS BondSecurity, TBL022.Security AS BillSecurity, 
 TBL004_1.Security AS ContraAccountSecurity, ISNULL(TBL012.CostCenter, TBL011.CostCenter) AS CostCenter, TBL011.InsertedIn, 
 TBL009.EntryName,TBL009.EntryLatinName, TBL020.InvoiceName, TBL020.LatinName, TBL010.MainGuide AS BondTypeGuide, TBL022.BillNotes2, 
 TBL022.BillNotes3, TBL011.Notes AS EntryNote, ISNULL(TBL012.Project, TBL011.Project) AS Project, ISNULL(TBL012.Branch, 
 TBL011.Branch) AS Branch, dbo.TBL012.EntryDetailsNotes2, dbo.TBL012.EntryDetailsNotes3,TBL012.EntryDetailsNotes4,TBL012.EntryDetailsNotes5, dbo.TBL012.Category01, dbo.TBL012.Category02,  
 dbo.TBL012.Category03, dbo.TBL012.Category04, dbo.TBL012.Category05, TBL012.AgentGuide,TBL011.Notes As HeadNotes
 FROM         TBL011 with(nolock) LEFT OUTER JOIN 
 TBL009 with(nolock) RIGHT OUTER JOIN 
 TBL010 with(nolock) ON TBL009.CardGuide = TBL010.MainGuide ON TBL011.BondGuide = TBL010.CardGuide LEFT OUTER JOIN 
 TBL020 with(nolock) RIGHT OUTER JOIN 
 TBL022 with(nolock) ON TBL020.CardGuide = TBL022.MainGuide ON TBL011.BillGuide = TBL022.CardGuide LEFT OUTER JOIN 
 TBL001 with(nolock) RIGHT OUTER JOIN 
 TBL012 with(nolock) LEFT OUTER JOIN 
 TBL004 TBL004_1 with(nolock) ON TBL012.ContraAccount = TBL004_1.CardGuide ON TBL001.CardGuide = TBL012.CurrencyGuide LEFT OUTER JOIN 
 TBL004 with(nolock) ON TBL012.AccountGuide = TBL004.CardGuide ON TBL011.CardGuide = TBL012.MainGuide
GO
/****** Object:  View [dbo].[Qry013]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry013] As SELECT     Qry012.*,TBL016.AgentName,TBL016.LatinName As AgentLatinName, TBL005.CardCode AS CostCenterCode, TBL005.CostCenter AS CostCenterName, TBL049.ProjectName, 
 TBL049.CardCode AS ProjectCode, TBL050.BronchName AS BranchName, TBL050.CardCode AS BranchCode 
 ,c1.CardName As Category01Name ,c2.CardName As Category02Name ,c3.CardName As Category03Name ,c4.CardName As Category04Name ,c5.CardName As Category05Name 
 FROM Qry012 with(nolock) LEFT OUTER JOIN 
 dbo.TBL081 c1 with(nolock) ON dbo.Qry012.Category01 = c1.CardGuide LEFT OUTER JOIN 
 dbo.TBL081 c2 with(nolock) ON dbo.Qry012.Category02 = c2.CardGuide LEFT OUTER JOIN 
 dbo.TBL081 c3 with(nolock) ON dbo.Qry012.Category03 = c3.CardGuide LEFT OUTER JOIN 
 dbo.TBL081 c4 with(nolock) ON dbo.Qry012.Category04 = c4.CardGuide LEFT OUTER JOIN 
 dbo.TBL081 c5 with(nolock) ON dbo.Qry012.Category05 = c5.CardGuide LEFT OUTER JOIN 
 TBL016 with(nolock) ON Qry012.AgentGuide = TBL016.CardGuide LEFT OUTER JOIN 
 TBL050 with(nolock) ON Qry012.Branch = TBL050.CardGuide LEFT OUTER JOIN 
 TBL049 with(nolock) ON Qry012.Project = TBL049.CardGuide LEFT OUTER JOIN 
 TBL005 with(nolock) ON Qry012.CostCenter = TBL005.CardGuide
GO
/****** Object:  View [dbo].[Qry058]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry058] As SELECT     Qry013.*, isnull(TBL045.GroupGuide, TBL070.GroupGuide) AS GroupGuide, TBL045.BrowsingPosted, 
                       TBL045.BrowsingUnPosted 
 FROM         Qry013 LEFT OUTER JOIN 
                       TBL045 with (nolock) ON Qry013.SourceType = TBL045.CardGuide LEFT OUTER JOIN 
                       TBL070 with (nolock) ON Qry013.SourceType = TBL070.CardGuide 
 WHERE     (Qry013.Posted = 1) AND (TBL045.BrowsingPosted >= Qry013.EntrySecurity) OR 
                       (Qry013.Posted = 0) AND (TBL045.BrowsingUnPosted >= Qry013.EntrySecurity) OR 
                       (Qry013.Posted = 1) AND (TBL070.BrowsingPosted >= Qry013.EntrySecurity) OR 
                       (Qry013.Posted = 0) AND (TBL070.BrowsingUnPosted >= Qry013.EntrySecurity)
GO
/****** Object:  View [dbo].[Qry023]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry023] As SELECT     *, MONTH(EntryDate) AS InMonth,Str( datepart(wk, EntryDate)- datepart(wk,dateadd(m, DATEDIFF(M, 0, EntryDate), 0)) + 1,1) AS InWeak,Year(EntryDate) As InYear, DATEPART(dy, EntryDate) AS InDay,Convert(int,((MONTH(EntryDate)-1)/6)+1) As InHalf,Convert(int,((MONTH(EntryDate)-1)/3)+1) As InQuarter 
 FROM         Qry013
GO
/****** Object:  View [dbo].[Grp003Qry001]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry001] As Select a.*,b.CardCode AS ClosingAccountCode, b.ClosingAccountName, b.ClosingAccountLatinName,a.CardCode+'-'+ a.LatinName As LatinAccount,IsNull(c.SonsCount,0) As SonsCount From 
 (Select a.* From 
 (Select 0 As TypeID,CheckAccounts From TBL042 Where CardGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') c 
 Inner Join 
 TBL004 a On c.TypeID=0 
 Left Join (Select AccountGuide From TBL133 Where AccountGuide Is Not Null And MainGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac')b 
 On ((a.CardGuide=b.AccountGuide And a.MainAccount Is Null) Or a.MainAccount=b.AccountGuide) 
 Where a.NotActive=0 And (c.CheckAccounts Is Null Or c.CheckAccounts=0 Or b.AccountGuide Is Not Null))a 
 Left Join TBL002 b On a.ClosingAccount=b.CardGuide 
 Left Join (Select MainAccount,Count(*) As SonsCount From TBL004 Where MainAccount Is Not Null Group By MainAccount) c On a.CardGuide=c.MainAccount
GO
/****** Object:  View [dbo].[Grp003Qry010]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry010] As SELECT     a.ID, a.CardGuide, a.NotActive, a.CardCode, a.AccountName, a.MainAccount, a.LatinName, a.SonsCount, 
 a.ClosingAccount, a.Security, COUNT(TBL012.ID) + COUNT(TBL016.ID) AS UsedCount 
 FROM         Grp003Qry001 a LEFT OUTER JOIN 
 TBL016 ON a.CardGuide = TBL016.AccountID LEFT OUTER JOIN 
 TBL012 ON a.CardGuide = TBL012.AccountGuide 
 GROUP BY a.ID, a.CardGuide, a.NotActive, a.CardCode, a.AccountName, a.MainAccount, a.LatinName, a.SonsCount,  
 a.ClosingAccount, a.Security
GO
/****** Object:  View [dbo].[Grp003Qry002]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry002] As Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AccountGuide From TBL012 with(nolock) Left Join TBL011 with(nolock) 
 On TBL012.MainGuide=TBL011.CardGuide 
 Left Join (Select 0 As TypeID,SeparateGroup From TBL042 Where CardGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') c On c.TypeID=0 
 Where TBL011.Posted>0 And (c.SeparateGroup=0 Or TBL011.ByGroup='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') 
 Group By AccountGuide
GO
/****** Object:  View [dbo].[Grp003Qry011]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry011] As SELECT     a.*,c.Debit-c.Credit As Balance, dbo.TBL004.CardCode AS MainAccountCode, dbo.TBL004.AccountName AS MainAccountName 
 FROM          Grp003Qry001 a  LEFT OUTER JOIN 
                       dbo.TBL004 ON a.MainAccount = dbo.TBL004.CardGuide 
                       LEFT OUTER JOIN Grp003Qry002 c ON c.AccountGuide = a.CardGuide 
 WHERE     (a.SonsCount = 0)
GO
/****** Object:  View [dbo].[Grp003Qry087]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry087] As SELECT     a.CardCode, a.AccountName, a.LatinName, a.SonsCount, TBL011.EntryNumber, TBL010.BondNumber, 
                       TBL009.EntryName, TBL009.EntryLatinName, TBL022.BillNumber, TBL020.InvoiceName, TBL020.LatinName AS InvoiceLatinName 
 FROM         TBL010 LEFT OUTER JOIN 
                       TBL009 ON TBL010.MainGuide = TBL009.CardGuide RIGHT OUTER JOIN 
                       TBL022 LEFT OUTER JOIN 
                       TBL020 ON TBL022.MainGuide = TBL020.CardGuide RIGHT OUTER JOIN 
                       TBL011 ON TBL022.CardGuide = TBL011.BillGuide ON TBL010.CardGuide = TBL011.BondGuide RIGHT OUTER JOIN 
                       Grp003Qry001 a INNER JOIN 
                       TBL012 ON a.CardGuide = TBL012.AccountGuide ON TBL011.CardGuide = TBL012.MainGuide 
 WHERE     (a.SonsCount > 0) 
 GROUP BY a.CardCode, a.AccountName, a.LatinName, a.SonsCount, TBL011.EntryNumber, TBL010.BondNumber,  
                       TBL009.EntryName, TBL009.EntryLatinName, TBL022.BillNumber, TBL020.InvoiceName, TBL020.LatinName
GO
/****** Object:  View [dbo].[Grp003Qry003]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry003] As Select a.*,b.CardCode AS ClosingAccountCode, b.ClosingAccountName, b.ClosingAccountLatinName,a.CardCode+'-'+ a.LatinName As LatinAccount,IsNull(c.SonsCount,0) As SonsCount From 
 (Select a.* From 
 (Select 0 As TypeID,CheckAccounts From TBL042 Where CardGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') c 
 Inner Join 
 TBL004 a On c.TypeID=0 
 Left Join (Select MainAccount From TBL004 Group By MainAccount) n On a.CardGuide=n.MainAccount 
 Left Join (Select AccountGuide From TBL133 Where AccountGuide Is Not Null And MainGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac')b 
 On ((a.MainAccount=b.AccountGuide And n.MainAccount Is Null) Or (a.CardGuide=b.AccountGuide)) 
 Where (c.CheckAccounts Is Null Or c.CheckAccounts=0 Or b.AccountGuide Is Not Null))a 
 Left Join TBL002 b On a.ClosingAccount=b.CardGuide 
 Left Join (Select MainAccount,Count(*) As SonsCount From TBL004 Where MainAccount Is Not Null Group By MainAccount) c On a.CardGuide=c.MainAccount
GO
/****** Object:  View [dbo].[Grp003Qry174]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry174] As SELECT a.*, c.Debit-c.Credit As Balance, b.CardCode AS MainAccountCode, b.AccountName AS MainAccountName 
 FROM Grp003Qry003 a LEFT JOIN TBL004 b ON a.MainAccount = b.CardGuide
 LEFT JOIN Grp003Qry002 c ON a.CardGuide = c.AccountGuide 
GO
/****** Object:  View [dbo].[Qry151]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry151] As SELECT     TBL089.*, TBL016.AgentName, TBL016.CardNumber AS AgentNumber, TBL081.CardName AS Category01Name, 
                       TBL081.CardNumber AS Category01Number, TBL081_1.CardNumber AS Category02Number, TBL081_1.CardName AS Category02Name, 
                       TBL081_2.CardNumber AS Category03Number, TBL081_2.CardName AS Category03Name, TBL081_3.CardNumber AS Category04Number, 
                       TBL081_3.CardName AS Category04Name, TBL013.UserName 
 FROM         TBL081 RIGHT OUTER JOIN 
                       TBL081 TBL081_2 RIGHT OUTER JOIN 
                       TBL081 TBL081_3 RIGHT OUTER JOIN 
                       TBL013 RIGHT OUTER JOIN 
                       TBL089 ON TBL013.UsGuide = TBL089.UserGuide ON TBL081_3.CardGuide = TBL089.Category04 ON 
                       TBL081_2.CardGuide = TBL089.Category03 LEFT OUTER JOIN 
                       TBL081 TBL081_1 ON TBL089.Category02 = TBL081_1.CardGuide ON TBL081.CardGuide = TBL089.Category01 LEFT OUTER JOIN 
                       TBL016 ON TBL089.AgentGuide = TBL016.CardGuide
GO
/****** Object:  View [dbo].[Qry152]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry152] As SELECT MainGuide, COUNT(*) AS RelatedCount FROM TBL090 GROUP BY MainGuide
GO
/****** Object:  View [dbo].[Qry153]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry153] As SELECT     Qry151.*, Qry152.RelatedCount, TBL005.CardCode + N'-' + TBL005.CostCenter AS CostCenter_01 
 FROM         Qry151 LEFT OUTER JOIN 
                       TBL005 ON Qry151.CostCenter01 = TBL005.CardGuide LEFT OUTER JOIN 
                       Qry152 ON Qry151.CardGuide = Qry152.MainGuide
GO
/****** Object:  View [dbo].[Qry040]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry040] As Select * From TBL011 with (nolock) Where BillGuide Is Null And BondGuide Is Null
GO
/****** Object:  View [dbo].[Qry041]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry041] As SELECT     Qry040.CardGuide AS EntryGuide, TBL022.CardGuide AS BillGuide, TBL010.CardGuide AS BondGuide, TBL022.MainGuide AS BillTypeGuide,TBL022.TaxValue As POSTaxValueRate,TBL022.TaxValue*TBL022.Rate As POSTaxValue,  
                       TBL010.MainGuide AS BondTypeGuide, Qry040.ID AS EntryID, TBL022.ID AS BillID, TBL010.ID AS BondID, TBL022.BillDate,  
                       Qry040.EntryDate, TBL010.BondDate, TBL022.BillNumber, Qry040.EntryNumber, TBL010.BondNumber, Qry040.Posted AS EntryPosted,  
                       TBL022.Posted AS BillPosted, TBL010.Posted AS BondPosted, TBL010.Notes AS BondNotes, TBL010.Project AS BondProject,  
                       TBL010.Branch AS BondBranch, TBL010.CostCenter AS BondCostCenter, TBL010.Security AS BondSecurity, Qry040.Security AS EntrySecurity,  
                       Qry040.Project AS EntryProject, Qry040.Branch AS EntryBranch, Qry040.CostCenter AS EntryCostCenter, Qry040.Notes AS EntryNotes,  
                       TBL022.PayMethod, TBL022.Notes AS BillNotes, TBL022.AgentGuide, TBL022.PostToAccount AS BillAccount, TBL022.CommissionAccount,  
                       TBL022.CreditCard, TBL022.Paid, TBL022.Security AS BillSecurity, TBL022.DownPayment*TBL022.Rate As DownPayment, TBL009.EntryName, TBL009.EntryLatinName,  
                       TBL020.InvoiceName, TBL020.LatinName, TBL020.InvoiceMovementSide, isnull(isnull(TBL022.CardGuide,  
                       TBL010.CardGuide), Qry040.CardGuide) AS SourceGuide, isnull(isnull(TBL022.MainGuide, TBL010.MainGuide),  
                       '00000000-0000-0000-0000-000000000000') AS SourceTypeGuide, dbo.IFNullNumber(dbo.IFNullNumber(TBL022.ID, TBL010.ID), Qry040.ID) AS ID,  
                       dbo.IFNullDate(dbo.IFNullDate(TBL022.BillDate, dbo.IFNullDate(TBL038.CollectDate,TBL010.BondDate)), Qry040.EntryDate) AS InDate , dbo.IFNullString(TBL020.InvoiceName,  
                       TBL009.EntryName) AS SourceName, dbo.IFNullString(TBL020.LatinName, TBL009.EntryLatinName) AS SourceLatinName,  
                       isnull(TBL010.Project, Qry040.Project) AS Project, isnull(TBL022.CostCenter, isnull(TBL010.CostCenter,  
                       Qry040.CostCenter)) AS CostCenter, isnull(TBL010.Branch, Qry040.Branch) AS Branch, TBL012.AccountGuide AS EntryAccount,  
                       TBL012.Debit AS EntryDebit, TBL012.Credit AS EntryCredit, TBL012.DebitRate AS EntryDebitRate, TBL012.CreditRate AS EntryCreditRate,  
                       TBL012.ContraAccount AS EntryContraAccount, TBL012.Description AS EntryDescription, TBL012.Checked,  
                       TBL012.CurrencyGuide AS EntryCurrencyGuide, TBL038.AccountGuide AS BondAccount, TBL038.CurrencyGuide AS BondCurrencyGuide,  
                       TBL038.Debit AS BondDebit, TBL038.Credit AS BondCredit, TBL038.DebitRate AS BondDebitRate, TBL038.CreditRate AS BondCreditRate,  
                       TBL038.ContraAccount AS BondContraAccount, TBL038.Notes AS BondRatedNote, isnull(isnull(TBL022.PostToAccount,  
                       TBL038.AccountGuide), TBL012.AccountGuide) AS Account, TBL022.CostCenter AS BillCostCenter, TBL022.BillNotes2, TBL022.BillNotes3,  
                       TBL022.BillNotes4, TBL022.BillNotes5, TBL009.BondType,TBL038.CollectDate, TBL038.Collected,TBL022.Rate As BillRate, 
                       ISNULL(ISNULL(TBL022.CurrencyGuide, TBL038.CurrencyGuide), TBL012.CurrencyGuide) AS CrrGuide,IsNull( ISNULL(TBL022.Rate, (TBL038.DebitRate+TBL038.CreditRate)/(TBL038.Debit+TBL038.Credit)), (TBL012.DebitRate+TBL012.CreditRate)/(TBL012.Debit+TBL012.Credit)) AS CrrRate 
 FROM         TBL009 with (nolock) RIGHT OUTER JOIN 
                       TBL038 with (nolock) RIGHT OUTER JOIN 
                       TBL010 with (nolock) ON TBL038.MainGuide = TBL010.CardGuide ON TBL009.CardGuide = TBL010.MainGuide FULL OUTER JOIN 
                       TBL020 with (nolock) RIGHT OUTER JOIN 
                       TBL022 with (nolock) ON TBL020.CardGuide = TBL022.MainGuide FULL OUTER JOIN 
                       TBL012 with (nolock) RIGHT OUTER JOIN 
                       Qry040 ON TBL012.MainGuide = Qry040.CardGuide ON TBL022.MainGuide = Qry040.CardGuide ON  
                       TBL010.MainGuide = Qry040.CardGuide
GO
/****** Object:  View [dbo].[Qry043]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry043] As SELECT     Qry041.*, isnull(Qry017.TotalValue,0) - isnull(Qry017.DiscountValue,0) + isnull(Qry017.ExtraValue,0) + isnull(Qry016.BillExtras,0) 
                       - isnull(Qry016.BillDiscounts,0) AS BillTotal 
 FROM         Qry041 LEFT OUTER JOIN 
                       Qry016 ON Qry041.BillGuide = Qry016.MainGuide LEFT OUTER JOIN 
                       Qry017 ON Qry041.BillGuide = Qry017.BillGuide
GO
/****** Object:  View [dbo].[Grp003Qry030]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry030] As SELECT     a.*,Null As Balance, dbo.TBL004.CardCode AS MainAccountCode, dbo.TBL004.AccountName AS MainAccountName 
 FROM         Grp003Qry010 a LEFT OUTER JOIN 
                       dbo.TBL004 ON a.MainAccount = dbo.TBL004.CardGuide 
 WHERE     (a.UsedCount = 0)
GO
/****** Object:  View [dbo].[Qry026]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry026] As SELECT TBL024.MainGuide,(CASE a.TotalIncludeTax When 0 Then SUM(TBL024.ExtraToSave) / TBL022.Rate Else 0 End) AS BillExtras, SUM(TBL024.DiscountToSave) / TBL022.Rate AS BillDiscounts, 
 MIN(TBL004.Security) AS AccountSecurity 
 FROM 
 TBL024 with (nolock) LEFT OUTER JOIN 
 TBL022 with (nolock) ON TBL024.MainGuide = TBL022.CardGuide LEFT OUTER JOIN 
 TBL004 with (nolock) ON TBL024.AccountID = TBL004.CardGuide 
 Inner Join TBL020 a with (nolock) On TBL022.MainGuide=a.CardGuide 
 GROUP BY TBL024.MainGuide,a.TotalIncludeTax, TBL022.Rate
GO
/****** Object:  View [dbo].[Qry032]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry032] As Select MainGuide,Count(*) As RecordsCount From TBL012 with (nolock) Group By MainGuide
GO
/****** Object:  View [dbo].[Qry034]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry034] As SELECT TBL011.InsertedIn,TBL012.ID, TBL012.AccountGuide, TBL004.AccountName, TBL022.PayMethod,TBL004.CardCode AS AccountCode, 
	TBL004.CardCode + '-' + TBL004.AccountName AS Account, TBL004.LatinName AS AccountLatinName, TBL012.CurrencyGuide,  
	TBL012.Description, TBL001.CurrencyName, TBL001.LatinName AS CurrencyLatinName, TBL001.Partity, TBL012.Debit, TBL012.Credit,  
	TBL012.DebitRate, TBL012.CreditRate, (TBL012.Debit + TBL012.Credit) / (TBL012.CreditRate + TBL012.DebitRate) AS Rate,  
	TBL012.ContraAccount AS ContraAccountGuide, TBL004_1.CardCode AS ContraAccountCode, TBL004_1.AccountName AS ContraAccountName,  
	TBL004_1.CardCode + '-' + TBL004_1.AccountName AS ContraAccount, TBL004_1.LatinName AS ContraAccountLatinName, TBL011.ID AS EntryID,  
	TBL011.CardGuide AS EntryGuide, TBL011.EntryNumber, TBL011.Posted, TBL012.MainGuide, TBL011.EntryDate, TBL011.DoneIn,  
	TBL011.BillGuide, TBL022.MainGuide AS BillTypeGuide, TBL022.BillNumber, TBL011.BondGuide, TBL010.BondNumber,  
	isnull(isnull(TBL010.MainGuide, TBL022.MainGuide), '00000000-0000-0000-0000-000000000000') AS SourceType,  
	TBL004.Security AS AccountSecurity, TBL011.Security AS EntrySecurity, TBL010.Security AS BondSecurity, TBL022.Security AS BillSecurity,  
	TBL004_1.Security AS ContraAccountSecurity, Qry026.BillDiscounts, Qry026.BillExtras, Qry017.TotalValue, Qry017.DiscountValue,  
	Qry017.ExtraValue, isnull(Qry017.TotalValue,0) + isnull(Qry026.BillExtras,0) + isnull(Qry017.ExtraValue,0) - isnull(Qry026.BillDiscounts,0)  
	- isnull(Qry017.DiscountValue,0)+isnull(Qry017.ItemTax,0) AS BillTotalValue, TBL011.Project, TBL011.Branch, TBL011.CostCenter, TBL005.CardCode AS CostCenterCode,  
	TBL005.CostCenter AS CostCenterName, TBL049.CardCode AS ProjectCode, TBL049.ProjectName, TBL050.CardCode AS BronchCode,  
	TBL050.BronchName, isnull(isnull(TBL011.BillGuide, TBL011.BondGuide), TBL011.CardGuide) AS SourceGuide,TBL022.TaxValue As POSTaxValueRate,TBL022.TaxValue*TBL022.Rate As POSTaxValue,  
	TBL022.PostToAccount, TBL004_2.CardCode AS BillAccountCode, TBL004_2.AccountName AS BillAccountName, TBL004_2.LatinName AS BillAccountLatinName,  
	TBL020.InvoiceMovementSide , TBL022.DownPayment*TBL022.Rate As DownPayment, TBL022.BillNotes2, TBL022.BillNotes3,Qry032.RecordsCount, 
	IsNull(ISNULL(TBL022.InsertedIn,TBL010.InsertedIn),TBL011.InsertedIn)As CardInsertedIn 
 FROM	Qry026 RIGHT OUTER JOIN 
	Qry017 RIGHT OUTER JOIN 
	TBL022 with (nolock) LEFT OUTER JOIN 
	TBL020 with (nolock) ON TBL022.MainGuide = TBL020.CardGuide LEFT OUTER JOIN 
	TBL004 TBL004_2 with (nolock) ON TBL022.PostToAccount = TBL004_2.CardGuide ON Qry017.BillGuide = TBL022.CardGuide ON  
	Qry026.MainGuide = TBL022.CardGuide FULL OUTER JOIN 
	TBL001 with (nolock) RIGHT OUTER JOIN 
	TBL004 TBL004_1 with (nolock) RIGHT OUTER JOIN 
	TBL012 with (nolock) ON TBL004_1.CardGuide = TBL012.ContraAccount LEFT OUTER JOIN 
	TBL004 with (nolock) ON TBL012.AccountGuide = TBL004.CardGuide ON TBL001.CardGuide = TBL012.CurrencyGuide FULL OUTER JOIN 
	TBL049 with (nolock) FULL OUTER JOIN 
	TBL011 with (nolock) FULL OUTER JOIN 
	TBL050 with (nolock) ON TBL011.Branch = TBL050.CardGuide ON TBL049.CardGuide = TBL011.Project FULL OUTER JOIN 
	TBL005 with (nolock) ON TBL011.CostCenter = TBL005.CardGuide ON TBL012.MainGuide = TBL011.CardGuide ON  
	TBL022.CardGuide = TBL011.BillGuide FULL OUTER JOIN 
	TBL010 ON TBL011.BondGuide = TBL010.CardGuide Left Join Qry032 On TBL011.CardGuide=Qry032.MainGuide 
GO
/****** Object:  View [dbo].[Grp003Qry187]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry187] As Select a.MainGuide As BondGuide, b.* From TBL095 a Inner Join Grp003Qry011 b On a.AccountGuide=b.MainAccount
GO
/****** Object:  View [dbo].[Qry115]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry115] As SELECT     Qry019.* 
 FROM         TBL023 INNER JOIN 
                       TBL022 ON TBL023.MainGuide = TBL022.CardGuide INNER JOIN 
                       TBL020 ON TBL022.MainGuide = TBL020.CardGuide LEFT OUTER JOIN 
                       Qry019 ON TBL023.RowGuide = Qry019.RowGuide 
 WHERE     (TBL020.AffectLastPurchasePrice > 0 And Qry019.Posted=1)
GO
/****** Object:  View [dbo].[Qry091]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry091] As SELECT     TBL007.*, Qry022.ItemNetTotal / Qry022.TotalQuantity AS CostAverage, TBL006.GroupName, TBL006.LatinName AS GroupLatinName, 
                       TBL006.CardCode AS GroupCode, TBL006.CardCode + '-' + TBL006.GroupName AS ItemGroup , TBL006.Security AS GroupSecurity
 FROM         TBL007 with (nolock) LEFT OUTER JOIN 
                       TBL006 with (nolock) ON TBL007.GroupGuid = TBL006.CardGuide LEFT OUTER JOIN 
                       Qry022 ON TBL007.CardGuide = Qry022.ProductGuide
GO
/****** Object:  View [dbo].[Qry036]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry036] As SELECT     Qry023.*, Qry023.InWeak + Qry023.InMonth * 10 + Qry023.InYear * 1000 AS YearMonthWeak, 
                       Qry023.InMonth + Qry023.InYear * 100 AS YearMonth, STR(Qry023.InWeak, 1) + '-' + STR(Qry023.InMonth, LEN(Qry023.InMonth))  
                       + '-' + STR(Qry023.InYear, 4) AS YearMonthWeakView, STR(Qry023.InMonth, LEN(Qry023.InMonth)) + '-' + STR(Qry023.InYear, 4)  
                       AS YearMonthView, isnull(isnull(Qry023.BondGuide, Qry023.BillGuide),  
                       '00000000-0000-0000-0000-000000000000') AS SourceGuide,str(Qry023.InYear,4)+'-'+Convert(varchar(2),Qry023.InHalf)As InHalfView,str(Qry023.InYear,4)+'-'+Convert(varchar(2),Qry023.InQuarter)As InQuarterView 
 FROM         Qry023 LEFT OUTER JOIN 
                       TBL020 with (nolock) ON Qry023.BillTypeGuide = TBL020.CardGuide
GO
/****** Object:  View [dbo].[Qry024]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry024] As SELECT     TBL012.ID,TBL012.CalcDate,TBL012.MainGuide,TBL012.AccountGuide,TBL012.CurrencyGuide,TBL012.Debit,TBL012.Credit, 
 TBL012.DebitRate,TBL012.CreditRate,TBL012.EntryDetailsNotes2,TBL012.EntryDetailsNotes3,TBL012.ContraAccount, 
 TBL012.CostCenter,TBL012.Description,IsNull(TBL012.Project,TBL011.Project)As Project,IsNull(TBL012.Branch,TBL011.Branch)As Branch,TBL012.Checked,TBL012.Category01, 
 TBL012.Category02,TBL012.Category03,TBL012.Category04,TBL012.Category05,TBL012.NoMerge,TBL012.RowGuide, TBL011.EntryNumber, TBL011.Posted, isnull(isnull(TBL010.MainGuide, TBL022.MainGuide), 
 '00000000-0000-0000-0000-000000000000') AS SourceGuide, TBL011.EntryDate, TBL011.Security AS EntrySecurity,  
 TBL004.Security AS AccountSecurity, TBL022.MainGuide AS BillType, TBL010.MainGuide AS BondType, TBL022.Security AS BillSecurity,  
 TBL010.Security AS BondSecurity ,TBL004.ClosingAccount,TBL011.Notes, isnull(TBL012.CostCenter, TBL011.CostCenter) AS EntryCostCenter,TBL004.MainAccount 
 FROM         TBL022 with (nolock) RIGHT OUTER JOIN 
 TBL011 with (nolock) LEFT OUTER JOIN 
 TBL010 with (nolock) ON TBL011.BondGuide = TBL010.CardGuide RIGHT OUTER JOIN 
 TBL012 with (nolock) LEFT OUTER JOIN 
 TBL004 with (nolock) ON TBL012.AccountGuide = TBL004.CardGuide ON TBL011.CardGuide = TBL012.MainGuide ON  
 TBL022.CardGuide = TBL011.BillGuide
GO
/****** Object:  View [dbo].[Qry183]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry183] As Select Qry024.* ,TBL001.CurrencyName, TBL009.EntryName,TBL009.EntryLatinName,TBL020.InvoiceName,TBL020.LatinName As InvoiceLatinName From 
 Qry024 Left Join TBL009 On TBL009.CardGuide=Qry024.BondType 
 Left Join TBL001 On TBL001.CardGuide = Qry024.CurrencyGuide 
 Left Join TBL020 On TBL020.CardGuide = Qry024.BillType
GO
/****** Object:  View [dbo].[Grp003Qry239]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry239] As Select a.* From Grp003Qry228 a Left Join TBL008 b On a.CardGuide=b.MainWarehouse Where a.NotActive=0 And b.ID Is Null
GO
/****** Object:  View [dbo].[Qry027]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry027] As SELECT     TBL005.ID, TBL005.CardGuide, TBL005.CardCode, TBL005.Security, TBL005.CostCenter, TBL005.MainCostCenter, COUNT(TBL005_1.ID) 
                       AS SonsCount, TBL005.LatinName ,TBL005.CardCode+'-'+TBL005.LatinName As LatinCostCenter 
 FROM         TBL005 with (nolock) LEFT OUTER JOIN 
                       TBL005 TBL005_1 with (nolock) ON TBL005.CardGuide = TBL005_1.MainCostCenter 
 GROUP BY TBL005.ID, TBL005.CardGuide, TBL005.CardCode, TBL005.Security, TBL005.CostCenter, TBL005.MainCostCenter, TBL005.LatinName
GO
/****** Object:  View [dbo].[Qry031]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry031] As Select * From Qry027 Where SonsCount=0
GO
/****** Object:  View [dbo].[Qry028]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry028] As SELECT     TBL049.ID, TBL049.CardGuide, TBL049.CardCode, TBL049.Security, TBL049.ProjectName, TBL049.MainProject, COUNT(TBL049_1.ID)  
                       AS SonsCount 
 FROM         TBL049 with (nolock) LEFT OUTER JOIN 
                       TBL049 TBL049_1 with (nolock) ON TBL049.CardGuide = TBL049_1.MainProject 
 GROUP BY TBL049.ID, TBL049.CardGuide, TBL049.CardCode, TBL049.Security, TBL049.ProjectName, TBL049.MainProject
GO
/****** Object:  View [dbo].[Qry150]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry150] As Select * From Qry028 Where SonsCount=0
GO
/****** Object:  View [dbo].[Qry029]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry029] As SELECT     TBL050.ID, TBL050.CardGuide, TBL050.CardCode, TBL050.Security, TBL050.BronchName, TBL050.MainBronch, COUNT(TBL050_1.ID)  
                       AS SonsCount 
 FROM         TBL050 with (nolock) LEFT OUTER JOIN 
                       TBL050 TBL050_1 with (nolock) ON TBL050.CardGuide = TBL050_1.MainBronch 
 GROUP BY TBL050.ID, TBL050.CardGuide, TBL050.CardCode, TBL050.Security, TBL050.BronchName, TBL050.MainBronch
GO
/****** Object:  View [dbo].[Qry033]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry033] As Select * From Qry029 Where SonsCount=0
GO
/****** Object:  View [dbo].[Qry164]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry164] As Select MainGuide,Sum(TotalValue) As TotalValue, Sum(DiscountValue) As DiscountValue, Sum(ExtraValue) As ExtraValue, Sum(TaxValue) As TaxValue From TBL023 Group By MainGuide
GO
/****** Object:  View [dbo].[Qry165]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry165] As SELECT TBL024.MainGuide,TBL022.Rate, TBL022.CurrencyGuide, TBL024.AccountID, TBL024.ContraAccount, TBL024.CostCenter, 
 (CASE When TBL022.CurrencyGuide=TBL024.CurrencyGuide THEN TBL024.Discount ELSE TBL024.DiscountToSave/TBL022.Rate END)AS Discount, 
 (CASE When TBL022.CurrencyGuide=TBL024.CurrencyGuide THEN TBL024.Extra ELSE TBL024.ExtraToSave/TBL022.Rate END)AS Extra, 
 TBL024.DiscountToSave, TBL024.ExtraToSave, TBL024.Description 
 FROM         TBL022 RIGHT OUTER JOIN 
                       TBL024 ON TBL022.CardGuide = TBL024.MainGuide
GO
/****** Object:  View [dbo].[Qry166]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry166] As SELECT MainGuide, SUM(Discount) AS Discount, SUM(Extra) AS Extra, SUM(DiscountToSave) AS DiscountToSave, SUM(ExtraToSave) AS ExtraToSave FROM Qry165 GROUP BY MainGuide
GO
/****** Object:  View [dbo].[Qry167]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry167] As SELECT TBL022.MainGuide, TBL022.ID, TBL022.CardGuide, TBL022.StoreGuide, TBL022.BillDate, TBL022.CurrencyGuide, TBL022.BillNumber,
 dbo.TBL011.CardGuide As EntryGuide,dbo.TBL011.EntryNumber As EntryNumber, TBL022.ProductsAccount
 ,(case TBL020.TotalIncludeTax when 0 then TBL022.TaxValue else 0 end) As POSTaxValueRate
 ,(case TBL020.TotalIncludeTax when 0 then TBL022.TaxValue*TBL022.Rate else 0 end) As POSTaxValue
 ,TBL022.Rate, TBL022.AgentGuide, TBL022.PostToAccount, TBL022.Security, TBL022.Posted, TBL022.CustomerName
 ,TBL022.ReturnDate, TBL022.DownPayment*TBL022.Rate As DownPayment, TBL022.CostCenter, TBL022.Project, TBL022.Branch, TBL022.CashAccount, TBL022.Notes
 ,(isnull(Qry164.TotalValue,0)-isnull(Qry164.DiscountValue,0)+isnull(Qry164.ExtraValue,0)+isnull((case TBL020.TotalIncludeTax when 0 then Qry164.TaxValue else 0 end),0)-isnull(Qry166.Discount,0)
 +(case when TBL022.TaxValue=0 Or TBL020.BillType=1 Then isnull(Qry166.Extra,0) else 0 end))-TBL022.DownPayment As ValueRate
 ,((TBL022.Rate*isnull(Qry164.TotalValue,0))-(TBL022.Rate*isnull(Qry164.DiscountValue,0))+(TBL022.Rate*isnull(Qry164.ExtraValue,0))+((case TBL020.TotalIncludeTax when 0 then TBL022.Rate*isnull(Qry164.TaxValue,0) else 0 end))-isnull(Qry166.DiscountToSave,0)
 +(case when TBL022.TaxValue=0 Or TBL020.BillType=1 Then isnull(Qry166.ExtraToSave,0) else 0 end))-(TBL022.DownPayment*TBL022.Rate)As Value
 FROM TBL022
 Inner Join TBL020 On TBL022.MainGuide=TBL020.CardGuide
 LEFT JOIN Qry166 ON TBL022.CardGuide = Qry166.MainGuide
 LEFT JOIN Qry164 ON TBL022.CardGuide = Qry164.MainGuide
 LEFT JOIN dbo.TBL011 ON dbo.TBL011.BillGuide = dbo.TBL022.CardGuide
GO
/****** Object:  View [dbo].[Qry188]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry188] As Select * From Qry030 Where SonsCount>0
GO
/****** Object:  View [dbo].[Grp004Qry001]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry001] As Select a.*,b.CardCode AS ClosingAccountCode, b.ClosingAccountName, b.ClosingAccountLatinName,a.CardCode+'-'+ a.LatinName As LatinAccount,IsNull(c.SonsCount,0) As SonsCount From 
 (Select a.* From 
 (Select 0 As TypeID,CheckAccounts From TBL042 Where CardGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678') c 
 Inner Join 
 TBL004 a On c.TypeID=0 
 Left Join (Select AccountGuide From TBL133 Where AccountGuide Is Not Null And MainGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678')b 
 On ((a.CardGuide=b.AccountGuide And a.MainAccount Is Null) Or a.MainAccount=b.AccountGuide) 
 Where a.NotActive=0 And (c.CheckAccounts Is Null Or c.CheckAccounts=0 Or b.AccountGuide Is Not Null))a 
 Left Join TBL002 b On a.ClosingAccount=b.CardGuide 
 Left Join (Select MainAccount,Count(*) As SonsCount From TBL004 Where MainAccount Is Not Null Group By MainAccount) c On a.CardGuide=c.MainAccount
GO
/****** Object:  View [dbo].[Grp004Qry010]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry010] As SELECT     a.ID, a.CardGuide, a.NotActive, a.CardCode, a.AccountName, a.MainAccount, a.LatinName, a.SonsCount, 
 a.ClosingAccount, a.Security, COUNT(TBL012.ID) + COUNT(TBL016.ID) AS UsedCount 
 FROM         Grp004Qry001 a LEFT OUTER JOIN 
 TBL016 ON a.CardGuide = TBL016.AccountID LEFT OUTER JOIN 
 TBL012 ON a.CardGuide = TBL012.AccountGuide 
 GROUP BY a.ID, a.CardGuide, a.NotActive, a.CardCode, a.AccountName, a.MainAccount, a.LatinName, a.SonsCount,  
 a.ClosingAccount, a.Security
GO
/****** Object:  View [dbo].[Grp004Qry002]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry002] As Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AccountGuide From TBL012 with(nolock) Left Join TBL011 with(nolock) 
 On TBL012.MainGuide=TBL011.CardGuide 
 Left Join (Select 0 As TypeID,SeparateGroup From TBL042 Where CardGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678') c On c.TypeID=0 
 Where TBL011.Posted>0 And (c.SeparateGroup=0 Or TBL011.ByGroup='22cf4629-3349-4d5c-bc95-a40f8ffd7678') 
 Group By AccountGuide
GO
/****** Object:  View [dbo].[Grp004Qry011]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry011] As SELECT     a.*,c.Debit-c.Credit As Balance, dbo.TBL004.CardCode AS MainAccountCode, dbo.TBL004.AccountName AS MainAccountName 
 FROM          Grp004Qry001 a  LEFT OUTER JOIN 
                       dbo.TBL004 ON a.MainAccount = dbo.TBL004.CardGuide 
                       LEFT OUTER JOIN Grp004Qry002 c ON c.AccountGuide = a.CardGuide 
 WHERE     (a.SonsCount = 0)
GO
/****** Object:  View [dbo].[Grp004Qry087]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry087] As SELECT     a.CardCode, a.AccountName, a.LatinName, a.SonsCount, TBL011.EntryNumber, TBL010.BondNumber, 
                       TBL009.EntryName, TBL009.EntryLatinName, TBL022.BillNumber, TBL020.InvoiceName, TBL020.LatinName AS InvoiceLatinName 
 FROM         TBL010 LEFT OUTER JOIN 
                       TBL009 ON TBL010.MainGuide = TBL009.CardGuide RIGHT OUTER JOIN 
                       TBL022 LEFT OUTER JOIN 
                       TBL020 ON TBL022.MainGuide = TBL020.CardGuide RIGHT OUTER JOIN 
                       TBL011 ON TBL022.CardGuide = TBL011.BillGuide ON TBL010.CardGuide = TBL011.BondGuide RIGHT OUTER JOIN 
                       Grp004Qry001 a INNER JOIN 
                       TBL012 ON a.CardGuide = TBL012.AccountGuide ON TBL011.CardGuide = TBL012.MainGuide 
 WHERE     (a.SonsCount > 0) 
 GROUP BY a.CardCode, a.AccountName, a.LatinName, a.SonsCount, TBL011.EntryNumber, TBL010.BondNumber,  
                       TBL009.EntryName, TBL009.EntryLatinName, TBL022.BillNumber, TBL020.InvoiceName, TBL020.LatinName
GO
/****** Object:  View [dbo].[Grp004Qry003]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry003] As Select a.*,b.CardCode AS ClosingAccountCode, b.ClosingAccountName, b.ClosingAccountLatinName,a.CardCode+'-'+ a.LatinName As LatinAccount,IsNull(c.SonsCount,0) As SonsCount From 
 (Select a.* From 
 (Select 0 As TypeID,CheckAccounts From TBL042 Where CardGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678') c 
 Inner Join 
 TBL004 a On c.TypeID=0 
 Left Join (Select MainAccount From TBL004 Group By MainAccount) n On a.CardGuide=n.MainAccount 
 Left Join (Select AccountGuide From TBL133 Where AccountGuide Is Not Null And MainGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678')b 
 On ((a.MainAccount=b.AccountGuide And n.MainAccount Is Null) Or (a.CardGuide=b.AccountGuide)) 
 Where (c.CheckAccounts Is Null Or c.CheckAccounts=0 Or b.AccountGuide Is Not Null))a 
 Left Join TBL002 b On a.ClosingAccount=b.CardGuide 
 Left Join (Select MainAccount,Count(*) As SonsCount From TBL004 Where MainAccount Is Not Null Group By MainAccount) c On a.CardGuide=c.MainAccount
GO
/****** Object:  View [dbo].[Grp004Qry174]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry174] As SELECT a.*, c.Debit-c.Credit As Balance, b.CardCode AS MainAccountCode, b.AccountName AS MainAccountName 
 FROM Grp004Qry003 a LEFT JOIN TBL004 b ON a.MainAccount = b.CardGuide
 LEFT JOIN Grp004Qry002 c ON a.CardGuide = c.AccountGuide 
GO
/****** Object:  View [dbo].[Qry168]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry168] As SELECT TBL020.InvoiceName, TBL020.LatinName, TBL020.InvoiceMovementSide, Qry167.MainGuide, Qry167.ID, Qry167.CardGuide
 ,Qry167.EntryGuide,Qry167.EntryNumber,Qry167.StoreGuide, Qry167.BillDate As InDate, Qry167.CurrencyGuide, Qry167.BillNumber As CardNumber, Qry167.Rate, Qry167.AgentGuide
 ,Qry167.PostToAccount As AccountGuide, Qry167.Security, Qry167.Posted, Qry167.CustomerName, Qry167.ReturnDate, Qry167.CostCenter
 ,Qry167.Project, Qry167.Branch, Qry167.Notes, Qry167.ProductsAccount
 ,(CASE When TBL020.InvoiceMovementSide<0 THEN Qry167.ValueRate ELSE 0 END)AS DebitRate
 ,(CASE When TBL020.InvoiceMovementSide>0 THEN Qry167.ValueRate ELSE 0 END)AS CreditRate
 ,(CASE When TBL020.InvoiceMovementSide<0 THEN Qry167.Value ELSE 0 END)AS Debit
 ,(CASE When TBL020.InvoiceMovementSide>0 THEN Qry167.Value ELSE 0 END)AS Credit
 FROM Qry167 LEFT OUTER JOIN
 TBL020 ON Qry167.MainGuide = TBL020.CardGuide
GO
/****** Object:  View [dbo].[Qry175]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry175] As SELECT     TBL020.InvoiceName, TBL020.LatinName, TBL020.InvoiceMovementSide, Qry167.MainGuide, Qry167.ID, Qry167.CardGuide, 
                       Qry167.StoreGuide, Qry167.BillDate As InDate, Qry167.CurrencyGuide, Qry167.BillNumber As CardNumber, Qry167.Rate, Qry167.AgentGuide, 
                       IsNull(Qry167.CashAccount,TBL020.CashAccount) As AccountGuide, Qry167.Security, Qry167.Posted, Qry167.CustomerName, Qry167.ReturnDate, Qry167.CostCenter, 
                       Qry167.Project, Qry167.Branch, Qry167.Notes, 
 (CASE When TBL020.InvoiceMovementSide<0 THEN Qry167.DownPayment ELSE 0 END)AS DebitRate,(CASE When TBL020.InvoiceMovementSide>0 THEN Qry167.DownPayment ELSE 0 END)AS CreditRate, 
 (CASE When TBL020.InvoiceMovementSide<0 THEN Qry167.DownPayment * Qry167.Rate ELSE 0 END)AS Debit,(CASE When TBL020.InvoiceMovementSide>0 THEN Qry167.DownPayment * Qry167.Rate ELSE 0 END)AS Credit 
 FROM         Qry167 LEFT OUTER JOIN 
                       TBL020 ON Qry167.MainGuide = TBL020.CardGuide
     Where Qry167.DownPayment>0
GO
/****** Object:  View [dbo].[Grp004Qry030]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry030] As SELECT     a.*,Null As Balance, dbo.TBL004.CardCode AS MainAccountCode, dbo.TBL004.AccountName AS MainAccountName 
 FROM         Grp004Qry010 a LEFT OUTER JOIN 
                       dbo.TBL004 ON a.MainAccount = dbo.TBL004.CardGuide 
 WHERE     (a.UsedCount = 0)
GO
/****** Object:  View [dbo].[Grp004Qry187]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry187] As Select a.MainGuide As BondGuide, b.* From TBL095 a Inner Join Grp004Qry011 b On a.AccountGuide=b.MainAccount
GO
/****** Object:  View [dbo].[Qry035]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry035] As Select * From TBL027 with (nolock) Where MainGuide='81DB777B-4961-4B52-A803-2C26CE84FC98'
GO
/****** Object:  View [dbo].[Qry092]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry092] As Select * From Qry035 Where Ready=0
GO
/****** Object:  View [dbo].[Qry051]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry051] As SELECT     TOP 100 PERCENT AccountGuide, AccountName, AccountCode, Account, EntryDate, EntryNumber, SUM(Debit) AS Debit, SUM(Credit) AS Credit, SUM(DebitRate) 
                       AS DebitRate, SUM(CreditRate) AS CreditRate, SUM(Debit - Credit) AS Balance, SUM(DebitRate - CreditRate) AS BalanceRate, CurrencyGuide, CurrencyName,  
                       BondGuide, BondNumber, BillGuide, BillNumber, EntryGuide, Project, Branch, CostCenter, ProjectCode, ProjectName, BranchCode, BranchName, CostCenterCode,  
                       CostCenterName, EntryName, EntryLatinName, InvoiceName, LatinName, CurrencyLatinName, SourceType, SourceGuide, Rate, EntrySecurity, BondSecurity,  
                       BillSecurity, Posted , BillNotes2, BillNotes3,EntryNote, AccountSecurity
 FROM         Qry036 
 GROUP BY AccountGuide, AccountName, AccountCode, Account, EntryDate, EntryNumber, CurrencyGuide, CurrencyName, BondGuide, BondNumber, BillGuide, BillNumber,  
                       EntryGuide, Project, Branch, CostCenter, ProjectCode, ProjectName, BranchCode, BranchName, CostCenterCode, CostCenterName, EntryName, EntryLatinName,  
                       InvoiceName, LatinName, CurrencyLatinName, SourceType, SourceGuide, Rate, EntrySecurity, BondSecurity, BillSecurity, Posted , BillNotes2, BillNotes3 ,EntryNote, AccountSecurity
 ORDER BY EntryDate, EntryNumber
GO
/****** Object:  View [dbo].[Qry042]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry042] As SELECT     Qry041.*, TBL005.CardCode AS CostCenterCode, TBL005.Security AS CostCenterSecurity, TBL005.CostCenter AS CostCenterName, 
                       TBL049.CardCode AS ProjectCode, TBL049.ProjectName, TBL049.Security AS ProjectSecurity, TBL050.CardCode AS BranchCode, 
                       TBL050.Security AS BranchSecurity, TBL050.BronchName AS BranchName, TBL001.CurrencyName, TBL001.LatinName AS CurrencyLatinName, 
                       TBL001.CurrencyShortcut 
 FROM         Qry041 LEFT OUTER JOIN 
                       TBL001 with (nolock) ON Qry041.CrrGuide = TBL001.CardGuide LEFT OUTER JOIN 
                       TBL050 with (nolock) ON Qry041.Branch = TBL050.CardGuide LEFT OUTER JOIN 
                       TBL049 with (nolock) ON Qry041.Project = TBL049.CardGuide LEFT OUTER JOIN 
                       TBL005 with (nolock) ON Qry041.CostCenter = TBL005.CardGuide
GO
/****** Object:  View [dbo].[Grp004Qry239]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry239] As Select a.* From Grp004Qry228 a Left Join TBL008 b On a.CardGuide=b.MainWarehouse Where a.NotActive=0 And b.ID Is Null
GO
/****** Object:  View [dbo].[CostQry200]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create view [dbo].[CostQry200] 
 as 
 Select * From TBL074 Where PriceType=200
GO
/****** Object:  View [dbo].[Grp001Qry025]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry025] As SELECT     TBL009.*, TBL045.BrowsingPosted, TBL045.InsertingPosted, TBL045.UpdatingPosted, TBL045.DeletingPosted, TBL045.PrintingPosted, 
                       TBL045.BrowsingUnPosted, TBL045.InsertingUnPosted, TBL045.UpdatingUnPosted, TBL045.DeletingUnPosted, TBL045.PrintingUnPosted,  
                       TBL045.GroupGuide,  
                       TBL045.BrowsingPosted + TBL045.InsertingPosted + TBL045.UpdatingPosted + TBL045.DeletingPosted + TBL045.PrintingPosted + TBL045.BrowsingUnPosted 
                        + TBL045.InsertingUnPosted + TBL045.UpdatingUnPosted + TBL045.DeletingUnPosted + TBL045.PrintingUnPosted AS AllowValue 
 FROM         TBL009 INNER JOIN 
                       TBL045 ON TBL009.CardGuide = TBL045.CardGuide Where TBL045.GroupGuide='fd70821f-164f-4e1a-992b-1129a071785b'
GO
/****** Object:  View [dbo].[Grp001Qry132]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry132] As Select b.AgentsGroupGuide,a.*,g.GroupName,g.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 (Select 0 As TypeID,CheckAgentsGroups From TBL042 Where CardGuide='fd70821f-164f-4e1a-992b-1129a071785b') c 
 Inner Join 
 TBL016 a On c.TypeID=0 
 Left Join TBL015 g On a.MainGroupGuide=g.CardGuide 
 Left Join (Select AgentsGroupGuide From TBL133 Where AgentsGroupGuide Is Not Null And MainGuide='fd70821f-164f-4e1a-992b-1129a071785b')b 
 On a.MainGroupGuide=b.AgentsGroupGuide 
 Left Join (Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AgentGuide From TBL012 Left Join TBL011 
 On TBL012.MainGuide=TBL011.CardGuide 
 Where TBL012.AgentGuide Is Not Null And TBL011.Posted>0 
 Group By TBL012.AgentGuide) e On a.CardGuide=e.AgentGuide 
 Where a.NotActive=0 And (c.CheckAgentsGroups Is Null Or c.CheckAgentsGroups=0 Or b.AgentsGroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp001Qry258]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp001Qry258] As Select a.MainGroupGuide As AgentsGroupGuide,a.*,g.GroupName,g.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 TBL016 a 
 Left Join TBL015 g On a.MainGroupGuide=g.CardGuide 
 Left Join (Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AccountGuide From TBL012 Left Join TBL011 
 On TBL012.MainGuide=TBL011.CardGuide 
 Left Join (Select 0 As TypeID,SeparateGroup From TBL042 Where CardGuide='fd70821f-164f-4e1a-992b-1129a071785b') c On c.TypeID=0 
 Where TBL011.Posted>0 And (c.SeparateGroup=0 Or TBL011.ByGroup='fd70821f-164f-4e1a-992b-1129a071785b') 
 Group By TBL012.AccountGuide) e On a.AccountID=e.AccountGuide 
 Where a.NotActive=0
GO
/****** Object:  View [dbo].[Grp002Qry025]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry025] As SELECT     TBL009.*, TBL045.BrowsingPosted, TBL045.InsertingPosted, TBL045.UpdatingPosted, TBL045.DeletingPosted, TBL045.PrintingPosted, 
                       TBL045.BrowsingUnPosted, TBL045.InsertingUnPosted, TBL045.UpdatingUnPosted, TBL045.DeletingUnPosted, TBL045.PrintingUnPosted,  
                       TBL045.GroupGuide,  
                       TBL045.BrowsingPosted + TBL045.InsertingPosted + TBL045.UpdatingPosted + TBL045.DeletingPosted + TBL045.PrintingPosted + TBL045.BrowsingUnPosted 
                        + TBL045.InsertingUnPosted + TBL045.UpdatingUnPosted + TBL045.DeletingUnPosted + TBL045.PrintingUnPosted AS AllowValue 
 FROM         TBL009 INNER JOIN 
                       TBL045 ON TBL009.CardGuide = TBL045.CardGuide Where TBL045.GroupGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec'
GO
/****** Object:  View [dbo].[Grp002Qry132]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry132] As Select b.AgentsGroupGuide,a.*,g.GroupName,g.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 (Select 0 As TypeID,CheckAgentsGroups From TBL042 Where CardGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec') c 
 Inner Join 
 TBL016 a On c.TypeID=0 
 Left Join TBL015 g On a.MainGroupGuide=g.CardGuide 
 Left Join (Select AgentsGroupGuide From TBL133 Where AgentsGroupGuide Is Not Null And MainGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec')b 
 On a.MainGroupGuide=b.AgentsGroupGuide 
 Left Join (Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AgentGuide From TBL012 Left Join TBL011 
 On TBL012.MainGuide=TBL011.CardGuide 
 Where TBL012.AgentGuide Is Not Null And TBL011.Posted>0 
 Group By TBL012.AgentGuide) e On a.CardGuide=e.AgentGuide 
 Where a.NotActive=0 And (c.CheckAgentsGroups Is Null Or c.CheckAgentsGroups=0 Or b.AgentsGroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp002Qry258]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp002Qry258] As Select a.MainGroupGuide As AgentsGroupGuide,a.*,g.GroupName,g.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 TBL016 a 
 Left Join TBL015 g On a.MainGroupGuide=g.CardGuide 
 Left Join (Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AccountGuide From TBL012 Left Join TBL011 
 On TBL012.MainGuide=TBL011.CardGuide 
 Left Join (Select 0 As TypeID,SeparateGroup From TBL042 Where CardGuide='8995f620-03c5-4643-8c4b-d6a1b33639ec') c On c.TypeID=0 
 Where TBL011.Posted>0 And (c.SeparateGroup=0 Or TBL011.ByGroup='8995f620-03c5-4643-8c4b-d6a1b33639ec') 
 Group By TBL012.AccountGuide) e On a.AccountID=e.AccountGuide 
 Where a.NotActive=0
GO
/****** Object:  View [dbo].[Grp003Qry025]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry025] As SELECT     TBL009.*, TBL045.BrowsingPosted, TBL045.InsertingPosted, TBL045.UpdatingPosted, TBL045.DeletingPosted, TBL045.PrintingPosted, 
                       TBL045.BrowsingUnPosted, TBL045.InsertingUnPosted, TBL045.UpdatingUnPosted, TBL045.DeletingUnPosted, TBL045.PrintingUnPosted,  
                       TBL045.GroupGuide,  
                       TBL045.BrowsingPosted + TBL045.InsertingPosted + TBL045.UpdatingPosted + TBL045.DeletingPosted + TBL045.PrintingPosted + TBL045.BrowsingUnPosted 
                        + TBL045.InsertingUnPosted + TBL045.UpdatingUnPosted + TBL045.DeletingUnPosted + TBL045.PrintingUnPosted AS AllowValue 
 FROM         TBL009 INNER JOIN 
                       TBL045 ON TBL009.CardGuide = TBL045.CardGuide Where TBL045.GroupGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac'
GO
/****** Object:  View [dbo].[Grp003Qry132]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry132] As Select b.AgentsGroupGuide,a.*,g.GroupName,g.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 (Select 0 As TypeID,CheckAgentsGroups From TBL042 Where CardGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') c 
 Inner Join 
 TBL016 a On c.TypeID=0 
 Left Join TBL015 g On a.MainGroupGuide=g.CardGuide 
 Left Join (Select AgentsGroupGuide From TBL133 Where AgentsGroupGuide Is Not Null And MainGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac')b 
 On a.MainGroupGuide=b.AgentsGroupGuide 
 Left Join (Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AgentGuide From TBL012 Left Join TBL011 
 On TBL012.MainGuide=TBL011.CardGuide 
 Where TBL012.AgentGuide Is Not Null And TBL011.Posted>0 
 Group By TBL012.AgentGuide) e On a.CardGuide=e.AgentGuide 
 Where a.NotActive=0 And (c.CheckAgentsGroups Is Null Or c.CheckAgentsGroups=0 Or b.AgentsGroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp003Qry258]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp003Qry258] As Select a.MainGroupGuide As AgentsGroupGuide,a.*,g.GroupName,g.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 TBL016 a 
 Left Join TBL015 g On a.MainGroupGuide=g.CardGuide 
 Left Join (Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AccountGuide From TBL012 Left Join TBL011 
 On TBL012.MainGuide=TBL011.CardGuide 
 Left Join (Select 0 As TypeID,SeparateGroup From TBL042 Where CardGuide='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') c On c.TypeID=0 
 Where TBL011.Posted>0 And (c.SeparateGroup=0 Or TBL011.ByGroup='ead307a4-8fc2-4d29-9b0e-100a16eec4ac') 
 Group By TBL012.AccountGuide) e On a.AccountID=e.AccountGuide 
 Where a.NotActive=0
GO
/****** Object:  View [dbo].[Grp004Qry025]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry025] As SELECT     TBL009.*, TBL045.BrowsingPosted, TBL045.InsertingPosted, TBL045.UpdatingPosted, TBL045.DeletingPosted, TBL045.PrintingPosted, 
                       TBL045.BrowsingUnPosted, TBL045.InsertingUnPosted, TBL045.UpdatingUnPosted, TBL045.DeletingUnPosted, TBL045.PrintingUnPosted,  
                       TBL045.GroupGuide,  
                       TBL045.BrowsingPosted + TBL045.InsertingPosted + TBL045.UpdatingPosted + TBL045.DeletingPosted + TBL045.PrintingPosted + TBL045.BrowsingUnPosted 
                        + TBL045.InsertingUnPosted + TBL045.UpdatingUnPosted + TBL045.DeletingUnPosted + TBL045.PrintingUnPosted AS AllowValue 
 FROM         TBL009 INNER JOIN 
                       TBL045 ON TBL009.CardGuide = TBL045.CardGuide Where TBL045.GroupGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678'
GO
/****** Object:  View [dbo].[Grp004Qry132]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry132] As Select b.AgentsGroupGuide,a.*,g.GroupName,g.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 (Select 0 As TypeID,CheckAgentsGroups From TBL042 Where CardGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678') c 
 Inner Join 
 TBL016 a On c.TypeID=0 
 Left Join TBL015 g On a.MainGroupGuide=g.CardGuide 
 Left Join (Select AgentsGroupGuide From TBL133 Where AgentsGroupGuide Is Not Null And MainGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678')b 
 On a.MainGroupGuide=b.AgentsGroupGuide 
 Left Join (Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AgentGuide From TBL012 Left Join TBL011 
 On TBL012.MainGuide=TBL011.CardGuide 
 Where TBL012.AgentGuide Is Not Null And TBL011.Posted>0 
 Group By TBL012.AgentGuide) e On a.CardGuide=e.AgentGuide 
 Where a.NotActive=0 And (c.CheckAgentsGroups Is Null Or c.CheckAgentsGroups=0 Or b.AgentsGroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Grp004Qry258]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Grp004Qry258] As Select a.MainGroupGuide As AgentsGroupGuide,a.*,g.GroupName,g.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 TBL016 a 
 Left Join TBL015 g On a.MainGroupGuide=g.CardGuide 
 Left Join (Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AccountGuide From TBL012 Left Join TBL011 
 On TBL012.MainGuide=TBL011.CardGuide 
 Left Join (Select 0 As TypeID,SeparateGroup From TBL042 Where CardGuide='22cf4629-3349-4d5c-bc95-a40f8ffd7678') c On c.TypeID=0 
 Where TBL011.Posted>0 And (c.SeparateGroup=0 Or TBL011.ByGroup='22cf4629-3349-4d5c-bc95-a40f8ffd7678') 
 Group By TBL012.AccountGuide) e On a.AccountID=e.AccountGuide 
 Where a.NotActive=0
GO
/****** Object:  View [dbo].[Qry000]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry000] As Select TBL042.ID As GroupID,TBL013.ID As UserID,TBL013.UsGuide As UserGuide,TBL042.CardGuide As GroupGuide,TBL042.CardName As GroupName,TBL013.UserName From 
 TBL042 with(nolock) 
 Inner Join TBL048 with(nolock) On TBL042.CardGuide=TBL048.GroupGuide 
 Inner Join TBL013 with(nolock) On TBL013.UsGuide=TBL048.CardGuide
GO
/****** Object:  View [dbo].[Qry009]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry009] As SELECT     COUNT(TBL006_1.ID) AS SonsCount, TBL006.ID, TBL006.CardGuide, TBL006.MainGuide, TBL006.CardCode, TBL006.GroupName,TBL006.CardCode+'-'+TBL006.LatinName As LatinGroup,
 TBL006.LatinName , TBL006.Security
 FROM         TBL006 with(nolock) LEFT OUTER JOIN 
 TBL006 TBL006_1 with(nolock) ON TBL006.CardGuide = TBL006_1.MainGuide 
 GROUP BY TBL006.ID, TBL006.CardGuide, TBL006.MainGuide, TBL006.CardCode, TBL006.GroupName, TBL006.LatinName, TBL006.Security
GO
/****** Object:  View [dbo].[Qry014]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry014] As Select * From TBL009 with(nolock) Where BondType=1
GO
/****** Object:  View [dbo].[Qry037]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry037] As SELECT     TBL012.*, TBL011.EntryNumber,TBL011.BillGuide,TBL011.BondGuide, TBL011.ID AS EntryID, TBL011.Posted, TBL011.EntryDate,isnull( TBL012.Project, TBL011.Project)As EntryProject, isnull(TBL012.Branch,TBL011.Branch)As EntryBranch, 
                       isnull(TBL012.CostCenter, TBL011.CostCenter)As AcCostCenter, TBL011.Security, TBL004.ClosingAccount  
  FROM         TBL004 with (nolock) RIGHT OUTER JOIN  
                        TBL012 with (nolock) ON TBL004.CardGuide = TBL012.AccountGuide LEFT OUTER JOIN  
                        TBL011 with (nolock) ON TBL012.MainGuide = TBL011.CardGuide
GO
/****** Object:  View [dbo].[Qry038]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry038] As SELECT ItemGuide As ProductGuide,* From TBL028 with (nolock) 
GO
/****** Object:  View [dbo].[Qry039]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry039] As SELECT     TBL008.ID, TBL008.CardGuide, TBL008.CardCode, TBL008.WarehouseName, TBL008.MainWarehouse, TBL008.Security, 
                        COUNT(TBL008_1.ID) AS SonsCount 
 FROM         TBL008 with (nolock) LEFT OUTER JOIN 
                       TBL008 TBL008_1 with (nolock) ON TBL008.CardGuide = TBL008_1.MainWarehouse 
 GROUP BY TBL008.ID, TBL008.CardGuide, TBL008.CardCode, TBL008.WarehouseName, TBL008.MainWarehouse, TBL008.Security
GO
/****** Object:  View [dbo].[Qry044]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry044] As SELECT     TBL022.BillDate,TBL020.InvoiceMovementSide, TBL024.*, dbo.Ratio(TBL024.DiscountToSave, TBL024.Discount) + dbo.Ratio(TBL024.ExtraToSave, 
                       TBL024.Extra) AS Rate, TBL022.BillNumber 
 FROM         TBL022 with (nolock) RIGHT OUTER JOIN 
                       TBL024 with (nolock) ON TBL022.CardGuide = TBL024.MainGuide LEFT OUTER JOIN 
                       TBL020 with (nolock) ON TBL022.MainGuide = TBL020.CardGuide 
 Where TBL024.Discount>0 Or TBL020.BillMethod<>1 Or TBL020.TotalIncludeTax=0
GO
/****** Object:  View [dbo].[Qry045]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry045] As SELECT     TBL023.*, TBL022.BillDate, TBL022.MainGuide AS TypeGuide, isnull(TBL023.StoreID, TBL022.StoreGuide) AS Store , TBL022.AgentGuide 
 FROM         TBL022 with (nolock) INNER JOIN 
                       TBL023 with (nolock) ON TBL022.CardGuide = TBL023.MainGuide
GO
/****** Object:  View [dbo].[Qry046]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry046] As SELECT     TBL007.*, TBL006.MainGuide AS MainGroupGuide, TBL006.CardCode AS GroupCode, TBL006.GroupName, 
                       TBL006.LatinName AS GroupLatinName, TBL006.Notes AS GroupNotes, TBL006.Security AS GroupSecurity,  
                       TBL006.TaxRatio AS GroupTaxRatio 
 FROM         TBL006 with (nolock) LEFT OUTER JOIN 
                       TBL007 with (nolock) ON TBL006.CardGuide = TBL007.GroupGuid
GO
/****** Object:  View [dbo].[Qry047]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry047] As Select * From TBL020 with (nolock) Where BillType=3
GO
/****** Object:  View [dbo].[Qry048]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry048] As SELECT     TBL006.*, TBL055.GroupGuide AS BillGroupGuide, TBL055.BillGuide, TBL055.MainGroup AS BillMainGroup ,dbo.IFNullString(TBL006.LatinName,TBL006.GroupName)As MainLatinName 
 FROM         TBL055 with (nolock) LEFT OUTER JOIN 
                       TBL006 with (nolock) ON TBL055.GroupGuide = TBL006.CardGuide
GO
/****** Object:  View [dbo].[Qry049]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry049] As SELECT     TBL070.GroupGuide, TBL070.CardGuide, TBL070.BrowsingPosted, TBL070.InsertingPosted, TBL070.UpdatingPosted, 
                       TBL070.DeletingPosted, TBL070.PrintingPosted, TBL070.ChangePricesPosted, TBL070.PostedExtraRatio, TBL070.PostedDiscountRatio,  
                       TBL070.BrowsingUnPosted, TBL070.InsertingUnPosted, TBL070.UpdatingUnPosted, TBL070.DeletingUnPosted, TBL070.PrintingUnPosted,  
                       TBL070.UnPostedExtraRatio, TBL070.UnPostedDiscountRatio, TBL070.ChangePricesUnPosted, TBL020.InvoiceName, TBL020.LatinName,  
                       TBL020.Shortcut, TBL020.LatinShortcut, TBL020.BillType,TBL020.WithButtons, TBL020.PriceType, TBL020.DefaultPayType, TBL020.ID,  
                       TBL020.DefaultCommission, TBL020.InvoiceMovementSide, TBL020.Fields, TBL020.DoNotPostToStores,  
                       TBL020.GenerateEntry, TBL020.AutoPrintWhenAdd, TBL020.AutoPrintWhenEdit, TBL020.AffectCostomerPrice, TBL020.PayTermIsButtons,  
                       TBL020.ShowPaidAndRest, TBL020.AffectLastPurchasePrice, TBL020.AlwaysDetailing, TBL020.AddCommissionToTotal, TBL020.Color1,  
                       TBL020.SearchInEmptyProductsCards, TBL020.Color2, TBL020.CashAccount, TBL020.BankAccount, TBL020.BankProcuringCommissionAccount, 
                       TBL020.ProductsAccount, TBL020.DiscountsAccount, TBL020.ExtrasAccount, TBL020.BonusAccount, TBL020.AgentProfitAccount,  
                       TBL020.DefaultStore, TBL020.DefaultCurrency, TBL020.SubjectToTaxAccount, TBL020.MainBill,  
                       TBL070.BrowsingPosted + TBL070.InsertingPosted + TBL070.UpdatingPosted + TBL070.DeletingPosted + TBL070.PrintingPosted + TBL070.BrowsingUnPosted 
                        + TBL070.InsertingUnPosted + TBL070.UpdatingUnPosted + TBL070.DeletingUnPosted + TBL070.PrintingUnPosted AS AllowValue,TBL070.ChangeStockItemsPrice, TBL070.ChangeServiceItemsPrice 
 FROM         TBL070 with (nolock) INNER JOIN 
                       TBL020 with (nolock) ON TBL070.CardGuide = TBL020.CardGuide
GO
/****** Object:  View [dbo].[Qry050]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry050] As SELECT     TBL035.PropertyName, TBL035.ID As SortID,TBL035.PropertyValue,TBL035.PropertyValue2, TBL035.PropertyNumberValue, TBL035.ControlImage, TBL034.ID, TBL034.ControlName, 
                       TBL034.ControlType, TBL034.TextValue, TBL033.CardGuide, TBL033.CardType, TBL033.CardName, TBL033.ShowButton, TBL033.PrintCount 
 FROM         TBL035 with (nolock) RIGHT OUTER JOIN 
                       TBL034 with (nolock) ON TBL035.MainID = TBL034.ID RIGHT OUTER JOIN 
                       TBL033 with (nolock) ON TBL034.MainGuide = TBL033.CardGuide
GO
/****** Object:  View [dbo].[Qry052]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry052] As Select * From TBL020 with (nolock) Where BillType=4
GO
/****** Object:  View [dbo].[Qry053]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry053] As Select * From TBL020 with (nolock) Where BillType<2 Or BillType=8 Or BillType=9 Or BillType=10 Or BillType=16
GO
/****** Object:  View [dbo].[Qry055]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry055] As SELECT     MainGuide, SUM(TotalValue) AS TotalValue, SUM(DiscountValue) AS DiscountValue, SUM(ExtraValue) AS ExtraValue, SUM(TaxValue) AS TaxValue, CostCenter, 
                       MAX(ID) AS ID 
 FROM         TBL023 with (nolock) 
 GROUP BY MainGuide, CostCenter
GO
/****** Object:  View [dbo].[Qry062]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry062] As Select * From TBL027 with (nolock) Where Ready=1 And Delivered=0
GO
/****** Object:  View [dbo].[Qry063]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry063] As Select * From TBL016 with (nolock) Where MainGroupGuide=(Select ValueKey From TBL053 Where OptionName='OperationsReceiversGroup')
GO
/****** Object:  View [dbo].[Qry064]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry064] As Select * From TBL009 with (nolock) Where BondType=3
GO
/****** Object:  View [dbo].[Qry067]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry067] As Select * From TBL020 with (nolock) Where BillType!=3
GO
/****** Object:  View [dbo].[Qry068]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry068] As Select * From TBL020 with (nolock) Where BillType=3
GO
/****** Object:  View [dbo].[Qry069]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry069] As Select * From TBL010 Where MainGuide='961E2301-07CD-470A-A198-C1A11C01BC1D'
GO
/****** Object:  View [dbo].[Qry070]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry070] As Select * From TBL010 Where MainGuide='B63A407F-BBE5-47A7-A869-4E1C41976F12'
GO
/****** Object:  View [dbo].[Qry071]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry071] As Select * From TBL010 Where MainGuide='1B631370-FEED-4831-B0A2-AD635D7EA58D'
GO
/****** Object:  View [dbo].[Qry072]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry072] As Select * From TBL010 Where MainGuide='4DD6C465-E20C-437A-9EDE-AD7761A3A577'
GO
/****** Object:  View [dbo].[Qry073]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry073] As Select * From TBL010 Where MainGuide='458736D3-D7A7-4CDE-AABB-9D80CBDE0404'
GO
/****** Object:  View [dbo].[Qry074]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry074] As Select * From TBL010 Where MainGuide='CB920A11-29DC-4DB7-B327-F73BCDAFDA8E'
GO
/****** Object:  View [dbo].[Qry075]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry075] As Select * From TBL010 Where MainGuide='374E8841-23D5-4644-B19B-CE9F4DADF091'
GO
/****** Object:  View [dbo].[Qry076]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry076] As Select * From TBL010 Where MainGuide='1E583F10-8D9D-48DF-AFA7-3CDB3330CCCB'
GO
/****** Object:  View [dbo].[Qry077]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry077] As Select * From TBL010 Where MainGuide='0A300A69-CA47-4D2A-96EB-6788E58D72D0'
GO
/****** Object:  View [dbo].[Qry078]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry078] As Select * From TBL010 Where MainGuide='5E534998-0E1C-437A-8913-19B9F503BB70'
GO
/****** Object:  View [dbo].[Qry080]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry080] As SELECT     TBL012.AccountGuide, TBL012.Debit, TBL012.Credit, TBL012.DebitRate, TBL012.CreditRate, TBL012.ContraAccount, 
                       TBL012.CostCenter, TBL012.Description, TBL012.Checked, TBL011.EntryDate, TBL011.EntryNumber, TBL011.Posted,  
                       TBL022.MainGuide, TBL022.StoreGuide, TBL022.POSGuide, TBL011.BillGuide, TBL012.CurrencyGuide 
 FROM         TBL022 with (nolock) RIGHT OUTER JOIN 
                       TBL011 with (nolock) ON TBL022.CardGuide = TBL011.BillGuide LEFT OUTER JOIN 
                       TBL012 with (nolock) ON TBL011.CardGuide = TBL012.MainGuide
GO
/****** Object:  View [dbo].[Qry081]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry081] As SELECT     ID, CardGuide, BondNumber, Posted, Security, MainGuide, BondDate, DueDate, DoneIn, CurrencyGuide, AccountGuide, Project, Branch, CostCenter, Rate, Notes, 
                       BillGuide, dbo.FormatDateTime(InsertedIn) AS StrInsertedIn,InsertedIn,convert(float, InsertedIn)AS InsertedInValue, CardImage, BondNumber2, BondNotes2, BondNotes3, CardType, RelatedBillType 
 FROM         TBL010 with (nolock) 
GO
/****** Object:  View [dbo].[Qry082]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry082] As SELECT     TBL010.CardGuide, TBL010.BondNumber, TBL010.BondNumber2, TBL038.AccountGuide, TBL004.CardCode, TBL004.AccountName, 
                       TBL038.Debit + TBL038.Credit AS Value, TBL038.DebitRate + TBL038.CreditRate AS ValueRate, TBL010.DueDate, TBL038.Collected,  
                       TBL038.EndorseToAccountGuide, TBL010.Security 
 FROM         TBL004 with (nolock) RIGHT OUTER JOIN 
                       TBL038 with (nolock) ON TBL004.CardGuide = TBL038.AccountGuide LEFT OUTER JOIN 
                       TBL010 with (nolock) ON TBL038.MainGuide = TBL010.CardGuide 
 WHERE     (TBL010.MainGuide = '961E2301-07CD-470A-A198-C1A11C01BC1D') AND (TBL038.Collected = 0) AND (TBL038.EndorseToAccountGuide IS NULL)
GO
/****** Object:  View [dbo].[Qry083]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry083] As SELECT * FROM TBL010 with (nolock) WHERE (MainGuide != '4DD6C465-E20C-437A-9EDE-AD7761A3A577')
GO
/****** Object:  View [dbo].[Qry084]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry084] As SELECT     TBL010.CardGuide, TBL010.BondNumber, TBL010.BondNumber2, TBL038.AccountGuide, TBL004.CardCode, TBL004.AccountName, 
                       TBL038.Debit + TBL038.Credit AS Value, TBL038.DebitRate + TBL038.CreditRate AS ValueRate, TBL010.DueDate, TBL038.Collected,  
                       TBL038.EndorseToAccountGuide, TBL010.Security 
 FROM         TBL004 with (nolock) RIGHT OUTER JOIN 
                       TBL038 with (nolock) ON TBL004.CardGuide = TBL038.AccountGuide LEFT OUTER JOIN 
                       TBL010 with (nolock) ON TBL038.MainGuide = TBL010.CardGuide 
 WHERE     (TBL010.MainGuide = '4DD6C465-E20C-437A-9EDE-AD7761A3A577') AND (TBL038.Collected = 0 OR TBL038.EndorseToAccountGuide IS NULL)
GO
/****** Object:  View [dbo].[Qry085]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry085] As SELECT     TBL011.CardGuide,TBL012.RowDate, TBL011.EntryNumber, TBL011.Posted, TBL011.Security,  TBL011.Security As EntrySecurity,TBL011.EntryDate, TBL011.DoneIn, TBL011.BillGuide, 
                       TBL011.BondGuide, TBL011.Project, TBL011.Branch, TBL011.CostCenter, TBL011.CardImage, TBL011.Notes, TBL011.MainBillGuide,  
                       TBL012.CurrencyGuide, TBL012.Debit, TBL012.Credit, TBL012.AccountGuide, TBL012.DebitRate, TBL012.CreditRate,  
                       ISNULL(TBL012.Project, TBL011.Project)As ProjectGuide,ISNULL(TBL012.Branch, TBL011.Branch)As BranchGuide,TBL012.AgentGuide, 
                       TBL012.ContraAccount, TBL012.Description, TBL012.Checked, TBL010.BondNumber, TBL010.MainGuide AS EntryTypeGuide,  
                       TBL009.EntryName, TBL009.EntryLatinName, TBL022.BillNumber, TBL022.MainGuide AS BillTypeGuide, TBL020.InvoiceName, TBL011.CurrencyGuide As HeadCurrencyGuide,  
                       TBL020.LatinName, isnull(isnull(TBL022.MainGuide, TBL010.MainGuide), '00000000-0000-0000-0000-000000000000') 
                       AS SourceTypeGuide, TBL001.CurrencyName, TBL001.LatinName AS CurrencyLatinName ,TBL011.Rate 
                       ,(TBL012.Debit+TBL012.Credit)/(TBL012.DebitRate+TBL012.CreditRate)As CrRate 
 FROM         TBL020 with (nolock) RIGHT OUTER JOIN 
                       TBL010 with (nolock) RIGHT OUTER JOIN 
                       TBL001 with (nolock) RIGHT OUTER JOIN 
                       TBL011 with (nolock) ON TBL001.CardGuide = TBL011.CurrencyGuide RIGHT OUTER JOIN 
                       TBL012 with (nolock) ON TBL011.CardGuide = TBL012.MainGuide LEFT OUTER JOIN 
                       TBL022 with (nolock) ON TBL011.BillGuide = TBL022.CardGuide ON TBL010.CardGuide = TBL011.BondGuide LEFT OUTER JOIN 
                       TBL009 with (nolock) ON TBL010.MainGuide = TBL009.CardGuide ON TBL020.CardGuide = TBL022.MainGuide
GO
/****** Object:  View [dbo].[Qry088]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry088] As Select CardGuide,dbo.Fun040(CardGuide)As MaxPurchase,dbo.Fun041(CardGuide)As MinPurchase,dbo.Fun042(CardGuide)As LastPurchase From TBL007
GO
/****** Object:  View [dbo].[Qry090]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry090] As SELECT     TBL015.ID, TBL015.CardGuide, TBL015.MainGuide, TBL015.MainAccountGuide, TBL015.GroupName, TBL015.Security, 
                       TBL015.LatinName, COUNT(TBL015_1.ID) AS SonsCount 
 FROM         TBL015 with (nolock) LEFT OUTER JOIN 
                       TBL015 TBL015_1 with (nolock) ON TBL015.CardGuide = TBL015_1.MainGuide 
 GROUP BY TBL015.ID, TBL015.CardGuide, TBL015.MainGuide, TBL015.MainAccountGuide, TBL015.GroupName, TBL015.Security,  
                       TBL015.LatinName
GO
/****** Object:  View [dbo].[Qry093]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry093] As SELECT     TBL038.AccountGuide, TBL038.ContraAccount, TBL010.CardGuide, TBL010.MainGuide, TBL010.BondDate 
 FROM         TBL038 with (nolock) INNER JOIN 
                       TBL010 with (nolock) ON TBL038.MainGuide = TBL010.CardGuide
GO
/****** Object:  View [dbo].[Qry094]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry094] As SELECT isnull(isnull(TBL022.MainGuide, TBL010.MainGuide), '00000000-0000-0000-0000-000000000000') AS Src, TBL011.CardGuide, 
 TBL011.EntryDate, TBL012.AccountGuide, TBL012.ContraAccount,TBL012.AgentGuide 
 FROM TBL011 with (nolock) Inner JOIN 
 TBL012 with (nolock) ON TBL011.CardGuide = TBL012.MainGuide 
 Left Join TBL010 with (nolock) On TBL011.BondGuide=TBL010.CardGuide 
 Left Join TBL022 with (nolock) On TBL011.BillGuide=TBL022.CardGuide
GO
/****** Object:  View [dbo].[Qry095]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry095] As SELECT     TBL024.AccountID, TBL022.CardGuide, TBL024.ContraAccount, TBL022.MainGuide, TBL022.BillDate 
 FROM         TBL024 with (nolock) LEFT OUTER JOIN 
                       TBL022 with (nolock) ON TBL024.MainGuide = TBL022.CardGuide
GO
/****** Object:  View [dbo].[Qry103]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry103] As SELECT     TBL012.*, TBL011.BillGuide, TBL011.BondGuide, TBL011.EntryDate, TBL010.MainGuide AS BondType, 
                       TBL022.MainGuide AS BillType 
 FROM         TBL022 RIGHT OUTER JOIN 
                       TBL011 ON TBL022.CardGuide = TBL011.BillGuide LEFT OUTER JOIN 
                       TBL010 ON TBL011.BondGuide = TBL010.CardGuide RIGHT OUTER JOIN 
                       TBL012 ON TBL011.CardGuide = TBL012.MainGuide
GO
/****** Object:  View [dbo].[Qry104]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry104] As Select * From TBL009 Where BondType=6
GO
/****** Object:  View [dbo].[Qry109]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry109] As Select convert(Varchar(15), CommissionRatio) As Commission ,TBL025.* from TBL025
GO
/****** Object:  View [dbo].[Qry110]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry110] As SELECT     TBL023.* 
 FROM         TBL023 INNER JOIN 
                       TBL022 ON TBL023.MainGuide = TBL022.CardGuide INNER JOIN 
                       TBL020 ON TBL022.MainGuide = TBL020.CardGuide 
 WHERE     (TBL020.AffectLastPurchasePrice = 1 And TBL022.Posted=1)
GO
/****** Object:  View [dbo].[Qry111]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry111] As Select * From TBL074 Where PriceType=5
GO
/****** Object:  View [dbo].[Qry112]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry112] As Select * From TBL074 Where PriceType=8
GO
/****** Object:  View [dbo].[Qry113]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry113] As Select * From TBL009 Where BondType=3 And CardMode=1
GO
/****** Object:  View [dbo].[Qry114]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry114] As SELECT     TBL007.CardGuide, TBL007.GroupGuid, TBL006.ForceCodesInOutput, TBL006.ForceCodesInInput 
 FROM         TBL006 INNER JOIN 
                       TBL007 ON TBL006.CardGuide = TBL007.GroupGuid
GO
/****** Object:  View [dbo].[Qry119]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry119] As Select * From TBL079 Where IsInPut>0
GO
/****** Object:  View [dbo].[Qry120]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry120] As Select * From TBL079 Where IsInPut<1
GO
/****** Object:  View [dbo].[Qry121]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry121] As Select * From TBL080 Where IsInPut>0
GO
/****** Object:  View [dbo].[Qry122]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry122] As Select * From TBL080 Where IsInPut<1
GO
/****** Object:  View [dbo].[Qry123]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry123] As Select ItemGuide As ProductGuide,* From TBL028 Where IsInPut>0
GO
/****** Object:  View [dbo].[Qry124]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry124] As Select ItemGuide As ProductGuide,* From TBL028 Where IsInPut<1
GO
/****** Object:  View [dbo].[Qry125]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry125] As Select * From TBL029 Where IsInPut>0
GO
/****** Object:  View [dbo].[Qry126]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry126] As Select * From TBL029 Where IsInPut<1
GO
/****** Object:  View [dbo].[Qry127]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry127] As Select * From TBL026 Where BillType=1
GO
/****** Object:  View [dbo].[Qry128]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry128] As SELECT     TBL011.EntryNumber, TBL011.CardGuide, TBL011.Posted As EntryPosted , TBL010.Posted As BondPosted, 
 					    TBL022.Posted As BillPosted, TBL011.Security As EntrySecurity, TBL010.Security As BondSecurity, 
 					    TBL022.Security As BillSecurity, TBL011.EntryDate, TBL011.Project, TBL011.BondGuide, 
                       TBL011.BillGuide, TBL011.Branch, TBL011.InsertedIn, TBL011.MainBillGuide, TBL011.Notes, 
                       TBL012.AccountGuide, TBL012.CurrencyGuide, TBL012.Debit, TBL012.Credit, TBL012.DebitRate, 
                       TBL012.CreditRate,(( TBL012.Debit+ TBL012.Credit)/( TBL012.DebitRate+ TBL012.CreditRate))As Rate, 
                       TBL012.ContraAccount,ISNULL( TBL012.CostCenter , TBL011.CostCenter)As CostCenter, TBL012.Description, 
                       TBL022.MainGuide AS BillTypeGuide, TBL010.MainGuide AS BondTypeGuide,ISNULL(TBL022.MainGuide, 
                       ISNULL(TBL010.MainGuide,'00000000-0000-0000-0000-000000000000'))As SourceGuide, 
                       ISNULL(TBL020.InvoiceName,TBL009.EntryName)as SourceName, 
                       ISNULL(TBL020.LatinName,TBL009.EntryLatinName)as SourceLatinName, 
                       ISNULL(TBL022.BillNumber,ISNULL(TBL010.BondNumber,TBL011.EntryNumber))as SourceNumber 
 FROM         TBL020 RIGHT OUTER JOIN 
                       TBL022 ON TBL020.CardGuide = TBL022.MainGuide RIGHT OUTER JOIN 
                       TBL010 LEFT OUTER JOIN 
                       TBL009 ON TBL010.MainGuide = TBL009.CardGuide RIGHT OUTER JOIN 
                       TBL011 ON TBL010.CardGuide = TBL011.BondGuide ON TBL022.CardGuide = TBL011.BillGuide RIGHT OUTER JOIN 
                       TBL012 ON TBL011.CardGuide = TBL012.MainGuide 
GO
/****** Object:  View [dbo].[Qry130]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry130] As SELECT     TBL085.*,Convert(varchar(15),TBL085.CardNumber)As CardCode, TBL005.CostCenter AS CostCenterName, TBL005.LatinName, CONVERT(varchar(100), TBL085.CardNumber) AS Number 
 FROM         TBL085 Left OUTER JOIN 
                       TBL005 ON TBL085.RelatedCostCenter = TBL005.CardGuide Where TBL085.TypeGuide='AFB87C28-D734-4B46-ADA1-E7BA405FF3A3'
GO
/****** Object:  View [dbo].[Qry131]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry131] As SELECT     TBL085.*,CONVERT(varchar(100), TBL085.CardNumber) AS Number FROM TBL085
GO
/****** Object:  View [dbo].[Qry133]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry133] As Select * From TBL038 Where Debit>0
GO
/****** Object:  View [dbo].[Qry134]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry134] As Select * From TBL038 Where Credit>0
GO
/****** Object:  View [dbo].[Qry135]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry135] As SELECT     SUM((case TBL023.Unit When 2 then TBL023.Quantity*TBL007.Factor2 When 3 Then  TBL023.Quantity*TBL007.Factor3 Else  TBL023.Quantity End) * TBL020.InvoiceMovementSide) AS Quantity, TBL023.ProductGuide 
 FROM         TBL023 INNER JOIN 
                       TBL022 ON TBL023.MainGuide = TBL022.CardGuide INNER JOIN 
                       TBL020 ON TBL022.MainGuide = TBL020.CardGuide INNER JOIN 
                       TBL007 ON TBL023.ProductGuide = TBL007.CardGuide Where TBL022.Posted>0 
 GROUP BY TBL023.ProductGuide, TBL007.Factor2, TBL007.Factor3
GO
/****** Object:  View [dbo].[Qry136]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry136] As SELECT     SUM((TBL023.Quantity+TBL023.ExtraQuantity)*(case TBL023.Unit When 2 then TBL007.Factor2 When 3 Then  TBL007.Factor3 Else  1 End) * TBL020.InvoiceMovementSide) AS Quantity, TBL023.ProductGuide,isnull(TBL023.StoreID,TBL022.StoreGuide) AS StoreGuide 
 FROM         TBL023 INNER JOIN 
                       TBL022 ON TBL023.MainGuide = TBL022.CardGuide INNER JOIN 
                       TBL020 ON TBL022.MainGuide = TBL020.CardGuide INNER JOIN 
                       TBL007 ON TBL023.ProductGuide = TBL007.CardGuide Where TBL022.Posted>0 
 GROUP BY TBL023.ProductGuide, TBL007.Factor2, TBL007.Factor3, TBL023.StoreID,TBL022.StoreGuide
GO
/****** Object:  View [dbo].[Qry137]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry137] As Select * From TBL026 Where BillType=4 Or BillType=5
GO
/****** Object:  View [dbo].[Qry138]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry138] As Select * From TBL067 Where CategoryType>0
GO
/****** Object:  View [dbo].[Qry139]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry139] As Select * From TBL074 Where PriceType=10
GO
/****** Object:  View [dbo].[Qry140]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry140] As Select * From TBL074 Where PriceType=11
GO
/****** Object:  View [dbo].[Qry145]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry145] As SELECT 2 as TypeID,TBL010.CardGuide,TBL038.AccountGuide, TBL038.CurrencyGuide, TBL010.BondDate AS InDate, TBL038.Debit, TBL038.Credit, TBL038.DebitRate, TBL038.CreditRate, 
                       TBL010.BondNumber,  TBL010.MainGuide, TBL038.DueDate, TBL038.CollectDate, 
                       TBL038.Checked, ISNULL(TBL038.CostCenter, TBL010.CostCenter)AS CostCenterGuide, ISNULL(TBL038.Notes, TBL010.Notes)AS Notes 
 FROM         TBL038 INNER JOIN 
                       TBL010 ON TBL038.MainGuide = TBL010.CardGuide
GO
/****** Object:  View [dbo].[Qry146]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry146] As SELECT     3 AS TypeID, TBL010.CardGuide, TBL010.AccountGuide  AS AccountGuide, TBL038.CurrencyGuide, TBL010.BondDate AS InDate, 
 		(CASE TBL038.TruncatedValueAccount When Null Then TBL038.Credit ELSE TBL038.Credit-TBL038.TruncatedValue END) As Debit, 
 		(CASE TBL038.TruncatedValueAccount When Null Then TBL038.Debit Else TBL038.Debit-TBL038.TruncatedValue END) AS Credit, 
         (CASE TBL038.TruncatedValueAccount When Null Then TBL038.CreditRate ELSE TBL038.CreditRate-TBL038.TruncatedValueRate END) AS DebitRate, 
         (CASE TBL038.TruncatedValueAccount When Null Then TBL038.DebitRate ELSE TBL038.DebitRate-TBL038.TruncatedValueRate END) AS CreditRate, 
          TBL010.BondNumber, TBL010.MainGuide, TBL038.DueDate, TBL038.CollectDate, 
                       TBL038.Checked, ISNULL(TBL038.CostCenter, TBL010.CostCenter) AS CostCenterGuide, ISNULL(TBL038.Notes, TBL010.Notes) AS Notes 
 FROM         TBL038 INNER JOIN 
                       TBL010 ON TBL038.MainGuide = TBL010.CardGuide 
 Where TBL010.AccountGuide Is Not Null
GO
/****** Object:  View [dbo].[Qry147]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry147] As SELECT     4 AS TypeID, TBL010.CardGuide, TBL038.TruncatedValueAccount AS AccountGuide, TBL038.CurrencyGuide, TBL010.BondDate AS InDate,(CASE TBL038.Debit When 0 Then TBL038.TruncatedValue Else 0 END) As Debit, 
  (CASE TBL038.Credit When 0 Then TBL038.TruncatedValue ELSE 0 END) AS Credit, 
  (CASE TBL038.DebitRate When 0 Then TBL038.TruncatedValueRate ELSE 0 END) AS DebitRate, 
  (CASE TBL038.CreditRate When 0 Then TBL038.TruncatedValueRate ELSE 0 END)AS CreditRate, 
   TBL010.BondNumber, TBL010.MainGuide, TBL038.DueDate, TBL038.CollectDate, 
                       TBL038.Checked, ISNULL(TBL038.CostCenter, TBL010.CostCenter) AS CostCenterGuide, ISNULL(TBL038.Notes, TBL010.Notes) AS Notes 
 FROM         TBL038 INNER JOIN 
                       TBL010 ON TBL038.MainGuide = TBL010.CardGuide 
 Where TBL038.TruncatedValueAccount Is Not Null And TBL038.TruncatedValue>0
GO
/****** Object:  View [dbo].[Qry148]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry148] As SELECT    5 AS TypeID, TBL010.CardGuide, TBL068.AccountGuide, TBL068.CurrencyGuide, TBL068.DoneIn, TBL068.Debit, TBL068.Credit, TBL068.DebitRate, 
                       TBL068.CreditRate, TBL068.Notes, TBL010.MainGuide, TBL010.BondNumber 
 FROM         TBL010 RIGHT OUTER JOIN 
                       TBL038 ON TBL010.CardGuide = TBL038.MainGuide RIGHT OUTER JOIN 
                       TBL068 ON TBL038.RowGuide = TBL068.MainGuide
GO
/****** Object:  View [dbo].[Qry149]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry149] As SELECT     TBL085.*, TBL005.CostCenter AS MethodName, TBL085_1.CardName AS ArenaName 
 FROM         TBL085 LEFT OUTER JOIN 
                       TBL085 TBL085_1 ON TBL085.RelatedArchive = TBL085_1.CardGuide LEFT OUTER JOIN 
                       TBL005 ON TBL085.RelatedCostCenter = TBL005.CardGuide 
 WHERE     (TBL085.TypeGuide = 'AFB87C28-D734-4B46-ADA1-E7BA405FF3A3')
GO
/****** Object:  View [dbo].[Qry154]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry154] As SELECT TBL090.*, TBL013.UserName FROM TBL090 LEFT OUTER JOIN TBL013 ON TBL090.UserGuide = TBL013.UsGuide
GO
/****** Object:  View [dbo].[Qry155]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry155] As SELECT     TBL010.*, TBL085.CardNumber, TBL085.CardDate, TBL085.CardDate2, TBL085.CardName, TBL005.CostCenter AS CostCenterName, 
                       TBL005.CardCode AS CostCenterCode, (CASE TBL010.CostCenter WHEN NULL THEN NULL ELSE TBL005.CardCode + '-' + TBL005.CostCenter END) AS JobCost, 
                       TBL038.CostCenter AS CostCenterGuide, TBL005_1.CostCenter AS CostCenterName2, TBL005_1.CardCode AS CostCenterCode2, 
                       (CASE TBL085.RelatedCostCenter WHEN NULL THEN NULL ELSE TBL005_1.CardCode + '-' + TBL005_1.CostCenter END) AS JobCost2 
 FROM         TBL005 RIGHT OUTER JOIN 
                       TBL005 TBL005_1 RIGHT OUTER JOIN 
                       TBL085 ON TBL005_1.CardGuide = TBL085.RelatedCostCenter RIGHT OUTER JOIN 
                       TBL038 RIGHT OUTER JOIN 
                       TBL010 ON TBL038.MainGuide = TBL010.CardGuide ON TBL085.CardGuide = TBL010.RelatedArchive ON 
                       TBL005.CardGuide = TBL038.CostCenter
GO
/****** Object:  View [dbo].[Qry156]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry156] As SELECT     TBL092.*, TBL016.AgentName, TBL016.CardNumber ,TBL016.Phone , TBL016.Phone2, TBL016.Mobile
 FROM         TBL092 LEFT OUTER JOIN 
                       TBL016 ON TBL092.AgentGuide = TBL016.CardGuide
GO
/****** Object:  View [dbo].[Qry157]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry157] As Select * From TBL010 Where CardType=0
GO
/****** Object:  View [dbo].[Qry158]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry158] As Select * From TBL010 Where CardType=1
GO
/****** Object:  View [dbo].[Qry159]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry159] As Select *,CardDate As CardDate2 From TBL093
GO
/****** Object:  View [dbo].[Qry160]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry160] As Select * From TBL010 Where MainGuide='5EA23AA8-1934-4FC9-ABAB-45DA2DBCC1D4'
GO
/****** Object:  View [dbo].[Qry161]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry161] As Select * From dbo.Fun080()
GO
/****** Object:  View [dbo].[Qry162]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry162] As SELECT     dbo.TBL011.CardGuide ,isnull(TBL012.Description, TBL011.Notes)As Notes, dbo.TBL011.ID, dbo.TBL011.EntryNumber As CardNumber, dbo.TBL011.EntryDate As InDate, dbo.TBL011.Posted, dbo.TBL011.Security, dbo.TBL012.AccountGuide, 
                       dbo.TBL012.ContraAccount, dbo.TBL012.CurrencyGuide, (dbo.TBL012.Debit + dbo.TBL012.Credit) / (dbo.TBL012.DebitRate + dbo.TBL012.CreditRate) AS Rate, 
                       dbo.TBL012.Debit, dbo.TBL012.Credit, dbo.TBL012.DebitRate, dbo.TBL012.CreditRate, ISNULL(dbo.TBL012.CostCenter, dbo.TBL011.CostCenter) AS CostCenter, 
                       ISNULL(dbo.TBL012.Project, dbo.TBL011.Project) AS Project, ISNULL(dbo.TBL012.Branch, dbo.TBL011.Branch) AS Branch, 
                       dbo.TBL016.CardGuide AS AgentGuide 
 FROM         dbo.TBL012 LEFT OUTER JOIN 
                       dbo.TBL016 ON dbo.TBL012.AccountGuide = dbo.TBL016.AccountID LEFT OUTER JOIN 
                       dbo.TBL011 ON dbo.TBL012.MainGuide = dbo.TBL011.CardGuide 
 WHERE     (dbo.TBL011.BillGuide IS NULL) AND (dbo.TBL011.BondGuide IS NULL)
GO
/****** Object:  View [dbo].[Qry163]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry163] As SELECT    IsNull(TBL038.Notes, TBL010.Notes)As Notes,TBL038.ReturnDate,TBL038.EndorseToAccountGuide,TBL038.EndorsementDate, dbo.TBL010.MainGuide, dbo.TBL010.CardGuide, dbo.TBL010.ID, dbo.TBL010.BondNumber AS CardNumber,IsNull(TBL038.RowDate,dbo.TBL010.BondDate) AS InDate, dbo.TBL010.Posted, 
    a.CardGuide As EntryGuide,a.EntryNumber As EntryNumber, 
    dbo.TBL010.Security, dbo.TBL038.AccountGuide,IsNull( dbo.TBL038.ContraAccount,TBL010.AccountGuide) As ContraAccount, dbo.TBL038.CurrencyGuide, (dbo.TBL038.Debit + dbo.TBL038.Credit) 
    /(dbo.TBL038.DebitRate + dbo.TBL038.CreditRate) AS Rate,(CASE When dbo.TBL038.Debit >0 Then dbo.TBL038.Debit-TBL038.TruncatedValue Else TBL038.Debit End)As Debit, (CASE When dbo.TBL038.Credit>0 Then TBL038.Credit Else TBL038.Credit End)As Credit, 
    (CASE When dbo.TBL038.DebitRate>0 Then TBL038.DebitRate-TBL038.TruncatedValueRate Else TBL038.DebitRate End) As DebitRate,(CASE When dbo.TBL038.CreditRate>0 Then TBL038.CreditRate Else TBL038.CreditRate End) As CreditRate, 
    ISNULL(dbo.TBL038.CostCenter, dbo.TBL010.CostCenter) AS CostCenter, ISNULL(dbo.TBL038.Project, dbo.TBL010.Project) AS Project, ISNULL(dbo.TBL038.Branch, 
    dbo.TBL010.Branch) AS Branch, IsNull(TBL038.AgentGuide,dbo.TBL016.CardGuide) AS AgentGuide, dbo.TBL038.Collected 
 FROM         dbo.TBL038 LEFT OUTER JOIN 
    dbo.TBL016 ON (dbo.TBL038.AccountGuide = dbo.TBL016.AccountID And (TBL038.AgentGuide Is Null Or TBL038.AgentGuide=TBL016.CardGuide)) LEFT OUTER JOIN 
    dbo.TBL010 ON dbo.TBL038.MainGuide = dbo.TBL010.CardGuide LEFT OUTER JOIN 
    (Select TBL011.CardGuide,TBL011.EntryNumber,TBL011.BondGuide From 
    (Select Min(TBL011.ID) As MID,TBL011.BondGuide From TBL011 Group By TBL011.BondGuide)a Inner Join TBL011 On a.MID=TBL011.ID) a ON a.BondGuide = dbo.TBL010.CardGuide
GO
/****** Object:  View [dbo].[Qry169]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry169] As SELECT     ISNULL(dbo.TBL038.Notes, dbo.TBL010.Notes) AS Notes, dbo.TBL010.MainGuide, dbo.TBL010.CardGuide, dbo.TBL010.ID, dbo.TBL010.BondNumber AS CardNumber, 
                       dbo.TBL011.CardGuide As EntryGuide,dbo.TBL011.EntryNumber As EntryNumber, 
                       dbo.TBL010.BondDate AS InDate, dbo.TBL010.Posted, dbo.TBL010.Security, dbo.TBL038.AccountGuide AS ContraAccount, ISNULL(dbo.TBL038.ContraAccount, 
                       dbo.TBL010.AccountGuide) AS AccountGuide, dbo.TBL038.CurrencyGuide, (dbo.TBL038.Debit + dbo.TBL038.Credit) / (dbo.TBL038.DebitRate + dbo.TBL038.CreditRate) 
                       AS Rate,(CASE When dbo.TBL038.Debit>0 Then TBL038.Debit-TBL038.TruncatedValue Else TBL038.Debit End) AS Credit, 
                       (CASE When dbo.TBL038.Credit>0 Then TBL038.Credit-TBL038.TruncatedValue Else TBL038.Credit End) AS Debit, 
                       (CASE When dbo.TBL038.DebitRate>0 Then TBL038.DebitRate-TBL038.TruncatedValueRate Else TBL038.DebitRate End) AS CreditRate, 
                       (CASE When dbo.TBL038.CreditRate>0 Then TBL038.CreditRate-TBL038.TruncatedValueRate Else 0 End) AS DebitRate, 
                       ISNULL(dbo.TBL038.CostCenter, dbo.TBL010.CostCenter) AS CostCenter, ISNULL(dbo.TBL038.Project, dbo.TBL010.Project) AS Project, ISNULL(dbo.TBL038.Branch, 
                       dbo.TBL010.Branch) AS Branch, dbo.TBL016.CardGuide AS AgentGuide, dbo.TBL038.Collected,TBL038.EndorseToAccountGuide,TBL038.EndorsementDate,TBL038.ReturnDate 
 FROM         dbo.TBL010 LEFT OUTER JOIN 
                       dbo.TBL016 ON dbo.TBL010.AccountGuide = dbo.TBL016.AccountID LEFT OUTER JOIN 
                       dbo.TBL038 ON dbo.TBL038.MainGuide = dbo.TBL010.CardGuide LEFT OUTER JOIN 
                       (Select TBL011.BondGuide,Min(TBL011.ID)As ID From TBL011 Where TBL011.BondGuide Is Not Null Group By TBL011.BondGuide)a ON a.BondGuide = dbo.TBL010.CardGuide 
					      Left Join TBL011 On a.ID=TBL011.ID
GO
/****** Object:  View [dbo].[Qry170]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry170] As SELECT    IsNull(dbo.TBL038.TruncatedNotes, ISNULL(dbo.TBL038.Notes, dbo.TBL010.Notes)) AS Notes, dbo.TBL010.MainGuide, dbo.TBL010.CardGuide, dbo.TBL010.ID, dbo.TBL010.BondNumber AS CardNumber, 
                       dbo.TBL011.CardGuide As EntryGuide,dbo.TBL011.EntryNumber As EntryNumber, 
                       dbo.TBL010.BondDate AS InDate, dbo.TBL010.Posted, dbo.TBL010.Security, dbo.TBL038.AccountGuide AS ContraAccount, 
                       dbo.TBL038.TruncatedValueAccount AS AccountGuide, dbo.TBL038.CurrencyGuide, (dbo.TBL038.Debit + dbo.TBL038.Credit) 
                       / (dbo.TBL038.DebitRate + dbo.TBL038.CreditRate) AS Rate, (CASE WHEN dbo.TBL038.Debit > 0 THEN dbo.TBL038.TruncatedValue ELSE 0 END) AS Credit, 
                       (CASE WHEN dbo.TBL038.Credit > 0 THEN dbo.TBL038.TruncatedValue ELSE 0 END) AS Debit, 
                       (CASE WHEN dbo.TBL038.DebitRate > 0 THEN dbo.TBL038.TruncatedValueRate ELSE 0 END) AS CreditRate, 
                       (CASE WHEN dbo.TBL038.CreditRate > 0 THEN dbo.TBL038.TruncatedValueRate ELSE 0 END) AS DebitRate, ISNULL(dbo.TBL038.CostCenter, dbo.TBL010.CostCenter) 
                        AS CostCenter, ISNULL(dbo.TBL038.Project, dbo.TBL010.Project) AS Project, ISNULL(dbo.TBL038.Branch, dbo.TBL010.Branch) AS Branch, 
                       dbo.TBL016.CardGuide AS AgentGuide, dbo.TBL038.TruncatedValue, dbo.TBL038.TruncatedValueRate, dbo.TBL038.Collected 
 FROM         dbo.TBL010 LEFT OUTER JOIN 
                       dbo.TBL016 ON dbo.TBL010.AccountGuide = dbo.TBL016.AccountID LEFT OUTER JOIN 
                       dbo.TBL038 ON dbo.TBL038.MainGuide = dbo.TBL010.CardGuide LEFT OUTER JOIN 
                       dbo.TBL011 ON dbo.TBL011.BondGuide = dbo.TBL010.CardGuide 
 WHERE     (dbo.TBL038.TruncatedValue > 0) AND (dbo.TBL038.TruncatedValueRate > 0) AND (dbo.TBL038.TruncatedValueAccount IS NOT NULL)
GO
/****** Object:  View [dbo].[Qry171]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry171] As Select TBL022.MainGuide,TBL024.MainGuide As CardGuide,TBL024.ID,TBL022.BillNumber As CardNumber, 
 dbo.TBL011.CardGuide As EntryGuide,dbo.TBL011.EntryNumber As EntryNumber, 
 TBL022.BillDate As InDate,TBL022.Posted,TBL022.Security,TBL024.AccountID As AccountGuide,TBL024.ContraAccount, 
 TBL016.CardGuide As AgentGuide,TBL016_2.CardGuide As ContraAgentGuide,TBL024.CurrencyGuide,((TBL024.DiscountToSave+TBL024.ExtraToSave)/(TBL024.Discount+TBL024.Extra))As Rate, 
 (CASE WHEN TBL020.InvoiceMovementSide<0 Then TBL024.DiscountToSave ELSE TBL024.ExtraToSave End)As Debit, 
 (CASE WHEN TBL020.InvoiceMovementSide<0 Then TBL024.Discount ELSE TBL024.Extra End)As DebitRate, 
 (CASE WHEN TBL020.InvoiceMovementSide<0 Then TBL024.ExtraToSave ELSE TBL024.DiscountToSave End)As Credit, 
 (CASE WHEN TBL020.InvoiceMovementSide<0 Then TBL024.Extra ELSE TBL024.Discount End)As CreditRate, 
 TBL024.CostCenter,TBL022.Project,TBL022.Branch,TBL022.StoreGuide,ISNULL(TBL024.Description,TBL022.Notes)As Notes 
 From TBL024 
 Left Join TBL022 On TBL024.MainGuide=TBL022.CardGuide 
 Left Join TBL016 On TBL024.AccountID=TBL016.AccountID 
 Left Join TBL016 TBL016_2 On TBL024.ContraAccount=TBL016_2.AccountID 
 Left Join TBL020 On TBL022.MainGuide=TBL020.CardGuide 
 Left JOIN dbo.TBL011 ON dbo.TBL011.BillGuide = dbo.TBL022.CardGuide
GO
/****** Object:  View [dbo].[Qry172]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry172] As Select (CASE CardGuide When a.MainGD Then Null Else MainGuide End)MainGroup, TBL006.* From TBL006 
 CROSS JOIN (Select IsNull(dbo.Fun091('AssetsGroup'),newid()) As MainGD)a 
 Where dbo.Fun090(TBL006.CardGuide,TBL006.MainGuide,a.MainGD)>0
GO
/****** Object:  View [dbo].[Qry176]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry176] As Select * From TBL084 Where ID>4
GO
/****** Object:  View [dbo].[Qry177]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry177] As Select * From TBL033 Where CardType Like'%_Options'
GO
/****** Object:  View [dbo].[Qry178]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry178] As Select * From TBL033 Where CardTypeID=-1
GO
/****** Object:  View [dbo].[Qry181]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry181] As Select TBL023.ReserveDate,TBL022.CardGuide,TBL020.InvoiceMovementSide,TBL022.BillDate,TBL022.PostToAccount,TBL022.AgentGuide,TBL022.BillNotes2,TBL022.BillNotes3,TBL022.BillNotes4,TBL022.BillNotes5,TBL022.Notes As BillNotes, TBL007.CardCode +'-'+ TBL007.ProductName As iItem,(CASE TBL023.Unit When 3 Then TBL007.Unit3 When 2 Then TBL007.Unit2 Else TBL007.Unit End)As iUnit,Convert(nvarchar(15),TBL022.BillNumber)+'-'+TBL020.InvoiceName As iBill, 
 (CASE When TBL023.CostCenter Is Null Then Null Else TBL005.CardCode+'-'+TBL005.CostCenter End)As iCostCenter,
 (CASE When TBL023.StoreID Is Null Then Null Else TBL008.CardCode+'-'+TBL008.WarehouseName END)As iStoreID,TBL022.MainGuide As BillTypeGuide,TBL020.TaxRatio As BillTaxRatio,
 (CASE When TBL023.Category01 Is Null Then Null Else c1.CardName End)As iCategory01,
 (CASE When TBL023.Category02 Is Null Then Null Else c2.CardName End)As iCategory02,
 (CASE When TBL023.Category03 Is Null Then Null Else c3.CardName End)As iCategory03,
 (CASE When TBL023.Category04 Is Null Then Null Else c4.CardName End)As iCategory04,
 (CASE When TBL023.Category05 Is Null Then Null Else c5.CardName End)As iCategory05,
 (case TBL023.Unit When 3 then TBL007.Factor3 When 2 then TBL007.Factor2 else 1 end) As ItemBillFactor,
 dbo.Ratio(TBL023.TotalValue,TBL023.Quantity) As UnitPrice,dbo.Ratio(TBL023.DiscountValue,TBL023.TotalValue)*100 As DiscountRatio,
 dbo.Ratio(TBL023.ExtraValue,TBL023.TotalValue)*100 ExtraRatio,
 (case TBL020.TotalIncludeTax when 0 then dbo.Ratio(TBL023.TaxValue,TBL023.TotalValue+TBL023.ExtraValue-(TBL023.DiscountValue+TBL023.Discount1))*100 else dbo.Ratio(TBL023.TaxValue*100,(TBL023.TotalValue+TBL023.ExtraValue-(TBL023.DiscountValue+TBL023.Discount1)-TBL023.BillTax)-TBL023.TaxValue) end) as TaxRatio,
 TBL023.TotalValue-TBL023.DiscountValue-TBL023.Discount1+TBL023.ExtraValue+(CASE TBL020.TotalIncludeTax When 0 Then TBL023.TaxValue Else 0 End) As NetTotal,
 dbo.Ratio(TBL023.TotalValue-TBL023.DiscountValue-TBL023.Discount1+TBL023.ExtraValue+(CASE TBL020.TotalIncludeTax When 0 Then TBL023.TaxValue Else 0 End),TBL023.Quantity) As NetPrice,
 TBL023.ID,TBL023.MainGuide,TBL023.InsertedIn,TBL023.RowGuide,TBL023.ProductGuide,TBL023.Quantity,TBL023.ExtraQuantity,TBL023.Unit,TBL023.TotalValue
 ,TBL023.TotalValue2,TBL023.DiscountValue,TBL023.ExtraValue,TBL023.TaxValue,TBL023.StoreID,TBL023.StatementName,TBL023.ExpiryDate,TBL023.EstablishDate
 ,TBL023.Color,TBL023.Weight,TBL023.Value,TBL023.Length,TBL023.Width,TBL023.Hieght,TBL023.Description,TBL023.CostCenter,TBL023.BillCustom1
 ,TBL023.BillCustom2,TBL023.BillCustom3,TBL023.BillCustom4,TBL023.BillCustom5,TBL023.PatchCode,TBL023.Category01,TBL023.Category02,TBL023.Category03
 ,TBL023.Category04,TBL023.Category05,TBL023.SourceBill,TBL023.RelatedAgent,TBL023.CurrentStage,TBL023.RelatedUnit,TBL023.UnitQuantity
 ,TBL023.SalesPrice,TBL023.Quantity2,TBL023.Description2,TBL023.RelatedObjects,TBL023.Printed,TBL023.Nonmergeable,TBL023.RecordDate
 ,TBL023.RecordSecurity,TBL023.CalcKeyField,TBL023.ProductsAccount,TBL023.Discount1,TBL023.Discount2,TBL023.Discount3,TBL023.BillTax
 ,dbo.Ratio(TBL023.TotalValue,TBL023.UnitQuantity) As VariableUnitPrice,u.UnitName As VariableUnitName
 ,u.Quantity*(case TBL023.Unit When 3 then TBL007.Factor3 When 2 then TBL007.Factor2 else 1 end) As UnitFactor
 ,u.Quantity*TBL023.UnitQuantity*(case TBL023.Unit When 3 then TBL007.Factor3 When 2 then TBL007.Factor2 else 1 end) As UnitMainQuantity
 From TBL023
 Left Join TBL007 On TBL023.ProductGuide=TBL007.CardGuide
 Left Join TBL005 On TBL023.CostCenter=TBL005.CardGuide
 Left Join TBL008 on TBL023.StoreID=TBL008.CardGuide
 Left Join TBL081 c1 On TBL023.Category01=c1.CardGuide
 Left Join TBL081 c2 On TBL023.Category02=c2.CardGuide
 Left Join TBL081 c3 On TBL023.Category03=c3.CardGuide
 Left Join TBL081 c4 On TBL023.Category04=c4.CardGuide
 Left Join TBL081 c5 On TBL023.Category05=c5.CardGuide
 Left Join TBL022 On TBL023.MainGuide=TBL022.CardGuide
 Left Join TBL020 On TBL022.MainGuide=TBL020.CardGuide
 Left Join TBL128 u On TBL023.RelatedUnit=u.CardGuide
GO
/****** Object:  View [dbo].[Qry184]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry184] As Select * From TBL100 Where TypeID=0
GO
/****** Object:  View [dbo].[Qry186]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry186] As Select e.name As TableName, a.id As TableID, b.Name As TypeName ,a.Name As ColName,a.xtype,a.colstat,a.cdefault,a.length,a.colid,c.text,d.name  
 From syscolumns a  
 Left Join systypes b On a.xtype=b.xtype  
 Left Join syscomments c on c.id=a.cdefault  
 left join sysobjects d on d.id=a.cdefault  
 left join sysobjects e on a.id=e.id
GO
/****** Object:  View [dbo].[Qry189]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry189] As Select a.*,b.hostname,b.program_name From ( 
 Select Max(ID)As ID, ObjectID,UserGuide,PCID,Min(EventID)As PointIn,Max(EventID)As PointOut From TBL091 Where EventID Between 10 And 11 
 Group By ObjectID,UserGuide,PCID)a 
 Left Join master..sysprocesses b On a.ObjectID=b.spid 
 Where (a.PointIn>10 Or a.PointOut<11) And (b.SPID Is Null Or dbo.Fun155(a.PCID,b.hostname)<1) 
GO
/****** Object:  View [dbo].[Qry190]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry190] As Select * From TBL026 Where BillType=9
GO
/****** Object:  View [dbo].[Qry191]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry191] As Select TBL067.CardName As TypeName , TBL081.* From TBL081 Left Join TBL067 On TBL067.CardGuide=TBL081.CategoryType
GO
/****** Object:  View [dbo].[Qry192]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry192] As Select (Case CardGuide When (Select Top 1 ValueKey From TBL053 Where OptionName='HRAgentGroup') Then Null Else IsNull(MainGuide,newid()) End) As MainSectionGuide,* From TBL015 
 Where dbo.Fun122((Select Top 1 ValueKey From TBL053 Where OptionName='HRAgentGroup'),CardGuide)>0
GO
/****** Object:  View [dbo].[Qry193]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry193] As Select * From TBL014 Where CardType=1
GO
/****** Object:  View [dbo].[Qry194]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry194] As Select * From TBL014 Where BitValue8=1 And CardType=3
GO
/****** Object:  View [dbo].[Qry195]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry195] As Select * From TBL014 Where CardType=5
GO
/****** Object:  View [dbo].[Qry196]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry196] As Select * From TBL014 Where CardType=4
GO
/****** Object:  View [dbo].[Qry197]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry197] As Select * From TBL033 Where CardTypeID=-5
GO
/****** Object:  View [dbo].[Qry198]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry198] As Select * From TBL014 Where CardType=8
GO
/****** Object:  View [dbo].[Qry199]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry199] As Select * From TBL014 Where CardType=9
GO
/****** Object:  View [dbo].[Qry200]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry200] As Select Convert(varChar(15),a.IntValue01)+':'+ISNULL(d.GroupName,c.AgentName)+IsNull('('+ b.CardName+')','') As CardDescription,c.AgentName,d.GroupName,a.* From TBL014 a 
 Left Join TBL014 b On a.RelatedCard=b.CardGuide 
 Left Join TBL016 c On a.AgentGuide=c.CardGuide 
 Left Join TBL015 d On a.AgentGroupGuide=d.CardGuide 
 Where a.CardType=3
GO
/****** Object:  View [dbo].[Qry201]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry201] As Select TBL010.ID,TBL010.CardGuide,Convert(varchar(100),InsertedIn,120) As Date_Time,TBL009.EntryName,Convert(varchar(15),TBL010.BondNumber)As BondNumber,TBL010.BondDate,TBL009.EntryLatinName,MainGuide From TBL010 Inner Join TBL009 On TBL010.MainGuide=TBL009.CardGuide-- Where TBL009.BondType=1
GO
/****** Object:  View [dbo].[Qry202]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry202] As Select TBL114.ID,a.CardGuide,TBL014.BitValue1,a.CardName,a.LatinName,TBL014.CardName As Reason,a.IntValue03 As DaysPeriod, a.IntValue02 As CardType,(CASE a.IntValue02 When 0 Then 'Additions' Else 'Deductions' End) As TypeCaption, 
 IsNull(Convert(varchar(Max),TBL114.NumberValue01),a.LongText01)As LongText01,a.LongText02, 
 a.Notes,TBL014.BitValue1 As Activated,TBL014.Category01,TBL014.Category02,TBL014.TextValue01 As ProcessNotes,TBL014.Security,TBL114.RelatedAgent,TBL114.NumberValue01, 
 TBL114.NumberValue02 As Qty,IsNull(TBL114.DateValue01,TBL014.Date01) As FromDate, 
 IsNull(TBL114.DateValue02,(CASE When a.IntValue03>0 Then DateAdd(Day,a.IntValue03,IsNull(TBL114.DateValue01,TBL014.Date01)) Else IsNull(TBL114.DateValue01,TBL014.Date01) End)) As ToDate 
 From TBL114 Inner Join TBL014 On TBL114.MainGuide=TBL014.CardGuide 
 Inner Join TBL014 a On TBL014.RelatedCard=a.CardGuide Where TBL014.CardType=6 And a.BitValue1<1
GO
/****** Object:  View [dbo].[Qry203]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry203] As SELECT    IsNull(TBL038.Notes, TBL010.Notes)As Notes,TBL038.ReturnDate, dbo.TBL010.MainGuide, dbo.TBL010.CardGuide, dbo.TBL010.ID, dbo.TBL010.BondNumber AS CardNumber,IsNull(TBL038.EndorsementDate,dbo.TBL010.BondDate) AS InDate, dbo.TBL010.Posted, 
                       a.CardGuide As EntryGuide,a.EntryNumber As EntryNumber, 
                       dbo.TBL010.Security, dbo.TBL038.EndorseToAccountGuide As AccountGuide,IsNull(dbo.TBL038.ContraAccount,TBL010.AccountGuide) As ContraAccount, dbo.TBL038.CurrencyGuide, (dbo.TBL038.Debit + dbo.TBL038.Credit) 
                       / (dbo.TBL038.DebitRate + dbo.TBL038.CreditRate) AS Rate, dbo.TBL038.Debit, dbo.TBL038.Credit, dbo.TBL038.DebitRate, dbo.TBL038.CreditRate, 
                       ISNULL(dbo.TBL038.CostCenter, dbo.TBL010.CostCenter) AS CostCenter, ISNULL(dbo.TBL038.Project, dbo.TBL010.Project) AS Project, ISNULL(dbo.TBL038.Branch, 
                       dbo.TBL010.Branch) AS Branch, dbo.TBL016.CardGuide AS AgentGuide, dbo.TBL038.Collected 
 FROM         dbo.TBL038 LEFT OUTER JOIN 
                       dbo.TBL016 ON dbo.TBL038.EndorseToAccountGuide = dbo.TBL016.AccountID LEFT OUTER JOIN 
                       dbo.TBL010 ON dbo.TBL038.MainGuide = dbo.TBL010.CardGuide LEFT OUTER JOIN 
                       (Select TBL011.CardGuide,TBL011.EntryNumber,TBL011.BondGuide From 
                       (Select Min(TBL011.ID) As MID,TBL011.BondGuide From TBL011 Group By TBL011.BondGuide)a Inner Join TBL011 On a.MID=TBL011.ID) a ON a.BondGuide = dbo.TBL010.CardGuide 
					   Where TBL038.EndorseToAccountGuide Is Not Null
GO
/****** Object:  View [dbo].[Qry204]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry204] As Select * From TBL081 Where NotActive=0
GO
/****** Object:  View [dbo].[Qry205]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry205] As Select ID,CardGuide,CardCode,Convert(Varchar(25),CardNumber)As CardNumber,CurrencyGuide,Rate,Security,CardName,LatinName,MainGuide,CardStatus From TBL078 Where ClassificationCard=0
GO
/****** Object:  View [dbo].[Qry207]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry207] As SELECT     ISNULL(dbo.TBL038.Notes, dbo.TBL010.Notes) AS Notes, dbo.TBL010.MainGuide, dbo.TBL010.CardGuide, dbo.TBL010.ID, dbo.TBL010.BondNumber AS CardNumber, 
                       dbo.TBL011.CardGuide As EntryGuide,dbo.TBL011.EntryNumber As EntryNumber, 
                       TBL038.ReturnDate As InDate, dbo.TBL010.Posted, dbo.TBL010.Security, dbo.TBL038.AccountGuide AS ContraAccount, ISNULL(dbo.TBL038.ContraAccount, 
                       dbo.TBL010.AccountGuide) AS AccountGuide, dbo.TBL038.CurrencyGuide, (dbo.TBL038.Debit + dbo.TBL038.Credit) / (dbo.TBL038.DebitRate + dbo.TBL038.CreditRate) 
                       AS Rate, dbo.TBL038.Debit, dbo.TBL038.Credit, dbo.TBL038.DebitRate, dbo.TBL038.CreditRate, 
                       ISNULL(dbo.TBL038.CostCenter, dbo.TBL010.CostCenter) AS CostCenter, ISNULL(dbo.TBL038.Project, dbo.TBL010.Project) AS Project, ISNULL(dbo.TBL038.Branch, 
                       dbo.TBL010.Branch) AS Branch, dbo.TBL016.CardGuide AS AgentGuide, dbo.TBL038.Collected,TBL038.EndorseToAccountGuide,TBL038.EndorsementDate,TBL038.ReturnDate 
 FROM         dbo.TBL010 LEFT OUTER JOIN 
                       dbo.TBL016 ON dbo.TBL010.AccountGuide = dbo.TBL016.AccountID LEFT OUTER JOIN 
                       dbo.TBL038 ON dbo.TBL038.MainGuide = dbo.TBL010.CardGuide LEFT OUTER JOIN 
                       (Select TBL011.BondGuide,Max(TBL011.ID)As ID From TBL011 Where TBL011.BondGuide Is Not Null Group By TBL011.BondGuide)a ON a.BondGuide = dbo.TBL010.CardGuide 
					      Left Join TBL011 On a.ID=TBL011.ID Where TBL038.ReturnDate Is Not Null
GO
/****** Object:  View [dbo].[Qry208]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry208] As Select * From TBL122 Where CardType=1
GO
/****** Object:  View [dbo].[Qry209]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry209] As Select TBL026.BillName,TBL026.BillLatinName,TBL027.* From TBL027 Inner Join TBL026 On TBL027.MainGuide=TBL026.CardGuide Where TBL026.Billtype=3
GO
/****** Object:  View [dbo].[Qry210]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry210] As SELECT IsNull(TBL038.Notes, TBL010.Notes)As Notes,Null As ReturnDate, dbo.TBL010.MainGuide, dbo.TBL010.CardGuide, dbo.TBL010.ID, dbo.TBL010.BondNumber AS CardNumber,TBL038.ReturnDate AS InDate, dbo.TBL010.Posted, 
                        a.CardGuide As EntryGuide,a.EntryNumber As EntryNumber, 
                        dbo.TBL010.Security, dbo.TBL038.AccountGuide As AccountGuide,TBL010.AccountGuide As ContraAccount, dbo.TBL038.CurrencyGuide, (dbo.TBL038.Debit + dbo.TBL038.Credit) 
                        / (dbo.TBL038.DebitRate + dbo.TBL038.CreditRate) AS Rate, dbo.TBL038.Debit As Credit, dbo.TBL038.Credit As Debit, dbo.TBL038.DebitRate As CreditRate, dbo.TBL038.CreditRate As DebitRate, 
                        ISNULL(dbo.TBL038.CostCenter, dbo.TBL010.CostCenter) AS CostCenter, ISNULL(dbo.TBL038.Project, dbo.TBL010.Project) AS Project, ISNULL(dbo.TBL038.Branch, 
                        dbo.TBL010.Branch) AS Branch, dbo.TBL016.CardGuide AS AgentGuide, dbo.TBL038.Collected 
  FROM         dbo.TBL038 LEFT OUTER JOIN 
                        dbo.TBL016 ON dbo.TBL038.AccountGuide = dbo.TBL016.AccountID LEFT OUTER JOIN 
                        dbo.TBL010 ON dbo.TBL038.MainGuide = dbo.TBL010.CardGuide LEFT OUTER JOIN 
                        (Select TBL011.CardGuide,TBL011.EntryNumber,TBL011.BondGuide From 
                        (Select Min(TBL011.ID) As MID,TBL011.BondGuide From TBL011 Group By TBL011.BondGuide)a Inner Join TBL011 On a.MID=TBL011.ID) a ON a.BondGuide = dbo.TBL010.CardGuide 
 					   Where TBL038.ReturnDate Is Not Null 
GO
/****** Object:  View [dbo].[Qry211]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry211] As Select a.MainGuide,a.CardGuide,a.ID,a.CardNumber,a.EntryGuide,a.EntryNumber,a.InDate,a.Posted,a.Security,a.AccountGuide,a.ContraAccount, 
 a.AgentGuide,a.ContraAgentGuide,a.CurrencyGuide,a.Rate,a.Debit,(CASE When a.DebitRate>0 Then a.DebitRate Else dbo.Ratio(a.Debit,a.Rate) End)As DebitRate, 
 a.Credit,(CASE When a.CreditRate>0 Then a.CreditRate Else dbo.Ratio(a.Credit,a.Rate)End)As CreditRate,a.CostCenter,a.Project,a.Branch,a.StoreGuide,a.Notes From 
 (Select TBL022.MainGuide,TBL022.CardGuide,TBL054.ID,TBL022.BillNumber As CardNumber,TBL011.CardGuide As EntryGuide, 
 TBL011.EntryNumber,TBL022.BillDate As InDate,TBL022.Posted,TBL022.Security,TBL022.PostToAccount As AccountGuide,TBL054.AccountGuide As ContraAccount, 
 TBL016.CardGuide As AgentGuide,TBL016_2.CardGuide As ContraAgentGuide,IsNull(TBL054.CurrencyGuide,TBL022.CurrencyGuide)As CurrencyGuide, 
 (CASE When TBL054.ValueRate>0 And TBL054.Value>0 Then dbo.Ratio(TBL054.Value,TBL054.ValueRate)Else TBL022.Rate End)As Rate, 
 (CASE WHEN TBL020.InvoiceMovementSide<0 Then 0 ELSE TBL054.Value End)As Debit, 
 (CASE WHEN TBL020.InvoiceMovementSide<0 Then 0 ELSE TBL054.ValueRate End)As DebitRate, 
 (CASE WHEN TBL020.InvoiceMovementSide<0 Then TBL054.Value ELSE 0 End)As Credit, 
 (CASE WHEN TBL020.InvoiceMovementSide<0 Then TBL054.ValueRate ELSE 0 End)As CreditRate, 
 TBL022.CostCenter,TBL022.Project,TBL022.Branch,TBL022.StoreGuide,ISNULL(TBL054.Notes,TBL022.Notes)As Notes 
 From TBL022 Inner Join TBL054 On TBL022.CardGuide=TBL054.MainGuide 
 Inner Join TBL020 On TBL022.MainGuide=TBL020.CardGuide 
 Left Join TBL011 On TBL022.CardGuide=TBL011.BillGuide 
 Left Join TBL016 On TBL022.PostToAccount=TBL016.AccountID 
 Left Join TBL016 TBL016_2 On TBL054.AccountGuide=TBL016_2.AccountID)a
GO
/****** Object:  View [dbo].[Qry212]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry212] As Select a.MainGuide,a.CardGuide,a.ID,a.CardNumber,a.EntryGuide,a.EntryNumber,a.InDate,a.Posted,a.Security,a.AccountGuide,a.ContraAccount, 
 a.AgentGuide,a.ContraAgentGuide,a.CurrencyGuide,a.Rate,a.Debit,(CASE When a.DebitRate>0 Then a.DebitRate Else dbo.Ratio(a.Debit,a.Rate) End)As DebitRate, 
 a.Credit,(CASE When a.CreditRate>0 Then a.CreditRate Else dbo.Ratio(a.Credit,a.Rate)End)As CreditRate,a.CostCenter,a.Project,a.Branch,a.StoreGuide,a.Notes From 
 (Select TBL022.MainGuide,TBL022.CardGuide,TBL054.ID,TBL022.BillNumber As CardNumber,TBL011.CardGuide As EntryGuide, 
 TBL011.EntryNumber,TBL022.BillDate As InDate,TBL022.Posted,TBL022.Security,TBL022.PostToAccount As AccountGuide,TBL054.AccountGuide As ContraAccount, 
 TBL016.CardGuide As AgentGuide,TBL016_2.CardGuide As ContraAgentGuide,IsNull(TBL054.CurrencyGuide,TBL022.CurrencyGuide)As CurrencyGuide, 
 (CASE When TBL054.ValueRate>0 And TBL054.Value>0 Then dbo.Ratio(TBL054.Value,TBL054.ValueRate)Else TBL022.Rate End)As Rate, 
 (CASE WHEN TBL020.InvoiceMovementSide>0 Then 0 ELSE TBL054.Value End)As Debit, 
 (CASE WHEN TBL020.InvoiceMovementSide>0 Then 0 ELSE TBL054.ValueRate End)As DebitRate, 
 (CASE WHEN TBL020.InvoiceMovementSide>0 Then TBL054.Value ELSE 0 End)As Credit, 
 (CASE WHEN TBL020.InvoiceMovementSide>0 Then TBL054.ValueRate ELSE 0 End)As CreditRate, 
 TBL022.CostCenter,TBL022.Project,TBL022.Branch,TBL022.StoreGuide,ISNULL(TBL054.Notes,TBL022.Notes)As Notes 
 From TBL022 Inner Join TBL054 On TBL022.CardGuide=TBL054.MainGuide 
 Inner Join TBL020 On TBL022.MainGuide=TBL020.CardGuide 
 Left Join TBL011 On TBL022.CardGuide=TBL011.BillGuide 
 Left Join TBL016 On TBL022.PostToAccount=TBL016.AccountID 
 Left Join TBL016 TBL016_2 On TBL054.AccountGuide=TBL016_2.AccountID)a
GO
/****** Object:  View [dbo].[Qry217]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry217] As Select * From TBL014 Where CardType=19
GO
/****** Object:  View [dbo].[Qry218]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry218] As Select * From TBL026 Where BillType=6
GO
/****** Object:  View [dbo].[Qry219]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry219] As Select b.ProductGuide As OutputProduct,Convert(varchar(100),a.CardNumber)As Number,a.* From  (Select b.Max_ID,a.* From TBL078 a  Inner Join  (Select MainGuide,Max(ID) As Max_ID,Count(*) As Cnt From TBL079 Where IsInPut=1 Group By MainGuide) b On a.CardGuide=b.MainGuide  Where a.ClassificationCard=0 And b.Cnt=1)a  Inner Join TBL079 b On a.Max_ID=b.ID
GO
/****** Object:  View [dbo].[Qry220]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry220] As Select * From TBL133 Where AccountGuide Is Not Null
GO
/****** Object:  View [dbo].[Qry221]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry221] As Select * From TBL133 Where CostCenterGuide Is Not Null
GO
/****** Object:  View [dbo].[Qry222]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry222] As Select * From TBL133 Where ProjectGuide Is Not Null
GO
/****** Object:  View [dbo].[Qry223]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry223] As Select * From TBL133 Where BranchGuide Is Not Null
GO
/****** Object:  View [dbo].[Qry224]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry224] As Select * From TBL133 Where StoreGuide Is Not Null
GO
/****** Object:  View [dbo].[Qry229]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry229] As Select * From TBL014 Where CardType=7 Or CardType=21
GO
/****** Object:  View [dbo].[Qry233]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry233] As Select * From dbo.Fun160() a
GO
/****** Object:  View [dbo].[Qry234]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry234] As Select *,dbo.Ratio(a.Value,a.ValueRate)As CurrencyRate,ISNULL(a.SourceBill,a.BillGuide2)As RelatedBill From 
 (Select b.RowGuide,b.AffectCost,b.AffectCost As AffectCostPrice,a.CardGuide,b.CurrencyGuide,a.BondDate,IsNull(b.Notes,a.Notes)As Notes,b.Debit As Value,b.DebitRate As ValueRate,b.AccountGuide,a.ID,a.BillGuide2,IsNull(b.CostCenter,a.CostCenter)As CostCenter ,b.SourceBill From TBL010 a Inner Join TBL038 b 
 On a.CardGuide=b.MainGuide 
 Where (a.BillGuide2 Is Not Null Or b.SourceBill Is Not Null) And b.Debit>0)a
GO
/****** Object:  View [dbo].[Qry235]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry235] As Select *,dbo.Ratio(a.Value,a.ValueRate)As CurrencyRate,ISNULL(a.SourceBill,a.BillGuide2)As RelatedBill From 
 (Select b.RowGuide,b.AffectCost,b.AffectCost As AffectCostPrice,a.CardGuide,b.CurrencyGuide,a.BondDate,IsNull(b.Notes,a.Notes)As Notes,b.Credit As Value,b.CreditRate As ValueRate,b.AccountGuide,a.ID,a.BillGuide2,IsNull(b.CostCenter,a.CostCenter)As CostCenter,b.SourceBill From TBL010 a Inner Join TBL038 b 
 On a.CardGuide=b.MainGuide 
 Where (a.BillGuide2 Is Not Null Or b.SourceBill Is Not Null) And b.Credit>0)a
GO
/****** Object:  View [dbo].[Qry236]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry236] As Select a.ProductGuide,a.RelatedUnit,Sum((a.Quantity+a.Quantity2)*(CASE a.Unit When 3 Then d.Factor3 When 2 Then d.Factor2 Else 1 END)) as Quantity,a.Unit,Sum(a.UnitQuantity)as UnitQuantity From TBL023 a Inner Join TBL022 b On a.MainGuide=b.CardGuide 
 Inner Join TBL007 d On a.ProductGuide=d.CardGuide 
 Inner Join TBL020 c On b.MainGuide=c.CardGuide 
 Where a.SourceBill Is Not Null 
 Group By a.ProductGuide,a.RelatedUnit,a.Unit
GO
/****** Object:  View [dbo].[Qry237]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry237] As Select * From TBL014 Where CardType=2
GO
/****** Object:  View [dbo].[Qry238]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry238] As Select TBL026.BillName,TBL026.BillLatinName,TBL078.CardName,TBL078.CardName As ManufacturerModelType,Convert(varchar(20),TBL027.CardNumber) As CardNumberStr,TBL026.BillType As BillTypeID,TBL027.* From TBL027 Inner Join TBL026 On TBL027.MainGuide=TBL026.CardGuide 
 Left Join TBL078 On TBL027.ManufacturerModel=TBL078.CardGuide
GO
/****** Object:  View [dbo].[Qry240]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry240] As Select TBL028.ItemGuide As ProductGuide,TBL027.InDate As BillDate,TBL027.AccountA1 As PostToAccount,TBL027.AgentGuide1 As AgentGuide, 
 TBL027.BuildBillNotes2 As BillNotes2,TBL027.BuildBillNotes3 As BillNotes3,TBL027.BuildBillNotes4 As BillNotes4,TBL027.BuildBillNotes5 As BillNotes5,TBL027.BuildBillNotes1 As BillNotes, 
 TBL007.CardCode +'-'+ TBL007.ProductName As iItem,(CASE TBL028.Unit When 3 Then TBL007.Unit3 When 2 Then TBL007.Unit2 Else TBL007.Unit End) As iUnit,Convert(nvarchar(15),TBL027.CardNumber)+'-'+TBL026.BillName As iBill, 
 (CASE When TBL028.CostCenter Is Null Then Null Else TBL005.CardCode+'-'+TBL005.CostCenter End)As iCostCenter, 
 (CASE When TBL028.StoreID Is Null Then Null Else TBL008.CardCode+'-'+TBL008.WarehouseName END)As iStoreID, 
 (CASE When TBL028.Category01 Is Null Then Null Else c1.CardName End)As iCategory01, 
 (CASE When TBL028.Category02 Is Null Then Null Else c2.CardName End)As iCategory02, 
 (CASE When TBL028.Category03 Is Null Then Null Else c3.CardName End)As iCategory03, 
 (CASE When TBL028.Category04 Is Null Then Null Else c4.CardName End)As iCategory04, 
 (CASE When TBL028.Category05 Is Null Then Null Else c5.CardName End)As iCategory05, 
 TBL028.TotalValue/TBL028.Quantity As UnitPrice,dbo.Ratio(TBL028.DiscountValue,TBL028.TotalValue)*100 As DiscountRatio, 
 dbo.Ratio(TBL028.ExtraValue,TBL028.TotalValue)*100 ExtraRatio,dbo.Ratio(TBL028.TaxValue,TBL028.TotalValue)*100 TaxRatio, 
 TBL028.TotalValue-(TBL028.DiscountValue+TBL028.ExtraValue+TBL028.TaxValue) As NetTotal, 
 (TBL028.TotalValue-(TBL028.DiscountValue+TBL028.ExtraValue+TBL028.TaxValue))/TBL028.Quantity As NetPrice, 
 TBL028.ID,TBL028.RowGuide,TBL028.IsInPut,TBL028.MainGuide,TBL028.ItemGuide,TBL028.Quantity,TBL028.Unit,TBL028.TotalValue,TBL028.CostCenter, 
 TBL028.StoreID,TBL028.StatementName,TBL028.Notes,TBL028.Category01,TBL028.Category02,TBL028.Category03,TBL028.Category04,TBL028.Category05, 
 TBL028.RelatedUnit,TBL028.UnitQuantity,TBL028.ExpiryDate,TBL028.EstablishDate,TBL028.DiscountValue,TBL028.ExtraValue,TBL028.TaxValue, 
 TBL028.BillCustom1,TBL028.BillCustom2,TBL028.BillCustom3,TBL028.BillCustom4,TBL028.BillCustom5,TBL028.PatchCode,TBL028.SplitBill, 
 TBL028.ExtraQuantity,TBL028.Length,TBL028.Width,TBL028.Hieght,TBL028.Weight,TBL028.Value,TBL028.SalesPrice,TBL028.Description,TBL028.SourceBill, 
 TBL028.Nonmergeable,TBL028.Printed,TBL028.CurrentStage,TBL028.SourceOperationBill,TBL028.ProductsAccount,TBL028.ManufacturerModel, 
 TBL028.RelatedAgent,TBL028.QuantityRatio,TBL028.BillTax,TBL028.Discount1,TBL028.Discount2,TBL028.Discount3 
 From TBL028 
 Left Join TBL007 On TBL028.ItemGuide=TBL007.CardGuide 
 Left Join TBL005 On TBL028.CostCenter=TBL005.CardGuide 
 Left Join TBL008 on TBL028.StoreID=TBL008.CardGuide 
 Left Join TBL081 c1 On TBL028.Category01=c1.CardGuide 
 Left Join TBL081 c2 On TBL028.Category02=c2.CardGuide 
 Left Join TBL081 c3 On TBL028.Category03=c3.CardGuide 
 Left Join TBL081 c4 On TBL028.Category04=c4.CardGuide 
 Left Join TBL081 c5 On TBL028.Category05=c5.CardGuide 
 Left Join TBL027 On TBL028.MainGuide=TBL027.CardGuide 
 Left Join TBL026 On TBL027.MainGuide=TBL026.CardGuide
GO
/****** Object:  View [dbo].[Qry241]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry241] As Select ID,CardGuide,CardCode,Convert(Varchar(25),CardNumber)As CardNumber,Convert(Varchar(25),CardNumber)As Number,CurrencyGuide,Rate,Security,CardName,LatinName,MainGuide,CardStatus From TBL078
GO
/****** Object:  View [dbo].[Qry242]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry242] As Select Convert(Varchar(25),a.CardNumber)As Number,a.* From TBL078 a Left Join 
 (Select MainGuide,Count(*) As Cnt From TBL078 Group By MainGuide) b On a.CardGuide=b.MainGuide 
 Where b.MainGuide Is Not Null Or a.ClassificationCard=1
GO
/****** Object:  View [dbo].[Qry243]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry243] As Select * From TBL147 Where TypeID=0
GO
/****** Object:  View [dbo].[Qry245]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry245] As Select * From TBL133 Where GroupGuide Is Not Null
GO
/****** Object:  View [dbo].[Qry247]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry247] As Select * From TBL074 Where PriceType=108
GO
/****** Object:  View [dbo].[Qry248]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry248] As Select * From TBL074 Where PriceType=110
GO
/****** Object:  View [dbo].[Qry249]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry249] As Select * From TBL074 Where PriceType=111
GO
/****** Object:  View [dbo].[Qry250]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry250] As Select * From TBL122 Where CardType=3
GO
/****** Object:  View [dbo].[Qry251]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry251] As select a.*,b.PKField from 
 (Select b.id,b.name As TableName,a.name As IndexName,(case when a.status>0 then 1 else 0 end)as IsClustered,a.indid,c.colid,d.name As Colname From sysindexes a 
 inner join sysobjects b on a.id=b.id 
 inner join sysindexkeys c on a.id=c.id and a.indid=c.indid 
 inner join syscolumns d on a.id=d.id and c.colid=d.colid 
 where b.xtype='U' and (a.status=2066 or a.status=0) 
 )a 
 inner Join 
 ( 
 select c.id,c.name as TableName,min(a.COLUMN_NAME) as PKField from INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE a 
 Inner Join (Select name,parent_obj From sysobjects where xtype='PK')b on a.CONSTRAINT_NAME=b.name 
 inner join sysobjects c on b.parent_obj=c.id 
 group by c.id,c.name)b on a.id=b.id
GO
/****** Object:  View [dbo].[Qry252]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry252] As Select b.*,a.Quantity,a.VariableUnit,a.VariableUnitBarcode,a.ExpiryDate,Null as Lump,'' As CustomValue , 
 c.CardCode AS GroupCardCode, c.GroupName, c.LatinName AS GroupLatinName,c.ForceCodesInInput,c.ForceCodesInOutput,c.CannotDuplicateSerial, 
 c.Notes AS GroupNotes From 
 (SELECT Sum((CASE TBL020.InvoiceMovementSide When 1 Then 
 (case TBL023.Unit When 2 then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor2 When 3 Then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor3 Else (TBL023.Quantity+ExtraQuantity) End)Else 0 End)) 
 -Sum((CASE TBL020.InvoiceMovementSide When -1 Then (case TBL023.Unit When 2 then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor2 When 3 Then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor3 Else (TBL023.Quantity+ExtraQuantity) End)Else 0 End)) AS Quantity, 
 TBL023.ProductGuide,TBL023.ExpiryDate,TBL128.UnitName As VariableUnit,TBL128.Barcode As VariableUnitBarcode 
 FROM TBL023 INNER JOIN 
 TBL022 ON TBL023.MainGuide = TBL022.CardGuide 
 INNER JOIN TBL020 ON TBL022.MainGuide = TBL020.CardGuide 
 INNER JOIN TBL007 ON TBL023.ProductGuide = TBL007.CardGuide 
 LEFT JOIN TBL128 On TBL023.RelatedUnit=TBL128.CardGuide 
 Where TBL022.Posted>0 And TBL007.StockProduct>0 
 GROUP BY TBL023.ProductGuide,TBL023.ExpiryDate,TBL128.UnitName,TBL128.Barcode)a 
 Inner Join TBL007 b On a.ProductGuide=b.CardGuide 
 Inner Join TBL006 c On b.GroupGuid=c.CardGuide
GO
/****** Object:  View [dbo].[Qry253]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry253] As Select * From TBL133 Where AgentsGroupGuide Is Not Null
GO
/****** Object:  View [dbo].[Qry254]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry254] As Select c.name As TableName,d.name As FieldName,a.text As DefaultValue,b.name As DefaultValueName From syscomments a
 inner join sysobjects b on a.id=b.id
 inner join sysobjects c on b.parent_obj=c.id
 inner join syscolumns d on b.parent_obj=d.id and a.colid=d.colid
 where b.xtype='D'
GO
/****** Object:  View [dbo].[Qry256]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry256] As Select a.*,IsNull(n.SonsCount,0) As SonsCount From 
 (Select 0 As TypeID,CheckAgentsGroups From TBL042 Where CardGuide=dbo.Fun159()) c 
 Inner Join 
 TBL015 a On c.TypeID=0 
 Left Join (Select MainGuide,Count(*) As SonsCount From TBL015 Group By MainGuide) n On a.CardGuide=n.MainGuide 
 Left Join (Select AgentsGroupGuide From TBL133 Where AgentsGroupGuide Is Not Null And MainGuide=dbo.Fun159())b 
 On (a.CardGuide=b.AgentsGroupGuide) 
 Where (c.CheckAgentsGroups Is Null Or c.CheckAgentsGroups=0 Or b.AgentsGroupGuide Is Not Null)
GO
/****** Object:  View [dbo].[Qry257]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry257] As Select a.ProductGuide,a.StoreGuide,Sum(a.Quantity)As Quantity From 
 (SELECT IsNull(TBL023.StoreID,TBL022.CardGuide)As StoreGuide, 
 (CASE TBL020.InvoiceMovementSide When 1 Then 
 (case TBL023.Unit When 2 then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor2 When 3 Then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor3 Else (TBL023.Quantity+ExtraQuantity) End)Else 0 End) 
 -(CASE TBL020.InvoiceMovementSide When -1 Then (case TBL023.Unit When 2 then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor2 When 3 Then (TBL023.Quantity+ExtraQuantity)*TBL007.Factor3 Else (TBL023.Quantity+ExtraQuantity) End)Else 0 End) AS Quantity, 
 TBL023.ProductGuide 
 FROM TBL023 INNER JOIN 
 TBL022 ON TBL023.MainGuide = TBL022.CardGuide 
 INNER JOIN TBL020 ON TBL022.MainGuide = TBL020.CardGuide 
 INNER JOIN TBL007 ON TBL023.ProductGuide = TBL007.CardGuide 
 LEFT JOIN TBL128 On TBL023.RelatedUnit=TBL128.CardGuide 
 Where TBL022.Posted>0 And TBL007.StockProduct>0)a 
 GROUP BY a.ProductGuide,a.StoreGuide
GO
/****** Object:  View [dbo].[Qry258]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry258] As Select a.MainGroupGuide As AgentsGroupGuide,a.*,g.GroupName,g.ID As GroupID,Convert(varchar(255),a.CardNumber)As Number,e.Debit-e.Credit As Balance From 
 TBL016 a 
 Left Join TBL015 g On a.MainGroupGuide=g.CardGuide 
 Left Join (Select Sum(TBL012.Debit)As Debit,Sum(TBL012.Credit)As Credit,AccountGuide From TBL012 Left Join TBL011 
 On TBL012.MainGuide=TBL011.CardGuide 
 Where TBL011.Posted>0 
 Group By TBL012.AccountGuide) e On a.AccountID=e.AccountGuide 
 Where a.NotActive=0
GO
/****** Object:  View [dbo].[Qry259]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry259] As Select b.InvoiceName,b.LatinName As InvoiceLatinName,b.InvoiceMovementSide,dbo.Ratio(a.TaxValue*100,a.ItemTotal) As TaxRatio,a.*, 
 f.CardCode As StoreCode,f.WarehouseName As StoreName,f.CardCode+'-'+f.WarehouseName As Store, 
 c.CardCode As CostCenterCode,c.CostCenter As CostCenterName,c.CardCode+'-'+c.CostCenter As CostCenter, 
 d.CardCode As ProjecrCode,d.ProjectName,d.CardCode+'-'+d.ProjectName As Project, 
 e.CardCode As BranchCode,e.BronchName As BranchName,e.CardCode+'-'+e.BronchName As Branch 
 From 
 (Select a.ProductGuide,b.CardGuide As InvoiceGuide,c.CardCode As ItemCode,c.ProductName As ItemName,b.MainGuide As InvoiceTypeGuide, 
 b.BillNumber,b.BillDate,a.Description As ItemDescription,b.Notes As BillNotes1,b.BillNotes2,b.BillNotes3,b.BillNotes4,b.BillNotes5, 
 (case a.Unit When 3 then c.Factor3 when 2 then c.Factor2 else 1 end) * (a.Quantity+a.ExtraQuantity) As Qty,a.TaxValue, 
 a.TotalValue+a.ExtraValue-a.DiscountValue-a.Discount1 As NetValue,a.TotalValue+a.ExtraValue-a.DiscountValue As ItemTotal, 
 IsNull(a.StoreID,b.StoreGuide)As StoreGuide,IsNull(a.CostCenter,b.CostCenter)As CostCenterGuide,b.Project As ProjectGuide,b.Branch As BranchGuide, 
 a.Category01 As CategoryGuide01,a.Category02 As CategoryGuide02,a.Category03 As CategoryGuide03,a.Category04 As CategoryGuide04,a.Category05 As CategoryGuide05 
 From TBL023 a 
 Inner Join TBL022 b On a.MainGuide=b.CardGuide 
 Inner Join TBL007 c On a.ProductGuide=c.CardGuide)a 
 Inner Join TBL020 b On a.InvoiceTypeGuide=b.CardGuide 
 Left Join TBL005 c On a.CostCenterGuide=c.CardGuide 
 Left Join TBL049 d On a.ProjectGuide=d.CardGuide 
 Left Join TBL050 e On a.BranchGuide=e.CardGuide 
 Left Join TBL008 f On a.StoreGuide=f.CardGuide
GO
/****** Object:  View [dbo].[Qry260]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry260] As Select a.*,b.OperationBill As MainOperationBill From TBL022 a Inner Join TBL020 b On a.MainGuide=b.CardGuide where b.BillType=8 
GO
/****** Object:  View [dbo].[Qry261]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry261] As Select * From TBL014 Where CardType=19 
GO
/****** Object:  View [dbo].[Qry262]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry262] As Select * From TBL053 Where OptionName='PreviousYears' 
GO
/****** Object:  View [dbo].[Qry263]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry263] As Select a.*,b.CardLevel,b.HeadGuide From TBL030 a Inner Join dbo.Fun189() b On a.CardGuide=b.CardGuide
GO
/****** Object:  View [dbo].[Qry265]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry265] As Select * From TBL147 Where TypeID=0
GO
/****** Object:  View [dbo].[Qry266]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry266] As Select * From TBL147 Where TypeID=1
GO
/****** Object:  View [dbo].[Qry270]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry270] As Select b.BillDate As RecordDate,c.InvoiceName +' ( '+Convert(varchar(15),b.BillNumber)+' )' As RecordCaption,b.CardGuide,dbo.Fun192(b.CardGuide,a.ValueText,1) As APILink From 
 (Select ValueKey,ValueText From TBL053 with (nolock) Where OptionName='APIBillMissions' And ValueBoolean=0)a 
 Inner Join TBL022 b with (nolock) On a.ValueKey=b.MainGuide 
 Inner Join TBL020 c with (nolock) On a.ValueKey=c.CardGuide 
 Where b.APIReply is null
GO
/****** Object:  View [dbo].[Qry271]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry271] As Select * From TBL162 Where Executed=0
GO
/****** Object:  View [dbo].[Qry272]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Qry272] As Select b.*,p.PriceValue As SavedTotalCost,p.PriceValue/((b.Quantity+b.ExtraQuantity)*(case b.Unit when 3 then c.Factor3 when 2 then c.Factor2 else 1 end)) As SavedCost 
 From TBL023 b 
 Inner Join TBL007 c On b.ProductGuide=c.CardGuide 
 left Join TBL074 p On p.BillRowGuide=b.RowGuide   
 Where p.PriceType Is Null Or p.PriceType=200
GO
/****** Object:  View [dbo].[QryBill001]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create View [dbo].[QryBill001] As 
 Select s.ID As SortID, 
 TBL007.*,a.Qty As Quantity,q.Qty as StoreQuantity,TBL006.GroupName,TBL007.LatinName As MainLatinName,TBL006.LatinName As GroupLatinName,TBL006.CardCode As GroupCardCode From 
 TBL007 with(nolock) Left Join (Select * From TBL055 with(nolock) Where BillGuide = '3478a885-6d69-4058-892e-8a57496db9bc') l On l.GroupGuide=TBL007.GroupGuid 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) Left Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 Left Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 Left Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0)a 
 Group By ProductGuide 
 )a On TBL007.CardGuide=a.ProductGuide 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 inner Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0  And (a.StoreID='6f058e4b-69b5-43e9-9873-697091c98591' Or (a.StoreID Is Null And b.StoreGuide='6f058e4b-69b5-43e9-9873-697091c98591'))
 )a 
 Group By ProductGuide 
 )q On a.ProductGuide=q.ProductGuide 
 Left Join TBL006 with(nolock) On TBL007.GroupGuid=TBL006.CardGuide 
 Left Join (Select * From TBL056 with(nolock) Where TBL056.BillGuide='3478a885-6d69-4058-892e-8a57496db9bc')s On TBL007.CardGuide=s.ItemGuide 
 Where (Select Count(*) From TBL055 with(nolock) Where BillGuide = '3478a885-6d69-4058-892e-8a57496db9bc')=0 Or l.ID Is not null 
GO
/****** Object:  View [dbo].[QryBill002]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create View [dbo].[QryBill002] As 
 Select s.ID As SortID, 
 TBL007.*,a.Qty As Quantity,q.Qty as StoreQuantity,TBL006.GroupName,TBL007.LatinName As MainLatinName,TBL006.LatinName As GroupLatinName,TBL006.CardCode As GroupCardCode From 
 TBL007 with(nolock) Left Join (Select * From TBL055 with(nolock) Where BillGuide = '1118a885-6d69-4058-892e-8a57496db9bc') l On l.GroupGuide=TBL007.GroupGuid 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) Left Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 Left Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 Left Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0)a 
 Group By ProductGuide 
 )a On TBL007.CardGuide=a.ProductGuide 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 inner Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0  And (a.StoreID='6f058e4b-69b5-43e9-9873-697091c98591' Or (a.StoreID Is Null And b.StoreGuide='6f058e4b-69b5-43e9-9873-697091c98591'))
 )a 
 Group By ProductGuide 
 )q On a.ProductGuide=q.ProductGuide 
 Left Join TBL006 with(nolock) On TBL007.GroupGuid=TBL006.CardGuide 
 Left Join (Select * From TBL056 with(nolock) Where TBL056.BillGuide='1118a885-6d69-4058-892e-8a57496db9bc')s On TBL007.CardGuide=s.ItemGuide 
 Where (Select Count(*) From TBL055 with(nolock) Where BillGuide = '1118a885-6d69-4058-892e-8a57496db9bc')=0 Or l.ID Is not null 
GO
/****** Object:  View [dbo].[QryBill003]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create View [dbo].[QryBill003] As 
 Select s.ID As SortID, 
 TBL007.*,a.Qty As Quantity,q.Qty as StoreQuantity,TBL006.GroupName,TBL007.LatinName As MainLatinName,TBL006.LatinName As GroupLatinName,TBL006.CardCode As GroupCardCode From 
 TBL007 with(nolock) Left Join (Select * From TBL055 with(nolock) Where BillGuide = '2228a885-6d69-4058-892e-8a57496db9bc') l On l.GroupGuide=TBL007.GroupGuid 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) Left Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 Left Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 Left Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0)a 
 Group By ProductGuide 
 )a On TBL007.CardGuide=a.ProductGuide 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 inner Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0  And (a.StoreID='6f058e4b-69b5-43e9-9873-697091c98591' Or (a.StoreID Is Null And b.StoreGuide='6f058e4b-69b5-43e9-9873-697091c98591'))
 )a 
 Group By ProductGuide 
 )q On a.ProductGuide=q.ProductGuide 
 Left Join TBL006 with(nolock) On TBL007.GroupGuid=TBL006.CardGuide 
 Left Join (Select * From TBL056 with(nolock) Where TBL056.BillGuide='2228a885-6d69-4058-892e-8a57496db9bc')s On TBL007.CardGuide=s.ItemGuide 
 Where (Select Count(*) From TBL055 with(nolock) Where BillGuide = '2228a885-6d69-4058-892e-8a57496db9bc')=0 Or l.ID Is not null 
GO
/****** Object:  View [dbo].[QryBill004]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create View [dbo].[QryBill004] As 
 Select s.ID As SortID, 
 TBL007.*,a.Qty As Quantity,q.Qty as StoreQuantity,TBL006.GroupName,TBL007.LatinName As MainLatinName,TBL006.LatinName As GroupLatinName,TBL006.CardCode As GroupCardCode From 
 TBL007 with(nolock) Left Join (Select * From TBL055 with(nolock) Where BillGuide = '3338a885-6d69-4058-892e-8a57496db9bc') l On l.GroupGuide=TBL007.GroupGuid 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) Left Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 Left Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 Left Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0)a 
 Group By ProductGuide 
 )a On TBL007.CardGuide=a.ProductGuide 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 inner Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0  And (a.StoreID='6f058e4b-69b5-43e9-9873-697091c98591' Or (a.StoreID Is Null And b.StoreGuide='6f058e4b-69b5-43e9-9873-697091c98591'))
 )a 
 Group By ProductGuide 
 )q On a.ProductGuide=q.ProductGuide 
 Left Join TBL006 with(nolock) On TBL007.GroupGuid=TBL006.CardGuide 
 Left Join (Select * From TBL056 with(nolock) Where TBL056.BillGuide='3338a885-6d69-4058-892e-8a57496db9bc')s On TBL007.CardGuide=s.ItemGuide 
 Where (Select Count(*) From TBL055 with(nolock) Where BillGuide = '3338a885-6d69-4058-892e-8a57496db9bc')=0 Or l.ID Is not null 
GO
/****** Object:  View [dbo].[QryBill005]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create View [dbo].[QryBill005] As 
 Select s.ID As SortID, 
 TBL007.*,a.Qty As Quantity,q.Qty as StoreQuantity,TBL006.GroupName,TBL007.LatinName As MainLatinName,TBL006.LatinName As GroupLatinName,TBL006.CardCode As GroupCardCode From 
 TBL007 with(nolock) Left Join (Select * From TBL055 with(nolock) Where BillGuide = 'cebddeb4-22ec-4b08-85da-7a3ad625e7fa') l On l.GroupGuide=TBL007.GroupGuid 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) Left Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 Left Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 Left Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0)a 
 Group By ProductGuide 
 )a On TBL007.CardGuide=a.ProductGuide 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 inner Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0 
 )a 
 Group By ProductGuide 
 )q On a.ProductGuide=q.ProductGuide 
 Left Join TBL006 with(nolock) On TBL007.GroupGuid=TBL006.CardGuide 
 Left Join (Select * From TBL056 with(nolock) Where TBL056.BillGuide='cebddeb4-22ec-4b08-85da-7a3ad625e7fa')s On TBL007.CardGuide=s.ItemGuide 
 Where (Select Count(*) From TBL055 with(nolock) Where BillGuide = 'cebddeb4-22ec-4b08-85da-7a3ad625e7fa')=0 Or l.ID Is not null 
GO
/****** Object:  View [dbo].[QryBill006]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create View [dbo].[QryBill006] As 
 Select s.ID As SortID, 
 TBL007.*,a.Qty As Quantity,q.Qty as StoreQuantity,TBL006.GroupName,TBL007.LatinName As MainLatinName,TBL006.LatinName As GroupLatinName,TBL006.CardCode As GroupCardCode From 
 TBL007 with(nolock) Left Join (Select * From TBL055 with(nolock) Where BillGuide = 'e1afe377-c1fe-413c-8472-efb9630243dc') l On l.GroupGuide=TBL007.GroupGuid 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) Left Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 Left Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 Left Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0)a 
 Group By ProductGuide 
 )a On TBL007.CardGuide=a.ProductGuide 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 inner Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0 
 )a 
 Group By ProductGuide 
 )q On a.ProductGuide=q.ProductGuide 
 Left Join TBL006 with(nolock) On TBL007.GroupGuid=TBL006.CardGuide 
 Left Join (Select * From TBL056 with(nolock) Where TBL056.BillGuide='e1afe377-c1fe-413c-8472-efb9630243dc')s On TBL007.CardGuide=s.ItemGuide 
 Where (Select Count(*) From TBL055 with(nolock) Where BillGuide = 'e1afe377-c1fe-413c-8472-efb9630243dc')=0 Or l.ID Is not null 
GO
/****** Object:  View [dbo].[QryBill007]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create View [dbo].[QryBill007] As 
 Select s.ID As SortID, 
 TBL007.*,a.Qty As Quantity,q.Qty as StoreQuantity,TBL006.GroupName,TBL007.LatinName As MainLatinName,TBL006.LatinName As GroupLatinName,TBL006.CardCode As GroupCardCode From 
 TBL007 with(nolock) Left Join (Select * From TBL055 with(nolock) Where BillGuide = 'c488222a-b265-467b-8501-5eb5e1cc650a') l On l.GroupGuide=TBL007.GroupGuid 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) Left Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 Left Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 Left Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0)a 
 Group By ProductGuide 
 )a On TBL007.CardGuide=a.ProductGuide 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 inner Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0 
 )a 
 Group By ProductGuide 
 )q On a.ProductGuide=q.ProductGuide 
 Left Join TBL006 with(nolock) On TBL007.GroupGuid=TBL006.CardGuide 
 Left Join (Select * From TBL056 with(nolock) Where TBL056.BillGuide='c488222a-b265-467b-8501-5eb5e1cc650a')s On TBL007.CardGuide=s.ItemGuide 
 Where (Select Count(*) From TBL055 with(nolock) Where BillGuide = 'c488222a-b265-467b-8501-5eb5e1cc650a')=0 Or l.ID Is not null 
GO
/****** Object:  View [dbo].[QryBill008]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create View [dbo].[QryBill008] As 
 Select s.ID As SortID, 
 TBL007.*,a.Qty As Quantity,q.Qty as StoreQuantity,TBL006.GroupName,TBL007.LatinName As MainLatinName,TBL006.LatinName As GroupLatinName,TBL006.CardCode As GroupCardCode From 
 TBL007 with(nolock) Left Join (Select * From TBL055 with(nolock) Where BillGuide = '18a4854e-6e14-4273-89a3-c8649cf77e19') l On l.GroupGuide=TBL007.GroupGuid 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) Left Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 Left Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 Left Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0)a 
 Group By ProductGuide 
 )a On TBL007.CardGuide=a.ProductGuide 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 inner Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0  And (a.StoreID='6f058e4b-69b5-43e9-9873-697091c98591' Or (a.StoreID Is Null And b.StoreGuide='6f058e4b-69b5-43e9-9873-697091c98591'))
 )a 
 Group By ProductGuide 
 )q On a.ProductGuide=q.ProductGuide 
 Left Join TBL006 with(nolock) On TBL007.GroupGuid=TBL006.CardGuide 
 Left Join (Select * From TBL056 with(nolock) Where TBL056.BillGuide='18a4854e-6e14-4273-89a3-c8649cf77e19')s On TBL007.CardGuide=s.ItemGuide 
 Where (Select Count(*) From TBL055 with(nolock) Where BillGuide = '18a4854e-6e14-4273-89a3-c8649cf77e19')=0 Or l.ID Is not null 
GO
/****** Object:  View [dbo].[QryBill009]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create View [dbo].[QryBill009] As 
 Select s.ID As SortID, 
 TBL007.*,a.Qty As Quantity,q.Qty as StoreQuantity,TBL006.GroupName,TBL007.LatinName As MainLatinName,TBL006.LatinName As GroupLatinName,TBL006.CardCode As GroupCardCode From 
 TBL007 with(nolock) Left Join (Select * From TBL055 with(nolock) Where BillGuide = '63efa4a6-6ae4-43ff-b445-91883cbe64b2') l On l.GroupGuide=TBL007.GroupGuid 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) Left Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 Left Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 Left Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0)a 
 Group By ProductGuide 
 )a On TBL007.CardGuide=a.ProductGuide 
 Left Join ( 
 Select ProductGuide, SUM(Qty)As Qty From 
 (Select a.ProductGuide,(a.Quantity+a.ExtraQuantity)* 
 (Case a.Unit When 3 Then d.Factor3 
 When 2 Then d.Factor2 Else 1 End)*c.InvoiceMovementSide As Qty ,c.DefaultStore 
 From TBL023 a with(nolock) inner Join TBL022 b with(nolock) On a.MainGuide=b.CardGuide 
 inner Join TBL020 c with(nolock) On b.MainGuide=c.CardGuide 
 inner Join TBL007 d with(nolock) On a.ProductGuide=d.CardGuide 
 Where b.Posted>0 
 )a 
 Group By ProductGuide 
 )q On a.ProductGuide=q.ProductGuide 
 Left Join TBL006 with(nolock) On TBL007.GroupGuid=TBL006.CardGuide 
 Left Join (Select * From TBL056 with(nolock) Where TBL056.BillGuide='63efa4a6-6ae4-43ff-b445-91883cbe64b2')s On TBL007.CardGuide=s.ItemGuide 
 Where (Select Count(*) From TBL055 with(nolock) Where BillGuide = '63efa4a6-6ae4-43ff-b445-91883cbe64b2')=0 Or l.ID Is not null 
GO
/****** Object:  View [dbo].[SQL_GetDate]    Script Date: 8/14/2023 4:54:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SQL_GetDate] 
 AS 
 SELECT     GETDATE() AS MyGetDate
GO
/****** Object:  Index [IDX_TBL001_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL001_CardGuide] ON [dbo].[TBL001]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL001_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL001_ID] ON [dbo].[TBL001]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL002_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL002_CardGuide] ON [dbo].[TBL002]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL002_CardGuide_BalanceAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL002_CardGuide_BalanceAccount] ON [dbo].[TBL002]
(
	[BalanceAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL002_CardGuide_BeginningInventoryAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL002_CardGuide_BeginningInventoryAccount] ON [dbo].[TBL002]
(
	[BeginningInventoryAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL002_CardGuide_ClosingInventoryAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL002_CardGuide_ClosingInventoryAccount] ON [dbo].[TBL002]
(
	[ClosingInventoryAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL002_CardGuide_MasterCloseAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL002_CardGuide_MasterCloseAccount] ON [dbo].[TBL002]
(
	[MasterCloseAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL002_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL002_ID] ON [dbo].[TBL002]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IDX_TBL003_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL003_CardGuide] ON [dbo].[TBL003]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL003_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL003_ID] ON [dbo].[TBL003]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL004_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL004_CardGuide] ON [dbo].[TBL004]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL004_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL004_CardGuide_ByGroup] ON [dbo].[TBL004]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL004_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL004_CardGuide_ByUser] ON [dbo].[TBL004]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL004_CardGuide_ClosingAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL004_CardGuide_ClosingAccount] ON [dbo].[TBL004]
(
	[ClosingAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL004_CardGuide_DefaultBranch]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL004_CardGuide_DefaultBranch] ON [dbo].[TBL004]
(
	[DefaultBranch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL004_CardGuide_DefaultCostCenter]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL004_CardGuide_DefaultCostCenter] ON [dbo].[TBL004]
(
	[DefaultCostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL004_CardGuide_DefaultCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL004_CardGuide_DefaultCurrency] ON [dbo].[TBL004]
(
	[DefaultCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL004_CardGuide_DefaultProject]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL004_CardGuide_DefaultProject] ON [dbo].[TBL004]
(
	[DefaultProject] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL004_CardGuide_MainAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL004_CardGuide_MainAccount] ON [dbo].[TBL004]
(
	[MainAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL004_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL004_ID] ON [dbo].[TBL004]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL005_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL005_CardGuide] ON [dbo].[TBL005]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL005_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL005_CardGuide_ByGroup] ON [dbo].[TBL005]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL005_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL005_CardGuide_ByUser] ON [dbo].[TBL005]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL005_CardGuide_DefaultAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL005_CardGuide_DefaultAccount] ON [dbo].[TBL005]
(
	[DefaultAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL005_CardGuide_DefaultAccount2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL005_CardGuide_DefaultAccount2] ON [dbo].[TBL005]
(
	[DefaultAccount2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL005_CardGuide_DefaultAccount3]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL005_CardGuide_DefaultAccount3] ON [dbo].[TBL005]
(
	[DefaultAccount3] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL005_CardGuide_MainCostCenter]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL005_CardGuide_MainCostCenter] ON [dbo].[TBL005]
(
	[MainCostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL005_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL005_ID] ON [dbo].[TBL005]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL006_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL006_CardGuide] ON [dbo].[TBL006]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL006_CardGuide_BalanceSheetClosing]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL006_CardGuide_BalanceSheetClosing] ON [dbo].[TBL006]
(
	[BalanceSheetClosing] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL006_CardGuide_BarcodeType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL006_CardGuide_BarcodeType] ON [dbo].[TBL006]
(
	[BarcodeType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL006_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL006_CardGuide_ByGroup] ON [dbo].[TBL006]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL006_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL006_CardGuide_ByUser] ON [dbo].[TBL006]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL006_CardGuide_MainAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL006_CardGuide_MainAccount] ON [dbo].[TBL006]
(
	[MainAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL006_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL006_CardGuide_MainGuide] ON [dbo].[TBL006]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL006_CardGuide_TradingClosing]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL006_CardGuide_TradingClosing] ON [dbo].[TBL006]
(
	[TradingClosing] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL006_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL006_ID] ON [dbo].[TBL006]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide] ON [dbo].[TBL007]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_AccountID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_AccountID] ON [dbo].[TBL007]
(
	[AccountID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_AgentPriceCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_AgentPriceCurrency] ON [dbo].[TBL007]
(
	[AgentPriceCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_ByGroup] ON [dbo].[TBL007]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_ByUser] ON [dbo].[TBL007]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_Category01]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_Category01] ON [dbo].[TBL007]
(
	[Category01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_Category02]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_Category02] ON [dbo].[TBL007]
(
	[Category02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_Category03]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_Category03] ON [dbo].[TBL007]
(
	[Category03] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_Category04]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_Category04] ON [dbo].[TBL007]
(
	[Category04] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_Category05]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_Category05] ON [dbo].[TBL007]
(
	[Category05] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_DefaultCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_DefaultCurrency] ON [dbo].[TBL007]
(
	[DefaultCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_DefaultVariableUnit]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_DefaultVariableUnit] ON [dbo].[TBL007]
(
	[DefaultVariableUnit] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_EndUserPriceCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_EndUserPriceCurrency] ON [dbo].[TBL007]
(
	[EndUserPriceCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_GroupGuid]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_GroupGuid] ON [dbo].[TBL007]
(
	[GroupGuid] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_Price5ItemCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_Price5ItemCurrency] ON [dbo].[TBL007]
(
	[Price5ItemCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_Price6ItemCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_Price6ItemCurrency] ON [dbo].[TBL007]
(
	[Price6ItemCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_Price7ItemCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_Price7ItemCurrency] ON [dbo].[TBL007]
(
	[Price7ItemCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_RelatedAgent]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_RelatedAgent] ON [dbo].[TBL007]
(
	[RelatedAgent] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_StanderCostCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_StanderCostCurrency] ON [dbo].[TBL007]
(
	[StanderCostCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_CardGuide_WholePriceCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_CardGuide_WholePriceCurrency] ON [dbo].[TBL007]
(
	[WholePriceCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL007_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL007_ID] ON [dbo].[TBL007]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL008_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL008_CardGuide] ON [dbo].[TBL008]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL008_CardGuide_BalanceSheetClosing]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL008_CardGuide_BalanceSheetClosing] ON [dbo].[TBL008]
(
	[BalanceSheetClosing] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL008_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL008_CardGuide_ByGroup] ON [dbo].[TBL008]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL008_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL008_CardGuide_ByUser] ON [dbo].[TBL008]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL008_CardGuide_MainWarehouse]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL008_CardGuide_MainWarehouse] ON [dbo].[TBL008]
(
	[MainWarehouse] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL008_CardGuide_TradingClosing]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL008_CardGuide_TradingClosing] ON [dbo].[TBL008]
(
	[TradingClosing] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL008_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL008_ID] ON [dbo].[TBL008]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide] ON [dbo].[TBL009]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_BankProcuringCommissionAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_BankProcuringCommissionAccount] ON [dbo].[TBL009]
(
	[BankProcuringCommissionAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_Category01]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_Category01] ON [dbo].[TBL009]
(
	[Category01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_Category02]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_Category02] ON [dbo].[TBL009]
(
	[Category02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_Category03]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_Category03] ON [dbo].[TBL009]
(
	[Category03] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_Category04]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_Category04] ON [dbo].[TBL009]
(
	[Category04] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_Category05]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_Category05] ON [dbo].[TBL009]
(
	[Category05] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_CollectAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_CollectAccount] ON [dbo].[TBL009]
(
	[CollectAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_DefaultAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_DefaultAccount] ON [dbo].[TBL009]
(
	[DefaultAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_DefaultBranch]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_DefaultBranch] ON [dbo].[TBL009]
(
	[DefaultBranch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_DefaultCostCenter]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_DefaultCostCenter] ON [dbo].[TBL009]
(
	[DefaultCostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_DefaultCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_DefaultCurrency] ON [dbo].[TBL009]
(
	[DefaultCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_DefaultPrintType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_DefaultPrintType] ON [dbo].[TBL009]
(
	[DefaultPrintType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_DefaultProject]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_DefaultProject] ON [dbo].[TBL009]
(
	[DefaultProject] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_FinancialTransactionsBond]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_FinancialTransactionsBond] ON [dbo].[TBL009]
(
	[FinancialTransactionsBond] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_IntermediateAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_IntermediateAccount] ON [dbo].[TBL009]
(
	[IntermediateAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_RelatedBondType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_RelatedBondType] ON [dbo].[TBL009]
(
	[RelatedBondType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_ReturnAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_ReturnAccount] ON [dbo].[TBL009]
(
	[ReturnAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_CardGuide_TruncateAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_CardGuide_TruncateAccount] ON [dbo].[TBL009]
(
	[TruncateAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL009_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL009_ID] ON [dbo].[TBL009]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide] ON [dbo].[TBL010]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_AccountGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_AccountGuide] ON [dbo].[TBL010]
(
	[AccountGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_AccountGuide2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_AccountGuide2] ON [dbo].[TBL010]
(
	[AccountGuide2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_AccountGuide3]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_AccountGuide3] ON [dbo].[TBL010]
(
	[AccountGuide3] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_AgentGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_AgentGuide] ON [dbo].[TBL010]
(
	[AgentGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_AgentGuide2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_AgentGuide2] ON [dbo].[TBL010]
(
	[AgentGuide2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_Branch]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_Branch] ON [dbo].[TBL010]
(
	[Branch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_ByGroup] ON [dbo].[TBL010]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_ByUser] ON [dbo].[TBL010]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_Category01]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_Category01] ON [dbo].[TBL010]
(
	[Category01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_Category02]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_Category02] ON [dbo].[TBL010]
(
	[Category02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_Category03]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_Category03] ON [dbo].[TBL010]
(
	[Category03] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_Category04]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_Category04] ON [dbo].[TBL010]
(
	[Category04] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_Category05]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_Category05] ON [dbo].[TBL010]
(
	[Category05] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_CostCenter]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_CostCenter] ON [dbo].[TBL010]
(
	[CostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_CurrencyGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_CurrencyGuide] ON [dbo].[TBL010]
(
	[CurrencyGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_DynamicBond]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_DynamicBond] ON [dbo].[TBL010]
(
	[DynamicBond] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_MainBondType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_MainBondType] ON [dbo].[TBL010]
(
	[MainBondType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_MainGuide] ON [dbo].[TBL010]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_MainGuide2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_MainGuide2] ON [dbo].[TBL010]
(
	[MainGuide2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_PayType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_PayType] ON [dbo].[TBL010]
(
	[PayType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_Project]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_Project] ON [dbo].[TBL010]
(
	[Project] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_RelatedAdministration]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_RelatedAdministration] ON [dbo].[TBL010]
(
	[RelatedAdministration] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_RelatedArchive]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_RelatedArchive] ON [dbo].[TBL010]
(
	[RelatedArchive] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_RelatedArchive2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_RelatedArchive2] ON [dbo].[TBL010]
(
	[RelatedArchive2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_CardGuide_RelatedBillType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_CardGuide_RelatedBillType] ON [dbo].[TBL010]
(
	[RelatedBillType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL010_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL010_ID] ON [dbo].[TBL010]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL011_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL011_CardGuide] ON [dbo].[TBL011]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL011_CardGuide_BillGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL011_CardGuide_BillGuide] ON [dbo].[TBL011]
(
	[BillGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL011_CardGuide_BondGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL011_CardGuide_BondGuide] ON [dbo].[TBL011]
(
	[BondGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL011_CardGuide_Branch]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL011_CardGuide_Branch] ON [dbo].[TBL011]
(
	[Branch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL011_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL011_CardGuide_ByGroup] ON [dbo].[TBL011]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL011_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL011_CardGuide_ByUser] ON [dbo].[TBL011]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL011_CardGuide_CostCenter]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL011_CardGuide_CostCenter] ON [dbo].[TBL011]
(
	[CostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL011_CardGuide_CurrencyGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL011_CardGuide_CurrencyGuide] ON [dbo].[TBL011]
(
	[CurrencyGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL011_CardGuide_Project]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL011_CardGuide_Project] ON [dbo].[TBL011]
(
	[Project] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL011_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL011_ID] ON [dbo].[TBL011]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_ID] ON [dbo].[TBL012]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_AccountGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_AccountGuide] ON [dbo].[TBL012]
(
	[AccountGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_AgentGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_AgentGuide] ON [dbo].[TBL012]
(
	[AgentGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_Branch]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_Branch] ON [dbo].[TBL012]
(
	[Branch] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_Category01]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_Category01] ON [dbo].[TBL012]
(
	[Category01] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_Category02]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_Category02] ON [dbo].[TBL012]
(
	[Category02] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_Category03]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_Category03] ON [dbo].[TBL012]
(
	[Category03] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_Category04]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_Category04] ON [dbo].[TBL012]
(
	[Category04] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_Category05]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_Category05] ON [dbo].[TBL012]
(
	[Category05] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_ContraAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_ContraAccount] ON [dbo].[TBL012]
(
	[ContraAccount] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_CostCenter]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_CostCenter] ON [dbo].[TBL012]
(
	[CostCenter] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_CreditCard]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_CreditCard] ON [dbo].[TBL012]
(
	[CreditCard] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_CurrencyGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_CurrencyGuide] ON [dbo].[TBL012]
(
	[CurrencyGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_MainGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_MainGuide] ON [dbo].[TBL012]
(
	[MainGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL012_RowGuide_Project]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL012_RowGuide_Project] ON [dbo].[TBL012]
(
	[Project] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL013_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL013_ID] ON [dbo].[TBL013]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL013_UsGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL013_UsGuide] ON [dbo].[TBL013]
(
	[UsGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL013_UsGuide_BranchGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL013_UsGuide_BranchGuide] ON [dbo].[TBL013]
(
	[BranchGuide] ASC,
	[UsGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL013_UsGuide_CostCenterGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL013_UsGuide_CostCenterGuide] ON [dbo].[TBL013]
(
	[CostCenterGuide] ASC,
	[UsGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL013_UsGuide_OptionGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL013_UsGuide_OptionGuide] ON [dbo].[TBL013]
(
	[OptionGuide] ASC,
	[UsGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL013_UsGuide_ProjectGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL013_UsGuide_ProjectGuide] ON [dbo].[TBL013]
(
	[ProjectGuide] ASC,
	[UsGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL013_UsGuide_RelatedAgent]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL013_UsGuide_RelatedAgent] ON [dbo].[TBL013]
(
	[RelatedAgent] ASC,
	[UsGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide] ON [dbo].[TBL014]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_AccountGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_AccountGuide] ON [dbo].[TBL014]
(
	[AccountGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_AccountGuide02]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_AccountGuide02] ON [dbo].[TBL014]
(
	[AccountGuide02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_AgentGroupGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_AgentGroupGuide] ON [dbo].[TBL014]
(
	[AgentGroupGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_AgentGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_AgentGuide] ON [dbo].[TBL014]
(
	[AgentGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_AgentGuide2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_AgentGuide2] ON [dbo].[TBL014]
(
	[AgentGuide2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_AttendanceGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_AttendanceGuide] ON [dbo].[TBL014]
(
	[AttendanceGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_BillType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_BillType] ON [dbo].[TBL014]
(
	[BillType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_BondType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_BondType] ON [dbo].[TBL014]
(
	[BondType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_Branch]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_Branch] ON [dbo].[TBL014]
(
	[Branch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_ByGroup] ON [dbo].[TBL014]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_ByUser] ON [dbo].[TBL014]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_Category01]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_Category01] ON [dbo].[TBL014]
(
	[Category01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_Category02]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_Category02] ON [dbo].[TBL014]
(
	[Category02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_Category03]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_Category03] ON [dbo].[TBL014]
(
	[Category03] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_Category04]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_Category04] ON [dbo].[TBL014]
(
	[Category04] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_Category05]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_Category05] ON [dbo].[TBL014]
(
	[Category05] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_CostCenter]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_CostCenter] ON [dbo].[TBL014]
(
	[CostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_CurrencyGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_CurrencyGuide] ON [dbo].[TBL014]
(
	[CurrencyGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_CurrencyGuide02]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_CurrencyGuide02] ON [dbo].[TBL014]
(
	[CurrencyGuide02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_OperationBill]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_OperationBill] ON [dbo].[TBL014]
(
	[OperationBill] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_PeriodType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_PeriodType] ON [dbo].[TBL014]
(
	[PeriodType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_Project]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_Project] ON [dbo].[TBL014]
(
	[Project] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_RelatedCard]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_RelatedCard] ON [dbo].[TBL014]
(
	[RelatedCard] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_RelatedCard2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_RelatedCard2] ON [dbo].[TBL014]
(
	[RelatedCard2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_CardGuide_RelatedCard3]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_CardGuide_RelatedCard3] ON [dbo].[TBL014]
(
	[RelatedCard3] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL014_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL014_ID] ON [dbo].[TBL014]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL015_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL015_CardGuide] ON [dbo].[TBL015]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL015_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL015_CardGuide_ByGroup] ON [dbo].[TBL015]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL015_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL015_CardGuide_ByUser] ON [dbo].[TBL015]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL015_CardGuide_DefaultPayType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL015_CardGuide_DefaultPayType] ON [dbo].[TBL015]
(
	[DefaultPayType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL015_CardGuide_MainAccountGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL015_CardGuide_MainAccountGuide] ON [dbo].[TBL015]
(
	[MainAccountGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL015_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL015_CardGuide_MainGuide] ON [dbo].[TBL015]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL015_CardGuide_MainTaxAccountGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL015_CardGuide_MainTaxAccountGuide] ON [dbo].[TBL015]
(
	[MainTaxAccountGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL015_CardGuide_RelatedAgent]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL015_CardGuide_RelatedAgent] ON [dbo].[TBL015]
(
	[RelatedAgent] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL015_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL015_ID] ON [dbo].[TBL015]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide] ON [dbo].[TBL016]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_AccountID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_AccountID] ON [dbo].[TBL016]
(
	[AccountID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_AddressID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_AddressID] ON [dbo].[TBL016]
(
	[AddressID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Branch]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Branch] ON [dbo].[TBL016]
(
	[Branch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_ByGroup] ON [dbo].[TBL016]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_ByUser] ON [dbo].[TBL016]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_CashAccountID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_CashAccountID] ON [dbo].[TBL016]
(
	[CashAccountID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category01]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category01] ON [dbo].[TBL016]
(
	[Category01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category02]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category02] ON [dbo].[TBL016]
(
	[Category02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category03]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category03] ON [dbo].[TBL016]
(
	[Category03] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category04]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category04] ON [dbo].[TBL016]
(
	[Category04] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category05]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category05] ON [dbo].[TBL016]
(
	[Category05] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category06]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category06] ON [dbo].[TBL016]
(
	[Category06] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category07]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category07] ON [dbo].[TBL016]
(
	[Category07] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category08]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category08] ON [dbo].[TBL016]
(
	[Category08] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category09]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category09] ON [dbo].[TBL016]
(
	[Category09] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category10]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category10] ON [dbo].[TBL016]
(
	[Category10] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category11]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category11] ON [dbo].[TBL016]
(
	[Category11] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category12]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category12] ON [dbo].[TBL016]
(
	[Category12] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category13]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category13] ON [dbo].[TBL016]
(
	[Category13] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category14]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category14] ON [dbo].[TBL016]
(
	[Category14] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Category15]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Category15] ON [dbo].[TBL016]
(
	[Category15] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_CostCenter]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_CostCenter] ON [dbo].[TBL016]
(
	[CostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_CostCenter2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_CostCenter2] ON [dbo].[TBL016]
(
	[CostCenter2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_DefaultCurrency]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_DefaultCurrency] ON [dbo].[TBL016]
(
	[DefaultCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_DueAgeType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_DueAgeType] ON [dbo].[TBL016]
(
	[DueAgeType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_MainAgent]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_MainAgent] ON [dbo].[TBL016]
(
	[MainAgent] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_MainAgent2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_MainAgent2] ON [dbo].[TBL016]
(
	[MainAgent2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_MainGroupGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_MainGroupGuide] ON [dbo].[TBL016]
(
	[MainGroupGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_PriceType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_PriceType] ON [dbo].[TBL016]
(
	[PriceType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Project]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Project] ON [dbo].[TBL016]
(
	[Project] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_RegionID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_RegionID] ON [dbo].[TBL016]
(
	[RegionID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_RelatedAdministration]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_RelatedAdministration] ON [dbo].[TBL016]
(
	[RelatedAdministration] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_RelatedAdministration2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_RelatedAdministration2] ON [dbo].[TBL016]
(
	[RelatedAdministration2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_TaxAccountID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_TaxAccountID] ON [dbo].[TBL016]
(
	[TaxAccountID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_CardGuide_Warehouse]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_CardGuide_Warehouse] ON [dbo].[TBL016]
(
	[Warehouse] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL016_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL016_ID] ON [dbo].[TBL016]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL017_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL017_ID] ON [dbo].[TBL017]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL018_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL018_ID] ON [dbo].[TBL018]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL019_ID]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL019_ID] ON [dbo].[TBL019]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide] ON [dbo].[TBL020]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_AgentProfitAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_AgentProfitAccount] ON [dbo].[TBL020]
(
	[AgentProfitAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_AgentsGroup]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_AgentsGroup] ON [dbo].[TBL020]
(
	[AgentsGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_AgentsGroup2]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_AgentsGroup2] ON [dbo].[TBL020]
(
	[AgentsGroup2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_AgentsGroup3]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_AgentsGroup3] ON [dbo].[TBL020]
(
	[AgentsGroup3] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_AgentsGroup4]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_AgentsGroup4] ON [dbo].[TBL020]
(
	[AgentsGroup4] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_AgentsGroup5]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_AgentsGroup5] ON [dbo].[TBL020]
(
	[AgentsGroup5] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_BankAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_BankAccount] ON [dbo].[TBL020]
(
	[BankAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_BankProcuringCommissionAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_BankProcuringCommissionAccount] ON [dbo].[TBL020]
(
	[BankProcuringCommissionAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_BarcodeType]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_BarcodeType] ON [dbo].[TBL020]
(
	[BarcodeType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_BonusAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_BonusAccount] ON [dbo].[TBL020]
(
	[BonusAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_CashAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_CashAccount] ON [dbo].[TBL020]
(
	[CashAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_Category01]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_Category01] ON [dbo].[TBL020]
(
	[Category01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_Category02]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_Category02] ON [dbo].[TBL020]
(
	[Category02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_Category03]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_Category03] ON [dbo].[TBL020]
(
	[Category03] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_Category04]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_Category04] ON [dbo].[TBL020]
(
	[Category04] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_Category05]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_Category05] ON [dbo].[TBL020]
(
	[Category05] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_ContinuousInventoryCostAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_ContinuousInventoryCostAccount] ON [dbo].[TBL020]
(
	[ContinuousInventoryCostAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_ContinuousInventoryGiftsAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_ContinuousInventoryGiftsAccount] ON [dbo].[TBL020]
(
	[ContinuousInventoryGiftsAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_ContinuousInventoryStoreAccount]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_ContinuousInventoryStoreAccount] ON [dbo].[TBL020]
(
	[ContinuousInventoryStoreAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_DefaultBranch]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_DefaultBranch] ON [dbo].[TBL020]
(
	[DefaultBranch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_DefaultCostCenter]    Script Date: 8/14/2023 4:54:48 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_DefaultCostCenter] ON [dbo].[TBL020]
(
	[DefaultCostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_DefaultCurrency]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_DefaultCurrency] ON [dbo].[TBL020]
(
	[DefaultCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_DefaultGroup]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_DefaultGroup] ON [dbo].[TBL020]
(
	[DefaultGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_DefaultPayType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_DefaultPayType] ON [dbo].[TBL020]
(
	[DefaultPayType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_DefaultPostPrintType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_DefaultPostPrintType] ON [dbo].[TBL020]
(
	[DefaultPostPrintType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_DefaultProject]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_DefaultProject] ON [dbo].[TBL020]
(
	[DefaultProject] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_DefaultStore]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_DefaultStore] ON [dbo].[TBL020]
(
	[DefaultStore] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_DiscountsAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_DiscountsAccount] ON [dbo].[TBL020]
(
	[DiscountsAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_ExtrasAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_ExtrasAccount] ON [dbo].[TBL020]
(
	[ExtrasAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_FinancialTransactionsBond]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_FinancialTransactionsBond] ON [dbo].[TBL020]
(
	[FinancialTransactionsBond] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_GenerateBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_GenerateBill] ON [dbo].[TBL020]
(
	[GenerateBill] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_InstalmentBondGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_InstalmentBondGuide] ON [dbo].[TBL020]
(
	[InstalmentBondGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_InvoiceMovementSide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_InvoiceMovementSide] ON [dbo].[TBL020]
(
	[InvoiceMovementSide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_LocalAdministrativeTaxAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_LocalAdministrativeTaxAccount] ON [dbo].[TBL020]
(
	[LocalAdministrativeTaxAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_MainBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_MainBill] ON [dbo].[TBL020]
(
	[MainBill] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_MainBill2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_MainBill2] ON [dbo].[TBL020]
(
	[MainBill2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_OperationBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_OperationBill] ON [dbo].[TBL020]
(
	[OperationBill] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_OutPrintType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_OutPrintType] ON [dbo].[TBL020]
(
	[OutPrintType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_PaymentsBondType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_PaymentsBondType] ON [dbo].[TBL020]
(
	[PaymentsBondType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_PostPrintType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_PostPrintType] ON [dbo].[TBL020]
(
	[PostPrintType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_PostToBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_PostToBill] ON [dbo].[TBL020]
(
	[PostToBill] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_PostToBill2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_PostToBill2] ON [dbo].[TBL020]
(
	[PostToBill2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_PriceType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_PriceType] ON [dbo].[TBL020]
(
	[PriceType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_ProductsAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_ProductsAccount] ON [dbo].[TBL020]
(
	[ProductsAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_RecipientBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_RecipientBill] ON [dbo].[TBL020]
(
	[RecipientBill] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_RelatedBondType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_RelatedBondType] ON [dbo].[TBL020]
(
	[RelatedBondType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_RoundAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_RoundAccount] ON [dbo].[TBL020]
(
	[RoundAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_SavePrintType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_SavePrintType] ON [dbo].[TBL020]
(
	[SavePrintType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_SubjectToTaxAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_SubjectToTaxAccount] ON [dbo].[TBL020]
(
	[SubjectToTaxAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_CardGuide_TaxMethod]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_CardGuide_TaxMethod] ON [dbo].[TBL020]
(
	[TaxMethod] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL020_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL020_ID] ON [dbo].[TBL020]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL021_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL021_ID] ON [dbo].[TBL021]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide] ON [dbo].[TBL022]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_AgentGuide] ON [dbo].[TBL022]
(
	[AgentGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_Branch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_Branch] ON [dbo].[TBL022]
(
	[Branch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_ByGroup] ON [dbo].[TBL022]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_ByUser] ON [dbo].[TBL022]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_CashAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_CashAccount] ON [dbo].[TBL022]
(
	[CashAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_CommissionAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_CommissionAccount] ON [dbo].[TBL022]
(
	[CommissionAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_ContraStore]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_ContraStore] ON [dbo].[TBL022]
(
	[ContraStore] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_CostCenter] ON [dbo].[TBL022]
(
	[CostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_CreditCard]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_CreditCard] ON [dbo].[TBL022]
(
	[CreditCard] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_CurrencyGuide] ON [dbo].[TBL022]
(
	[CurrencyGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_CurrentStage]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_CurrentStage] ON [dbo].[TBL022]
(
	[CurrentStage] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_MainBillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_MainBillGuide] ON [dbo].[TBL022]
(
	[MainBillGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_MainGuide] ON [dbo].[TBL022]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_PayMethod]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_PayMethod] ON [dbo].[TBL022]
(
	[PayMethod] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_POSGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_POSGuide] ON [dbo].[TBL022]
(
	[POSGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_PostToAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_PostToAccount] ON [dbo].[TBL022]
(
	[PostToAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_ProductsAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_ProductsAccount] ON [dbo].[TBL022]
(
	[ProductsAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_Project]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_Project] ON [dbo].[TBL022]
(
	[Project] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_RelatedArchive]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_RelatedArchive] ON [dbo].[TBL022]
(
	[RelatedArchive] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_StoreGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_StoreGuide] ON [dbo].[TBL022]
(
	[StoreGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_CardGuide_TaxMethod]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_CardGuide_TaxMethod] ON [dbo].[TBL022]
(
	[TaxMethod] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL022_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL022_ID] ON [dbo].[TBL022]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_ID] ON [dbo].[TBL023]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide] ON [dbo].[TBL023]
(
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_Category01] ON [dbo].[TBL023]
(
	[Category01] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_Category02] ON [dbo].[TBL023]
(
	[Category02] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_Category03] ON [dbo].[TBL023]
(
	[Category03] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_Category04] ON [dbo].[TBL023]
(
	[Category04] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_Category05] ON [dbo].[TBL023]
(
	[Category05] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_CostCenter] ON [dbo].[TBL023]
(
	[CostCenter] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_CurrentStage]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_CurrentStage] ON [dbo].[TBL023]
(
	[CurrentStage] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_MainGuide] ON [dbo].[TBL023]
(
	[MainGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_ProductGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_ProductGuide] ON [dbo].[TBL023]
(
	[ProductGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_ProductsAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_ProductsAccount] ON [dbo].[TBL023]
(
	[ProductsAccount] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_RelatedAgent]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_RelatedAgent] ON [dbo].[TBL023]
(
	[RelatedAgent] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_RelatedUnit]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_RelatedUnit] ON [dbo].[TBL023]
(
	[RelatedUnit] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_SourceBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_SourceBill] ON [dbo].[TBL023]
(
	[SourceBill] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL023_RowGuide_StoreID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL023_RowGuide_StoreID] ON [dbo].[TBL023]
(
	[StoreID] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL024_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL024_ID] ON [dbo].[TBL024]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL024_ID_AccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL024_ID_AccountID] ON [dbo].[TBL024]
(
	[AccountID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL024_ID_ContraAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL024_ID_ContraAccount] ON [dbo].[TBL024]
(
	[ContraAccount] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL024_ID_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL024_ID_CostCenter] ON [dbo].[TBL024]
(
	[CostCenter] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL024_ID_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL024_ID_CurrencyGuide] ON [dbo].[TBL024]
(
	[CurrencyGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL024_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL024_ID_MainGuide] ON [dbo].[TBL024]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL024_ID_OperationBond]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL024_ID_OperationBond] ON [dbo].[TBL024]
(
	[OperationBond] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL025_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL025_CardGuide] ON [dbo].[TBL025]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL025_CardGuide_AccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL025_CardGuide_AccountID] ON [dbo].[TBL025]
(
	[AccountID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL025_CardGuide_Branch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL025_CardGuide_Branch] ON [dbo].[TBL025]
(
	[Branch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL025_CardGuide_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL025_CardGuide_CostCenter] ON [dbo].[TBL025]
(
	[CostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL025_CardGuide_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL025_CardGuide_CurrencyGuide] ON [dbo].[TBL025]
(
	[CurrencyGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL025_CardGuide_Project]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL025_CardGuide_Project] ON [dbo].[TBL025]
(
	[Project] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL025_CardGuide_TaxAccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL025_CardGuide_TaxAccountID] ON [dbo].[TBL025]
(
	[TaxAccountID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL025_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL025_ID] ON [dbo].[TBL025]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide] ON [dbo].[TBL026]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_AccountOFOption1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_AccountOFOption1] ON [dbo].[TBL026]
(
	[AccountOFOption1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_AccountOFOption10]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_AccountOFOption10] ON [dbo].[TBL026]
(
	[AccountOFOption10] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_AccountOFOption2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_AccountOFOption2] ON [dbo].[TBL026]
(
	[AccountOFOption2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_AccountOFOption3]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_AccountOFOption3] ON [dbo].[TBL026]
(
	[AccountOFOption3] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_AccountOFOption4]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_AccountOFOption4] ON [dbo].[TBL026]
(
	[AccountOFOption4] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_AccountOFOption5]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_AccountOFOption5] ON [dbo].[TBL026]
(
	[AccountOFOption5] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_AccountOFOption6]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_AccountOFOption6] ON [dbo].[TBL026]
(
	[AccountOFOption6] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_AccountOFOption7]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_AccountOFOption7] ON [dbo].[TBL026]
(
	[AccountOFOption7] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_AccountOFOption8]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_AccountOFOption8] ON [dbo].[TBL026]
(
	[AccountOFOption8] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_AccountOFOption9]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_AccountOFOption9] ON [dbo].[TBL026]
(
	[AccountOFOption9] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_BarcodeType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_BarcodeType] ON [dbo].[TBL026]
(
	[BarcodeType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_BondTypeGuide1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_BondTypeGuide1] ON [dbo].[TBL026]
(
	[BondTypeGuide1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_BuildBillTypeGuide1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_BuildBillTypeGuide1] ON [dbo].[TBL026]
(
	[BuildBillTypeGuide1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_BuildBillTypeGuide2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_BuildBillTypeGuide2] ON [dbo].[TBL026]
(
	[BuildBillTypeGuide2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_Category01] ON [dbo].[TBL026]
(
	[Category01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_Category02] ON [dbo].[TBL026]
(
	[Category02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_Category03] ON [dbo].[TBL026]
(
	[Category03] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_Category04] ON [dbo].[TBL026]
(
	[Category04] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_Category05] ON [dbo].[TBL026]
(
	[Category05] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultAgent]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultAgent] ON [dbo].[TBL026]
(
	[DefaultAgent] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultAgent2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultAgent2] ON [dbo].[TBL026]
(
	[DefaultAgent2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultBranch1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultBranch1] ON [dbo].[TBL026]
(
	[DefaultBranch1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultBranch2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultBranch2] ON [dbo].[TBL026]
(
	[DefaultBranch2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultCostCenter1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultCostCenter1] ON [dbo].[TBL026]
(
	[DefaultCostCenter1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultCostCenter2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultCostCenter2] ON [dbo].[TBL026]
(
	[DefaultCostCenter2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultCurrency1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultCurrency1] ON [dbo].[TBL026]
(
	[DefaultCurrency1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultCurrency2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultCurrency2] ON [dbo].[TBL026]
(
	[DefaultCurrency2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultManufacturerModel]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultManufacturerModel] ON [dbo].[TBL026]
(
	[DefaultManufacturerModel] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultProject1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultProject1] ON [dbo].[TBL026]
(
	[DefaultProject1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultProject2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultProject2] ON [dbo].[TBL026]
(
	[DefaultProject2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultStore1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultStore1] ON [dbo].[TBL026]
(
	[DefaultStore1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_DefaultStore2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_DefaultStore2] ON [dbo].[TBL026]
(
	[DefaultStore2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_CardGuide_SavePrintType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_CardGuide_SavePrintType] ON [dbo].[TBL026]
(
	[SavePrintType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL026_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL026_ID] ON [dbo].[TBL026]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide] ON [dbo].[TBL027]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_AccountA1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_AccountA1] ON [dbo].[TBL027]
(
	[AccountA1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_AccountA2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_AccountA2] ON [dbo].[TBL027]
(
	[AccountA2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_AccountB1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_AccountB1] ON [dbo].[TBL027]
(
	[AccountB1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_AccountB2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_AccountB2] ON [dbo].[TBL027]
(
	[AccountB2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_AgentGuide1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_AgentGuide1] ON [dbo].[TBL027]
(
	[AgentGuide1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_AgentGuide2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_AgentGuide2] ON [dbo].[TBL027]
(
	[AgentGuide2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_Branch1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_Branch1] ON [dbo].[TBL027]
(
	[Branch1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_Branch2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_Branch2] ON [dbo].[TBL027]
(
	[Branch2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_ByGroup] ON [dbo].[TBL027]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_ByUser] ON [dbo].[TBL027]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_CostCenter1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_CostCenter1] ON [dbo].[TBL027]
(
	[CostCenter1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_CostCenter2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_CostCenter2] ON [dbo].[TBL027]
(
	[CostCenter2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_CurrencyGuide1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_CurrencyGuide1] ON [dbo].[TBL027]
(
	[CurrencyGuide1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_CurrencyGuide2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_CurrencyGuide2] ON [dbo].[TBL027]
(
	[CurrencyGuide2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_CurrentStage]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_CurrentStage] ON [dbo].[TBL027]
(
	[CurrentStage] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_MainBillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_MainBillGuide] ON [dbo].[TBL027]
(
	[MainBillGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_MainGuide] ON [dbo].[TBL027]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_MainTransaction]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_MainTransaction] ON [dbo].[TBL027]
(
	[MainTransaction] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_ManufacturerModel]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_ManufacturerModel] ON [dbo].[TBL027]
(
	[ManufacturerModel] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_PayMethod1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_PayMethod1] ON [dbo].[TBL027]
(
	[PayMethod1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_Project1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_Project1] ON [dbo].[TBL027]
(
	[Project1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_Project2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_Project2] ON [dbo].[TBL027]
(
	[Project2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_RelatedBill1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_RelatedBill1] ON [dbo].[TBL027]
(
	[RelatedBill1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_RelatedBill2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_RelatedBill2] ON [dbo].[TBL027]
(
	[RelatedBill2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_StoreGuide1]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_StoreGuide1] ON [dbo].[TBL027]
(
	[StoreGuide1] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_CardGuide_StoreGuide2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_CardGuide_StoreGuide2] ON [dbo].[TBL027]
(
	[StoreGuide2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL027_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL027_ID] ON [dbo].[TBL027]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_ID] ON [dbo].[TBL028]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide] ON [dbo].[TBL028]
(
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_Category01] ON [dbo].[TBL028]
(
	[Category01] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_Category02] ON [dbo].[TBL028]
(
	[Category02] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_Category03] ON [dbo].[TBL028]
(
	[Category03] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_Category04] ON [dbo].[TBL028]
(
	[Category04] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_Category05] ON [dbo].[TBL028]
(
	[Category05] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_CostCenter] ON [dbo].[TBL028]
(
	[CostCenter] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_CurrentStage]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_CurrentStage] ON [dbo].[TBL028]
(
	[CurrentStage] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_ItemGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_ItemGuide] ON [dbo].[TBL028]
(
	[ItemGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_MainGuide] ON [dbo].[TBL028]
(
	[MainGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_ManufacturerModel]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_ManufacturerModel] ON [dbo].[TBL028]
(
	[ManufacturerModel] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_ProductsAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_ProductsAccount] ON [dbo].[TBL028]
(
	[ProductsAccount] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_RelatedAgent]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_RelatedAgent] ON [dbo].[TBL028]
(
	[RelatedAgent] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_RelatedUnit]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_RelatedUnit] ON [dbo].[TBL028]
(
	[RelatedUnit] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_SourceBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_SourceBill] ON [dbo].[TBL028]
(
	[SourceBill] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_SourceOperationBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_SourceOperationBill] ON [dbo].[TBL028]
(
	[SourceOperationBill] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL028_RowGuide_StoreID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL028_RowGuide_StoreID] ON [dbo].[TBL028]
(
	[StoreID] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL029_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL029_ID] ON [dbo].[TBL029]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL029_ID_AccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL029_ID_AccountID] ON [dbo].[TBL029]
(
	[AccountID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL029_ID_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL029_ID_CostCenter] ON [dbo].[TBL029]
(
	[CostCenter] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL029_ID_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL029_ID_CurrencyGuide] ON [dbo].[TBL029]
(
	[CurrencyGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL029_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL029_ID_MainGuide] ON [dbo].[TBL029]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL029_ID_OperationBond]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL029_ID_OperationBond] ON [dbo].[TBL029]
(
	[OperationBond] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL030_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL030_CardGuide] ON [dbo].[TBL030]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL030_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL030_CardGuide_MainGuide] ON [dbo].[TBL030]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL030_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL030_ID] ON [dbo].[TBL030]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL031_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL031_ID] ON [dbo].[TBL031]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL031_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL031_ID_MainGuide] ON [dbo].[TBL031]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL032_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL032_ID] ON [dbo].[TBL032]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL032_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL032_ID_MainGuide] ON [dbo].[TBL032]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL033_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL033_CardGuide] ON [dbo].[TBL033]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL033_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL033_ID] ON [dbo].[TBL033]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL034_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL034_ID] ON [dbo].[TBL034]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL034_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL034_ID_MainGuide] ON [dbo].[TBL034]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL035_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL035_ID] ON [dbo].[TBL035]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL035_ID_MainID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL035_ID_MainID] ON [dbo].[TBL035]
(
	[MainID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL036_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL036_ID] ON [dbo].[TBL036]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL037_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL037_CardGuide] ON [dbo].[TBL037]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL037_CardGuide_MainID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL037_CardGuide_MainID] ON [dbo].[TBL037]
(
	[MainID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL037_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL037_ID] ON [dbo].[TBL037]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_ID] ON [dbo].[TBL038]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide] ON [dbo].[TBL038]
(
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_AccountGuide] ON [dbo].[TBL038]
(
	[AccountGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_AgentGuide] ON [dbo].[TBL038]
(
	[AgentGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_Branch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_Branch] ON [dbo].[TBL038]
(
	[Branch] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_Category01] ON [dbo].[TBL038]
(
	[Category01] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_Category02] ON [dbo].[TBL038]
(
	[Category02] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_Category03] ON [dbo].[TBL038]
(
	[Category03] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_Category04] ON [dbo].[TBL038]
(
	[Category04] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_Category05] ON [dbo].[TBL038]
(
	[Category05] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_ContraAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_ContraAccount] ON [dbo].[TBL038]
(
	[ContraAccount] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_CostCenter] ON [dbo].[TBL038]
(
	[CostCenter] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_CreditCard]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_CreditCard] ON [dbo].[TBL038]
(
	[CreditCard] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_CurrencyGuide] ON [dbo].[TBL038]
(
	[CurrencyGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_IntermediateAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_IntermediateAccount] ON [dbo].[TBL038]
(
	[IntermediateAccount] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_MainGuide] ON [dbo].[TBL038]
(
	[MainGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_Project]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_Project] ON [dbo].[TBL038]
(
	[Project] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_ReturnedAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_ReturnedAccount] ON [dbo].[TBL038]
(
	[ReturnedAccount] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_SourceBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_SourceBill] ON [dbo].[TBL038]
(
	[SourceBill] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_TransferToAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_TransferToAccount] ON [dbo].[TBL038]
(
	[TransferToAccount] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL038_RowGuide_TruncatedValueAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL038_RowGuide_TruncatedValueAccount] ON [dbo].[TBL038]
(
	[TruncatedValueAccount] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL040_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL040_ID] ON [dbo].[TBL040]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL041_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL041_ID] ON [dbo].[TBL041]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL042_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL042_CardGuide] ON [dbo].[TBL042]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL042_CardGuide_BranchID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL042_CardGuide_BranchID] ON [dbo].[TBL042]
(
	[BranchID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL042_CardGuide_CashAccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL042_CardGuide_CashAccountID] ON [dbo].[TBL042]
(
	[CashAccountID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL042_CardGuide_CostCenterID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL042_CardGuide_CostCenterID] ON [dbo].[TBL042]
(
	[CostCenterID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL042_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL042_CardGuide_MainGuide] ON [dbo].[TBL042]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL042_CardGuide_ProjectID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL042_CardGuide_ProjectID] ON [dbo].[TBL042]
(
	[ProjectID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL042_CardGuide_StoreID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL042_CardGuide_StoreID] ON [dbo].[TBL042]
(
	[StoreID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL042_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL042_ID] ON [dbo].[TBL042]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IDX_TBL043_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL043_CardGuide] ON [dbo].[TBL043]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL043_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL043_ID] ON [dbo].[TBL043]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IDX_TBL046_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL046_CardGuide] ON [dbo].[TBL046]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL046_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL046_ID] ON [dbo].[TBL046]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL048_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL048_CardGuide] ON [dbo].[TBL048]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL048_CardGuide_GroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL048_CardGuide_GroupGuide] ON [dbo].[TBL048]
(
	[GroupGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL048_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL048_ID] ON [dbo].[TBL048]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL049_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL049_CardGuide] ON [dbo].[TBL049]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL049_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL049_CardGuide_ByGroup] ON [dbo].[TBL049]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL049_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL049_CardGuide_ByUser] ON [dbo].[TBL049]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL049_CardGuide_DefaultAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL049_CardGuide_DefaultAccount] ON [dbo].[TBL049]
(
	[DefaultAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL049_CardGuide_DefaultAccount2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL049_CardGuide_DefaultAccount2] ON [dbo].[TBL049]
(
	[DefaultAccount2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL049_CardGuide_MainProject]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL049_CardGuide_MainProject] ON [dbo].[TBL049]
(
	[MainProject] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL049_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL049_ID] ON [dbo].[TBL049]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL050_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL050_CardGuide] ON [dbo].[TBL050]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL050_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL050_CardGuide_ByGroup] ON [dbo].[TBL050]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL050_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL050_CardGuide_ByUser] ON [dbo].[TBL050]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL050_CardGuide_DefaultAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL050_CardGuide_DefaultAccount] ON [dbo].[TBL050]
(
	[DefaultAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL050_CardGuide_MainBronch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL050_CardGuide_MainBronch] ON [dbo].[TBL050]
(
	[MainBronch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL050_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL050_ID] ON [dbo].[TBL050]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL051_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL051_ID] ON [dbo].[TBL051]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL051_ID_DefaultAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL051_ID_DefaultAccount] ON [dbo].[TBL051]
(
	[DefaultAccount] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL051_ID_DefaultCurrency]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL051_ID_DefaultCurrency] ON [dbo].[TBL051]
(
	[DefaultCurrency] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IDX_TBL051_ID_FrmName]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL051_ID_FrmName] ON [dbo].[TBL051]
(
	[FrmName] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL052_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL052_ID] ON [dbo].[TBL052]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IDX_TBL052_ID_FormKey]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL052_ID_FormKey] ON [dbo].[TBL052]
(
	[FormKey] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL052_ID_ForUser]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL052_ID_ForUser] ON [dbo].[TBL052]
(
	[ForUser] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL053_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL053_ID] ON [dbo].[TBL053]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL054_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL054_ID] ON [dbo].[TBL054]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL054_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL054_ID_AccountGuide] ON [dbo].[TBL054]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL054_ID_CreditCardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL054_ID_CreditCardGuide] ON [dbo].[TBL054]
(
	[CreditCardGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL054_ID_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL054_ID_CurrencyGuide] ON [dbo].[TBL054]
(
	[CurrencyGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL054_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL054_ID_MainGuide] ON [dbo].[TBL054]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL055_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL055_ID] ON [dbo].[TBL055]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL055_ID_BillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL055_ID_BillGuide] ON [dbo].[TBL055]
(
	[BillGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL055_ID_GroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL055_ID_GroupGuide] ON [dbo].[TBL055]
(
	[GroupGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL056_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL056_ID] ON [dbo].[TBL056]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL056_ID_BillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL056_ID_BillGuide] ON [dbo].[TBL056]
(
	[BillGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL056_ID_ItemGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL056_ID_ItemGuide] ON [dbo].[TBL056]
(
	[ItemGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL057_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL057_ID] ON [dbo].[TBL057]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL057_ID_BillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL057_ID_BillGuide] ON [dbo].[TBL057]
(
	[BillGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL057_ID_TypeGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL057_ID_TypeGuide] ON [dbo].[TBL057]
(
	[TypeGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL058_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL058_ID] ON [dbo].[TBL058]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL059_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL059_ID] ON [dbo].[TBL059]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL060_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL060_ID] ON [dbo].[TBL060]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL060_ID_BillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL060_ID_BillGuide] ON [dbo].[TBL060]
(
	[BillGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL061_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL061_ID] ON [dbo].[TBL061]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL061_ID_GroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL061_ID_GroupGuide] ON [dbo].[TBL061]
(
	[GroupGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL062_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL062_ID] ON [dbo].[TBL062]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL062_ID_GroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL062_ID_GroupGuide] ON [dbo].[TBL062]
(
	[GroupGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL063_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL063_ID] ON [dbo].[TBL063]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL063_ID_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL063_ID_Category01] ON [dbo].[TBL063]
(
	[Category01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL063_ID_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL063_ID_Category02] ON [dbo].[TBL063]
(
	[Category02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL063_ID_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL063_ID_Category03] ON [dbo].[TBL063]
(
	[Category03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL063_ID_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL063_ID_Category04] ON [dbo].[TBL063]
(
	[Category04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL063_ID_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL063_ID_Category05] ON [dbo].[TBL063]
(
	[Category05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL063_ID_ItemGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL063_ID_ItemGuide] ON [dbo].[TBL063]
(
	[ItemGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL063_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL063_ID_MainGuide] ON [dbo].[TBL063]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL065_GroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL065_GroupGuide] ON [dbo].[TBL065]
(
	[GroupGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL065_GroupGuide_PriceType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL065_GroupGuide_PriceType] ON [dbo].[TBL065]
(
	[PriceType] ASC,
	[GroupGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL065_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL065_ID] ON [dbo].[TBL065]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL066_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL066_ID] ON [dbo].[TBL066]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL066_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL066_ID_MainGuide] ON [dbo].[TBL066]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL067_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL067_CardGuide] ON [dbo].[TBL067]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL067_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL067_CardGuide_MainGuide] ON [dbo].[TBL067]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL067_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL067_ID] ON [dbo].[TBL067]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL068_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL068_ID] ON [dbo].[TBL068]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL068_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL068_ID_AccountGuide] ON [dbo].[TBL068]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL068_ID_ContraAccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL068_ID_ContraAccountGuide] ON [dbo].[TBL068]
(
	[ContraAccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL068_ID_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL068_ID_CurrencyGuide] ON [dbo].[TBL068]
(
	[CurrencyGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL068_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL068_ID_MainGuide] ON [dbo].[TBL068]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL069_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL069_ID] ON [dbo].[TBL069]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL069_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL069_ID_MainGuide] ON [dbo].[TBL069]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL071_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL071_ID] ON [dbo].[TBL071]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL071_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL071_ID_AccountGuide] ON [dbo].[TBL071]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL071_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL071_ID_MainGuide] ON [dbo].[TBL071]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL072_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL072_CardGuide] ON [dbo].[TBL072]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL072_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL072_ID] ON [dbo].[TBL072]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL073_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL073_ID] ON [dbo].[TBL073]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL073_ID_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL073_ID_Category01] ON [dbo].[TBL073]
(
	[Category01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL073_ID_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL073_ID_Category02] ON [dbo].[TBL073]
(
	[Category02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL073_ID_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL073_ID_Category03] ON [dbo].[TBL073]
(
	[Category03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL073_ID_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL073_ID_Category04] ON [dbo].[TBL073]
(
	[Category04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL073_ID_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL073_ID_Category05] ON [dbo].[TBL073]
(
	[Category05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL073_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL073_ID_MainGuide] ON [dbo].[TBL073]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL073_ID_TypeGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL073_ID_TypeGuide] ON [dbo].[TBL073]
(
	[TypeGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL074_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL074_ID] ON [dbo].[TBL074]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL074_ID_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL074_ID_AgentGuide] ON [dbo].[TBL074]
(
	[AgentGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL074_ID_BillRowGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL074_ID_BillRowGuide] ON [dbo].[TBL074]
(
	[BillRowGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL074_ID_BranchGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL074_ID_BranchGuide] ON [dbo].[TBL074]
(
	[BranchGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL074_ID_CostCenterGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL074_ID_CostCenterGuide] ON [dbo].[TBL074]
(
	[CostCenterGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL074_ID_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL074_ID_CurrencyGuide] ON [dbo].[TBL074]
(
	[CurrencyGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL074_ID_ItemGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL074_ID_ItemGuide] ON [dbo].[TBL074]
(
	[ItemGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL074_ID_PriceType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL074_ID_PriceType] ON [dbo].[TBL074]
(
	[PriceType] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL074_ID_ProjectGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL074_ID_ProjectGuide] ON [dbo].[TBL074]
(
	[ProjectGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL074_ID_StoreGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL074_ID_StoreGuide] ON [dbo].[TBL074]
(
	[StoreGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL075_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL075_CardGuide] ON [dbo].[TBL075]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL075_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL075_ID] ON [dbo].[TBL075]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL076_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL076_ID] ON [dbo].[TBL076]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL076_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL076_ID_AccountGuide] ON [dbo].[TBL076]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL076_ID_ItemsGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL076_ID_ItemsGuide] ON [dbo].[TBL076]
(
	[ItemsGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL076_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL076_ID_MainGuide] ON [dbo].[TBL076]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL077_GrouptID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL077_GrouptID] ON [dbo].[TBL077]
(
	[GrouptID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL077_GrouptID_CostAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL077_GrouptID_CostAccount] ON [dbo].[TBL077]
(
	[CostAccount] ASC,
	[GrouptID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL077_GrouptID_DiscountAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL077_GrouptID_DiscountAccount] ON [dbo].[TBL077]
(
	[DiscountAccount] ASC,
	[GrouptID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL077_GrouptID_ExtraAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL077_GrouptID_ExtraAccount] ON [dbo].[TBL077]
(
	[ExtraAccount] ASC,
	[GrouptID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL077_GrouptID_InvoiceID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL077_GrouptID_InvoiceID] ON [dbo].[TBL077]
(
	[InvoiceID] ASC,
	[GrouptID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL077_GrouptID_ItemsAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL077_GrouptID_ItemsAccount] ON [dbo].[TBL077]
(
	[ItemsAccount] ASC,
	[GrouptID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL077_GrouptID_StoreAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL077_GrouptID_StoreAccount] ON [dbo].[TBL077]
(
	[StoreAccount] ASC,
	[GrouptID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL077_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL077_ID] ON [dbo].[TBL077]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL078_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL078_CardGuide] ON [dbo].[TBL078]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL078_CardGuide_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL078_CardGuide_CurrencyGuide] ON [dbo].[TBL078]
(
	[CurrencyGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL078_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL078_CardGuide_MainGuide] ON [dbo].[TBL078]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL078_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL078_ID] ON [dbo].[TBL078]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL079_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL079_ID] ON [dbo].[TBL079]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL079_ID_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL079_ID_Category01] ON [dbo].[TBL079]
(
	[Category01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL079_ID_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL079_ID_Category02] ON [dbo].[TBL079]
(
	[Category02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL079_ID_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL079_ID_Category03] ON [dbo].[TBL079]
(
	[Category03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL079_ID_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL079_ID_Category04] ON [dbo].[TBL079]
(
	[Category04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL079_ID_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL079_ID_Category05] ON [dbo].[TBL079]
(
	[Category05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL079_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL079_ID_MainGuide] ON [dbo].[TBL079]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL079_ID_ProductGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL079_ID_ProductGuide] ON [dbo].[TBL079]
(
	[ProductGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL079_ID_RelatedMethod]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL079_ID_RelatedMethod] ON [dbo].[TBL079]
(
	[RelatedMethod] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL079_ID_RelatedUnit]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL079_ID_RelatedUnit] ON [dbo].[TBL079]
(
	[RelatedUnit] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL080_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL080_ID] ON [dbo].[TBL080]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL080_ID_AccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL080_ID_AccountID] ON [dbo].[TBL080]
(
	[AccountID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL080_ID_ContraAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL080_ID_ContraAccount] ON [dbo].[TBL080]
(
	[ContraAccount] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL080_ID_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL080_ID_CostCenter] ON [dbo].[TBL080]
(
	[CostCenter] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL080_ID_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL080_ID_CurrencyGuide] ON [dbo].[TBL080]
(
	[CurrencyGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL080_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL080_ID_MainGuide] ON [dbo].[TBL080]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL081_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL081_CardGuide] ON [dbo].[TBL081]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL081_CardGuide_CategoryType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL081_CardGuide_CategoryType] ON [dbo].[TBL081]
(
	[CategoryType] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL081_CardGuide_MainCard]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL081_CardGuide_MainCard] ON [dbo].[TBL081]
(
	[MainCard] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL081_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL081_ID] ON [dbo].[TBL081]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL082_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL082_ID] ON [dbo].[TBL082]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL082_ID_Category]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL082_ID_Category] ON [dbo].[TBL082]
(
	[Category] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL082_ID_CategoryType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL082_ID_CategoryType] ON [dbo].[TBL082]
(
	[CategoryType] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL082_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL082_ID_MainGuide] ON [dbo].[TBL082]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL083_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL083_ID] ON [dbo].[TBL083]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL083_ID_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL083_ID_Category01] ON [dbo].[TBL083]
(
	[Category01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL083_ID_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL083_ID_Category02] ON [dbo].[TBL083]
(
	[Category02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL083_ID_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL083_ID_Category03] ON [dbo].[TBL083]
(
	[Category03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL083_ID_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL083_ID_Category04] ON [dbo].[TBL083]
(
	[Category04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL083_ID_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL083_ID_Category05] ON [dbo].[TBL083]
(
	[Category05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL083_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL083_ID_MainGuide] ON [dbo].[TBL083]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL084_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL084_CardGuide] ON [dbo].[TBL084]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL084_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL084_CardGuide_MainGuide] ON [dbo].[TBL084]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL084_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL084_ID] ON [dbo].[TBL084]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide] ON [dbo].[TBL085]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_Branch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_Branch] ON [dbo].[TBL085]
(
	[Branch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_ByGroup]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_ByGroup] ON [dbo].[TBL085]
(
	[ByGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_ByUser]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_ByUser] ON [dbo].[TBL085]
(
	[ByUser] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_CostCenter] ON [dbo].[TBL085]
(
	[CostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_Project]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_Project] ON [dbo].[TBL085]
(
	[Project] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_RelatedArchive]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_RelatedArchive] ON [dbo].[TBL085]
(
	[RelatedArchive] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_RelatedArchive2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_RelatedArchive2] ON [dbo].[TBL085]
(
	[RelatedArchive2] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_RelatedCostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_RelatedCostCenter] ON [dbo].[TBL085]
(
	[RelatedCostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_Store]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_Store] ON [dbo].[TBL085]
(
	[Store] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_TypeGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_TypeGuide] ON [dbo].[TBL085]
(
	[TypeGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_CardGuide_UserGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_CardGuide_UserGuide] ON [dbo].[TBL085]
(
	[UserGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL085_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL085_ID] ON [dbo].[TBL085]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL086_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL086_ID] ON [dbo].[TBL086]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL086_ID_AccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL086_ID_AccountID] ON [dbo].[TBL086]
(
	[AccountID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL086_ID_AccountID2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL086_ID_AccountID2] ON [dbo].[TBL086]
(
	[AccountID2] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL086_ID_AgentGroupID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL086_ID_AgentGroupID] ON [dbo].[TBL086]
(
	[AgentGroupID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL086_ID_AgentGroupID2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL086_ID_AgentGroupID2] ON [dbo].[TBL086]
(
	[AgentGroupID2] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL086_ID_ContraAccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL086_ID_ContraAccountID] ON [dbo].[TBL086]
(
	[ContraAccountID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL086_ID_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL086_ID_CostCenter] ON [dbo].[TBL086]
(
	[CostCenter] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL086_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL086_ID_MainGuide] ON [dbo].[TBL086]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL087_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL087_ID] ON [dbo].[TBL087]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL087_ID_AccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL087_ID_AccountID] ON [dbo].[TBL087]
(
	[AccountID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL087_ID_CurrencyID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL087_ID_CurrencyID] ON [dbo].[TBL087]
(
	[CurrencyID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL088_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL088_ID] ON [dbo].[TBL088]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL088_ID_CurrencyID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL088_ID_CurrencyID] ON [dbo].[TBL088]
(
	[CurrencyID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL089_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL089_CardGuide] ON [dbo].[TBL089]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL089_CardGuide_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL089_CardGuide_AgentGuide] ON [dbo].[TBL089]
(
	[AgentGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL089_CardGuide_CostCenter01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL089_CardGuide_CostCenter01] ON [dbo].[TBL089]
(
	[CostCenter01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL089_CardGuide_UserGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL089_CardGuide_UserGuide] ON [dbo].[TBL089]
(
	[UserGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL089_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL089_ID] ON [dbo].[TBL089]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL090_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL090_ID] ON [dbo].[TBL090]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL090_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL090_ID_MainGuide] ON [dbo].[TBL090]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL090_ID_UserGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL090_ID_UserGuide] ON [dbo].[TBL090]
(
	[UserGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL091_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL091_ID] ON [dbo].[TBL091]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID] ON [dbo].[TBL092]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID_AccountGuide] ON [dbo].[TBL092]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID_AgentGuide] ON [dbo].[TBL092]
(
	[AgentGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID_Category01] ON [dbo].[TBL092]
(
	[Category01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID_Category02] ON [dbo].[TBL092]
(
	[Category02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID_Category03] ON [dbo].[TBL092]
(
	[Category03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID_Category04] ON [dbo].[TBL092]
(
	[Category04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID_Category05] ON [dbo].[TBL092]
(
	[Category05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID_CurrencyGuide] ON [dbo].[TBL092]
(
	[CurrencyGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID_JobGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID_JobGuide] ON [dbo].[TBL092]
(
	[JobGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL092_ID_RelatedAdministration]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL092_ID_RelatedAdministration] ON [dbo].[TBL092]
(
	[RelatedAdministration] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID] ON [dbo].[TBL093]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_AgentGuide] ON [dbo].[TBL093]
(
	[AgentGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_AgentGuide2]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_AgentGuide2] ON [dbo].[TBL093]
(
	[AgentGuide2] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_BranchGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_BranchGuide] ON [dbo].[TBL093]
(
	[BranchGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_Category01] ON [dbo].[TBL093]
(
	[Category01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_Category02] ON [dbo].[TBL093]
(
	[Category02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_Category03] ON [dbo].[TBL093]
(
	[Category03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_Category04] ON [dbo].[TBL093]
(
	[Category04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_Category05] ON [dbo].[TBL093]
(
	[Category05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_Item01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_Item01] ON [dbo].[TBL093]
(
	[Item01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_ItemGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_ItemGuide] ON [dbo].[TBL093]
(
	[ItemGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_JobGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_JobGuide] ON [dbo].[TBL093]
(
	[JobGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_MainGuide] ON [dbo].[TBL093]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_ProjectGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_ProjectGuide] ON [dbo].[TBL093]
(
	[ProjectGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_RelatedArchive]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_RelatedArchive] ON [dbo].[TBL093]
(
	[RelatedArchive] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL093_ID_StoreGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL093_ID_StoreGuide] ON [dbo].[TBL093]
(
	[StoreGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL094_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL094_ID] ON [dbo].[TBL094]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL095_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL095_ID] ON [dbo].[TBL095]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL095_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL095_ID_AccountGuide] ON [dbo].[TBL095]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL095_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL095_ID_MainGuide] ON [dbo].[TBL095]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_CardGuide] ON [dbo].[TBL096]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_CardGuide_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_CardGuide_Category01] ON [dbo].[TBL096]
(
	[Category01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_CardGuide_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_CardGuide_Category02] ON [dbo].[TBL096]
(
	[Category02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_CardGuide_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_CardGuide_Category03] ON [dbo].[TBL096]
(
	[Category03] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_CardGuide_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_CardGuide_Category04] ON [dbo].[TBL096]
(
	[Category04] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_CardGuide_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_CardGuide_Category05] ON [dbo].[TBL096]
(
	[Category05] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_CardGuide_Category06]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_CardGuide_Category06] ON [dbo].[TBL096]
(
	[Category06] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_CardGuide_Category07]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_CardGuide_Category07] ON [dbo].[TBL096]
(
	[Category07] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_CardGuide_DefaultShift]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_CardGuide_DefaultShift] ON [dbo].[TBL096]
(
	[DefaultShift] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_CardGuide_MainAttendance]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_CardGuide_MainAttendance] ON [dbo].[TBL096]
(
	[MainAttendance] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL096_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL096_ID] ON [dbo].[TBL096]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL097_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL097_ID] ON [dbo].[TBL097]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL097_ID_GroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL097_ID_GroupGuide] ON [dbo].[TBL097]
(
	[GroupGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL097_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL097_ID_MainGuide] ON [dbo].[TBL097]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL098_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL098_CardGuide] ON [dbo].[TBL098]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL098_CardGuide_AttendanceGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL098_CardGuide_AttendanceGuide] ON [dbo].[TBL098]
(
	[AttendanceGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL098_CardGuide_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL098_CardGuide_Category01] ON [dbo].[TBL098]
(
	[Category01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL098_CardGuide_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL098_CardGuide_Category02] ON [dbo].[TBL098]
(
	[Category02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL098_CardGuide_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL098_CardGuide_Category03] ON [dbo].[TBL098]
(
	[Category03] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL098_CardGuide_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL098_CardGuide_Category04] ON [dbo].[TBL098]
(
	[Category04] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL098_CardGuide_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL098_CardGuide_Category05] ON [dbo].[TBL098]
(
	[Category05] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL098_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL098_CardGuide_MainGuide] ON [dbo].[TBL098]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL098_CardGuide_ShiftGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL098_CardGuide_ShiftGuide] ON [dbo].[TBL098]
(
	[ShiftGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL098_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL098_ID] ON [dbo].[TBL098]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_ID] ON [dbo].[TBL099]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide] ON [dbo].[TBL099]
(
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_AgentGuide] ON [dbo].[TBL099]
(
	[AgentGuide] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_Category01] ON [dbo].[TBL099]
(
	[Category01] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_Category02] ON [dbo].[TBL099]
(
	[Category02] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_Category03] ON [dbo].[TBL099]
(
	[Category03] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_Category04] ON [dbo].[TBL099]
(
	[Category04] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_Category05] ON [dbo].[TBL099]
(
	[Category05] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_Category06]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_Category06] ON [dbo].[TBL099]
(
	[Category06] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_Category07]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_Category07] ON [dbo].[TBL099]
(
	[Category07] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_CostCenter] ON [dbo].[TBL099]
(
	[CostCenter] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_DetailsGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_DetailsGuide] ON [dbo].[TBL099]
(
	[DetailsGuide] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_MainGuide] ON [dbo].[TBL099]
(
	[MainGuide] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL099_RecordGuide_ShiftGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL099_RecordGuide_ShiftGuide] ON [dbo].[TBL099]
(
	[ShiftGuide] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL100_CardGuide_ItemGroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL100_CardGuide_ItemGroupGuide] ON [dbo].[TBL100]
(
	[ItemGroupGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL100_CardGuide_ItemGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL100_CardGuide_ItemGuide] ON [dbo].[TBL100]
(
	[ItemGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL100_CardGuide_MainGroup]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL100_CardGuide_MainGroup] ON [dbo].[TBL100]
(
	[MainGroup] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL100_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL100_CardGuide_MainGuide] ON [dbo].[TBL100]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL100_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL100_ID] ON [dbo].[TBL100]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL101_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL101_ID] ON [dbo].[TBL101]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL101_ID_UserGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL101_ID_UserGuide] ON [dbo].[TBL101]
(
	[UserGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL102_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL102_ID] ON [dbo].[TBL102]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID] ON [dbo].[TBL103]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_AgentBranch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_AgentBranch] ON [dbo].[TBL103]
(
	[AgentBranch] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_AgentCategory01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_AgentCategory01] ON [dbo].[TBL103]
(
	[AgentCategory01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_AgentCategory02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_AgentCategory02] ON [dbo].[TBL103]
(
	[AgentCategory02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_AgentCategory03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_AgentCategory03] ON [dbo].[TBL103]
(
	[AgentCategory03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_AgentCategory04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_AgentCategory04] ON [dbo].[TBL103]
(
	[AgentCategory04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_AgentCategory05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_AgentCategory05] ON [dbo].[TBL103]
(
	[AgentCategory05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_AgentCostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_AgentCostCenter] ON [dbo].[TBL103]
(
	[AgentCostCenter] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_AgentGroup]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_AgentGroup] ON [dbo].[TBL103]
(
	[AgentGroup] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_AgentGuide] ON [dbo].[TBL103]
(
	[AgentGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_AgentProject]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_AgentProject] ON [dbo].[TBL103]
(
	[AgentProject] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_BillType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_BillType] ON [dbo].[TBL103]
(
	[BillType] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_Branch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_Branch] ON [dbo].[TBL103]
(
	[Branch] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_Category01] ON [dbo].[TBL103]
(
	[Category01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_Category02] ON [dbo].[TBL103]
(
	[Category02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_Category03] ON [dbo].[TBL103]
(
	[Category03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_Category04] ON [dbo].[TBL103]
(
	[Category04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_Category05] ON [dbo].[TBL103]
(
	[Category05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_CostCenter] ON [dbo].[TBL103]
(
	[CostCenter] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_GroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_GroupGuide] ON [dbo].[TBL103]
(
	[GroupGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_ItemGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_ItemGuide] ON [dbo].[TBL103]
(
	[ItemGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_Project]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_Project] ON [dbo].[TBL103]
(
	[Project] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL103_ID_RelatedUnit]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL103_ID_RelatedUnit] ON [dbo].[TBL103]
(
	[RelatedUnit] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL104_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL104_ID] ON [dbo].[TBL104]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL104_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL104_ID_MainGuide] ON [dbo].[TBL104]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL105_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL105_ID] ON [dbo].[TBL105]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL105_ID_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL105_ID_AgentGuide] ON [dbo].[TBL105]
(
	[AgentGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL105_ID_ItemGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL105_ID_ItemGuide] ON [dbo].[TBL105]
(
	[ItemGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL106_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL106_ID] ON [dbo].[TBL106]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL106_ID_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL106_ID_AgentGuide] ON [dbo].[TBL106]
(
	[AgentGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL107_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL107_CardGuide] ON [dbo].[TBL107]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL107_CardGuide_Branch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL107_CardGuide_Branch] ON [dbo].[TBL107]
(
	[Branch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL107_CardGuide_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL107_CardGuide_Category01] ON [dbo].[TBL107]
(
	[Category01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL107_CardGuide_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL107_CardGuide_Category02] ON [dbo].[TBL107]
(
	[Category02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL107_CardGuide_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL107_CardGuide_CostCenter] ON [dbo].[TBL107]
(
	[CostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL107_CardGuide_Project]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL107_CardGuide_Project] ON [dbo].[TBL107]
(
	[Project] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL107_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL107_ID] ON [dbo].[TBL107]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL108_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL108_ID] ON [dbo].[TBL108]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL108_ID_ArchiveType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL108_ID_ArchiveType] ON [dbo].[TBL108]
(
	[ArchiveType] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL109_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL109_ID] ON [dbo].[TBL109]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL109_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL109_ID_MainGuide] ON [dbo].[TBL109]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL110_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL110_CardGuide] ON [dbo].[TBL110]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL110_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL110_ID] ON [dbo].[TBL110]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL111_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL111_ID] ON [dbo].[TBL111]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL111_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL111_ID_MainGuide] ON [dbo].[TBL111]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL112_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL112_CardGuide] ON [dbo].[TBL112]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL112_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL112_ID] ON [dbo].[TBL112]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL113_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL113_ID] ON [dbo].[TBL113]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL113_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL113_ID_MainGuide] ON [dbo].[TBL113]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID] ON [dbo].[TBL114]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_AccountGuide] ON [dbo].[TBL114]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_Category01] ON [dbo].[TBL114]
(
	[Category01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_Category02] ON [dbo].[TBL114]
(
	[Category02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_Category03] ON [dbo].[TBL114]
(
	[Category03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_Category04] ON [dbo].[TBL114]
(
	[Category04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_Category05] ON [dbo].[TBL114]
(
	[Category05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_CostCenter] ON [dbo].[TBL114]
(
	[CostCenter] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_CurrencyGuide] ON [dbo].[TBL114]
(
	[CurrencyGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_MainGuide] ON [dbo].[TBL114]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_RelatedAgent]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_RelatedAgent] ON [dbo].[TBL114]
(
	[RelatedAgent] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL114_ID_RelatedCard]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL114_ID_RelatedCard] ON [dbo].[TBL114]
(
	[RelatedCard] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL115_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL115_ID] ON [dbo].[TBL115]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL116_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL116_ID] ON [dbo].[TBL116]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL116_ID_DetailsGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL116_ID_DetailsGuide] ON [dbo].[TBL116]
(
	[DetailsGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL116_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL116_ID_MainGuide] ON [dbo].[TBL116]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL117_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL117_ID] ON [dbo].[TBL117]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL117_ID_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL117_ID_CostCenter] ON [dbo].[TBL117]
(
	[CostCenter] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL117_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL117_ID_MainGuide] ON [dbo].[TBL117]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL118_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL118_ID] ON [dbo].[TBL118]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL118_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL118_ID_AccountGuide] ON [dbo].[TBL118]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL118_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL118_ID_MainGuide] ON [dbo].[TBL118]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL119_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL119_CardGuide] ON [dbo].[TBL119]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL119_CardGuide_BillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL119_CardGuide_BillGuide] ON [dbo].[TBL119]
(
	[BillGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL119_CardGuide_BondGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL119_CardGuide_BondGuide] ON [dbo].[TBL119]
(
	[BondGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL119_CardGuide_DefaultAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL119_CardGuide_DefaultAccount] ON [dbo].[TBL119]
(
	[DefaultAccount] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL119_CardGuide_DefaultCurrency]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL119_CardGuide_DefaultCurrency] ON [dbo].[TBL119]
(
	[DefaultCurrency] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL119_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL119_ID] ON [dbo].[TBL119]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_CardGuide] ON [dbo].[TBL120]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_CardGuide_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_CardGuide_AccountGuide] ON [dbo].[TBL120]
(
	[AccountGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_CardGuide_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_CardGuide_AgentGuide] ON [dbo].[TBL120]
(
	[AgentGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_CardGuide_Branch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_CardGuide_Branch] ON [dbo].[TBL120]
(
	[Branch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_CardGuide_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_CardGuide_CostCenter] ON [dbo].[TBL120]
(
	[CostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_CardGuide_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_CardGuide_CurrencyGuide] ON [dbo].[TBL120]
(
	[CurrencyGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_CardGuide_MainAdmin]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_CardGuide_MainAdmin] ON [dbo].[TBL120]
(
	[MainAdmin] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_CardGuide_MainBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_CardGuide_MainBill] ON [dbo].[TBL120]
(
	[MainBill] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_CardGuide_MainGuide] ON [dbo].[TBL120]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_CardGuide_Project]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_CardGuide_Project] ON [dbo].[TBL120]
(
	[Project] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL120_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL120_ID] ON [dbo].[TBL120]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_ID] ON [dbo].[TBL121]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_AccountGuide] ON [dbo].[TBL121]
(
	[AccountGuide] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_AgentGuide] ON [dbo].[TBL121]
(
	[AgentGuide] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_BillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_BillGuide] ON [dbo].[TBL121]
(
	[BillGuide] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_Branch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_Branch] ON [dbo].[TBL121]
(
	[Branch] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_Category01] ON [dbo].[TBL121]
(
	[Category01] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_Category02] ON [dbo].[TBL121]
(
	[Category02] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_Category03] ON [dbo].[TBL121]
(
	[Category03] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_Category04] ON [dbo].[TBL121]
(
	[Category04] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_Category05] ON [dbo].[TBL121]
(
	[Category05] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_ContraAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_ContraAccount] ON [dbo].[TBL121]
(
	[ContraAccount] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_CostCenter] ON [dbo].[TBL121]
(
	[CostCenter] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_CurrencyGuide] ON [dbo].[TBL121]
(
	[CurrencyGuide] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_MainGuide] ON [dbo].[TBL121]
(
	[MainGuide] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_OperationBill]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_OperationBill] ON [dbo].[TBL121]
(
	[OperationBill] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_ProductGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_ProductGuide] ON [dbo].[TBL121]
(
	[ProductGuide] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_Project]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_Project] ON [dbo].[TBL121]
(
	[Project] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL121_RecordGuide_RelatedAdministration]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL121_RecordGuide_RelatedAdministration] ON [dbo].[TBL121]
(
	[RelatedAdministration] ASC,
	[RecordGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL122_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL122_CardGuide] ON [dbo].[TBL122]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL122_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL122_CardGuide_MainGuide] ON [dbo].[TBL122]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL122_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL122_ID] ON [dbo].[TBL122]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL123_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL123_ID] ON [dbo].[TBL123]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL123_ID_AccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL123_ID_AccountID] ON [dbo].[TBL123]
(
	[AccountID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL123_ID_BranchID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL123_ID_BranchID] ON [dbo].[TBL123]
(
	[BranchID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL123_ID_CostCenterID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL123_ID_CostCenterID] ON [dbo].[TBL123]
(
	[CostCenterID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL123_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL123_ID_MainGuide] ON [dbo].[TBL123]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL123_ID_ProjectID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL123_ID_ProjectID] ON [dbo].[TBL123]
(
	[ProjectID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL123_ID_StoreID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL123_ID_StoreID] ON [dbo].[TBL123]
(
	[StoreID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL124_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL124_ID] ON [dbo].[TBL124]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL125_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL125_ID] ON [dbo].[TBL125]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL125_ID_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL125_ID_Category01] ON [dbo].[TBL125]
(
	[Category01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL125_ID_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL125_ID_Category02] ON [dbo].[TBL125]
(
	[Category02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL125_ID_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL125_ID_Category03] ON [dbo].[TBL125]
(
	[Category03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL125_ID_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL125_ID_Category04] ON [dbo].[TBL125]
(
	[Category04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL125_ID_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL125_ID_Category05] ON [dbo].[TBL125]
(
	[Category05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL125_ID_JobGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL125_ID_JobGuide] ON [dbo].[TBL125]
(
	[JobGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL125_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL125_ID_MainGuide] ON [dbo].[TBL125]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL126_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL126_CardGuide] ON [dbo].[TBL126]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL126_CardGuide_UserGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL126_CardGuide_UserGuide] ON [dbo].[TBL126]
(
	[UserGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL126_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL126_ID] ON [dbo].[TBL126]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL127_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL127_ID] ON [dbo].[TBL127]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL127_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL127_ID_MainGuide] ON [dbo].[TBL127]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL128_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL128_CardGuide] ON [dbo].[TBL128]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL128_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL128_CardGuide_MainGuide] ON [dbo].[TBL128]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL128_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL128_ID] ON [dbo].[TBL128]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL129_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL129_ID] ON [dbo].[TBL129]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL129_ID_BillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL129_ID_BillGuide] ON [dbo].[TBL129]
(
	[BillGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL129_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL129_ID_MainGuide] ON [dbo].[TBL129]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID] ON [dbo].[TBL130]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_AccountGuide] ON [dbo].[TBL130]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_Branch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_Branch] ON [dbo].[TBL130]
(
	[Branch] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_Category01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_Category01] ON [dbo].[TBL130]
(
	[Category01] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_Category02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_Category02] ON [dbo].[TBL130]
(
	[Category02] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_Category03]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_Category03] ON [dbo].[TBL130]
(
	[Category03] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_Category04]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_Category04] ON [dbo].[TBL130]
(
	[Category04] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_Category05]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_Category05] ON [dbo].[TBL130]
(
	[Category05] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_ContraAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_ContraAccount] ON [dbo].[TBL130]
(
	[ContraAccount] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_CostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_CostCenter] ON [dbo].[TBL130]
(
	[CostCenter] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_CurrencyGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_CurrencyGuide] ON [dbo].[TBL130]
(
	[CurrencyGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_MainGuide] ON [dbo].[TBL130]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL130_ID_Project]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL130_ID_Project] ON [dbo].[TBL130]
(
	[Project] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL131_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL131_ID] ON [dbo].[TBL131]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL131_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL131_ID_AccountGuide] ON [dbo].[TBL131]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL131_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL131_ID_MainGuide] ON [dbo].[TBL131]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL131_ID_PeriodGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL131_ID_PeriodGuide] ON [dbo].[TBL131]
(
	[PeriodGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL132_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL132_ID] ON [dbo].[TBL132]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL133_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL133_ID] ON [dbo].[TBL133]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL133_ID_AccountGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL133_ID_AccountGuide] ON [dbo].[TBL133]
(
	[AccountGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL133_ID_AgentsGroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL133_ID_AgentsGroupGuide] ON [dbo].[TBL133]
(
	[AgentsGroupGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL133_ID_BranchGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL133_ID_BranchGuide] ON [dbo].[TBL133]
(
	[BranchGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL133_ID_CostCenterGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL133_ID_CostCenterGuide] ON [dbo].[TBL133]
(
	[CostCenterGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL133_ID_GroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL133_ID_GroupGuide] ON [dbo].[TBL133]
(
	[GroupGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL133_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL133_ID_MainGuide] ON [dbo].[TBL133]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL133_ID_ProjectGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL133_ID_ProjectGuide] ON [dbo].[TBL133]
(
	[ProjectGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL133_ID_StoreGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL133_ID_StoreGuide] ON [dbo].[TBL133]
(
	[StoreGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL134_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL134_CardGuide] ON [dbo].[TBL134]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL134_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL134_ID] ON [dbo].[TBL134]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide] ON [dbo].[TBL135]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_AbsenteeTimeExecutions]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_AbsenteeTimeExecutions] ON [dbo].[TBL135]
(
	[AbsenteeTimeExecutions] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_AbsenteeTimeHourlyVacation]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_AbsenteeTimeHourlyVacation] ON [dbo].[TBL135]
(
	[AbsenteeTimeHourlyVacation] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_EarlyEntranceExecutions]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_EarlyEntranceExecutions] ON [dbo].[TBL135]
(
	[EarlyEntranceExecutions] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_EarlyLeaveExecutions]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_EarlyLeaveExecutions] ON [dbo].[TBL135]
(
	[EarlyLeaveExecutions] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_EarlyLeaveHourlyVacation]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_EarlyLeaveHourlyVacation] ON [dbo].[TBL135]
(
	[EarlyLeaveHourlyVacation] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_LateEntranceExecutions]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_LateEntranceExecutions] ON [dbo].[TBL135]
(
	[LateEntranceExecutions] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_LateEntranceHourlyVacation]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_LateEntranceHourlyVacation] ON [dbo].[TBL135]
(
	[LateEntranceHourlyVacation] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_LateLeaveExecutions]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_LateLeaveExecutions] ON [dbo].[TBL135]
(
	[LateLeaveExecutions] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_NormalAbcenteeExecutions]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_NormalAbcenteeExecutions] ON [dbo].[TBL135]
(
	[NormalAbcenteeExecutions] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_NormalAbcenteeVacation]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_NormalAbcenteeVacation] ON [dbo].[TBL135]
(
	[NormalAbcenteeVacation] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_NormalVacationExecutions]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_NormalVacationExecutions] ON [dbo].[TBL135]
(
	[NormalVacationExecutions] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_CardGuide_UnjustifiedAbcenteeVacation]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_CardGuide_UnjustifiedAbcenteeVacation] ON [dbo].[TBL135]
(
	[UnjustifiedAbcenteeVacation] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL135_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL135_ID] ON [dbo].[TBL135]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL136_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL136_CardGuide] ON [dbo].[TBL136]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL136_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL136_CardGuide_MainGuide] ON [dbo].[TBL136]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL136_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL136_ID] ON [dbo].[TBL136]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL137_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL137_ID] ON [dbo].[TBL137]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL137_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL137_ID_MainGuide] ON [dbo].[TBL137]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL138_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL138_ID] ON [dbo].[TBL138]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL139_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL139_ID] ON [dbo].[TBL139]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL140_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL140_ID] ON [dbo].[TBL140]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL140_ID_ItemID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL140_ID_ItemID] ON [dbo].[TBL140]
(
	[ItemID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL140_ID_StoreID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL140_ID_StoreID] ON [dbo].[TBL140]
(
	[StoreID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL141_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL141_ID] ON [dbo].[TBL141]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL141_RowGuide_FreightType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL141_RowGuide_FreightType] ON [dbo].[TBL141]
(
	[FreightType] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL141_RowGuide_GoodsType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL141_RowGuide_GoodsType] ON [dbo].[TBL141]
(
	[GoodsType] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL141_RowGuide_LCAccount]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL141_RowGuide_LCAccount] ON [dbo].[TBL141]
(
	[LCAccount] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL141_RowGuide_LCType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL141_RowGuide_LCType] ON [dbo].[TBL141]
(
	[LCType] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL141_RowGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL141_RowGuide_MainGuide] ON [dbo].[TBL141]
(
	[MainGuide] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL141_RowGuide_PaymentType]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL141_RowGuide_PaymentType] ON [dbo].[TBL141]
(
	[PaymentType] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL141_RowGuide_TermsOfPayment]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL141_RowGuide_TermsOfPayment] ON [dbo].[TBL141]
(
	[TermsOfPayment] ASC,
	[RowGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL142_CardGuide_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL142_CardGuide_AgentGuide] ON [dbo].[TBL142]
(
	[AgentGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL142_CardGuide_BillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL142_CardGuide_BillGuide] ON [dbo].[TBL142]
(
	[BillGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL142_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL142_ID] ON [dbo].[TBL142]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL143_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL143_ID] ON [dbo].[TBL143]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL143_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL143_ID_MainGuide] ON [dbo].[TBL143]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide] ON [dbo].[TBL144]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_AgentAddress]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_AgentAddress] ON [dbo].[TBL144]
(
	[AgentAddress] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_AgentBranch]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_AgentBranch] ON [dbo].[TBL144]
(
	[AgentBranch] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_AgentCategory01]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_AgentCategory01] ON [dbo].[TBL144]
(
	[AgentCategory01] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_AgentCategory02]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_AgentCategory02] ON [dbo].[TBL144]
(
	[AgentCategory02] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_AgentCostCenter]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_AgentCostCenter] ON [dbo].[TBL144]
(
	[AgentCostCenter] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_AgentGroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_AgentGroupGuide] ON [dbo].[TBL144]
(
	[AgentGroupGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_AgentGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_AgentGuide] ON [dbo].[TBL144]
(
	[AgentGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_AgentProject]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_AgentProject] ON [dbo].[TBL144]
(
	[AgentProject] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_BranchGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_BranchGuide] ON [dbo].[TBL144]
(
	[BranchGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_CostCenterGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_CostCenterGuide] ON [dbo].[TBL144]
(
	[CostCenterGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_CardGuide_ProjectGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_CardGuide_ProjectGuide] ON [dbo].[TBL144]
(
	[ProjectGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL144_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL144_ID] ON [dbo].[TBL144]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL145_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL145_ID] ON [dbo].[TBL145]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL145_ID_GroupID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL145_ID_GroupID] ON [dbo].[TBL145]
(
	[GroupID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL145_ID_ItemID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL145_ID_ItemID] ON [dbo].[TBL145]
(
	[ItemID] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL145_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL145_ID_MainGuide] ON [dbo].[TBL145]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL146_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL146_ID] ON [dbo].[TBL146]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL146_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL146_ID_MainGuide] ON [dbo].[TBL146]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL146_ID_MethodGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL146_ID_MethodGuide] ON [dbo].[TBL146]
(
	[MethodGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL147_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL147_ID] ON [dbo].[TBL147]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL147_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL147_ID_MainGuide] ON [dbo].[TBL147]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL148_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL148_ID] ON [dbo].[TBL148]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL149_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL149_ID] ON [dbo].[TBL149]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL150_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL150_CardGuide] ON [dbo].[TBL150]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL150_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL150_ID] ON [dbo].[TBL150]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL151_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL151_ID] ON [dbo].[TBL151]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL151_ID_GroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL151_ID_GroupGuide] ON [dbo].[TBL151]
(
	[GroupGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL151_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL151_ID_MainGuide] ON [dbo].[TBL151]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL152_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL152_ID] ON [dbo].[TBL152]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL152_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL152_ID_MainGuide] ON [dbo].[TBL152]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL153_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL153_ID] ON [dbo].[TBL153]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL153_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL153_ID_MainGuide] ON [dbo].[TBL153]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL154_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL154_ID] ON [dbo].[TBL154]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL154_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL154_ID_MainGuide] ON [dbo].[TBL154]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL155_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL155_ID] ON [dbo].[TBL155]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL156_CardGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL156_CardGuide] ON [dbo].[TBL156]
(
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL156_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL156_ID] ON [dbo].[TBL156]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL157_CardGuide_AccountID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL157_CardGuide_AccountID] ON [dbo].[TBL157]
(
	[AccountID] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL157_CardGuide_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL157_CardGuide_MainGuide] ON [dbo].[TBL157]
(
	[MainGuide] ASC,
	[CardGuide] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL157_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL157_ID] ON [dbo].[TBL157]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL158_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL158_ID] ON [dbo].[TBL158]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL158_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL158_ID_MainGuide] ON [dbo].[TBL158]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL159_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL159_ID] ON [dbo].[TBL159]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL160_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL160_ID] ON [dbo].[TBL160]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL160_ID_BillGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL160_ID_BillGuide] ON [dbo].[TBL160]
(
	[BillGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL160_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL160_ID_MainGuide] ON [dbo].[TBL160]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL161_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL161_ID] ON [dbo].[TBL161]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL161_ID_GroupGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL161_ID_GroupGuide] ON [dbo].[TBL161]
(
	[GroupGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL161_ID_MainGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL161_ID_MainGuide] ON [dbo].[TBL161]
(
	[MainGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL161_ID_UserGuide]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL161_ID_UserGuide] ON [dbo].[TBL161]
(
	[UserGuide] ASC,
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IDX_TBL162_ID]    Script Date: 8/14/2023 4:54:49 PM ******/
CREATE NONCLUSTERED INDEX [IDX_TBL162_ID] ON [dbo].[TBL162]
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
ALTER TABLE [dbo].[TBL001] ADD  CONSTRAINT [DF_TBL001_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL001] ADD  CONSTRAINT [DF_TBL001_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL001] ADD  CONSTRAINT [DF_TBL001_Partity]  DEFAULT ((100)) FOR [Partity]
GO
ALTER TABLE [dbo].[TBL002] ADD  CONSTRAINT [DF_TBL002_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL002] ADD  CONSTRAINT [DF_TBL002_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL002] ADD  CONSTRAINT [DF_TBL002_CloseAccounts]  DEFAULT ((0)) FOR [CloseAccounts]
GO
ALTER TABLE [dbo].[TBL004] ADD  CONSTRAINT [DF_TBL004_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL004] ADD  CONSTRAINT [DF_TBL004_NotActive]  DEFAULT ((0)) FOR [NotActive]
GO
ALTER TABLE [dbo].[TBL004] ADD  CONSTRAINT [DF_TBL004_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL004] ADD  CONSTRAINT [DF_TBL004_MaxDebit]  DEFAULT ((0)) FOR [MaxDebit]
GO
ALTER TABLE [dbo].[TBL004] ADD  CONSTRAINT [DF_TBL004_MaxCredit]  DEFAULT ((0)) FOR [MaxCredit]
GO
ALTER TABLE [dbo].[TBL004] ADD  CONSTRAINT [DF_TBL004_NotepaperMaxDebit]  DEFAULT ((0)) FOR [NotepaperMaxDebit]
GO
ALTER TABLE [dbo].[TBL004] ADD  CONSTRAINT [DF_TBL004_NotepaperMaxCredit]  DEFAULT ((0)) FOR [NotepaperMaxCredit]
GO
ALTER TABLE [dbo].[TBL004] ADD  DEFAULT ((0)) FOR [Caution]
GO
ALTER TABLE [dbo].[TBL004] ADD  DEFAULT (getdate()) FOR [BuiltIn]
GO
ALTER TABLE [dbo].[TBL004] ADD  CONSTRAINT [DF_TBL004_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL004] ADD  CONSTRAINT [DF_TBL004_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL005] ADD  CONSTRAINT [DF_TBL005_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL005] ADD  CONSTRAINT [DF_TBL005_NotActive]  DEFAULT ((0)) FOR [NotActive]
GO
ALTER TABLE [dbo].[TBL005] ADD  CONSTRAINT [DF_TBL005_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL005] ADD  CONSTRAINT [DF_TBL005_CardType]  DEFAULT ((0)) FOR [CardType]
GO
ALTER TABLE [dbo].[TBL005] ADD  CONSTRAINT [DF_TBL005_DefaultValue]  DEFAULT ((0)) FOR [DefaultValue]
GO
ALTER TABLE [dbo].[TBL005] ADD  CONSTRAINT [DF_TBL005_IntValue]  DEFAULT ((0)) FOR [IntValue]
GO
ALTER TABLE [dbo].[TBL005] ADD  CONSTRAINT [DF_TBL005_UsedInHR]  DEFAULT ((0)) FOR [UsedInHR]
GO
ALTER TABLE [dbo].[TBL005] ADD  CONSTRAINT [DF_TBL005_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL005] ADD  CONSTRAINT [DF_TBL005_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_TaxRatio]  DEFAULT ((0)) FOR [TaxRatio]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_ForceCodesInInput]  DEFAULT ((0)) FOR [ForceCodesInInput]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_ForceCodesOutInput]  DEFAULT ((0)) FOR [ForceCodesInOutput]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_ExpiryDateRequired]  DEFAULT ((0)) FOR [ExpiryDateRequired]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_CostCenterRequired]  DEFAULT ((0)) FOR [CostCenterRequired]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Category01Required]  DEFAULT ((0)) FOR [Category01Required]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Category02Required]  DEFAULT ((0)) FOR [Category02Required]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Category03Required]  DEFAULT ((0)) FOR [Category03Required]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Category04Required]  DEFAULT ((0)) FOR [Category04Required]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Category05Required]  DEFAULT ((0)) FOR [Category05Required]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_PatchCodeRequired]  DEFAULT ((0)) FOR [PatchCodeRequired]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_ExpiryDateCheckInventory]  DEFAULT ((0)) FOR [ExpiryDateCheckInventory]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_CostCenterCheckInventory]  DEFAULT ((0)) FOR [CostCenterCheckInventory]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Category01CheckInventory]  DEFAULT ((0)) FOR [Category01CheckInventory]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Category02CheckInventory]  DEFAULT ((0)) FOR [Category02CheckInventory]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Category03CheckInventory]  DEFAULT ((0)) FOR [Category03CheckInventory]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Category04CheckInventory]  DEFAULT ((0)) FOR [Category04CheckInventory]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Category05CheckInventory]  DEFAULT ((0)) FOR [Category05CheckInventory]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_PatchCodeCheckInventory]  DEFAULT ((0)) FOR [PatchCodeCheckInventory]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_CannotDuplicateSerial]  DEFAULT ((0)) FOR [CannotDuplicateSerial]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_IsAssets]  DEFAULT ((0)) FOR [IsAssets]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_ButtonColor]  DEFAULT ((0)) FOR [ButtonColor]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_Balance_Selected]  DEFAULT ((0)) FOR [Balance_Selected]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL006] ADD  CONSTRAINT [DF_TBL006_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_StockProduct]  DEFAULT ((1)) FOR [StockProduct]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_ListAlternatives]  DEFAULT ((0)) FOR [ListAlternatives]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_ProductType]  DEFAULT ((0)) FOR [ProductType]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_DefaultUnit]  DEFAULT ((1)) FOR [DefaultUnit]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_NotActive]  DEFAULT ((0)) FOR [NotActive]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_NotTaxable]  DEFAULT ((0)) FOR [NotTaxable]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_NotDiscountable]  DEFAULT ((0)) FOR [NotDiscountable]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_ExpiryDateRequired]  DEFAULT ((0)) FOR [ExpiryDateRequired]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Weight]  DEFAULT ((0)) FOR [Weight]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Value]  DEFAULT ((0)) FOR [Value]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Length]  DEFAULT ((0)) FOR [Length]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Width]  DEFAULT ((0)) FOR [Width]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Hieght]  DEFAULT ((0)) FOR [Hieght]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Weight2]  DEFAULT ((0)) FOR [Weight2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Value2]  DEFAULT ((0)) FOR [Value2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Length2]  DEFAULT ((0)) FOR [Length2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Width2]  DEFAULT ((0)) FOR [Width2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Hieght2]  DEFAULT ((0)) FOR [Hieght2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Weight3]  DEFAULT ((0)) FOR [Weight3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Value3]  DEFAULT ((0)) FOR [Value3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Length3]  DEFAULT ((0)) FOR [Length3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Width3]  DEFAULT ((0)) FOR [Width3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Hieght3]  DEFAULT ((0)) FOR [Hieght3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_IsAssets]  DEFAULT ((0)) FOR [IsAssets]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Factor2]  DEFAULT ((0)) FOR [Factor2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Factor3]  DEFAULT ((0)) FOR [Factor3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_TaxRatio]  DEFAULT ((0)) FOR [TaxRatio]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_MaxLimit]  DEFAULT ((0)) FOR [MaxLimit]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_MinLimit]  DEFAULT ((0)) FOR [MinLimit]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_AgentPrice]  DEFAULT ((0)) FOR [AgentPrice]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_AgentPrice2]  DEFAULT ((0)) FOR [AgentPrice2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_AgentPrice3]  DEFAULT ((0)) FOR [AgentPrice3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_AgentPriceTax]  DEFAULT ((0)) FOR [AgentPriceTax]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_WholePrice]  DEFAULT ((0)) FOR [WholePrice]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_WholePrice2]  DEFAULT ((0)) FOR [WholePrice2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_WholePrice3]  DEFAULT ((0)) FOR [WholePrice3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_WholePriceTax]  DEFAULT ((0)) FOR [WholePriceTax]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_EndUserPrice]  DEFAULT ((0)) FOR [EndUserPrice]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_EndUserPrice2]  DEFAULT ((0)) FOR [EndUserPrice2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_EndUserPrice3]  DEFAULT ((0)) FOR [EndUserPrice3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_EndUserPriceTax]  DEFAULT ((0)) FOR [EndUserPriceTax]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price5Item]  DEFAULT ((0)) FOR [Price5Item]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price5Item2]  DEFAULT ((0)) FOR [Price5Item2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price5Item3]  DEFAULT ((0)) FOR [Price5Item3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price5ItemTax]  DEFAULT ((0)) FOR [Price5ItemTax]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price6Item]  DEFAULT ((0)) FOR [Price6Item]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price6Item2]  DEFAULT ((0)) FOR [Price6Item2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price6Item3]  DEFAULT ((0)) FOR [Price6Item3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price6ItemTax]  DEFAULT ((0)) FOR [Price6ItemTax]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price7Item]  DEFAULT ((0)) FOR [Price7Item]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price7Item2]  DEFAULT ((0)) FOR [Price7Item2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price7Item3]  DEFAULT ((0)) FOR [Price7Item3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Price7ItemTax]  DEFAULT ((0)) FOR [Price7ItemTax]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_StanderCost]  DEFAULT ((0)) FOR [StanderCost]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_StanderCost2]  DEFAULT ((0)) FOR [StanderCost2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_StanderCost3]  DEFAULT ((0)) FOR [StanderCost3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_StanderCostTax]  DEFAULT ((0)) FOR [StanderCostTax]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_CardOrder]  DEFAULT ((0)) FOR [CardOrder]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Points]  DEFAULT ((0)) FOR [Points]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Points2]  DEFAULT ((0)) FOR [Points2]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_Points3]  DEFAULT ((0)) FOR [Points3]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL007] ADD  CONSTRAINT [DF_TBL007_ManuallyActivate]  DEFAULT ((0)) FOR [ManuallyActivate]
GO
ALTER TABLE [dbo].[TBL008] ADD  CONSTRAINT [DF_TBL008_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL008] ADD  CONSTRAINT [DF_TBL008_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL008] ADD  CONSTRAINT [DF_TBL008_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL008] ADD  CONSTRAINT [DF_TBL008_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL008] ADD  CONSTRAINT [DF_TBL008_NotActive]  DEFAULT ((0)) FOR [NotActive]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_DefaultColumnsNames]  DEFAULT ((0)) FOR [UseTerms]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_EntryType]  DEFAULT ((0)) FOR [EntryType]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_EntryType2]  DEFAULT ((0)) FOR [EntryType2]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_CostCenterType]  DEFAULT ((1)) FOR [CostCenterType]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_CostCenterType2]  DEFAULT ((1)) FOR [CostCenterType2]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_CostCenterType3]  DEFAULT ((1)) FOR [CostCenterType3]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_ProjectType]  DEFAULT ((1)) FOR [ProjectType]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_ProjectType2]  DEFAULT ((1)) FOR [ProjectType2]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_ProjectType3]  DEFAULT ((1)) FOR [ProjectType3]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BranchType]  DEFAULT ((1)) FOR [BranchType]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BranchType2]  DEFAULT ((1)) FOR [BranchType2]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BranchType3]  DEFAULT ((1)) FOR [BranchType3]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_CategoriesType]  DEFAULT ((1)) FOR [CategoriesType]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_CategoriesType2]  DEFAULT ((1)) FOR [CategoriesType2]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_CategoriesType3]  DEFAULT ((1)) FOR [CategoriesType3]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_AgentType]  DEFAULT ((1)) FOR [AgentType]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_AgentType2]  DEFAULT ((1)) FOR [AgentType2]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_AgentType3]  DEFAULT ((1)) FOR [AgentType3]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_DoNotGenerateEntry]  DEFAULT ((0)) FOR [DoNotGenerateEntry]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_IsPayment]  DEFAULT ((0)) FOR [IsPayment]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_CurrencyUnChangeable]  DEFAULT ((0)) FOR [CurrencyUnChangeable]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption1]  DEFAULT ((0)) FOR [BooleanOption1]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption2]  DEFAULT ((0)) FOR [BooleanOption2]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption3]  DEFAULT ((0)) FOR [BooleanOption3]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption4]  DEFAULT ((0)) FOR [BooleanOption4]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption5]  DEFAULT ((0)) FOR [BooleanOption5]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption6]  DEFAULT ((0)) FOR [BooleanOption6]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption7]  DEFAULT ((1)) FOR [BooleanOption7]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption8]  DEFAULT ((0)) FOR [BooleanOption8]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption9]  DEFAULT ((0)) FOR [BooleanOption9]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption10]  DEFAULT ((0)) FOR [BooleanOption10]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption11]  DEFAULT ((0)) FOR [BooleanOption11]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL020_DoNotPostToAccounts]  DEFAULT ((0)) FOR [DoNotPostToAccounts]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_DoNotGenerateEntryOnCollect]  DEFAULT ((0)) FOR [DoNotGenerateEntryOnCollect]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_UseSameAccountForCollect]  DEFAULT ((0)) FOR [UseSameAccountForCollect]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_SingleAccounts]  DEFAULT ((0)) FOR [SingleAccounts]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BuiltTowEntries]  DEFAULT ((0)) FOR [BuiltTowEntries]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_AffectContraAccountInEntry]  DEFAULT ((0)) FOR [AffectContraAccountInEntry]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_ReverseCollectEntry]  DEFAULT ((0)) FOR [ReverseCollectEntry]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BondType]  DEFAULT ((1)) FOR [BondType]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_EntryMode]  DEFAULT ((0)) FOR [EntryMode]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_DefaultValue]  DEFAULT ((0)) FOR [DefaultValue]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_CardMode]  DEFAULT ((0)) FOR [CardMode]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_TwoCurrencies]  DEFAULT ((0)) FOR [TwoCurrencies]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_SaveImageAsLocation]  DEFAULT ((0)) FOR [SaveImageAsLocation]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_AutoGenerateContraAccount]  DEFAULT ((1)) FOR [AutoGenerateContraAccount]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_AttachmentType]  DEFAULT ((0)) FOR [AttachmentType]
GO
ALTER TABLE [dbo].[TBL009] ADD  CONSTRAINT [DF_TBL009_BooleanOption12]  DEFAULT ((0)) FOR [BooleanOption12]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_TimeLength]  DEFAULT ((0)) FOR [TimeLength]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_BondNumber2]  DEFAULT ((0)) FOR [BondNumber2]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_Posted]  DEFAULT ((1)) FOR [Posted]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_Collected]  DEFAULT ((0)) FOR [Collected]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_Boolean01]  DEFAULT ((0)) FOR [Boolean01]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_Boolean02]  DEFAULT ((0)) FOR [Boolean02]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_DoneIn]  DEFAULT (getdate()) FOR [DoneIn]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_Value]  DEFAULT ((0)) FOR [Value]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_Value2]  DEFAULT ((0)) FOR [Value2]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_Value3]  DEFAULT ((0)) FOR [Value3]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_InsertedIn]  DEFAULT (getdate()) FOR [InsertedIn]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL010] ADD  CONSTRAINT [DF_TBL010_CardType]  DEFAULT ((0)) FOR [CardType]
GO
ALTER TABLE [dbo].[TBL011] ADD  CONSTRAINT [DF_Table1_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL011] ADD  CONSTRAINT [DF_TBL011_Posted]  DEFAULT ((1)) FOR [Posted]
GO
ALTER TABLE [dbo].[TBL011] ADD  CONSTRAINT [DF_TBL011_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL011] ADD  CONSTRAINT [DF_TBL011_DoneIn]  DEFAULT (getdate()) FOR [DoneIn]
GO
ALTER TABLE [dbo].[TBL011] ADD  CONSTRAINT [DF_TBL011_InsertedIn]  DEFAULT (CONVERT([float],getdate(),0)) FOR [InsertedIn]
GO
ALTER TABLE [dbo].[TBL011] ADD  CONSTRAINT [DF_TBL011_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL011] ADD  CONSTRAINT [DF_TBL011_Rate]  DEFAULT ((1)) FOR [Rate]
GO
ALTER TABLE [dbo].[TBL011] ADD  CONSTRAINT [DF_TBL011_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL011] ADD  CONSTRAINT [DF_TBL011_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL012] ADD  CONSTRAINT [DF_TBL012_RowGuide]  DEFAULT (newid()) FOR [RowGuide]
GO
ALTER TABLE [dbo].[TBL012] ADD  CONSTRAINT [DF_TBL012_Debit]  DEFAULT ((0)) FOR [Debit]
GO
ALTER TABLE [dbo].[TBL012] ADD  CONSTRAINT [DF_TBL012_Credit]  DEFAULT ((0)) FOR [Credit]
GO
ALTER TABLE [dbo].[TBL012] ADD  CONSTRAINT [DF_TBL012_DebitRate]  DEFAULT ((0)) FOR [DebitRate]
GO
ALTER TABLE [dbo].[TBL012] ADD  CONSTRAINT [DF_TBL012_CreditRate]  DEFAULT ((0)) FOR [CreditRate]
GO
ALTER TABLE [dbo].[TBL012] ADD  CONSTRAINT [DF_TBL012_Checked]  DEFAULT ((0)) FOR [Checked]
GO
ALTER TABLE [dbo].[TBL012] ADD  CONSTRAINT [DF_TBL012_NoMerge]  DEFAULT ((0)) FOR [NoMerge]
GO
ALTER TABLE [dbo].[TBL013] ADD  CONSTRAINT [DF_Tbl001_UsGuide]  DEFAULT (newid()) FOR [UsGuide]
GO
ALTER TABLE [dbo].[TBL013] ADD  CONSTRAINT [DF_TBL013_NotActive]  DEFAULT ((0)) FOR [NotActive]
GO
ALTER TABLE [dbo].[TBL013] ADD  CONSTRAINT [DF_Tbl001_Password]  DEFAULT ('**********') FOR [Password]
GO
ALTER TABLE [dbo].[TBL013] ADD  CONSTRAINT [DF_TBL013_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL013] ADD  CONSTRAINT [DF_TBL013_UserLanguage]  DEFAULT ((-1)) FOR [UserLanguage]
GO
ALTER TABLE [dbo].[TBL013] ADD  CONSTRAINT [DF__TBL013__BuiltIn__0AD2A005]  DEFAULT (getdate()) FOR [BuiltIn]
GO
ALTER TABLE [dbo].[TBL013] ADD  CONSTRAINT [DF_TBL013_ShowInDropDown]  DEFAULT ((0)) FOR [ShowInDropDown]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_CardType]  DEFAULT ((1)) FOR [CardType]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_WindowType]  DEFAULT ((1)) FOR [WindowType]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_IntValue01]  DEFAULT ((1)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_IntValue02]  DEFAULT ((0)) FOR [IntValue02]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_IntValue03]  DEFAULT ((0)) FOR [IntValue03]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_IntValue04]  DEFAULT ((0)) FOR [IntValue04]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_NumberValue01]  DEFAULT ((0)) FOR [NumberValue01]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_NumberValue02]  DEFAULT ((0)) FOR [NumberValue02]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_NumberValue03]  DEFAULT ((0)) FOR [NumberValue03]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_NumberValue04]  DEFAULT ((0)) FOR [NumberValue04]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_NumberValue05]  DEFAULT ((0)) FOR [NumberValue05]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_NumberValue06]  DEFAULT ((0)) FOR [NumberValue06]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_IsSelected]  DEFAULT ((0)) FOR [IsSelected]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_BitValue1]  DEFAULT ((0)) FOR [BitValue1]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_BitValue2]  DEFAULT ((0)) FOR [BitValue2]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_BitValue3]  DEFAULT ((0)) FOR [BitValue3]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_BitValue4]  DEFAULT ((0)) FOR [BitValue4]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_BitValue5]  DEFAULT ((0)) FOR [BitValue5]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_BitValue6]  DEFAULT ((0)) FOR [BitValue6]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_BitValue7]  DEFAULT ((0)) FOR [BitValue7]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_BitValue8]  DEFAULT ((0)) FOR [BitValue8]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_BitValue9]  DEFAULT ((0)) FOR [BitValue9]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_BitValue10]  DEFAULT ((0)) FOR [BitValue10]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL014] ADD  CONSTRAINT [DF_TBL014_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL015] ADD  CONSTRAINT [DF_TBL015_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL015] ADD  CONSTRAINT [DF_TBL015_DefaultPayType]  DEFAULT ((-1)) FOR [DefaultPayType]
GO
ALTER TABLE [dbo].[TBL015] ADD  CONSTRAINT [DF_TBL015_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL015] ADD  CONSTRAINT [DF_TBL015_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL015] ADD  CONSTRAINT [DF_TBL015_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_Gender]  DEFAULT ((0)) FOR [Gender]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_SalaryType]  DEFAULT ((0)) FOR [SalaryType]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_FixedSalary]  DEFAULT ((0)) FOR [FixedSalary]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_DaySalary]  DEFAULT ((0)) FOR [DaySalary]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_CostPercentage]  DEFAULT ((0)) FOR [CostPercentage]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_NotActive]  DEFAULT ((0)) FOR [NotActive]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_MaxDebit]  DEFAULT ((0)) FOR [MaxDebit]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_MaxCredit]  DEFAULT ((0)) FOR [MaxCredit]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_NotepaperMaxDebit]  DEFAULT ((0)) FOR [NotepaperMaxDebit]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_NotepaperMaxCredit]  DEFAULT ((0)) FOR [NotepaperMaxCredit]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_DetailingItems]  DEFAULT ((0)) FOR [DetailingItems]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue1]  DEFAULT ((0)) FOR [BitValue1]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue2]  DEFAULT ((0)) FOR [BitValue2]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue3]  DEFAULT ((0)) FOR [BitValue3]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue4]  DEFAULT ((0)) FOR [BitValue4]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue5]  DEFAULT ((0)) FOR [BitValue5]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue6]  DEFAULT ((0)) FOR [BitValue6]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue7]  DEFAULT ((0)) FOR [BitValue7]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue8]  DEFAULT ((0)) FOR [BitValue8]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue9]  DEFAULT ((0)) FOR [BitValue9]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue10]  DEFAULT ((0)) FOR [BitValue10]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_BitValue11]  DEFAULT ((0)) FOR [BitValue11]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_CreditNotAllowed]  DEFAULT ((0)) FOR [CreditNotAllowed]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_DueAge]  DEFAULT ((0)) FOR [DueAge]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_FloatValue1]  DEFAULT ((0)) FOR [FloatValue1]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_FloatValue2]  DEFAULT ((0)) FOR [FloatValue2]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_FloatValue3]  DEFAULT ((0)) FOR [FloatValue3]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_FloatValue4]  DEFAULT ((0)) FOR [FloatValue4]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_FloatValue5]  DEFAULT ((0)) FOR [FloatValue5]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_FloatValue6]  DEFAULT ((0)) FOR [FloatValue6]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_PriceType]  DEFAULT ((4)) FOR [PriceType]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_SubjectToTax]  DEFAULT ((1)) FOR [SubjectToTax]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_MaxDiscountRatio]  DEFAULT ((100)) FOR [MaxDiscountRatio]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_DefaultPriceType]  DEFAULT ((-1)) FOR [DefaultPriceType]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_RadioValue1]  DEFAULT ((0)) FOR [RadioValue1]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_NumberValue1]  DEFAULT ((0)) FOR [NumberValue1]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_NumberValue2]  DEFAULT ((0)) FOR [NumberValue2]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_NumberValue3]  DEFAULT ((0)) FOR [NumberValue3]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_NumberValue4]  DEFAULT ((0)) FOR [NumberValue4]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_NumberValue5]  DEFAULT ((0)) FOR [NumberValue5]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_ItemsDiscountRatio]  DEFAULT ((0)) FOR [ItemsDiscountRatio]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_Suspended]  DEFAULT ((0)) FOR [Suspended]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_IsEmployee]  DEFAULT ((0)) FOR [IsEmployee]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL016] ADD  CONSTRAINT [DF_TBL016_DueAgeAmount]  DEFAULT ((0)) FOR [DueAgeAmount]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_CostPercent]  DEFAULT ((0)) FOR [PricePercent]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_PriceOrder]  DEFAULT ((0)) FOR [PriceOrder]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByCostCenter]  DEFAULT ((0)) FOR [DetailingByCostCenter]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByProject]  DEFAULT ((0)) FOR [DetailingByProject]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByBranch]  DEFAULT ((0)) FOR [DetailingByBranch]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByCategory01]  DEFAULT ((0)) FOR [DetailingByCategory01]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByCategory02]  DEFAULT ((0)) FOR [DetailingByCategory02]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByCategory03]  DEFAULT ((0)) FOR [DetailingByCategory03]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByCategory04]  DEFAULT ((0)) FOR [DetailingByCategory04]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByCategory05]  DEFAULT ((0)) FOR [DetailingByCategory05]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByPatchCode]  DEFAULT ((0)) FOR [DetailingByPatchCode]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByExpiryDate]  DEFAULT ((0)) FOR [DetailingByExpiryDate]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByUnit]  DEFAULT ((0)) FOR [DetailingByUnit]
GO
ALTER TABLE [dbo].[TBL017] ADD  CONSTRAINT [DF_TBL017_DetailingByVariableUnit]  DEFAULT ((0)) FOR [DetailingByVariableUnit]
GO
ALTER TABLE [dbo].[TBL020] ADD  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_QtyCalculation]  DEFAULT ((0)) FOR [QtyCalculation]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BillType]  DEFAULT ((1)) FOR [BillType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BillKind]  DEFAULT ((0)) FOR [BillKind]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_PriceType]  DEFAULT ((1)) FOR [PriceType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_PriceType2]  DEFAULT ((0)) FOR [PriceType2]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_POSType]  DEFAULT ((1)) FOR [POSType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_DefaultPayType]  DEFAULT ((2)) FOR [DefaultPayType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_DefaultItemUnit]  DEFAULT ((0)) FOR [DefaultItemUnit]
GO
ALTER TABLE [dbo].[TBL020] ADD  DEFAULT ((0)) FOR [DefaultCommission]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_LocalAdministrativeTax]  DEFAULT ((0)) FOR [LocalAdministrativeTaxRatio]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_TaxRatio]  DEFAULT ((0)) FOR [TaxRatio]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_WithoutItemTax]  DEFAULT ((0)) FOR [WithoutItemTax]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AgentAccountSide]  DEFAULT ((1)) FOR [AgentAccountSide]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_Security]  DEFAULT ((0)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ShowTotals]  DEFAULT ((0)) FOR [ShowTotals]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_SearchAgentOnNewBill]  DEFAULT ((0)) FOR [SearchAgentOnNewBill]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_OfficialInvoice]  DEFAULT ((0)) FOR [OfficialInvoice]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption1]  DEFAULT ((0)) FOR [BooleanOption1]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption2]  DEFAULT ((0)) FOR [BooleanOption2]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption3]  DEFAULT ((0)) FOR [BooleanOption3]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption4]  DEFAULT ((0)) FOR [BooleanOption4]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption5]  DEFAULT ((0)) FOR [BooleanOption5]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption6]  DEFAULT ((0)) FOR [BooleanOption6]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption7]  DEFAULT ((0)) FOR [BooleanOption7]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption8]  DEFAULT ((0)) FOR [BooleanOption8]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption9]  DEFAULT ((0)) FOR [BooleanOption9]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption10]  DEFAULT ((0)) FOR [BooleanOption10]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption11]  DEFAULT ((0)) FOR [BooleanOption11]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption12]  DEFAULT ((0)) FOR [BooleanOption12]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption13]  DEFAULT ((0)) FOR [BooleanOption13]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption14]  DEFAULT ((0)) FOR [BooleanOption14]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption15]  DEFAULT ((0)) FOR [BooleanOption15]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption16]  DEFAULT ((0)) FOR [BooleanOption16]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption17]  DEFAULT ((0)) FOR [BooleanOption17]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption18]  DEFAULT ((0)) FOR [BooleanOption18]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption19]  DEFAULT ((0)) FOR [BooleanOption19]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption20]  DEFAULT ((0)) FOR [BooleanOption20]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption21]  DEFAULT ((0)) FOR [BooleanOption21]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption22]  DEFAULT ((0)) FOR [BooleanOption22]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption23]  DEFAULT ((0)) FOR [BooleanOption23]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption24]  DEFAULT ((0)) FOR [BooleanOption24]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption25]  DEFAULT ((1)) FOR [BooleanOption25]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption26]  DEFAULT ((0)) FOR [BooleanOption26]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption27]  DEFAULT ((0)) FOR [BooleanOption27]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption28]  DEFAULT ((0)) FOR [BooleanOption28]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption29]  DEFAULT ((0)) FOR [BooleanOption29]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption30]  DEFAULT ((0)) FOR [BooleanOption30]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption31]  DEFAULT ((0)) FOR [BooleanOption31]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption32]  DEFAULT ((0)) FOR [BooleanOption32]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption33]  DEFAULT ((0)) FOR [BooleanOption33]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption34]  DEFAULT ((0)) FOR [BooleanOption34]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption35]  DEFAULT ((0)) FOR [BooleanOption35]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption36]  DEFAULT ((0)) FOR [BooleanOption36]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption37]  DEFAULT ((0)) FOR [BooleanOption37]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption38]  DEFAULT ((0)) FOR [BooleanOption38]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BooleanOption39]  DEFAULT ((0)) FOR [BooleanOption39]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_UsePointsSystem]  DEFAULT ((0)) FOR [UsePointsSystem]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_TotalIncludeTax]  DEFAULT ((0)) FOR [TotalIncludeTax]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_NumberOption1]  DEFAULT ((0)) FOR [NumberOption1]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_NumberOption2]  DEFAULT ((0)) FOR [NumberOption2]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_NumberOption3]  DEFAULT ((0)) FOR [NumberOption3]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ExpiryDateRequired]  DEFAULT ((0)) FOR [ExpiryDateRequired]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_IntOption1]  DEFAULT ((0)) FOR [IntOption1]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_EntryType]  DEFAULT ((0)) FOR [EntryType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_GenerateEntry]  DEFAULT ((2)) FOR [GenerateEntry]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_SearchInCodes]  DEFAULT ((0)) FOR [SearchInCodes]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_SingleSaveButton]  DEFAULT ((0)) FOR [SingleSaveButton]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_DoNotPostToStores]  DEFAULT ((0)) FOR [DoNotPostToStores]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ManualPostToStores]  DEFAULT ((0)) FOR [ManualPostToStores]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AutoPrintWhenAdd]  DEFAULT ((0)) FOR [AutoPrintWhenAdd]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AutoPrintWhenEdit]  DEFAULT ((0)) FOR [AutoPrintWhenEdit]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ShowPreviewWhenAdd]  DEFAULT ((0)) FOR [ShowPreviewWhenAdd]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ShowPreviewWhenEdit]  DEFAULT ((0)) FOR [ShowPreviewWhenEdit]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AffectCostomerPrice]  DEFAULT ((0)) FOR [AffectCostomerPrice]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_PayTermIsButtons]  DEFAULT ((0)) FOR [PayTermIsButtons]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ShowPaidAndRest]  DEFAULT ((0)) FOR [ShowPaidAndRest]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AffectLastPurchasePrice]  DEFAULT ((0)) FOR [AffectLastPurchasePrice]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AlwaysDetailing]  DEFAULT ((0)) FOR [AlwaysDetailing]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ShowPrintingButtons]  DEFAULT ((1)) FOR [ShowPrintingButtons]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AddCommissionPercentToTotal]  DEFAULT ((1)) FOR [AddCommissionToTotal]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_SearchInEmptyProductsCards]  DEFAULT ((1)) FOR [SearchInEmptyProductsCards]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_WithButtons]  DEFAULT ((0)) FOR [WithButtons]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_StartMaxmized]  DEFAULT ((0)) FOR [StartMaxmized]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BillMethod]  DEFAULT ((0)) FOR [BillMethod]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_TotalCanChangeQty]  DEFAULT ((0)) FOR [TotalCanChangeQty]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ClearCostCenterOnNew]  DEFAULT ((0)) FOR [ClearCostCenterOnNew]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_NetTotalColor]  DEFAULT ((0)) FOR [NetTotalColor]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_CashBalanceColor]  DEFAULT ((0)) FOR [CashBalanceColor]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ColorValue1]  DEFAULT ((0)) FOR [ColorValue1]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_Color1]  DEFAULT ((0)) FOR [Color1]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_Color2]  DEFAULT ((0)) FOR [Color2]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AutoGenerateContraAccount]  DEFAULT ((1)) FOR [AutoGenerateContraAccount]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ContinuousInventoryAdoption]  DEFAULT ((0)) FOR [ContinuousInventoryAdoption]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ContinuousInventoryPriceType]  DEFAULT ((1)) FOR [ContinuousInventoryPriceType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_CostCenterType]  DEFAULT ((1)) FOR [CostCenterType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_CostCenterType2]  DEFAULT ((1)) FOR [CostCenterType2]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_CostCenterType3]  DEFAULT ((1)) FOR [CostCenterType3]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ProjectType]  DEFAULT ((1)) FOR [ProjectType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ProjectType2]  DEFAULT ((1)) FOR [ProjectType2]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BranchType]  DEFAULT ((1)) FOR [BranchType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BranchType2]  DEFAULT ((1)) FOR [BranchType2]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_CategoriesType]  DEFAULT ((1)) FOR [CategoriesType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_CategoriesType2]  DEFAULT ((1)) FOR [CategoriesType2]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AgentType]  DEFAULT ((1)) FOR [AgentType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AgentType2]  DEFAULT ((1)) FOR [AgentType2]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_AttachmentType]  DEFAULT ((0)) FOR [AttachmentType]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_RoundValue]  DEFAULT ((0)) FOR [RoundValue]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_SearchInPatchCode]  DEFAULT ((0)) FOR [SearchInPatchCode]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_CostCenterType4]  DEFAULT ((1)) FOR [CostCenterType4]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_ProjectType4]  DEFAULT ((1)) FOR [ProjectType4]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_BranchType4]  DEFAULT ((1)) FOR [BranchType4]
GO
ALTER TABLE [dbo].[TBL020] ADD  CONSTRAINT [DF_TBL020_NotAffectCostActivity]  DEFAULT ((0)) FOR [NotAffectCostActivity]
GO
ALTER TABLE [dbo].[TBL022] ADD  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL027_PayMethod1]  DEFAULT ((1)) FOR [PayMethod]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL027_LockRelations]  DEFAULT ((0)) FOR [LockRelations]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_DoneIn]  DEFAULT (getdate()) FOR [DoneIn]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_InsertedIn]  DEFAULT (getdate()) FOR [InsertedIn]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_BillNumber]  DEFAULT ((0)) FOR [BillNumber]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_BillNumber2]  DEFAULT ((0)) FOR [BillNumber2]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_OrderNumber]  DEFAULT ((0)) FOR [OrderNumber]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_Rate]  DEFAULT ((1)) FOR [Rate]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_Discount]  DEFAULT ((0)) FOR [Discount]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_LocalAdministrativeTax]  DEFAULT ((0)) FOR [LocalAdministrativeTax]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_TaxValue]  DEFAULT ((0)) FOR [TaxValue]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_DownPayment]  DEFAULT ((0)) FOR [DownPayment]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_ChangeValue]  DEFAULT ((0)) FOR [ChangeValue]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_Paid]  DEFAULT ((0)) FOR [Paid]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_Posted]  DEFAULT ((1)) FOR [Posted]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_Returned]  DEFAULT ((0)) FOR [Returned]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_GeneratedBill]  DEFAULT ((0)) FOR [GeneratedBill]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_IntValue01]  DEFAULT ((0)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_RoundValue]  DEFAULT ((0)) FOR [RoundValue]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL022] ADD  CONSTRAINT [DF_TBL022_CheckID01]  DEFAULT ((0)) FOR [CheckID01]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_InsertedIn]  DEFAULT (CONVERT([float],getdate(),0)) FOR [InsertedIn]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_RowGuide]  DEFAULT (newid()) FOR [RowGuide]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Quantity]  DEFAULT ((0)) FOR [Quantity]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_ExtraQuantity]  DEFAULT ((0)) FOR [ExtraQuantity]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_PartID]  DEFAULT ((1)) FOR [Unit]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_TotalPrice]  DEFAULT ((0)) FOR [TotalValue]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_TotalPrice2]  DEFAULT ((0)) FOR [TotalValue2]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Discount]  DEFAULT ((0)) FOR [DiscountValue]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Discount1]  DEFAULT ((0)) FOR [Discount1]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Discount2]  DEFAULT ((0)) FOR [Discount2]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Discount3]  DEFAULT ((0)) FOR [Discount3]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Extra]  DEFAULT ((0)) FOR [ExtraValue]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_TaxValue]  DEFAULT ((0)) FOR [TaxValue]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_BillTax]  DEFAULT ((0)) FOR [BillTax]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Weight]  DEFAULT ((0)) FOR [Weight]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Value]  DEFAULT ((0)) FOR [Value]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Length]  DEFAULT ((0)) FOR [Length]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Width]  DEFAULT ((0)) FOR [Width]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Hieght]  DEFAULT ((0)) FOR [Hieght]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_UnitQuantity]  DEFAULT ((0)) FOR [UnitQuantity]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_SalesPrice]  DEFAULT ((0)) FOR [SalesPrice]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Quantity2]  DEFAULT ((0)) FOR [Quantity2]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Printed]  DEFAULT ((0)) FOR [Printed]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Nonmergeable]  DEFAULT ((0)) FOR [Nonmergeable]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_RecordSecurity]  DEFAULT ((0)) FOR [RecordSecurity]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_Discount0]  DEFAULT ((0)) FOR [Discount0]
GO
ALTER TABLE [dbo].[TBL023] ADD  CONSTRAINT [DF_TBL023_TotalCost]  DEFAULT ((0)) FOR [TotalCost]
GO
ALTER TABLE [dbo].[TBL024] ADD  CONSTRAINT [DF_TBL024_Discount]  DEFAULT ((0)) FOR [Discount]
GO
ALTER TABLE [dbo].[TBL024] ADD  CONSTRAINT [DF_TBL024_Extra]  DEFAULT ((0)) FOR [Extra]
GO
ALTER TABLE [dbo].[TBL024] ADD  CONSTRAINT [DF_TBL024_DiscountToSave]  DEFAULT ((0)) FOR [DiscountToSave]
GO
ALTER TABLE [dbo].[TBL024] ADD  CONSTRAINT [DF_TBL024_ExtraToSave]  DEFAULT ((0)) FOR [ExtraToSave]
GO
ALTER TABLE [dbo].[TBL024] ADD  CONSTRAINT [DF_TBL024_NotEffectPrice]  DEFAULT ((0)) FOR [NotEffectPrice]
GO
ALTER TABLE [dbo].[TBL024] ADD  CONSTRAINT [DF_TBL024_NotEffectTax]  DEFAULT ((0)) FOR [NotEffectTax]
GO
ALTER TABLE [dbo].[TBL024] ADD  CONSTRAINT [DF_TBL024_RecordType]  DEFAULT ((0)) FOR [RecordType]
GO
ALTER TABLE [dbo].[TBL025] ADD  CONSTRAINT [DF_TBL025_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL025] ADD  CONSTRAINT [DF_TBL025_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL025] ADD  CONSTRAINT [DF_TBL025_TaxRatio]  DEFAULT ((0)) FOR [TaxRatio]
GO
ALTER TABLE [dbo].[TBL025] ADD  CONSTRAINT [DF_TBL025_CommissionRatio]  DEFAULT ((0.01)) FOR [CommissionRatio]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_GenerateEntry1]  DEFAULT ((2)) FOR [GenerateEntry1]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_GenerateEntry2]  DEFAULT ((2)) FOR [GenerateEntry2]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_DoNotGenerateBill1]  DEFAULT ((0)) FOR [DoNotGenerateBill1]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_DoNotGenerateBill2]  DEFAULT ((0)) FOR [DoNotGenerateBill2]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_PriceType]  DEFAULT ((1)) FOR [PriceType]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_PriceType2]  DEFAULT ((1)) FOR [PriceType2]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BillType]  DEFAULT ((1)) FOR [BillType]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_WithoutItemTax]  DEFAULT ((0)) FOR [WithoutItemTax]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_IntValue01]  DEFAULT ((0)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_IntValue02]  DEFAULT ((0)) FOR [IntValue02]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption1]  DEFAULT ((0)) FOR [BooleanOption1]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption2]  DEFAULT ((0)) FOR [BooleanOption2]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption3]  DEFAULT ((0)) FOR [BooleanOption3]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption4]  DEFAULT ((0)) FOR [BooleanOption4]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption5]  DEFAULT ((0)) FOR [BooleanOption5]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption6]  DEFAULT ((0)) FOR [BooleanOption6]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption7]  DEFAULT ((0)) FOR [BooleanOption7]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption8]  DEFAULT ((0)) FOR [BooleanOption8]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption9]  DEFAULT ((0)) FOR [BooleanOption9]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption10]  DEFAULT ((0)) FOR [BooleanOption10]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption11]  DEFAULT ((0)) FOR [BooleanOption11]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption12]  DEFAULT ((0)) FOR [BooleanOption12]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption13]  DEFAULT ((0)) FOR [BooleanOption13]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption14]  DEFAULT ((0)) FOR [BooleanOption14]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption15]  DEFAULT ((0)) FOR [BooleanOption15]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption16]  DEFAULT ((0)) FOR [BooleanOption16]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption17]  DEFAULT ((0)) FOR [BooleanOption17]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption18]  DEFAULT ((0)) FOR [BooleanOption18]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption19]  DEFAULT ((0)) FOR [BooleanOption19]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption20]  DEFAULT ((0)) FOR [BooleanOption20]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption21]  DEFAULT ((0)) FOR [BooleanOption21]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption22]  DEFAULT ((0)) FOR [BooleanOption22]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption23]  DEFAULT ((0)) FOR [BooleanOption23]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption24]  DEFAULT ((0)) FOR [BooleanOption24]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption25]  DEFAULT ((0)) FOR [BooleanOption25]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption26]  DEFAULT ((0)) FOR [BooleanOption26]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption27]  DEFAULT ((0)) FOR [BooleanOption27]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption28]  DEFAULT ((0)) FOR [BooleanOption28]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption29]  DEFAULT ((0)) FOR [BooleanOption29]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption30]  DEFAULT ((0)) FOR [BooleanOption30]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption31]  DEFAULT ((0)) FOR [BooleanOption31]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption32]  DEFAULT ((0)) FOR [BooleanOption32]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption33]  DEFAULT ((0)) FOR [BooleanOption33]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption34]  DEFAULT ((0)) FOR [BooleanOption34]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_ExpiryDateRequired]  DEFAULT ((0)) FOR [ExpiryDateRequired]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_SearchInPatchCode]  DEFAULT ((0)) FOR [SearchInPatchCode]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_DoNotPostToStores]  DEFAULT ((0)) FOR [DoNotPostToStores]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_Color1]  DEFAULT ((0)) FOR [Color1]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_Color2]  DEFAULT ((0)) FOR [Color2]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_PriceType3]  DEFAULT ((1)) FOR [PriceType3]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption35]  DEFAULT ((0)) FOR [BooleanOption35]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption36]  DEFAULT ((0)) FOR [BooleanOption36]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption37]  DEFAULT ((0)) FOR [BooleanOption37]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption38]  DEFAULT ((0)) FOR [BooleanOption38]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption39]  DEFAULT ((0)) FOR [BooleanOption39]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption40]  DEFAULT ((0)) FOR [BooleanOption40]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption41]  DEFAULT ((0)) FOR [BooleanOption41]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_BooleanOption42]  DEFAULT ((0)) FOR [BooleanOption42]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_Number01]  DEFAULT ((0)) FOR [Number01]
GO
ALTER TABLE [dbo].[TBL026] ADD  CONSTRAINT [DF_TBL026_Number02]  DEFAULT ((0)) FOR [Number02]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_DoneIn]  DEFAULT (getdate()) FOR [DoneIn]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_InsertedIn]  DEFAULT (CONVERT([float],getdate(),0)) FOR [InsertedIn]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_Rate1]  DEFAULT ((0)) FOR [Rate1]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_Rate2]  DEFAULT ((0)) FOR [Rate2]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL020_PayMethod1]  DEFAULT ((1)) FOR [PayMethod1]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_ReadyToDeliver]  DEFAULT ((0)) FOR [Ready]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_Period]  DEFAULT ((0)) FOR [TimeLong]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_CostLimit]  DEFAULT ((0)) FOR [CostLimit]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_Cost]  DEFAULT ((0)) FOR [Cost]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_Price]  DEFAULT ((0)) FOR [Price]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_ReturnedFromFiduciary]  DEFAULT ((0)) FOR [Returned]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_Posted]  DEFAULT ((1)) FOR [Posted]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_Posted1]  DEFAULT ((1)) FOR [Posted1]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_Posted2]  DEFAULT ((1)) FOR [Posted2]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_IntValue01]  DEFAULT ((1)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_IntValue02]  DEFAULT ((1)) FOR [IntValue02]
GO
ALTER TABLE [dbo].[TBL027] ADD  DEFAULT ((0)) FOR [DownPayment1]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_ChangeValue]  DEFAULT ((0)) FOR [ChangeValue]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_Delivered]  DEFAULT ((0)) FOR [Delivered]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_WithAttachment]  DEFAULT ((0)) FOR [WithAttachment]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL027] ADD  CONSTRAINT [DF_TBL027_TaxValue]  DEFAULT ((0)) FOR [TaxValue]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_RowGuide]  DEFAULT (newid()) FOR [RowGuide]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_IsInPut]  DEFAULT ((1)) FOR [IsInPut]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Quantity]  DEFAULT ((0)) FOR [Quantity]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_PartID]  DEFAULT ((1)) FOR [Unit]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_TotalPrice]  DEFAULT ((0)) FOR [TotalValue]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Discount1]  DEFAULT ((0)) FOR [Discount1]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Discount2]  DEFAULT ((0)) FOR [Discount2]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Discount3]  DEFAULT ((0)) FOR [Discount3]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_UnitQuantity]  DEFAULT ((0)) FOR [UnitQuantity]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_QuantityRatio]  DEFAULT ((0)) FOR [QuantityRatio]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Discount]  DEFAULT ((0)) FOR [DiscountValue]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Extra]  DEFAULT ((0)) FOR [ExtraValue]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_TaxValue]  DEFAULT ((0)) FOR [TaxValue]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_BillTax]  DEFAULT ((0)) FOR [BillTax]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_SplitBill]  DEFAULT ((0)) FOR [SplitBill]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_ExtraQuantity]  DEFAULT ((0)) FOR [ExtraQuantity]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Length]  DEFAULT ((1)) FOR [Length]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Width]  DEFAULT ((1)) FOR [Width]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Hieght]  DEFAULT ((1)) FOR [Hieght]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Weight]  DEFAULT ((0)) FOR [Weight]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Value]  DEFAULT ((0)) FOR [Value]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_SalesPrice]  DEFAULT ((0)) FOR [SalesPrice]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Nonmergeable]  DEFAULT ((0)) FOR [Nonmergeable]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Printed]  DEFAULT ((0)) FOR [Printed]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_Discount0]  DEFAULT ((0)) FOR [Discount0]
GO
ALTER TABLE [dbo].[TBL028] ADD  CONSTRAINT [DF_TBL028_TotalCost]  DEFAULT ((0)) FOR [TotalCost]
GO
ALTER TABLE [dbo].[TBL029] ADD  CONSTRAINT [DF_TBL029_IsInPut]  DEFAULT ((1)) FOR [IsInPut]
GO
ALTER TABLE [dbo].[TBL029] ADD  CONSTRAINT [DF_TBL029_Discount]  DEFAULT ((0)) FOR [Discount]
GO
ALTER TABLE [dbo].[TBL029] ADD  CONSTRAINT [DF_TBL029_Extra]  DEFAULT ((0)) FOR [Extra]
GO
ALTER TABLE [dbo].[TBL029] ADD  CONSTRAINT [DF_TBL029_DiscountToSave]  DEFAULT ((0)) FOR [DiscountToSave]
GO
ALTER TABLE [dbo].[TBL029] ADD  CONSTRAINT [DF_TBL029_ExtraToSave]  DEFAULT ((0)) FOR [ExtraToSave]
GO
ALTER TABLE [dbo].[TBL029] ADD  CONSTRAINT [DF_TBL029_NotEffectPrice]  DEFAULT ((0)) FOR [NotEffectPrice]
GO
ALTER TABLE [dbo].[TBL029] ADD  CONSTRAINT [DF_TBL029_NotEffectTax]  DEFAULT ((0)) FOR [NotEffectTax]
GO
ALTER TABLE [dbo].[TBL029] ADD  CONSTRAINT [DF_TBL029_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL030] ADD  CONSTRAINT [DF_TBL030_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL030] ADD  CONSTRAINT [DF_TBL030_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL030] ADD  CONSTRAINT [DF_TBL030_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL032] ADD  CONSTRAINT [DF_TBL032_WarrantyIncluded]  DEFAULT ((0)) FOR [WarrantyIncluded]
GO
ALTER TABLE [dbo].[TBL032] ADD  CONSTRAINT [DF_TBL032_Cost]  DEFAULT ((0)) FOR [Cost]
GO
ALTER TABLE [dbo].[TBL032] ADD  CONSTRAINT [DF_TBL032_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL033] ADD  CONSTRAINT [DF_TBL033_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL033] ADD  CONSTRAINT [DF_TBL033_Option01]  DEFAULT ((0)) FOR [Option01]
GO
ALTER TABLE [dbo].[TBL033] ADD  CONSTRAINT [DF_TBL033_ShowButton]  DEFAULT ((0)) FOR [ShowButton]
GO
ALTER TABLE [dbo].[TBL033] ADD  CONSTRAINT [DF_TBL033_PrintCount]  DEFAULT ((1)) FOR [PrintCount]
GO
ALTER TABLE [dbo].[TBL033] ADD  CONSTRAINT [DF_TBL033_CardTypeID]  DEFAULT ((0)) FOR [CardTypeID]
GO
ALTER TABLE [dbo].[TBL034] ADD  CONSTRAINT [DF_TBL034_ControlType]  DEFAULT ((-1)) FOR [ControlType]
GO
ALTER TABLE [dbo].[TBL034] ADD  CONSTRAINT [DF_TBL034_PrintType]  DEFAULT ((1)) FOR [PrintType]
GO
ALTER TABLE [dbo].[TBL035] ADD  CONSTRAINT [DF_TBL035_PropertyNumberValue]  DEFAULT ((0)) FOR [PropertyNumberValue]
GO
ALTER TABLE [dbo].[TBL037] ADD  CONSTRAINT [DF_TBL037_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL037] ADD  CONSTRAINT [DF_TBL037_MCount]  DEFAULT ((1)) FOR [MCount]
GO
ALTER TABLE [dbo].[TBL038] ADD  DEFAULT (newid()) FOR [RowGuide]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_TruncatedValue]  DEFAULT ((0)) FOR [TruncatedValue]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_TruncatedValueRate]  DEFAULT ((0)) FOR [TruncatedValueRate]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_AffectCost]  DEFAULT ((0)) FOR [AffectCost]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_Debit]  DEFAULT ((0)) FOR [Debit]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_Credit]  DEFAULT ((0)) FOR [Credit]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_DebitRate]  DEFAULT ((0)) FOR [DebitRate]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_CreditRate]  DEFAULT ((0)) FOR [CreditRate]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_Collected]  DEFAULT ((0)) FOR [Collected]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_ContraNotAffected]  DEFAULT ((0)) FOR [ContraNotAffected]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_NotEndorsable]  DEFAULT ((0)) FOR [NotEndorsable]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_CollectOnlyOnItsDate]  DEFAULT ((0)) FOR [CollectOnlyOnItsDate]
GO
ALTER TABLE [dbo].[TBL038] ADD  CONSTRAINT [DF_TBL038_CanNotWithdrawAsCash]  DEFAULT ((0)) FOR [CanNotWithdrawAsCash]
GO
ALTER TABLE [dbo].[TBL039] ADD  CONSTRAINT [DF_TBL039_CardValue]  DEFAULT (CONVERT([float],getdate(),0)-(2)) FOR [CardValue]
GO
ALTER TABLE [dbo].[TBL039] ADD  CONSTRAINT [DF_TBL039_Browsing]  DEFAULT ((0)) FOR [Browsing]
GO
ALTER TABLE [dbo].[TBL039] ADD  CONSTRAINT [DF_TBL039_Inserting]  DEFAULT ((0)) FOR [Inserting]
GO
ALTER TABLE [dbo].[TBL039] ADD  CONSTRAINT [DF_TBL039_Updating]  DEFAULT ((0)) FOR [Updating]
GO
ALTER TABLE [dbo].[TBL039] ADD  CONSTRAINT [DF_TBL039_Deleting]  DEFAULT ((0)) FOR [Deleting]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_IsUser]  DEFAULT ((0)) FOR [IsUser]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_HustForPOS]  DEFAULT ((0)) FOR [JustForPOS]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_SeparateGroup]  DEFAULT ((0)) FOR [SeparateGroup]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_CheckAccounts]  DEFAULT ((0)) FOR [CheckAccounts]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_CheckCostCenters]  DEFAULT ((0)) FOR [CheckCostCenters]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_CheckProjects]  DEFAULT ((0)) FOR [CheckProjects]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_CheckBranches]  DEFAULT ((0)) FOR [CheckBranches]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_CheckStores]  DEFAULT ((0)) FOR [CheckStores]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_CheckGroups]  DEFAULT ((0)) FOR [CheckGroups]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_CheckAgentsGroups]  DEFAULT ((0)) FOR [CheckAgentsGroups]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_UseCostCenters]  DEFAULT ((0)) FOR [UseCostCenters]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_UseProjects]  DEFAULT ((0)) FOR [UseProjects]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_UseBranches]  DEFAULT ((0)) FOR [UseBranches]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_UseStores]  DEFAULT ((0)) FOR [UseStores]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_CashAccount]  DEFAULT ((0)) FOR [UseCashAccount]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_FirstTransactionsNo]  DEFAULT ((0)) FOR [FirstTransactionsNo]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_SeparateFinancialReports]  DEFAULT ((0)) FOR [SeparateFinancialReports]
GO
ALTER TABLE [dbo].[TBL042] ADD  CONSTRAINT [DF_TBL042_HideSeparatesColumn]  DEFAULT ((0)) FOR [HideSeparatesColumn]
GO
ALTER TABLE [dbo].[TBL043] ADD  CONSTRAINT [DF_TBL043_ObjectID]  DEFAULT ((0)) FOR [ObjectID]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_CardValue]  DEFAULT (CONVERT([float],getdate(),0)-(2)) FOR [CardValue]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_Browsing]  DEFAULT ((0)) FOR [Browsing]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_Inserting]  DEFAULT ((0)) FOR [Inserting]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_Updating]  DEFAULT ((0)) FOR [Updating]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_Deleting]  DEFAULT ((0)) FOR [Deleting]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_Printing]  DEFAULT ((0)) FOR [Printing]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_CardUsing]  DEFAULT ((0)) FOR [CardUsing]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_ModelPrint]  DEFAULT ((0)) FOR [ModelPrint]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_ModelDelete]  DEFAULT ((0)) FOR [ModelDelete]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_ModelAdd]  DEFAULT ((0)) FOR [ModelAdd]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_ModelUpdate]  DEFAULT ((0)) FOR [ModelUpdate]
GO
ALTER TABLE [dbo].[TBL044] ADD  CONSTRAINT [DF_TBL044_ShowBalance]  DEFAULT ((0)) FOR [ShowBalance]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_HideRecord]  DEFAULT ((0)) FOR [HideRecord]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_CardValue]  DEFAULT (CONVERT([float],getdate(),0)-(2)) FOR [CardValue]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_Browsing]  DEFAULT ((0)) FOR [BrowsingPosted]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_Inserting]  DEFAULT ((0)) FOR [InsertingPosted]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_Updating]  DEFAULT ((0)) FOR [UpdatingPosted]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_Deleting]  DEFAULT ((0)) FOR [DeletingPosted]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_Printing]  DEFAULT ((0)) FOR [PrintingPosted]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_Posting]  DEFAULT ((4)) FOR [Posting]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_BrowsingUnPosted]  DEFAULT ((0)) FOR [BrowsingUnPosted]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_InsertingUnPosted]  DEFAULT ((0)) FOR [InsertingUnPosted]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_UpdatingUnPosted]  DEFAULT ((0)) FOR [UpdatingUnPosted]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_DeletingUnPosted]  DEFAULT ((0)) FOR [DeletingUnPosted]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_PrintingUnSaved]  DEFAULT ((0)) FOR [PrintingUnSaved]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_ModelPrint]  DEFAULT ((0)) FOR [ModelPrint]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_ModelDelete]  DEFAULT ((0)) FOR [ModelDelete]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_ModelAdd]  DEFAULT ((0)) FOR [ModelAdd]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_ModelUpdate]  DEFAULT ((0)) FOR [ModelUpdate]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_PrintingUnPosted]  DEFAULT ((0)) FOR [PrintingUnPosted]
GO
ALTER TABLE [dbo].[TBL045] ADD  CONSTRAINT [DF_TBL045_ChangeCardNumber]  DEFAULT ((0)) FOR [ChangeCardNumber]
GO
ALTER TABLE [dbo].[TBL047] ADD  CONSTRAINT [DF_TBL047_CardValue]  DEFAULT (CONVERT([float],getdate(),0)-(2)) FOR [CardValue]
GO
ALTER TABLE [dbo].[TBL047] ADD  CONSTRAINT [DF_TBL047_Browsing]  DEFAULT ((0)) FOR [Browsing]
GO
ALTER TABLE [dbo].[TBL047] ADD  CONSTRAINT [DF_TBL047_Inserting]  DEFAULT ((0)) FOR [Saving]
GO
ALTER TABLE [dbo].[TBL047] ADD  CONSTRAINT [DF_TBL047_Updating]  DEFAULT ((0)) FOR [Exporting]
GO
ALTER TABLE [dbo].[TBL047] ADD  CONSTRAINT [DF_TBL047_Deleting]  DEFAULT ((0)) FOR [Deleting]
GO
ALTER TABLE [dbo].[TBL047] ADD  CONSTRAINT [DF_TBL047_AdvancedPrint]  DEFAULT ((0)) FOR [AdvancedPrint]
GO
ALTER TABLE [dbo].[TBL047] ADD  CONSTRAINT [DF_TBL047_ExcelTemplates]  DEFAULT ((0)) FOR [ExcelTemplates]
GO
ALTER TABLE [dbo].[TBL049] ADD  CONSTRAINT [DF_TBL049_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL049] ADD  CONSTRAINT [DF_TBL049_NotActive]  DEFAULT ((0)) FOR [NotActive]
GO
ALTER TABLE [dbo].[TBL049] ADD  CONSTRAINT [DF_TBL049_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL049] ADD  CONSTRAINT [DF_TBL049_IntValue]  DEFAULT ((0)) FOR [IntValue]
GO
ALTER TABLE [dbo].[TBL049] ADD  CONSTRAINT [DF_TBL049_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL049] ADD  CONSTRAINT [DF_TBL049_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL050] ADD  CONSTRAINT [DF_TBL050_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL050] ADD  CONSTRAINT [DF_TBL050_NotActive]  DEFAULT ((0)) FOR [NotActive]
GO
ALTER TABLE [dbo].[TBL050] ADD  CONSTRAINT [DF_TBL050_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL050] ADD  CONSTRAINT [DF_TBL050_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL050] ADD  CONSTRAINT [DF_TBL050_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL053] ADD  CONSTRAINT [DF_TBL053_CardValue]  DEFAULT ((0)) FOR [Value]
GO
ALTER TABLE [dbo].[TBL053] ADD  CONSTRAINT [DF_TBL053_CardValue2]  DEFAULT ((0)) FOR [Value2]
GO
ALTER TABLE [dbo].[TBL053] ADD  CONSTRAINT [DF_TBL053_ValueBoolean]  DEFAULT ((0)) FOR [ValueBoolean]
GO
ALTER TABLE [dbo].[TBL053] ADD  CONSTRAINT [DF_TBL053_ValueBoolean2]  DEFAULT ((0)) FOR [ValueBoolean2]
GO
ALTER TABLE [dbo].[TBL053] ADD  CONSTRAINT [DF_TBL053_ValueBoolean3]  DEFAULT ((0)) FOR [ValueBoolean3]
GO
ALTER TABLE [dbo].[TBL053] ADD  CONSTRAINT [DF_TBL053_ByteValue]  DEFAULT ((0)) FOR [ByteValue]
GO
ALTER TABLE [dbo].[TBL054] ADD  CONSTRAINT [DF_TBL054_Value]  DEFAULT ((0)) FOR [Value]
GO
ALTER TABLE [dbo].[TBL054] ADD  CONSTRAINT [DF_TBL054_ValueRate]  DEFAULT ((0)) FOR [ValueRate]
GO
ALTER TABLE [dbo].[TBL057] ADD  CONSTRAINT [DF_TBL057_ShowButton]  DEFAULT ((0)) FOR [ShowButton]
GO
ALTER TABLE [dbo].[TBL057] ADD  CONSTRAINT [DF_TBL057_PrintCount]  DEFAULT ((0)) FOR [PrintCount]
GO
ALTER TABLE [dbo].[TBL058] ADD  CONSTRAINT [DF_TBL058_CardValue]  DEFAULT (CONVERT([float],getdate(),0)) FOR [DoneIn]
GO
ALTER TABLE [dbo].[TBL058] ADD  CONSTRAINT [DF_TBL058_CardType]  DEFAULT ((1)) FOR [CardType]
GO
ALTER TABLE [dbo].[TBL060] ADD  CONSTRAINT [DF_TBL060_Value]  DEFAULT ((0)) FOR [Value]
GO
ALTER TABLE [dbo].[TBL060] ADD  CONSTRAINT [DF_TBL060_CollectDate]  DEFAULT (getdate()) FOR [CollectDate]
GO
ALTER TABLE [dbo].[TBL061] ADD  CONSTRAINT [DF_TBL061_Allow]  DEFAULT ((0)) FOR [Allow]
GO
ALTER TABLE [dbo].[TBL062] ADD  CONSTRAINT [DF_TBL062_Allow]  DEFAULT ((0)) FOR [Allow]
GO
ALTER TABLE [dbo].[TBL063] ADD  CONSTRAINT [DF_TBL063_Unit]  DEFAULT ((1)) FOR [Unit]
GO
ALTER TABLE [dbo].[TBL063] ADD  CONSTRAINT [DF_TBL063_Quantity]  DEFAULT ((0)) FOR [Quantity]
GO
ALTER TABLE [dbo].[TBL063] ADD  CONSTRAINT [DF_TBL063_PriceRatio]  DEFAULT ((0)) FOR [PriceRatio]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_CardValue]  DEFAULT (CONVERT([float],getdate(),0)-(2)) FOR [CardValue]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_Browsing]  DEFAULT ((0)) FOR [BrowsingPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_Inserting]  DEFAULT ((0)) FOR [InsertingPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_Updating]  DEFAULT ((0)) FOR [UpdatingPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_Deleting]  DEFAULT ((0)) FOR [DeletingPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_Printing]  DEFAULT ((0)) FOR [PrintingPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_BrowsePrices]  DEFAULT ((4)) FOR [BrowsePrices]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_Posting]  DEFAULT ((0)) FOR [Posting]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_BuildEntry]  DEFAULT ((0)) FOR [BuildEntryPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ChangePrices]  DEFAULT ((0)) FOR [ChangePricesPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_DiscountRatio]  DEFAULT ((0)) FOR [PostedDiscountRatio]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_PostedExtraRatio]  DEFAULT ((0)) FOR [PostedExtraRatio]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_SubtractOutput]  DEFAULT ((1)) FOR [SubtractOutput]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_BrowsingUnPosted]  DEFAULT ((0)) FOR [BrowsingUnPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_InsertingUnPosted]  DEFAULT ((0)) FOR [InsertingUnPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_UpdatingUnPosted]  DEFAULT ((0)) FOR [UpdatingUnPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_DeletingUnPosted]  DEFAULT ((0)) FOR [DeletingUnPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_PrintingUnPosted]  DEFAULT ((0)) FOR [PrintingUnPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_PrintingUnSaved]  DEFAULT ((0)) FOR [PrintingUnSaved]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_BuildEntryUnPosted]  DEFAULT ((0)) FOR [BuildEntryUnPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ChangePrices1]  DEFAULT ((0)) FOR [ChangePricesUnPosted]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ExtraRatio1]  DEFAULT ((0)) FOR [UnPostedExtraRatio]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_DiscountRatio1]  DEFAULT ((0)) FOR [UnPostedDiscountRatio]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ChangeStockItemsPrice]  DEFAULT ((0)) FOR [ChangeStockItemsPrice]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ModelPrint]  DEFAULT ((0)) FOR [ModelPrint]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ModelDelete]  DEFAULT ((0)) FOR [ModelDelete]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ModelAdd]  DEFAULT ((0)) FOR [ModelAdd]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ModelUpdate]  DEFAULT ((0)) FOR [ModelUpdate]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_MinimumPrice]  DEFAULT ((0)) FOR [MinimumPrice]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_MaximumPrice]  DEFAULT ((0)) FOR [MaximumPrice]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ChangeServiceItemsPrice]  DEFAULT ((0)) FOR [ChangeServiceItemsPrice]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ChangeQuantity]  DEFAULT ((1)) FOR [ChangeQuantity]
GO
ALTER TABLE [dbo].[TBL064] ADD  CONSTRAINT [DF_TBL064_ChangeQuantity2]  DEFAULT ((1)) FOR [ChangeQuantity2]
GO
ALTER TABLE [dbo].[TBL065] ADD  CONSTRAINT [DF_TBL065_Permission]  DEFAULT ((0)) FOR [Permission]
GO
ALTER TABLE [dbo].[TBL067] ADD  CONSTRAINT [DF_TBL067_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL067] ADD  CONSTRAINT [DF_TBL067_CategoryType]  DEFAULT ((1)) FOR [CategoryType]
GO
ALTER TABLE [dbo].[TBL067] ADD  CONSTRAINT [DF_TBL067_Security]  DEFAULT ((0)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL068] ADD  CONSTRAINT [DF_TBL068_DoneIn]  DEFAULT (getdate()) FOR [DoneIn]
GO
ALTER TABLE [dbo].[TBL068] ADD  CONSTRAINT [DF_TBL068_Debit]  DEFAULT ((0)) FOR [Debit]
GO
ALTER TABLE [dbo].[TBL068] ADD  CONSTRAINT [DF_TBL068_Credit]  DEFAULT ((0)) FOR [Credit]
GO
ALTER TABLE [dbo].[TBL068] ADD  CONSTRAINT [DF_TBL068_DebitRate]  DEFAULT ((0)) FOR [DebitRate]
GO
ALTER TABLE [dbo].[TBL068] ADD  CONSTRAINT [DF_TBL068_CreditRate]  DEFAULT ((0)) FOR [CreditRate]
GO
ALTER TABLE [dbo].[TBL069] ADD  CONSTRAINT [DF_TBL069_Debit]  DEFAULT ((0)) FOR [Price]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_HideRecord]  DEFAULT ((0)) FOR [HideRecord]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_CardValue]  DEFAULT (CONVERT([float],getdate(),0)-(2)) FOR [CardValue]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Browsing]  DEFAULT ((0)) FOR [BrowsingPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Inserting]  DEFAULT ((0)) FOR [InsertingPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Updating]  DEFAULT ((0)) FOR [UpdatingPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Deleting]  DEFAULT ((0)) FOR [DeletingPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Printing]  DEFAULT ((0)) FOR [PrintingPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BuildEntry]  DEFAULT ((0)) FOR [BuildEntryPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ChangePrices]  DEFAULT ((0)) FOR [ChangePricesPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ExtraRatio]  DEFAULT ((0)) FOR [PostedExtraRatio]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_DiscountRatio]  DEFAULT ((0)) FOR [PostedDiscountRatio]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BillExtraRatio]  DEFAULT ((0)) FOR [PostedBillExtraRatio]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BillDiscountRatio]  DEFAULT ((0)) FOR [PostedBillDiscountRatio]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Posting]  DEFAULT ((4)) FOR [Posting]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BrowsePrices]  DEFAULT ((4)) FOR [BrowsePrices]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BrowsingUnPosted]  DEFAULT ((0)) FOR [BrowsingUnPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_InsertingUnPosted]  DEFAULT ((0)) FOR [InsertingUnPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_UpdatingUnPosted]  DEFAULT ((0)) FOR [UpdatingUnPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_DeletingUnPosted]  DEFAULT ((0)) FOR [DeletingUnPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_PrintingUnPosted]  DEFAULT ((0)) FOR [PrintingUnPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_PrintingUnSaved]  DEFAULT ((0)) FOR [PrintingUnSaved]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BuildEntryUnPosted]  DEFAULT ((0)) FOR [BuildEntryUnPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ExtraRatio1]  DEFAULT ((0)) FOR [UnPostedExtraRatio]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_DiscountRatio1]  DEFAULT ((0)) FOR [UnPostedDiscountRatio]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BillExtraRatio1]  DEFAULT ((0)) FOR [UnPostedBillExtraRatio]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BillDiscountRatio1]  DEFAULT ((0)) FOR [UnPostedBillDiscountRatio]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ChangePrices1]  DEFAULT ((0)) FOR [ChangePricesUnPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ChangeStockItemsPrice]  DEFAULT ((0)) FOR [ChangeStockItemsPrice]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ChangeServiceItemsPrice]  DEFAULT ((0)) FOR [ChangeServiceItemsPrice]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_CloseCashBox]  DEFAULT ((0)) FOR [CloseCashBox]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_PayExpense]  DEFAULT ((0)) FOR [PayExpense]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_SubtractOutput]  DEFAULT ((1)) FOR [SubtractOutput]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_EditPostedItems]  DEFAULT ((1)) FOR [EditPostedItems]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_EditUnPostedItems]  DEFAULT ((1)) FOR [EditUnPostedItems]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Browsing2]  DEFAULT ((0)) FOR [BrowsingPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Inserting2]  DEFAULT ((0)) FOR [InsertingPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Updating2]  DEFAULT ((0)) FOR [UpdatingPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Deleting2]  DEFAULT ((0)) FOR [DeletingPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_Printing2]  DEFAULT ((0)) FOR [PrintingPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BuildEntry2]  DEFAULT ((0)) FOR [BuildEntryPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ChangePrices2]  DEFAULT ((0)) FOR [ChangePricesPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ExtraRatio2]  DEFAULT ((0)) FOR [PostedExtraRatio2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_DiscountRatio2]  DEFAULT ((0)) FOR [PostedDiscountRatio2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BrowsingUnPosted2]  DEFAULT ((0)) FOR [BrowsingUnPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_InsertingUnPosted2]  DEFAULT ((0)) FOR [InsertingUnPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_UpdatingUnPosted2]  DEFAULT ((0)) FOR [UpdatingUnPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_DeletingUnPosted2]  DEFAULT ((0)) FOR [DeletingUnPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_PrintingUnPosted2]  DEFAULT ((0)) FOR [PrintingUnPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_PrintingUnSaved2]  DEFAULT ((0)) FOR [PrintingUnSaved2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_BuildEntryUnPosted2]  DEFAULT ((0)) FOR [BuildEntryUnPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ExtraRatio12]  DEFAULT ((0)) FOR [UnPostedExtraRatio2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_DiscountRatio12]  DEFAULT ((0)) FOR [UnPostedDiscountRatio2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ChangePrices12]  DEFAULT ((0)) FOR [ChangePricesUnPosted2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ChangeStockItemsPrice2]  DEFAULT ((0)) FOR [ChangeStockItemsPrice2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ChangeServiceItemsPrice2]  DEFAULT ((0)) FOR [ChangeServiceItemsPrice2]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ModifyForOthers]  DEFAULT ((1)) FOR [ModifyForOthers]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ModelPrint]  DEFAULT ((0)) FOR [ModelPrint]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ModelDelete]  DEFAULT ((0)) FOR [ModelDelete]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ModelAdd]  DEFAULT ((0)) FOR [ModelAdd]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ModelUpdate]  DEFAULT ((0)) FOR [ModelUpdate]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_UnlimitedExtrasPosted]  DEFAULT ((0)) FOR [UnlimitedExtrasPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_UnlimitedExtrasUnPosted]  DEFAULT ((0)) FOR [UnlimitedExtrasUnPosted]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_MinimumPrice]  DEFAULT ((0)) FOR [MinimumPrice]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_MaximumPrice]  DEFAULT ((0)) FOR [MaximumPrice]
GO
ALTER TABLE [dbo].[TBL070] ADD  CONSTRAINT [DF_TBL070_ChangeCardNumber]  DEFAULT ((0)) FOR [ChangeCardNumber]
GO
ALTER TABLE [dbo].[TBL071] ADD  CONSTRAINT [DF_TBL071_DebitValue]  DEFAULT ((0)) FOR [DebitValue]
GO
ALTER TABLE [dbo].[TBL071] ADD  CONSTRAINT [DF_TBL071_CreditValue]  DEFAULT ((0)) FOR [CreditValue]
GO
ALTER TABLE [dbo].[TBL071] ADD  CONSTRAINT [DF_TBL071_SideType]  DEFAULT ((1)) FOR [SideType]
GO
ALTER TABLE [dbo].[TBL071] ADD  CONSTRAINT [DF_TBL071_Ratio]  DEFAULT ((0)) FOR [Ratio]
GO
ALTER TABLE [dbo].[TBL072] ADD  CONSTRAINT [DF_TBL072_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL073] ADD  CONSTRAINT [DF_TBL073_InsertedIn]  DEFAULT (getdate()) FOR [InsertedIn]
GO
ALTER TABLE [dbo].[TBL073] ADD  CONSTRAINT [DF_TBL073_BitValue01]  DEFAULT ((0)) FOR [BitValue01]
GO
ALTER TABLE [dbo].[TBL074] ADD  CONSTRAINT [DF_TBL074_PriceValue]  DEFAULT ((0)) FOR [PriceValue]
GO
ALTER TABLE [dbo].[TBL074] ADD  CONSTRAINT [DF_TBL074_PriceRate]  DEFAULT ((0)) FOR [PriceRate]
GO
ALTER TABLE [dbo].[TBL074] ADD  CONSTRAINT [DF_TBL074_DiscountRation]  DEFAULT ((0)) FOR [DiscountRation]
GO
ALTER TABLE [dbo].[TBL074] ADD  CONSTRAINT [DF_TBL074_ExtraRatio]  DEFAULT ((0)) FOR [ExtraRatio]
GO
ALTER TABLE [dbo].[TBL075] ADD  CONSTRAINT [DF_TBL075_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL075] ADD  CONSTRAINT [DF_TBL075_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL075] ADD  CONSTRAINT [DF_TBL075_CardType]  DEFAULT ((1)) FOR [CardType]
GO
ALTER TABLE [dbo].[TBL076] ADD  CONSTRAINT [DF_TBL076_Ratio]  DEFAULT ((0)) FOR [AccountRatio]
GO
ALTER TABLE [dbo].[TBL078] ADD  CONSTRAINT [DF_TBL078_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL078] ADD  CONSTRAINT [DF_TBL078_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL078] ADD  CONSTRAINT [DF_TBL078_CardStatus]  DEFAULT ((1)) FOR [CardStatus]
GO
ALTER TABLE [dbo].[TBL078] ADD  CONSTRAINT [DF_TBL078_ClassificationCard]  DEFAULT ((0)) FOR [ClassificationCard]
GO
ALTER TABLE [dbo].[TBL079] ADD  CONSTRAINT [DF_TBL079_IsInPut]  DEFAULT ((1)) FOR [IsInPut]
GO
ALTER TABLE [dbo].[TBL079] ADD  CONSTRAINT [DF_TBL079_Quantity]  DEFAULT ((1)) FOR [Quantity]
GO
ALTER TABLE [dbo].[TBL079] ADD  CONSTRAINT [DF_TBL079_TotalValue]  DEFAULT ((0)) FOR [TotalValue]
GO
ALTER TABLE [dbo].[TBL079] ADD  CONSTRAINT [DF_TBL079_PartID]  DEFAULT ((1)) FOR [Unit]
GO
ALTER TABLE [dbo].[TBL079] ADD  CONSTRAINT [DF_TBL079_Length]  DEFAULT ((1)) FOR [Length]
GO
ALTER TABLE [dbo].[TBL079] ADD  CONSTRAINT [DF_TBL079_Width]  DEFAULT ((1)) FOR [Width]
GO
ALTER TABLE [dbo].[TBL079] ADD  CONSTRAINT [DF_TBL079_Hieght]  DEFAULT ((1)) FOR [Hieght]
GO
ALTER TABLE [dbo].[TBL079] ADD  CONSTRAINT [DF_TBL079_UnitQuantity]  DEFAULT ((0)) FOR [UnitQuantity]
GO
ALTER TABLE [dbo].[TBL079] ADD  CONSTRAINT [DF_TBL079_Weight]  DEFAULT ((0)) FOR [Weight]
GO
ALTER TABLE [dbo].[TBL079] ADD  CONSTRAINT [DF_TBL079_Value]  DEFAULT ((0)) FOR [Value]
GO
ALTER TABLE [dbo].[TBL080] ADD  CONSTRAINT [DF_TBL080_IsInPut]  DEFAULT ((1)) FOR [IsInPut]
GO
ALTER TABLE [dbo].[TBL080] ADD  CONSTRAINT [DF_TBL080_Discount]  DEFAULT ((0)) FOR [Discount]
GO
ALTER TABLE [dbo].[TBL080] ADD  CONSTRAINT [DF_TBL080_Extra]  DEFAULT ((0)) FOR [Extra]
GO
ALTER TABLE [dbo].[TBL080] ADD  CONSTRAINT [DF_TBL080_DiscountToSave]  DEFAULT ((0)) FOR [DiscountToSave]
GO
ALTER TABLE [dbo].[TBL080] ADD  CONSTRAINT [DF_TBL080_ExtraToSave]  DEFAULT ((0)) FOR [ExtraToSave]
GO
ALTER TABLE [dbo].[TBL081] ADD  CONSTRAINT [DF_TBL081_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL081] ADD  CONSTRAINT [DF_TBL081_CardOrder]  DEFAULT ((0)) FOR [CardOrder]
GO
ALTER TABLE [dbo].[TBL081] ADD  CONSTRAINT [DF_TBL081_NotActive]  DEFAULT ((0)) FOR [NotActive]
GO
ALTER TABLE [dbo].[TBL081] ADD  CONSTRAINT [DF_TBL081_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL081] ADD  CONSTRAINT [DF_TBL081_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL083] ADD  CONSTRAINT [DF_TBL083_IntValue]  DEFAULT ((0)) FOR [IntValue]
GO
ALTER TABLE [dbo].[TBL083] ADD  CONSTRAINT [DF_TBL083_FloatValue]  DEFAULT ((0)) FOR [FloatValue]
GO
ALTER TABLE [dbo].[TBL084] ADD  CONSTRAINT [DF_TBL084_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL084] ADD  CONSTRAINT [DF_TBL084_Security]  DEFAULT ((0)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_NumberValue01]  DEFAULT ((0)) FOR [NumberValue01]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_IntValue01]  DEFAULT ((0)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_IntValue02]  DEFAULT ((0)) FOR [IntValue02]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_IntValue03]  DEFAULT ((0)) FOR [IntValue03]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_BooleanValue01]  DEFAULT ((0)) FOR [BooleanValue01]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_BooleanValue02]  DEFAULT ((0)) FOR [BooleanValue02]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_BooleanValue03]  DEFAULT ((0)) FOR [BooleanValue03]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_BooleanValue04]  DEFAULT ((0)) FOR [BooleanValue04]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_BooleanValue05]  DEFAULT ((0)) FOR [BooleanValue05]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_BooleanValue06]  DEFAULT ((0)) FOR [BooleanValue06]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_BooleanValue07]  DEFAULT ((0)) FOR [BooleanValue07]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_BooleanValue08]  DEFAULT ((0)) FOR [BooleanValue08]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_ByUser]  DEFAULT ([dbo].[Fun081](@@spid)) FOR [ByUser]
GO
ALTER TABLE [dbo].[TBL085] ADD  CONSTRAINT [DF_TBL085_ByGroup]  DEFAULT ([dbo].[Fun159]()) FOR [ByGroup]
GO
ALTER TABLE [dbo].[TBL086] ADD  CONSTRAINT [DF_TBL086_Option1]  DEFAULT ((0)) FOR [Option1]
GO
ALTER TABLE [dbo].[TBL086] ADD  CONSTRAINT [DF_TBL086_Option2]  DEFAULT ((0)) FOR [Option2]
GO
ALTER TABLE [dbo].[TBL086] ADD  CONSTRAINT [DF_TBL086_ContraAccountNotAffected]  DEFAULT ((0)) FOR [ContraAccountNotAffected]
GO
ALTER TABLE [dbo].[TBL087] ADD  CONSTRAINT [DF_TBL087_DoneIn]  DEFAULT (getdate()) FOR [DoneIn]
GO
ALTER TABLE [dbo].[TBL087] ADD  CONSTRAINT [DF_TBL087_Value]  DEFAULT ((0)) FOR [Value]
GO
ALTER TABLE [dbo].[TBL087] ADD  CONSTRAINT [DF_TBL087_CurrencyBalance]  DEFAULT ((0)) FOR [CurrencyBalance]
GO
ALTER TABLE [dbo].[TBL089] ADD  CONSTRAINT [DF_TBL089_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL089] ADD  CONSTRAINT [DF_TBL089_InsertedIn]  DEFAULT (getdate()) FOR [InsertedIn]
GO
ALTER TABLE [dbo].[TBL089] ADD  CONSTRAINT [DF_TBL089_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL089] ADD  CONSTRAINT [DF_TBL089_Boolean01]  DEFAULT ((0)) FOR [Boolean01]
GO
ALTER TABLE [dbo].[TBL090] ADD  CONSTRAINT [DF_TBL090_InsertedIn]  DEFAULT (getdate()) FOR [InsertedIn]
GO
ALTER TABLE [dbo].[TBL090] ADD  CONSTRAINT [DF_TBL090_HideIt]  DEFAULT ((0)) FOR [HideIt]
GO
ALTER TABLE [dbo].[TBL091] ADD  CONSTRAINT [DF_TBL091_InsertedIn]  DEFAULT (getdate()) FOR [InsertedIn]
GO
ALTER TABLE [dbo].[TBL092] ADD  CONSTRAINT [DF_TBL092_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL092] ADD  CONSTRAINT [DF_TBL092_SalaryType]  DEFAULT ((0)) FOR [SalaryType]
GO
ALTER TABLE [dbo].[TBL092] ADD  CONSTRAINT [DF_TBL092_NumberValue01]  DEFAULT ((0)) FOR [NumberValue01]
GO
ALTER TABLE [dbo].[TBL092] ADD  CONSTRAINT [DF_TBL092_NumberValue02]  DEFAULT ((0)) FOR [NumberValue02]
GO
ALTER TABLE [dbo].[TBL092] ADD  CONSTRAINT [DF_TBL092_NumberValue03]  DEFAULT ((0)) FOR [NumberValue03]
GO
ALTER TABLE [dbo].[TBL092] ADD  CONSTRAINT [DF_TBL092_IntValue01]  DEFAULT ((0)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL092] ADD  CONSTRAINT [DF_TBL092_IntValue02]  DEFAULT ((0)) FOR [IntValue02]
GO
ALTER TABLE [dbo].[TBL093] ADD  CONSTRAINT [DF_TBL093_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL093] ADD  CONSTRAINT [DF_TBL093_CardNumber2]  DEFAULT ((0)) FOR [CardNumber2]
GO
ALTER TABLE [dbo].[TBL093] ADD  CONSTRAINT [DF_TBL093_NumberValue]  DEFAULT ((0)) FOR [NumberValue]
GO
ALTER TABLE [dbo].[TBL093] ADD  CONSTRAINT [DF_TBL093_NumberValue2]  DEFAULT ((0)) FOR [NumberValue2]
GO
ALTER TABLE [dbo].[TBL093] ADD  CONSTRAINT [DF_TBL093_NumberValue3]  DEFAULT ((0)) FOR [NumberValue3]
GO
ALTER TABLE [dbo].[TBL093] ADD  CONSTRAINT [DF_TBL093_NumberValue4]  DEFAULT ((0)) FOR [NumberValue4]
GO
ALTER TABLE [dbo].[TBL093] ADD  CONSTRAINT [DF_TBL093_BooleanValue01]  DEFAULT ((0)) FOR [BooleanValue01]
GO
ALTER TABLE [dbo].[TBL093] ADD  CONSTRAINT [DF_TBL093_ByteValue01]  DEFAULT ((0)) FOR [ByteValue01]
GO
ALTER TABLE [dbo].[TBL093] ADD  CONSTRAINT [DF_TBL093_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL094] ADD  CONSTRAINT [DF_TBL094_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL094] ADD  CONSTRAINT [DF_TBL094_MessageType]  DEFAULT ((0)) FOR [MessageType]
GO
ALTER TABLE [dbo].[TBL094] ADD  CONSTRAINT [DF_TBL094_IsActive]  DEFAULT ((1)) FOR [IsActive]
GO
ALTER TABLE [dbo].[TBL096] ADD  CONSTRAINT [DF_TBL096_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL096] ADD  CONSTRAINT [DF_TBL096_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL096] ADD  CONSTRAINT [DF_TBL096_BitValue01]  DEFAULT ((0)) FOR [BitValue1]
GO
ALTER TABLE [dbo].[TBL096] ADD  CONSTRAINT [DF_TBL096_BitValue02]  DEFAULT ((0)) FOR [BitValue2]
GO
ALTER TABLE [dbo].[TBL096] ADD  CONSTRAINT [DF_TBL096_BitValue03]  DEFAULT ((0)) FOR [BitValue3]
GO
ALTER TABLE [dbo].[TBL096] ADD  CONSTRAINT [DF_TBL096_BitValue04]  DEFAULT ((0)) FOR [BitValue4]
GO
ALTER TABLE [dbo].[TBL096] ADD  CONSTRAINT [DF_TBL096_BitValue05]  DEFAULT ((0)) FOR [BitValue5]
GO
ALTER TABLE [dbo].[TBL096] ADD  CONSTRAINT [DF_TBL096_BitValue06]  DEFAULT ((0)) FOR [BitValue6]
GO
ALTER TABLE [dbo].[TBL098] ADD  CONSTRAINT [DF_TBL098_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL098] ADD  CONSTRAINT [DF_TBL098_CardDate]  DEFAULT (getdate()) FOR [CardDate]
GO
ALTER TABLE [dbo].[TBL098] ADD  CONSTRAINT [DF_TBL098_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL098] ADD  CONSTRAINT [DF_TBL098_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL099] ADD  CONSTRAINT [DF_TBL099_RecordGuide]  DEFAULT (newid()) FOR [RecordGuide]
GO
ALTER TABLE [dbo].[TBL099] ADD  CONSTRAINT [DF_TBL099_NumberValue01]  DEFAULT ((0)) FOR [NumberValue01]
GO
ALTER TABLE [dbo].[TBL099] ADD  CONSTRAINT [DF_TBL099_IgnoreDifferenceForLogin]  DEFAULT ((0)) FOR [IgnoreDifferenceForLogin]
GO
ALTER TABLE [dbo].[TBL099] ADD  CONSTRAINT [DF_TBL099_IgnoreDifferenceForLogout]  DEFAULT ((0)) FOR [IgnoreDifferenceForLogout]
GO
ALTER TABLE [dbo].[TBL099] ADD  CONSTRAINT [DF_TBL099_ManuallyEdit]  DEFAULT ((0)) FOR [ManuallyEdit]
GO
ALTER TABLE [dbo].[TBL099] ADD  CONSTRAINT [DF_TBL099_CType]  DEFAULT ((0)) FOR [CType]
GO
ALTER TABLE [dbo].[TBL100] ADD  CONSTRAINT [DF_TBL100_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL100] ADD  CONSTRAINT [DF_TBL100_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL101] ADD  CONSTRAINT [DF_TBL101_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL101] ADD  CONSTRAINT [DF_TBL101_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL101] ADD  CONSTRAINT [DF_TBL101_MainType]  DEFAULT ((0)) FOR [MainType]
GO
ALTER TABLE [dbo].[TBL102] ADD  CONSTRAINT [DF_TBL102_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL102] ADD  CONSTRAINT [DF_TBL102_DeviceType]  DEFAULT ((0)) FOR [DeviceType]
GO
ALTER TABLE [dbo].[TBL102] ADD  CONSTRAINT [DF_TBL102_ConnectionType]  DEFAULT ((0)) FOR [ConnectionType]
GO
ALTER TABLE [dbo].[TBL103] ADD  CONSTRAINT [DF_TBL103_MinQuantity]  DEFAULT ((0)) FOR [MinQuantity]
GO
ALTER TABLE [dbo].[TBL103] ADD  CONSTRAINT [DF_TBL103_Price]  DEFAULT ((0)) FOR [Price]
GO
ALTER TABLE [dbo].[TBL103] ADD  CONSTRAINT [DF_TBL103_DiscountRatio]  DEFAULT ((0)) FOR [DiscountRatio]
GO
ALTER TABLE [dbo].[TBL103] ADD  CONSTRAINT [DF_TBL103_ExtraRatio]  DEFAULT ((0)) FOR [ExtraRatio]
GO
ALTER TABLE [dbo].[TBL104] ADD  CONSTRAINT [DF_TBL104_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL107] ADD  CONSTRAINT [DF_TBL107_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL108] ADD  CONSTRAINT [DF_TBL108_TemplateType]  DEFAULT ((0)) FOR [TemplateType]
GO
ALTER TABLE [dbo].[TBL109] ADD  CONSTRAINT [DF_TBL109_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL109] ADD  CONSTRAINT [DF_TBL109_OperationID]  DEFAULT ((0)) FOR [OperationID]
GO
ALTER TABLE [dbo].[TBL109] ADD  CONSTRAINT [DF_TBL109_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL110] ADD  CONSTRAINT [DF_TBL110_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL110] ADD  CONSTRAINT [DF_TBL110_CardType]  DEFAULT ((0)) FOR [CardType]
GO
ALTER TABLE [dbo].[TBL110] ADD  CONSTRAINT [DF_TBL110_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL111] ADD  DEFAULT ((0)) FOR [StartIndex]
GO
ALTER TABLE [dbo].[TBL111] ADD  DEFAULT ((0)) FOR [CodeLength]
GO
ALTER TABLE [dbo].[TBL112] ADD  CONSTRAINT [DF_TBL112_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL114] ADD  CONSTRAINT [DF_TBL114_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL114] ADD  CONSTRAINT [DF_TBL114_IntValue01]  DEFAULT ((0)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL114] ADD  CONSTRAINT [DF_TBL114_IntValue02]  DEFAULT ((0)) FOR [IntValue02]
GO
ALTER TABLE [dbo].[TBL114] ADD  CONSTRAINT [DF_TBL114_IntValue03]  DEFAULT ((0)) FOR [IntValue03]
GO
ALTER TABLE [dbo].[TBL114] ADD  CONSTRAINT [DF_TBL114_BitValue01]  DEFAULT ((0)) FOR [BitValue01]
GO
ALTER TABLE [dbo].[TBL114] ADD  CONSTRAINT [DF_TBL114_BitValue02]  DEFAULT ((0)) FOR [BitValue02]
GO
ALTER TABLE [dbo].[TBL115] ADD  DEFAULT ((0)) FOR [FingerType]
GO
ALTER TABLE [dbo].[TBL115] ADD  CONSTRAINT [DF_TBL115_SignType]  DEFAULT ((0)) FOR [SignType]
GO
ALTER TABLE [dbo].[TBL117] ADD  CONSTRAINT [DF_TBL117_IntValue01]  DEFAULT ((0)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL117] ADD  CONSTRAINT [DF_TBL117_IntValue02]  DEFAULT ((0)) FOR [IntValue02]
GO
ALTER TABLE [dbo].[TBL118] ADD  CONSTRAINT [DF_TBL118_DebitValue]  DEFAULT ((0)) FOR [DebitValue]
GO
ALTER TABLE [dbo].[TBL118] ADD  CONSTRAINT [DF_TBL118_CreditValue]  DEFAULT ((0)) FOR [CreditValue]
GO
ALTER TABLE [dbo].[TBL118] ADD  CONSTRAINT [DF_TBL118_SideType]  DEFAULT ((1)) FOR [SideType]
GO
ALTER TABLE [dbo].[TBL118] ADD  CONSTRAINT [DF_TBL118_Ratio]  DEFAULT ((0)) FOR [Ratio]
GO
ALTER TABLE [dbo].[TBL118] ADD  CONSTRAINT [DF_TBL118_RoundUpValue]  DEFAULT ((0)) FOR [RoundUpValue]
GO
ALTER TABLE [dbo].[TBL118] ADD  CONSTRAINT [DF_TBL118_NotEffectPrice]  DEFAULT ((0)) FOR [NotEffectPrice]
GO
ALTER TABLE [dbo].[TBL118] ADD  CONSTRAINT [DF_TBL118_NotEffectTax]  DEFAULT ((0)) FOR [NotEffectTax]
GO
ALTER TABLE [dbo].[TBL118] ADD  CONSTRAINT [DF_TBL118_RatioCalculationAsDivision]  DEFAULT ((0)) FOR [RatioCalculationAsDivision]
GO
ALTER TABLE [dbo].[TBL119] ADD  CONSTRAINT [DF_TBL119_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL119] ADD  CONSTRAINT [DF_TBL119_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL119] ADD  CONSTRAINT [DF_TBL119_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL119] ADD  CONSTRAINT [DF_TBL119_BondType]  DEFAULT ((0)) FOR [BondType]
GO
ALTER TABLE [dbo].[TBL119] ADD  CONSTRAINT [DF_TBL119_CardType]  DEFAULT ((0)) FOR [CardType]
GO
ALTER TABLE [dbo].[TBL119] ADD  CONSTRAINT [DF_TBL119_AutoBuildBond]  DEFAULT ((0)) FOR [AutoBuildBond]
GO
ALTER TABLE [dbo].[TBL119] ADD  CONSTRAINT [DF_TBL119_Boolean01]  DEFAULT ((0)) FOR [Boolean01]
GO
ALTER TABLE [dbo].[TBL119] ADD  CONSTRAINT [DF_TBL119_Option01]  DEFAULT ((0)) FOR [Option01]
GO
ALTER TABLE [dbo].[TBL119] ADD  CONSTRAINT [DF_TBL119_Option02]  DEFAULT ((0)) FOR [Option02]
GO
ALTER TABLE [dbo].[TBL120] ADD  CONSTRAINT [DF_TBL120_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL120] ADD  CONSTRAINT [DF_TBL120_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL120] ADD  CONSTRAINT [DF_TBL120_Rate]  DEFAULT ((1)) FOR [Rate]
GO
ALTER TABLE [dbo].[TBL120] ADD  CONSTRAINT [DF_TBL120_DoneIn]  DEFAULT (getdate()) FOR [DoneIn]
GO
ALTER TABLE [dbo].[TBL120] ADD  CONSTRAINT [DF_TBL120_NumberValue01]  DEFAULT ((0)) FOR [NumberValue01]
GO
ALTER TABLE [dbo].[TBL120] ADD  CONSTRAINT [DF_TBL120_IntValue01]  DEFAULT ((0)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL120] ADD  CONSTRAINT [DF_TBL120_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL121] ADD  CONSTRAINT [DF_TBL121_RecordGuide]  DEFAULT (newid()) FOR [RecordGuide]
GO
ALTER TABLE [dbo].[TBL121] ADD  CONSTRAINT [DF_TBL121_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL121] ADD  CONSTRAINT [DF_TBL121_Value]  DEFAULT ((0)) FOR [Value]
GO
ALTER TABLE [dbo].[TBL121] ADD  CONSTRAINT [DF_TBL121_ValueRate]  DEFAULT ((0)) FOR [ValueRate]
GO
ALTER TABLE [dbo].[TBL121] ADD  CONSTRAINT [DF_TBL121_Debit]  DEFAULT ((0)) FOR [Debit]
GO
ALTER TABLE [dbo].[TBL121] ADD  CONSTRAINT [DF_TBL121_Credit]  DEFAULT ((0)) FOR [Credit]
GO
ALTER TABLE [dbo].[TBL121] ADD  CONSTRAINT [DF_TBL121_DebitRate]  DEFAULT ((0)) FOR [DebitRate]
GO
ALTER TABLE [dbo].[TBL121] ADD  CONSTRAINT [DF_TBL121_CreditRate]  DEFAULT ((0)) FOR [CreditRate]
GO
ALTER TABLE [dbo].[TBL121] ADD  CONSTRAINT [DF_TBL121_RecordActivated]  DEFAULT ((1)) FOR [RecordActivated]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_CardType]  DEFAULT ((1)) FOR [CardType]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_CardMode]  DEFAULT ((1)) FOR [CardMode]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_IntValue01]  DEFAULT ((0)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_IntValue02]  DEFAULT ((0)) FOR [IntValue02]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_IntValue03]  DEFAULT ((0)) FOR [IntValue03]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_IntValue04]  DEFAULT ((0)) FOR [IntValue04]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_NumberValue02]  DEFAULT ((0)) FOR [NumberValue02]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_BitValue01]  DEFAULT ((0)) FOR [BitValue01]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_BitValue02]  DEFAULT ((0)) FOR [BitValue02]
GO
ALTER TABLE [dbo].[TBL122] ADD  CONSTRAINT [DF_TBL122_BitValue03]  DEFAULT ((0)) FOR [BitValue03]
GO
ALTER TABLE [dbo].[TBL123] ADD  DEFAULT (newid()) FOR [RowGuide]
GO
ALTER TABLE [dbo].[TBL123] ADD  CONSTRAINT [DF_TBL123_RecordType]  DEFAULT ((0)) FOR [RecordType]
GO
ALTER TABLE [dbo].[TBL123] ADD  CONSTRAINT [DF_TBL123_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL123] ADD  CONSTRAINT [DF_TBL123_IntValue01]  DEFAULT ((0)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL123] ADD  CONSTRAINT [DF_TBL123_IntValue02]  DEFAULT ((0)) FOR [IntValue02]
GO
ALTER TABLE [dbo].[TBL123] ADD  CONSTRAINT [DF_TBL123_NumberValue01]  DEFAULT ((0)) FOR [NumberValue01]
GO
ALTER TABLE [dbo].[TBL123] ADD  CONSTRAINT [DF_TBL123_NumberValue02]  DEFAULT ((0)) FOR [NumberValue02]
GO
ALTER TABLE [dbo].[TBL123] ADD  CONSTRAINT [DF_TBL123_BitValue01]  DEFAULT ((0)) FOR [BitValue01]
GO
ALTER TABLE [dbo].[TBL123] ADD  CONSTRAINT [DF_TBL123_BitValue02]  DEFAULT ((0)) FOR [BitValue02]
GO
ALTER TABLE [dbo].[TBL123] ADD  CONSTRAINT [DF_TBL123_BitValue03]  DEFAULT ((0)) FOR [BitValue03]
GO
ALTER TABLE [dbo].[TBL123] ADD  CONSTRAINT [DF_TBL123_BitValue04]  DEFAULT ((0)) FOR [BitValue04]
GO
ALTER TABLE [dbo].[TBL125] ADD  CONSTRAINT [DF_TBL125_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL125] ADD  CONSTRAINT [DF_TBL125_IntValue01]  DEFAULT ((0)) FOR [IntValue01]
GO
ALTER TABLE [dbo].[TBL125] ADD  CONSTRAINT [DF_TBL125_IntValue02]  DEFAULT ((0)) FOR [IntValue02]
GO
ALTER TABLE [dbo].[TBL126] ADD  CONSTRAINT [DF_TBL126_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL126] ADD  CONSTRAINT [DF_TBL126_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL126] ADD  CONSTRAINT [DF_TBL126_CardDate]  DEFAULT (getdate()) FOR [CardDate]
GO
ALTER TABLE [dbo].[TBL126] ADD  CONSTRAINT [DF_TBL126_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL126] ADD  CONSTRAINT [DF_TBL126_NoteState]  DEFAULT ((0)) FOR [NoteState]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_MainUnit]  DEFAULT ((1)) FOR [MainUnit]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_IsFixed]  DEFAULT ((0)) FOR [IsFixed]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_Quantity]  DEFAULT ((1)) FOR [Quantity]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_Price]  DEFAULT ((0)) FOR [Price]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_AgentPrice]  DEFAULT ((0)) FOR [AgentPrice]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_WholePrice]  DEFAULT ((0)) FOR [WholePrice]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_EndUserPrice]  DEFAULT ((0)) FOR [EndUserPrice]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_Price5Item]  DEFAULT ((0)) FOR [Price5Item]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_Price6Item]  DEFAULT ((0)) FOR [Price6Item]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_Price7Item]  DEFAULT ((0)) FOR [Price7Item]
GO
ALTER TABLE [dbo].[TBL128] ADD  CONSTRAINT [DF_TBL128_StanderCost]  DEFAULT ((0)) FOR [StanderCost]
GO
ALTER TABLE [dbo].[TBL129] ADD  CONSTRAINT [DF_TBL129_IsHidden]  DEFAULT ((0)) FOR [IsHidden]
GO
ALTER TABLE [dbo].[TBL130] ADD  CONSTRAINT [DF_TBL130_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL130] ADD  CONSTRAINT [DF_TBL130_ResultType]  DEFAULT ((0)) FOR [ResultType]
GO
ALTER TABLE [dbo].[TBL130] ADD  CONSTRAINT [DF_TBL130_PeriodID]  DEFAULT ((0)) FOR [PeriodID]
GO
ALTER TABLE [dbo].[TBL130] ADD  CONSTRAINT [DF_TBL130_Number01]  DEFAULT ((0)) FOR [Number01]
GO
ALTER TABLE [dbo].[TBL130] ADD  CONSTRAINT [DF_TBL130_Number02]  DEFAULT ((0)) FOR [Number02]
GO
ALTER TABLE [dbo].[TBL130] ADD  CONSTRAINT [DF_TBL130_Number03]  DEFAULT ((0)) FOR [Number03]
GO
ALTER TABLE [dbo].[TBL130] ADD  CONSTRAINT [DF_TBL130_Number04]  DEFAULT ((0)) FOR [Number04]
GO
ALTER TABLE [dbo].[TBL131] ADD  CONSTRAINT [DF_TBL131_DueAfter]  DEFAULT ((0)) FOR [DueAfter]
GO
ALTER TABLE [dbo].[TBL131] ADD  CONSTRAINT [DF_TBL131_DiscountValue]  DEFAULT ((0)) FOR [DiscountValue]
GO
ALTER TABLE [dbo].[TBL131] ADD  CONSTRAINT [DF_TBL131_DiscountRatio]  DEFAULT ((0)) FOR [DiscountRatio]
GO
ALTER TABLE [dbo].[TBL132] ADD  CONSTRAINT [DF_TBL132_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL132] ADD  CONSTRAINT [DF_TBL132_Color]  DEFAULT ((0)) FOR [Color]
GO
ALTER TABLE [dbo].[TBL134] ADD  CONSTRAINT [DF_TBL134_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL134] ADD  CONSTRAINT [DF_TBL134_AffectItemsTax]  DEFAULT ((0)) FOR [AffectItemsTax]
GO
ALTER TABLE [dbo].[TBL134] ADD  CONSTRAINT [DF_TBL134_AffectBillTax]  DEFAULT ((0)) FOR [AffectBillTax]
GO
ALTER TABLE [dbo].[TBL134] ADD  CONSTRAINT [DF_TBL134_BillTaxRatio]  DEFAULT ((0)) FOR [BillTaxRatio]
GO
ALTER TABLE [dbo].[TBL134] ADD  CONSTRAINT [DF_TBL134_CheckConditions]  DEFAULT ((0)) FOR [CheckConditions]
GO
ALTER TABLE [dbo].[TBL135] ADD  CONSTRAINT [DF_TBL135_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL135] ADD  CONSTRAINT [DF_TBL135_CardType]  DEFAULT ((0)) FOR [CardType]
GO
ALTER TABLE [dbo].[TBL135] ADD  CONSTRAINT [DF_TBL135_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL136] ADD  CONSTRAINT [DF_TBL136_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL136] ADD  CONSTRAINT [DF_TBL136_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL136] ADD  CONSTRAINT [DF_TBL136_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL137] ADD  CONSTRAINT [DF_TBL137_RecordGuide]  DEFAULT (newid()) FOR [RecordGuide]
GO
ALTER TABLE [dbo].[TBL139] ADD  CONSTRAINT [DF_TBL139_Number01]  DEFAULT ((0)) FOR [Number01]
GO
ALTER TABLE [dbo].[TBL139] ADD  CONSTRAINT [DF_TBL139_Number02]  DEFAULT ((0)) FOR [Number02]
GO
ALTER TABLE [dbo].[TBL139] ADD  CONSTRAINT [DF_TBL139_Number03]  DEFAULT ((0)) FOR [Number03]
GO
ALTER TABLE [dbo].[TBL139] ADD  CONSTRAINT [DF_TBL139_Number04]  DEFAULT ((0)) FOR [Number04]
GO
ALTER TABLE [dbo].[TBL139] ADD  CONSTRAINT [DF_TBL139_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL139] ADD  CONSTRAINT [DF_TBL139_Int01]  DEFAULT ((0)) FOR [Int01]
GO
ALTER TABLE [dbo].[TBL139] ADD  CONSTRAINT [DF_TBL139_Int02]  DEFAULT ((0)) FOR [Int02]
GO
ALTER TABLE [dbo].[TBL140] ADD  CONSTRAINT [DF_TBL140_MinLimit]  DEFAULT ((0)) FOR [MinLimit]
GO
ALTER TABLE [dbo].[TBL140] ADD  CONSTRAINT [DF_TBL140_MaxLimit]  DEFAULT ((0)) FOR [MaxLimit]
GO
ALTER TABLE [dbo].[TBL141] ADD  DEFAULT (newid()) FOR [RowGuide]
GO
ALTER TABLE [dbo].[TBL141] ADD  CONSTRAINT [DF_TBL141_LCClosed]  DEFAULT ((0)) FOR [LCClosed]
GO
ALTER TABLE [dbo].[TBL141] ADD  CONSTRAINT [DF_TBL141_LCAmount]  DEFAULT ((0)) FOR [LCAmount]
GO
ALTER TABLE [dbo].[TBL141] ADD  CONSTRAINT [DF_TBL141_LCAmountRatio]  DEFAULT ((0)) FOR [LCAmountRate]
GO
ALTER TABLE [dbo].[TBL141] ADD  CONSTRAINT [DF_TBL141_CoverRatio]  DEFAULT ((0)) FOR [CoverRatio]
GO
ALTER TABLE [dbo].[TBL141] ADD  CONSTRAINT [DF_TBL141_CoverAmount]  DEFAULT ((0)) FOR [CoverAmount]
GO
ALTER TABLE [dbo].[TBL142] ADD  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL142] ADD  CONSTRAINT [DF_TBL142_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL142] ADD  CONSTRAINT [DF_TBL142_Additions]  DEFAULT ((0)) FOR [Additions]
GO
ALTER TABLE [dbo].[TBL142] ADD  CONSTRAINT [DF_TBL142_Discounts]  DEFAULT ((0)) FOR [Discounts]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_NotActive]  DEFAULT ((0)) FOR [NotActive]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_UseExtraQuantity]  DEFAULT ((0)) FOR [UseExtraQuantity]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_Quantity]  DEFAULT ((0)) FOR [Quantity]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_BillsCount]  DEFAULT ((0)) FOR [BillsCount]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_PayMethod]  DEFAULT ((0)) FOR [PayMethod]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_OfferType]  DEFAULT ((0)) FOR [OfferType]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_OfferValue]  DEFAULT ((0)) FOR [OfferValue]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_OfferDiscount]  DEFAULT ((0)) FOR [OfferDiscount]
GO
ALTER TABLE [dbo].[TBL144] ADD  CONSTRAINT [DF_TBL144_ItemUseType]  DEFAULT ((0)) FOR [ItemUseType]
GO
ALTER TABLE [dbo].[TBL145] ADD  CONSTRAINT [DF_TBL145_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL145] ADD  CONSTRAINT [DF_TBL145_Quantity]  DEFAULT ((0)) FOR [Quantity]
GO
ALTER TABLE [dbo].[TBL145] ADD  CONSTRAINT [DF_TBL145_Gifts]  DEFAULT ((0)) FOR [Gifts]
GO
ALTER TABLE [dbo].[TBL145] ADD  CONSTRAINT [DF_TBL145_ExtraQuantityRule]  DEFAULT ((0)) FOR [ExtraQuantityRule]
GO
ALTER TABLE [dbo].[TBL145] ADD  CONSTRAINT [DF_TBL145_Unit]  DEFAULT ((1)) FOR [Unit]
GO
ALTER TABLE [dbo].[TBL145] ADD  CONSTRAINT [DF_TBL145_PriceValue]  DEFAULT ((0)) FOR [PriceValue]
GO
ALTER TABLE [dbo].[TBL145] ADD  CONSTRAINT [DF_TBL145_ValueFrom]  DEFAULT ((0)) FOR [ValueFrom]
GO
ALTER TABLE [dbo].[TBL145] ADD  CONSTRAINT [DF_TBL145_ValueTo]  DEFAULT ((0)) FOR [ValueTo]
GO
ALTER TABLE [dbo].[TBL145] ADD  CONSTRAINT [DF_TBL145_DiscountValue]  DEFAULT ((0)) FOR [DiscountValue]
GO
ALTER TABLE [dbo].[TBL145] ADD  CONSTRAINT [DF_TBL145_DiscountRatio]  DEFAULT ((0)) FOR [DiscountRatio]
GO
ALTER TABLE [dbo].[TBL147] ADD  CONSTRAINT [DF_TBL147_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL147] ADD  CONSTRAINT [DF_TBL147_Number01]  DEFAULT ((0)) FOR [Number01]
GO
ALTER TABLE [dbo].[TBL147] ADD  CONSTRAINT [DF_TBL147_Number02]  DEFAULT ((0)) FOR [Number02]
GO
ALTER TABLE [dbo].[TBL147] ADD  CONSTRAINT [DF_TBL147_Bit01]  DEFAULT ((0)) FOR [Bit01]
GO
ALTER TABLE [dbo].[TBL147] ADD  CONSTRAINT [DF_TBL147_Bit02]  DEFAULT ((0)) FOR [Bit02]
GO
ALTER TABLE [dbo].[TBL147] ADD  CONSTRAINT [DF_TBL147_Int01]  DEFAULT ((0)) FOR [Int01]
GO
ALTER TABLE [dbo].[TBL147] ADD  CONSTRAINT [DF_TBL147_Int02]  DEFAULT ((0)) FOR [Int02]
GO
ALTER TABLE [dbo].[TBL150] ADD  CONSTRAINT [DF_TBL150_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL150] ADD  CONSTRAINT [DF_TBL150_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL150] ADD  CONSTRAINT [DF_TBL150_PrintCount]  DEFAULT ((0)) FOR [PrintCount]
GO
ALTER TABLE [dbo].[TBL152] ADD  CONSTRAINT [DF_TBL152_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL153] ADD  CONSTRAINT [DF_TBL153_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL154] ADD  CONSTRAINT [DF_TBL154_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL154] ADD  CONSTRAINT [DF_TBL154_RangeValue]  DEFAULT ((0)) FOR [RangeValue]
GO
ALTER TABLE [dbo].[TBL154] ADD  CONSTRAINT [DF_TBL154_CommissionRatio]  DEFAULT ((0)) FOR [CommissionRatio]
GO
ALTER TABLE [dbo].[TBL155] ADD  CONSTRAINT [DF_TBL155_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL155] ADD  CONSTRAINT [DF_TBL155_TabOrder]  DEFAULT ((0)) FOR [TabIndex]
GO
ALTER TABLE [dbo].[TBL155] ADD  CONSTRAINT [DF_TBL155_ShortcutKey]  DEFAULT ((0)) FOR [ShortcutKey]
GO
ALTER TABLE [dbo].[TBL155] ADD  CONSTRAINT [DF_TBL155_TabStop]  DEFAULT ((0)) FOR [TabStop]
GO
ALTER TABLE [dbo].[TBL156] ADD  CONSTRAINT [DF_TBL156_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL156] ADD  CONSTRAINT [DF_TBL156_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL156] ADD  CONSTRAINT [DF_TBL156_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL156] ADD  CONSTRAINT [DF_TBL156_TypeID]  DEFAULT ((0)) FOR [TypeID]
GO
ALTER TABLE [dbo].[TBL156] ADD  CONSTRAINT [DF_TBL156_CardType]  DEFAULT ((0)) FOR [CardType]
GO
ALTER TABLE [dbo].[TBL157] ADD  CONSTRAINT [DF_TBL157_CardGuide]  DEFAULT (newid()) FOR [CardGuide]
GO
ALTER TABLE [dbo].[TBL157] ADD  CONSTRAINT [DF_TBL157_CardNumber]  DEFAULT ((0)) FOR [CardNumber]
GO
ALTER TABLE [dbo].[TBL157] ADD  CONSTRAINT [DF_TBL157_ValueType]  DEFAULT ((0)) FOR [ValueType]
GO
ALTER TABLE [dbo].[TBL157] ADD  CONSTRAINT [DF_TBL157_MonthStart]  DEFAULT ((0)) FOR [MonthStart]
GO
ALTER TABLE [dbo].[TBL157] ADD  CONSTRAINT [DF_TBL157_MonthEnd]  DEFAULT ((0)) FOR [MonthEnd]
GO
ALTER TABLE [dbo].[TBL157] ADD  CONSTRAINT [DF_TBL157_DayStart]  DEFAULT ((0)) FOR [DayStart]
GO
ALTER TABLE [dbo].[TBL157] ADD  CONSTRAINT [DF_TBL157_DayEnd]  DEFAULT ((0)) FOR [DayEnd]
GO
ALTER TABLE [dbo].[TBL157] ADD  CONSTRAINT [DF_TBL157_Security]  DEFAULT ((1)) FOR [Security]
GO
ALTER TABLE [dbo].[TBL158] ADD  CONSTRAINT [DF_TBL158_WarrantyIncluded]  DEFAULT ((0)) FOR [WarrantyIncluded]
GO
ALTER TABLE [dbo].[TBL158] ADD  CONSTRAINT [DF_TBL158_Cost]  DEFAULT ((0)) FOR [Cost]
GO
ALTER TABLE [dbo].[TBL159] ADD  CONSTRAINT [DF_TBL159_ConnectionID]  DEFAULT (@@spid) FOR [ConnectionID]
GO
ALTER TABLE [dbo].[TBL159] ADD  CONSTRAINT [DF_TBL159_Quantity]  DEFAULT ((0)) FOR [Quantity]
GO
ALTER TABLE [dbo].[TBL159] ADD  CONSTRAINT [DF_TBL159_Unit]  DEFAULT ((1)) FOR [Unit]
GO
ALTER TABLE [dbo].[TBL159] ADD  CONSTRAINT [DF_TBL159_Price]  DEFAULT ((0)) FOR [Price]
GO
ALTER TABLE [dbo].[TBL160] ADD  CONSTRAINT [DF_TBL160_IsHidden]  DEFAULT ((0)) FOR [IsHidden]
GO
ALTER TABLE [dbo].[TBL161] ADD  CONSTRAINT [DF_TBL161_PrintCount]  DEFAULT ((0)) FOR [PrintCount]
GO
ALTER TABLE [dbo].[TBL162] ADD  CONSTRAINT [DF_TBL162_RecordDate]  DEFAULT (getdate()) FOR [RecordDate]
GO
ALTER TABLE [dbo].[TBL162] ADD  CONSTRAINT [DF_TBL162_Executed]  DEFAULT ((0)) FOR [Executed]
GO
ALTER TABLE [dbo].[TBL002]  WITH CHECK ADD  CONSTRAINT [FK_TBL002_TBL002] FOREIGN KEY([MasterCloseAccount])
REFERENCES [dbo].[TBL002] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL002] CHECK CONSTRAINT [FK_TBL002_TBL002]
GO
ALTER TABLE [dbo].[TBL002]  WITH CHECK ADD  CONSTRAINT [FK_TBL002_TBL004] FOREIGN KEY([BeginningInventoryAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL002] CHECK CONSTRAINT [FK_TBL002_TBL004]
GO
ALTER TABLE [dbo].[TBL002]  WITH CHECK ADD  CONSTRAINT [FK_TBL002_TBL004_2] FOREIGN KEY([ClosingInventoryAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL002] CHECK CONSTRAINT [FK_TBL002_TBL004_2]
GO
ALTER TABLE [dbo].[TBL002]  WITH CHECK ADD  CONSTRAINT [FK_TBL002_TBL004_3] FOREIGN KEY([BalanceAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL002] CHECK CONSTRAINT [FK_TBL002_TBL004_3]
GO
ALTER TABLE [dbo].[TBL004]  WITH CHECK ADD  CONSTRAINT [FK_TBL004_TBL001] FOREIGN KEY([DefaultCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL004] CHECK CONSTRAINT [FK_TBL004_TBL001]
GO
ALTER TABLE [dbo].[TBL004]  WITH CHECK ADD  CONSTRAINT [FK_TBL004_TBL002] FOREIGN KEY([ClosingAccount])
REFERENCES [dbo].[TBL002] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL004] CHECK CONSTRAINT [FK_TBL004_TBL002]
GO
ALTER TABLE [dbo].[TBL004]  WITH CHECK ADD  CONSTRAINT [FK_TBL004_TBL004] FOREIGN KEY([MainAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL004] CHECK CONSTRAINT [FK_TBL004_TBL004]
GO
ALTER TABLE [dbo].[TBL004]  WITH CHECK ADD  CONSTRAINT [FK_TBL004_TBL005] FOREIGN KEY([DefaultCostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL004] CHECK CONSTRAINT [FK_TBL004_TBL005]
GO
ALTER TABLE [dbo].[TBL004]  WITH CHECK ADD  CONSTRAINT [FK_TBL004_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL004] CHECK CONSTRAINT [FK_TBL004_TBL013]
GO
ALTER TABLE [dbo].[TBL004]  WITH CHECK ADD  CONSTRAINT [FK_TBL004_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL004] CHECK CONSTRAINT [FK_TBL004_TBL042]
GO
ALTER TABLE [dbo].[TBL004]  WITH CHECK ADD  CONSTRAINT [FK_TBL004_TBL049] FOREIGN KEY([DefaultProject])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL004] CHECK CONSTRAINT [FK_TBL004_TBL049]
GO
ALTER TABLE [dbo].[TBL004]  WITH CHECK ADD  CONSTRAINT [FK_TBL004_TBL050] FOREIGN KEY([DefaultBranch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL004] CHECK CONSTRAINT [FK_TBL004_TBL050]
GO
ALTER TABLE [dbo].[TBL005]  WITH CHECK ADD  CONSTRAINT [FK_TBL005_TBL004] FOREIGN KEY([DefaultAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL005] CHECK CONSTRAINT [FK_TBL005_TBL004]
GO
ALTER TABLE [dbo].[TBL005]  WITH CHECK ADD  CONSTRAINT [FK_TBL005_TBL004_2] FOREIGN KEY([DefaultAccount2])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL005] CHECK CONSTRAINT [FK_TBL005_TBL004_2]
GO
ALTER TABLE [dbo].[TBL005]  WITH CHECK ADD  CONSTRAINT [FK_TBL005_TBL004_3] FOREIGN KEY([DefaultAccount3])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL005] CHECK CONSTRAINT [FK_TBL005_TBL004_3]
GO
ALTER TABLE [dbo].[TBL005]  WITH CHECK ADD  CONSTRAINT [FK_TBL005_TBL005] FOREIGN KEY([MainCostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL005] CHECK CONSTRAINT [FK_TBL005_TBL005]
GO
ALTER TABLE [dbo].[TBL005]  WITH CHECK ADD  CONSTRAINT [FK_TBL005_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL005] CHECK CONSTRAINT [FK_TBL005_TBL013]
GO
ALTER TABLE [dbo].[TBL005]  WITH CHECK ADD  CONSTRAINT [FK_TBL005_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL005] CHECK CONSTRAINT [FK_TBL005_TBL042]
GO
ALTER TABLE [dbo].[TBL006]  WITH CHECK ADD  CONSTRAINT [FK_TBL006_TBL002] FOREIGN KEY([TradingClosing])
REFERENCES [dbo].[TBL002] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL006] CHECK CONSTRAINT [FK_TBL006_TBL002]
GO
ALTER TABLE [dbo].[TBL006]  WITH CHECK ADD  CONSTRAINT [FK_TBL006_TBL002_2] FOREIGN KEY([BalanceSheetClosing])
REFERENCES [dbo].[TBL002] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL006] CHECK CONSTRAINT [FK_TBL006_TBL002_2]
GO
ALTER TABLE [dbo].[TBL006]  WITH CHECK ADD  CONSTRAINT [FK_TBL006_TBL004] FOREIGN KEY([MainAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL006] CHECK CONSTRAINT [FK_TBL006_TBL004]
GO
ALTER TABLE [dbo].[TBL006]  WITH CHECK ADD  CONSTRAINT [FK_TBL006_TBL006] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL006] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL006] CHECK CONSTRAINT [FK_TBL006_TBL006]
GO
ALTER TABLE [dbo].[TBL006]  WITH CHECK ADD  CONSTRAINT [FK_TBL006_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL006] CHECK CONSTRAINT [FK_TBL006_TBL013]
GO
ALTER TABLE [dbo].[TBL006]  WITH CHECK ADD  CONSTRAINT [FK_TBL006_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL006] CHECK CONSTRAINT [FK_TBL006_TBL042]
GO
ALTER TABLE [dbo].[TBL006]  WITH CHECK ADD  CONSTRAINT [FK_TBL006_TBL110] FOREIGN KEY([BarcodeType])
REFERENCES [dbo].[TBL110] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL006] CHECK CONSTRAINT [FK_TBL006_TBL110]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL001] FOREIGN KEY([DefaultCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL001]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL001_2] FOREIGN KEY([AgentPriceCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL001_2]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL001_3] FOREIGN KEY([WholePriceCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL001_3]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL001_4] FOREIGN KEY([EndUserPriceCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL001_4]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL001_5] FOREIGN KEY([Price5ItemCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL001_5]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL001_6] FOREIGN KEY([Price6ItemCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL001_6]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL001_7] FOREIGN KEY([Price7ItemCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL001_7]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL001_8] FOREIGN KEY([StanderCostCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL001_8]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL004] FOREIGN KEY([AccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL004]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL006] FOREIGN KEY([GroupGuid])
REFERENCES [dbo].[TBL006] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL006]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL013]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL016] FOREIGN KEY([RelatedAgent])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL016]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL042]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL081_1]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL081_2]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL081_3]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL081_4]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL081_5]
GO
ALTER TABLE [dbo].[TBL007]  WITH CHECK ADD  CONSTRAINT [FK_TBL007_TBL128_2] FOREIGN KEY([DefaultVariableUnit])
REFERENCES [dbo].[TBL128] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL007] CHECK CONSTRAINT [FK_TBL007_TBL128_2]
GO
ALTER TABLE [dbo].[TBL008]  WITH CHECK ADD  CONSTRAINT [FK_TBL008_TBL002] FOREIGN KEY([TradingClosing])
REFERENCES [dbo].[TBL002] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL008] CHECK CONSTRAINT [FK_TBL008_TBL002]
GO
ALTER TABLE [dbo].[TBL008]  WITH CHECK ADD  CONSTRAINT [FK_TBL008_TBL002_3] FOREIGN KEY([BalanceSheetClosing])
REFERENCES [dbo].[TBL002] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL008] CHECK CONSTRAINT [FK_TBL008_TBL002_3]
GO
ALTER TABLE [dbo].[TBL008]  WITH CHECK ADD  CONSTRAINT [FK_TBL008_TBL008] FOREIGN KEY([MainWarehouse])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL008] CHECK CONSTRAINT [FK_TBL008_TBL008]
GO
ALTER TABLE [dbo].[TBL008]  WITH CHECK ADD  CONSTRAINT [FK_TBL008_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL008] CHECK CONSTRAINT [FK_TBL008_TBL013]
GO
ALTER TABLE [dbo].[TBL008]  WITH CHECK ADD  CONSTRAINT [FK_TBL008_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL008] CHECK CONSTRAINT [FK_TBL008_TBL042]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL001] FOREIGN KEY([DefaultCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL001]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL004] FOREIGN KEY([DefaultAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL004]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL004_4] FOREIGN KEY([TruncateAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL004_4]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL004_5] FOREIGN KEY([ReturnAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL004_5]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL004_6] FOREIGN KEY([BankProcuringCommissionAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL004_6]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL0041] FOREIGN KEY([CollectAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL0041]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL0042] FOREIGN KEY([IntermediateAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL0042]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL005] FOREIGN KEY([DefaultCostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL005]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL009] FOREIGN KEY([RelatedBondType])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL009]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL009_3] FOREIGN KEY([FinancialTransactionsBond])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL009_3]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL033] FOREIGN KEY([DefaultPrintType])
REFERENCES [dbo].[TBL033] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL033]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL049] FOREIGN KEY([DefaultProject])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL049]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL050] FOREIGN KEY([DefaultBranch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL050]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL067_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL067_1]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL067_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL067_2]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL067_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL067_3]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL067_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL067_4]
GO
ALTER TABLE [dbo].[TBL009]  WITH CHECK ADD  CONSTRAINT [FK_TBL009_TBL067_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL009] CHECK CONSTRAINT [FK_TBL009_TBL067_5]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL001]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL004]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL004_2] FOREIGN KEY([AccountGuide2])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL004_2]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL004_3] FOREIGN KEY([AccountGuide3])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL004_3]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL005]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL009] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL009]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL009_2] FOREIGN KEY([MainGuide2])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL009_2]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL010] FOREIGN KEY([MainBondType])
REFERENCES [dbo].[TBL010] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL010]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL013]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL014] FOREIGN KEY([RelatedAdministration])
REFERENCES [dbo].[TBL014] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL014]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL016]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL016_2] FOREIGN KEY([AgentGuide2])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL016_2]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL020] FOREIGN KEY([RelatedBillType])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL020]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL037] FOREIGN KEY([PayType])
REFERENCES [dbo].[TBL037] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL037]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL042]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL049]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL050]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL081_1]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL081_2]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL081_3]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL081_4]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL081_5]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL085] FOREIGN KEY([RelatedArchive])
REFERENCES [dbo].[TBL085] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL085]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL085_2] FOREIGN KEY([RelatedArchive2])
REFERENCES [dbo].[TBL085] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL085_2]
GO
ALTER TABLE [dbo].[TBL010]  WITH CHECK ADD  CONSTRAINT [FK_TBL010_TBL120] FOREIGN KEY([DynamicBond])
REFERENCES [dbo].[TBL120] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL010] CHECK CONSTRAINT [FK_TBL010_TBL120]
GO
ALTER TABLE [dbo].[TBL011]  WITH CHECK ADD  CONSTRAINT [FK_TBL011_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL011] CHECK CONSTRAINT [FK_TBL011_TBL001]
GO
ALTER TABLE [dbo].[TBL011]  WITH CHECK ADD  CONSTRAINT [FK_TBL011_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL011] CHECK CONSTRAINT [FK_TBL011_TBL005]
GO
ALTER TABLE [dbo].[TBL011]  WITH CHECK ADD  CONSTRAINT [FK_TBL011_TBL010] FOREIGN KEY([BondGuide])
REFERENCES [dbo].[TBL010] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL011] CHECK CONSTRAINT [FK_TBL011_TBL010]
GO
ALTER TABLE [dbo].[TBL011]  WITH CHECK ADD  CONSTRAINT [FK_TBL011_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL011] CHECK CONSTRAINT [FK_TBL011_TBL013]
GO
ALTER TABLE [dbo].[TBL011]  WITH CHECK ADD  CONSTRAINT [FK_TBL011_TBL022] FOREIGN KEY([BillGuide])
REFERENCES [dbo].[TBL022] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL011] CHECK CONSTRAINT [FK_TBL011_TBL022]
GO
ALTER TABLE [dbo].[TBL011]  WITH CHECK ADD  CONSTRAINT [FK_TBL011_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL011] CHECK CONSTRAINT [FK_TBL011_TBL042]
GO
ALTER TABLE [dbo].[TBL011]  WITH CHECK ADD  CONSTRAINT [FK_TBL011_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL011] CHECK CONSTRAINT [FK_TBL011_TBL049]
GO
ALTER TABLE [dbo].[TBL011]  WITH CHECK ADD  CONSTRAINT [FK_TBL011_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL011] CHECK CONSTRAINT [FK_TBL011_TBL050]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL001]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL004]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL004_2] FOREIGN KEY([ContraAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL004_2]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL005]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL011] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL011] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL011]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL016]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL025] FOREIGN KEY([CreditCard])
REFERENCES [dbo].[TBL025] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL025]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL049]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL050]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL081_1]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL081_2]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL081_3]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL081_4]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [FK_TBL012_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [FK_TBL012_TBL081_5]
GO
ALTER TABLE [dbo].[TBL013]  WITH CHECK ADD  CONSTRAINT [FK_TBL013_TBL005] FOREIGN KEY([CostCenterGuide])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL013] CHECK CONSTRAINT [FK_TBL013_TBL005]
GO
ALTER TABLE [dbo].[TBL013]  WITH CHECK ADD  CONSTRAINT [FK_TBL013_TBL016] FOREIGN KEY([RelatedAgent])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL013] CHECK CONSTRAINT [FK_TBL013_TBL016]
GO
ALTER TABLE [dbo].[TBL013]  WITH CHECK ADD  CONSTRAINT [FK_TBL013_TBL049] FOREIGN KEY([ProjectGuide])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL013] CHECK CONSTRAINT [FK_TBL013_TBL049]
GO
ALTER TABLE [dbo].[TBL013]  WITH CHECK ADD  CONSTRAINT [FK_TBL013_TBL050] FOREIGN KEY([BranchGuide])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL013] CHECK CONSTRAINT [FK_TBL013_TBL050]
GO
ALTER TABLE [dbo].[TBL013]  WITH CHECK ADD  CONSTRAINT [FK_TBL013_TBL122] FOREIGN KEY([OptionGuide])
REFERENCES [dbo].[TBL122] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL013] CHECK CONSTRAINT [FK_TBL013_TBL122]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL001]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL001_2] FOREIGN KEY([CurrencyGuide02])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL001_2]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL004]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL004_2] FOREIGN KEY([AccountGuide02])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL004_2]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL005]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL009] FOREIGN KEY([BondType])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL009]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL013]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL014] FOREIGN KEY([RelatedCard])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL014]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL014_2] FOREIGN KEY([RelatedCard2])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL014_2]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL014_3] FOREIGN KEY([RelatedCard3])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL014_3]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL015] FOREIGN KEY([AgentGroupGuide])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL015]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL016]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL016_2] FOREIGN KEY([AgentGuide2])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL016_2]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL020] FOREIGN KEY([BillType])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL020]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL026] FOREIGN KEY([OperationBill])
REFERENCES [dbo].[TBL026] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL026]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL037] FOREIGN KEY([PeriodType])
REFERENCES [dbo].[TBL037] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL037]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL042]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL049]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL050]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL081_1]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL081_2]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL081_3]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL081_4]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL081_5]
GO
ALTER TABLE [dbo].[TBL014]  WITH CHECK ADD  CONSTRAINT [FK_TBL014_TBL136] FOREIGN KEY([AttendanceGuide])
REFERENCES [dbo].[TBL136] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL014] CHECK CONSTRAINT [FK_TBL014_TBL136]
GO
ALTER TABLE [dbo].[TBL015]  WITH CHECK ADD  CONSTRAINT [FK_TBL015_TBL004] FOREIGN KEY([MainAccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL015] CHECK CONSTRAINT [FK_TBL015_TBL004]
GO
ALTER TABLE [dbo].[TBL015]  WITH CHECK ADD  CONSTRAINT [FK_TBL015_TBL004_2] FOREIGN KEY([MainTaxAccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL015] CHECK CONSTRAINT [FK_TBL015_TBL004_2]
GO
ALTER TABLE [dbo].[TBL015]  WITH CHECK ADD  CONSTRAINT [FK_TBL015_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL015] CHECK CONSTRAINT [FK_TBL015_TBL013]
GO
ALTER TABLE [dbo].[TBL015]  WITH CHECK ADD  CONSTRAINT [FK_TBL015_TBL015] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL015] CHECK CONSTRAINT [FK_TBL015_TBL015]
GO
ALTER TABLE [dbo].[TBL015]  WITH CHECK ADD  CONSTRAINT [FK_TBL015_TBL016] FOREIGN KEY([RelatedAgent])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL015] CHECK CONSTRAINT [FK_TBL015_TBL016]
GO
ALTER TABLE [dbo].[TBL015]  WITH CHECK ADD  CONSTRAINT [FK_TBL015_TBL019] FOREIGN KEY([DefaultPayType])
REFERENCES [dbo].[TBL019] ([ID])
GO
ALTER TABLE [dbo].[TBL015] CHECK CONSTRAINT [FK_TBL015_TBL019]
GO
ALTER TABLE [dbo].[TBL015]  WITH CHECK ADD  CONSTRAINT [FK_TBL015_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL015] CHECK CONSTRAINT [FK_TBL015_TBL042]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL001] FOREIGN KEY([DefaultCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL001]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL004] FOREIGN KEY([AccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL004]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL004_2] FOREIGN KEY([CashAccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL004_2]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL004_3] FOREIGN KEY([TaxAccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL004_3]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL005]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL005_2] FOREIGN KEY([CostCenter2])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL005_2]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL008] FOREIGN KEY([Warehouse])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL008]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL013]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL014] FOREIGN KEY([RelatedAdministration])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL014]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL014_2] FOREIGN KEY([RelatedAdministration2])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL014_2]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL015] FOREIGN KEY([MainGroupGuide])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL015]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL016] FOREIGN KEY([MainAgent])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL016]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL016_2] FOREIGN KEY([MainAgent2])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL016_2]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL017] FOREIGN KEY([PriceType])
REFERENCES [dbo].[TBL017] ([ID])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL017]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL030] FOREIGN KEY([AddressID])
REFERENCES [dbo].[TBL030] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL030]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL030_2] FOREIGN KEY([RegionID])
REFERENCES [dbo].[TBL030] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL030_2]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL037] FOREIGN KEY([DueAgeType])
REFERENCES [dbo].[TBL037] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL037]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL042]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL049]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL050]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_1]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_10] FOREIGN KEY([Category10])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_10]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_11] FOREIGN KEY([Category11])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_11]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_12] FOREIGN KEY([Category12])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_12]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_13] FOREIGN KEY([Category13])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_13]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_14] FOREIGN KEY([Category14])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_14]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_15] FOREIGN KEY([Category15])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_15]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_2]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_3]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_4]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_5]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_6] FOREIGN KEY([Category06])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_6]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_7] FOREIGN KEY([Category07])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_7]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_8] FOREIGN KEY([Category08])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_8]
GO
ALTER TABLE [dbo].[TBL016]  WITH CHECK ADD  CONSTRAINT [FK_TBL016_TBL081_9] FOREIGN KEY([Category09])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL016] CHECK CONSTRAINT [FK_TBL016_TBL081_9]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL001] FOREIGN KEY([DefaultCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL001]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004] FOREIGN KEY([CashAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_10] FOREIGN KEY([ContinuousInventoryCostAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_10]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_11] FOREIGN KEY([ContinuousInventoryStoreAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_11]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_12] FOREIGN KEY([LocalAdministrativeTaxAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_12]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_13] FOREIGN KEY([RoundAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_13]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_14] FOREIGN KEY([ContinuousInventoryGiftsAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_14]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_2] FOREIGN KEY([ProductsAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_2]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_3] FOREIGN KEY([BankAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_3]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_4] FOREIGN KEY([DiscountsAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_4]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_5] FOREIGN KEY([ExtrasAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_5]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_6] FOREIGN KEY([BonusAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_6]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_7] FOREIGN KEY([AgentProfitAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_7]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_8] FOREIGN KEY([BankProcuringCommissionAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_8]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL004_9] FOREIGN KEY([SubjectToTaxAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL004_9]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL005] FOREIGN KEY([DefaultCostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL005]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL006] FOREIGN KEY([DefaultGroup])
REFERENCES [dbo].[TBL006] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL006]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL008] FOREIGN KEY([DefaultStore])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL008]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL009] FOREIGN KEY([InstalmentBondGuide])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL009]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL009_2] FOREIGN KEY([RelatedBondType])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL009_2]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL009_3] FOREIGN KEY([FinancialTransactionsBond])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL009_3]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL009_4] FOREIGN KEY([PaymentsBondType])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL009_4]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL015] FOREIGN KEY([AgentsGroup])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL015]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL015_2] FOREIGN KEY([AgentsGroup2])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL015_2]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL015_3] FOREIGN KEY([AgentsGroup3])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL015_3]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL015_4] FOREIGN KEY([AgentsGroup4])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL015_4]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL015_5] FOREIGN KEY([AgentsGroup5])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL015_5]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL017] FOREIGN KEY([PriceType])
REFERENCES [dbo].[TBL017] ([ID])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL017]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL018] FOREIGN KEY([InvoiceMovementSide])
REFERENCES [dbo].[TBL018] ([ID])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL018]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL019] FOREIGN KEY([DefaultPayType])
REFERENCES [dbo].[TBL019] ([ID])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL019]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL020] FOREIGN KEY([MainBill])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL020]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL020_2] FOREIGN KEY([MainBill2])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL020_2]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL020_4] FOREIGN KEY([PostToBill])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL020_4]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL020_5] FOREIGN KEY([PostToBill2])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL020_5]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL020_6] FOREIGN KEY([RecipientBill])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL020_6]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL020_7] FOREIGN KEY([GenerateBill])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL020_7]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL026] FOREIGN KEY([OperationBill])
REFERENCES [dbo].[TBL026] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL026]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL033] FOREIGN KEY([SavePrintType])
REFERENCES [dbo].[TBL033] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL033]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL033_3] FOREIGN KEY([DefaultPostPrintType])
REFERENCES [dbo].[TBL033] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL033_3]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL033_4] FOREIGN KEY([OutPrintType])
REFERENCES [dbo].[TBL033] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL033_4]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL049] FOREIGN KEY([DefaultProject])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL049]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL050] FOREIGN KEY([DefaultBranch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL050]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL067_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL067_1]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL067_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL067_2]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL067_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL067_3]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL067_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL067_4]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL067_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL067_5]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL110] FOREIGN KEY([BarcodeType])
REFERENCES [dbo].[TBL110] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL110]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL020_TBL134] FOREIGN KEY([TaxMethod])
REFERENCES [dbo].[TBL134] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL020_TBL134]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [FK_TBL034_TBL020_2] FOREIGN KEY([PostPrintType])
REFERENCES [dbo].[TBL033] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [FK_TBL034_TBL020_2]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL001]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL004] FOREIGN KEY([PostToAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL004]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL004_2] FOREIGN KEY([CommissionAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL004_2]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL004_3] FOREIGN KEY([ProductsAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL004_3]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL004_4] FOREIGN KEY([CashAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL004_4]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL005]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL008] FOREIGN KEY([StoreGuide])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL008]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL008_2] FOREIGN KEY([ContraStore])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL008_2]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL013]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL016]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL019] FOREIGN KEY([PayMethod])
REFERENCES [dbo].[TBL019] ([ID])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL019]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL020] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL020]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL020_2] FOREIGN KEY([POSGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL020_2]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL025] FOREIGN KEY([CreditCard])
REFERENCES [dbo].[TBL025] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL025]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL027] FOREIGN KEY([MainBillGuide])
REFERENCES [dbo].[TBL027] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL027]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL042]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL049]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL050]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL085] FOREIGN KEY([RelatedArchive])
REFERENCES [dbo].[TBL085] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL085]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL107] FOREIGN KEY([CurrentStage])
REFERENCES [dbo].[TBL107] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL107]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [FK_TBL022_TBL134] FOREIGN KEY([TaxMethod])
REFERENCES [dbo].[TBL134] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [FK_TBL022_TBL134]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL004] FOREIGN KEY([ProductsAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL004]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL005]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL007] FOREIGN KEY([ProductGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL007]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL008] FOREIGN KEY([StoreID])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL008]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL016] FOREIGN KEY([RelatedAgent])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL016]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL022] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL022] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL022]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL022_2] FOREIGN KEY([SourceBill])
REFERENCES [dbo].[TBL022] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL022_2]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL081_1]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL081_2]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL081_3]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL081_4]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL081_5]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL107] FOREIGN KEY([CurrentStage])
REFERENCES [dbo].[TBL107] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL107]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [FK_TBL023_TBL128] FOREIGN KEY([RelatedUnit])
REFERENCES [dbo].[TBL128] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [FK_TBL023_TBL128]
GO
ALTER TABLE [dbo].[TBL024]  WITH CHECK ADD  CONSTRAINT [FK_TBL024_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL024] CHECK CONSTRAINT [FK_TBL024_TBL001]
GO
ALTER TABLE [dbo].[TBL024]  WITH CHECK ADD  CONSTRAINT [FK_TBL024_TBL004] FOREIGN KEY([AccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL024] CHECK CONSTRAINT [FK_TBL024_TBL004]
GO
ALTER TABLE [dbo].[TBL024]  WITH CHECK ADD  CONSTRAINT [FK_TBL024_TBL004_2] FOREIGN KEY([ContraAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL024] CHECK CONSTRAINT [FK_TBL024_TBL004_2]
GO
ALTER TABLE [dbo].[TBL024]  WITH CHECK ADD  CONSTRAINT [FK_TBL024_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL024] CHECK CONSTRAINT [FK_TBL024_TBL005]
GO
ALTER TABLE [dbo].[TBL024]  WITH CHECK ADD  CONSTRAINT [FK_TBL024_TBL022] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL022] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL024] CHECK CONSTRAINT [FK_TBL024_TBL022]
GO
ALTER TABLE [dbo].[TBL024]  WITH CHECK ADD  CONSTRAINT [FK_TBL024_TBL120] FOREIGN KEY([OperationBond])
REFERENCES [dbo].[TBL120] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL024] CHECK CONSTRAINT [FK_TBL024_TBL120]
GO
ALTER TABLE [dbo].[TBL025]  WITH CHECK ADD  CONSTRAINT [FK_TBL025_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL025] CHECK CONSTRAINT [FK_TBL025_TBL001]
GO
ALTER TABLE [dbo].[TBL025]  WITH CHECK ADD  CONSTRAINT [FK_TBL025_TBL004] FOREIGN KEY([AccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL025] CHECK CONSTRAINT [FK_TBL025_TBL004]
GO
ALTER TABLE [dbo].[TBL025]  WITH CHECK ADD  CONSTRAINT [FK_TBL025_TBL004_2] FOREIGN KEY([TaxAccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL025] CHECK CONSTRAINT [FK_TBL025_TBL004_2]
GO
ALTER TABLE [dbo].[TBL025]  WITH CHECK ADD  CONSTRAINT [FK_TBL025_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL025] CHECK CONSTRAINT [FK_TBL025_TBL005]
GO
ALTER TABLE [dbo].[TBL025]  WITH CHECK ADD  CONSTRAINT [FK_TBL025_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL025] CHECK CONSTRAINT [FK_TBL025_TBL049]
GO
ALTER TABLE [dbo].[TBL025]  WITH CHECK ADD  CONSTRAINT [FK_TBL025_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL025] CHECK CONSTRAINT [FK_TBL025_TBL050]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL001_1] FOREIGN KEY([DefaultCurrency1])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL001_1]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL001_2] FOREIGN KEY([DefaultCurrency2])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL001_2]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL004_1] FOREIGN KEY([AccountOFOption1])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL004_1]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL004_10] FOREIGN KEY([AccountOFOption10])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL004_10]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL004_2] FOREIGN KEY([AccountOFOption2])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL004_2]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL004_3] FOREIGN KEY([AccountOFOption3])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL004_3]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL004_4] FOREIGN KEY([AccountOFOption4])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL004_4]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL004_5] FOREIGN KEY([AccountOFOption5])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL004_5]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL004_6] FOREIGN KEY([AccountOFOption6])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL004_6]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL004_7] FOREIGN KEY([AccountOFOption7])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL004_7]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL004_8] FOREIGN KEY([AccountOFOption8])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL004_8]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL004_9] FOREIGN KEY([AccountOFOption9])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL004_9]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL005_1] FOREIGN KEY([DefaultCostCenter1])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL005_1]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL005_2] FOREIGN KEY([DefaultCostCenter2])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL005_2]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL008_1] FOREIGN KEY([DefaultStore1])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL008_1]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL008_2] FOREIGN KEY([DefaultStore2])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL008_2]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL009] FOREIGN KEY([BondTypeGuide1])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL009]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL016] FOREIGN KEY([DefaultAgent])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL016]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL016_2] FOREIGN KEY([DefaultAgent2])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL016_2]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL020_1] FOREIGN KEY([BuildBillTypeGuide1])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL020_1]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL020_2] FOREIGN KEY([BuildBillTypeGuide2])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL020_2]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL033] FOREIGN KEY([SavePrintType])
REFERENCES [dbo].[TBL033] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL033]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL049] FOREIGN KEY([DefaultProject1])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL049]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL049_2] FOREIGN KEY([DefaultProject2])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL049_2]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL050] FOREIGN KEY([DefaultBranch1])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL050]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL050_2] FOREIGN KEY([DefaultBranch2])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL050_2]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL067_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL067_1]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL067_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL067_2]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL067_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL067_3]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL067_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL067_4]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL067_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL067_5]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL078] FOREIGN KEY([DefaultManufacturerModel])
REFERENCES [dbo].[TBL078] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL078]
GO
ALTER TABLE [dbo].[TBL026]  WITH CHECK ADD  CONSTRAINT [FK_TBL026_TBL110] FOREIGN KEY([BarcodeType])
REFERENCES [dbo].[TBL110] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL026] CHECK CONSTRAINT [FK_TBL026_TBL110]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL001_1] FOREIGN KEY([CurrencyGuide1])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL001_1]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL001_2] FOREIGN KEY([CurrencyGuide2])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL001_2]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL004_1] FOREIGN KEY([AccountA1])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL004_1]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL004_2] FOREIGN KEY([AccountA2])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL004_2]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL004_3] FOREIGN KEY([AccountB1])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL004_3]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL004_4] FOREIGN KEY([AccountB2])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL004_4]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL005] FOREIGN KEY([CostCenter1])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL005]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL005_2] FOREIGN KEY([CostCenter2])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL005_2]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL008_1] FOREIGN KEY([StoreGuide1])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL008_1]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL008_2] FOREIGN KEY([StoreGuide2])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL008_2]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL013]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL016_1] FOREIGN KEY([AgentGuide1])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL016_1]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL016_2] FOREIGN KEY([AgentGuide2])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL016_2]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL019] FOREIGN KEY([PayMethod1])
REFERENCES [dbo].[TBL019] ([ID])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL019]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL022] FOREIGN KEY([RelatedBill1])
REFERENCES [dbo].[TBL022] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL022]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL022_2] FOREIGN KEY([RelatedBill2])
REFERENCES [dbo].[TBL022] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL022_2]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL022_3] FOREIGN KEY([MainBillGuide])
REFERENCES [dbo].[TBL022] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL022_3]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL026] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL026] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL026]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL027] FOREIGN KEY([MainTransaction])
REFERENCES [dbo].[TBL027] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL027]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL042]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL049] FOREIGN KEY([Project1])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL049]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL049_2] FOREIGN KEY([Project2])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL049_2]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL050] FOREIGN KEY([Branch1])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL050]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL050_2] FOREIGN KEY([Branch2])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL050_2]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL078] FOREIGN KEY([ManufacturerModel])
REFERENCES [dbo].[TBL078] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL078]
GO
ALTER TABLE [dbo].[TBL027]  WITH CHECK ADD  CONSTRAINT [FK_TBL027_TBL107] FOREIGN KEY([CurrentStage])
REFERENCES [dbo].[TBL107] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL027] CHECK CONSTRAINT [FK_TBL027_TBL107]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL004] FOREIGN KEY([ProductsAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL004]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL005]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL007] FOREIGN KEY([ItemGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL007]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL008] FOREIGN KEY([StoreID])
REFERENCES [dbo].[TBL008] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL008]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL016] FOREIGN KEY([RelatedAgent])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL016]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL022] FOREIGN KEY([SourceBill])
REFERENCES [dbo].[TBL022] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL022]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL027] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL027] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL027]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL027_2] FOREIGN KEY([SourceOperationBill])
REFERENCES [dbo].[TBL027] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL027_2]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL078] FOREIGN KEY([ManufacturerModel])
REFERENCES [dbo].[TBL078] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL078]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL081_1]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL081_2]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL081_3]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL081_4]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL081_5]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL107] FOREIGN KEY([CurrentStage])
REFERENCES [dbo].[TBL107] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL107]
GO
ALTER TABLE [dbo].[TBL028]  WITH CHECK ADD  CONSTRAINT [FK_TBL028_TBL128] FOREIGN KEY([RelatedUnit])
REFERENCES [dbo].[TBL128] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL028] CHECK CONSTRAINT [FK_TBL028_TBL128]
GO
ALTER TABLE [dbo].[TBL029]  WITH CHECK ADD  CONSTRAINT [FK_TBL029_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL029] CHECK CONSTRAINT [FK_TBL029_TBL001]
GO
ALTER TABLE [dbo].[TBL029]  WITH CHECK ADD  CONSTRAINT [FK_TBL029_TBL004] FOREIGN KEY([AccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL029] CHECK CONSTRAINT [FK_TBL029_TBL004]
GO
ALTER TABLE [dbo].[TBL029]  WITH CHECK ADD  CONSTRAINT [FK_TBL029_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL029] CHECK CONSTRAINT [FK_TBL029_TBL005]
GO
ALTER TABLE [dbo].[TBL029]  WITH CHECK ADD  CONSTRAINT [FK_TBL029_TBL027] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL027] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL029] CHECK CONSTRAINT [FK_TBL029_TBL027]
GO
ALTER TABLE [dbo].[TBL029]  WITH CHECK ADD  CONSTRAINT [FK_TBL029_TBL120] FOREIGN KEY([OperationBond])
REFERENCES [dbo].[TBL120] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL029] CHECK CONSTRAINT [FK_TBL029_TBL120]
GO
ALTER TABLE [dbo].[TBL030]  WITH CHECK ADD  CONSTRAINT [FK_TBL030_TBL030] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL030] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL030] CHECK CONSTRAINT [FK_TBL030_TBL030]
GO
ALTER TABLE [dbo].[TBL031]  WITH CHECK ADD  CONSTRAINT [FK_TBL031_TBL027] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL027] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL031] CHECK CONSTRAINT [FK_TBL031_TBL027]
GO
ALTER TABLE [dbo].[TBL032]  WITH CHECK ADD  CONSTRAINT [FK_TBL032_TBL027] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL027] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL032] CHECK CONSTRAINT [FK_TBL032_TBL027]
GO
ALTER TABLE [dbo].[TBL034]  WITH CHECK ADD  CONSTRAINT [FK_TBL034_TBL033] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL033] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL034] CHECK CONSTRAINT [FK_TBL034_TBL033]
GO
ALTER TABLE [dbo].[TBL035]  WITH CHECK ADD  CONSTRAINT [FK_TBL035_TBL034] FOREIGN KEY([MainID])
REFERENCES [dbo].[TBL034] ([ID])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL035] CHECK CONSTRAINT [FK_TBL035_TBL034]
GO
ALTER TABLE [dbo].[TBL037]  WITH CHECK ADD  CONSTRAINT [FK_TBL037_TBL021] FOREIGN KEY([MainID])
REFERENCES [dbo].[TBL021] ([ID])
GO
ALTER TABLE [dbo].[TBL037] CHECK CONSTRAINT [FK_TBL037_TBL021]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL001]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL004]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL004_2] FOREIGN KEY([ContraAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL004_2]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL004_3] FOREIGN KEY([TruncatedValueAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL004_3]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL004_4] FOREIGN KEY([TransferToAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL004_4]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL004_5] FOREIGN KEY([IntermediateAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL004_5]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL004_6] FOREIGN KEY([ReturnedAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL004_6]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL005]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL010] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL010] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL010]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL016]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL022] FOREIGN KEY([SourceBill])
REFERENCES [dbo].[TBL022] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL022]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL025] FOREIGN KEY([CreditCard])
REFERENCES [dbo].[TBL025] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL025]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL049]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL050]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL081_1]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL081_2]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL081_3]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL081_4]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [FK_TBL038_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [FK_TBL038_TBL081_5]
GO
ALTER TABLE [dbo].[TBL039]  WITH CHECK ADD  CONSTRAINT [FK_TBL039_TBL003] FOREIGN KEY([CardGuide])
REFERENCES [dbo].[TBL003] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL039] CHECK CONSTRAINT [FK_TBL039_TBL003]
GO
ALTER TABLE [dbo].[TBL039]  WITH CHECK ADD  CONSTRAINT [FK_TBL039_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL039] CHECK CONSTRAINT [FK_TBL039_TBL042]
GO
ALTER TABLE [dbo].[TBL042]  WITH CHECK ADD  CONSTRAINT [FK_TBL042_TBL004] FOREIGN KEY([CashAccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL042] CHECK CONSTRAINT [FK_TBL042_TBL004]
GO
ALTER TABLE [dbo].[TBL042]  WITH CHECK ADD  CONSTRAINT [FK_TBL042_TBL005] FOREIGN KEY([CostCenterID])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL042] CHECK CONSTRAINT [FK_TBL042_TBL005]
GO
ALTER TABLE [dbo].[TBL042]  WITH CHECK ADD  CONSTRAINT [FK_TBL042_TBL008] FOREIGN KEY([StoreID])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL042] CHECK CONSTRAINT [FK_TBL042_TBL008]
GO
ALTER TABLE [dbo].[TBL042]  WITH CHECK ADD  CONSTRAINT [FK_TBL042_TBL042] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL042] CHECK CONSTRAINT [FK_TBL042_TBL042]
GO
ALTER TABLE [dbo].[TBL042]  WITH CHECK ADD  CONSTRAINT [FK_TBL042_TBL049] FOREIGN KEY([ProjectID])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL042] CHECK CONSTRAINT [FK_TBL042_TBL049]
GO
ALTER TABLE [dbo].[TBL042]  WITH CHECK ADD  CONSTRAINT [FK_TBL042_TBL050] FOREIGN KEY([BranchID])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL042] CHECK CONSTRAINT [FK_TBL042_TBL050]
GO
ALTER TABLE [dbo].[TBL044]  WITH CHECK ADD  CONSTRAINT [FK_TBL044_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL044] CHECK CONSTRAINT [FK_TBL044_TBL042]
GO
ALTER TABLE [dbo].[TBL044]  WITH CHECK ADD  CONSTRAINT [FK_TBL044_TBL043] FOREIGN KEY([CardGuide])
REFERENCES [dbo].[TBL043] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL044] CHECK CONSTRAINT [FK_TBL044_TBL043]
GO
ALTER TABLE [dbo].[TBL045]  WITH CHECK ADD  CONSTRAINT [FK_TBL045_TBL004] FOREIGN KEY([DefaultAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL045] CHECK CONSTRAINT [FK_TBL045_TBL004]
GO
ALTER TABLE [dbo].[TBL045]  WITH CHECK ADD  CONSTRAINT [FK_TBL045_TBL005] FOREIGN KEY([DefaultCostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL045] CHECK CONSTRAINT [FK_TBL045_TBL005]
GO
ALTER TABLE [dbo].[TBL045]  WITH CHECK ADD  CONSTRAINT [FK_TBL045_TBL009] FOREIGN KEY([CardGuide])
REFERENCES [dbo].[TBL009] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL045] CHECK CONSTRAINT [FK_TBL045_TBL009]
GO
ALTER TABLE [dbo].[TBL045]  WITH CHECK ADD  CONSTRAINT [FK_TBL045_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL045] CHECK CONSTRAINT [FK_TBL045_TBL042]
GO
ALTER TABLE [dbo].[TBL045]  WITH CHECK ADD  CONSTRAINT [FK_TBL045_TBL049] FOREIGN KEY([DefaultProject])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL045] CHECK CONSTRAINT [FK_TBL045_TBL049]
GO
ALTER TABLE [dbo].[TBL045]  WITH CHECK ADD  CONSTRAINT [FK_TBL045_TBL050] FOREIGN KEY([DefaultBranch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL045] CHECK CONSTRAINT [FK_TBL045_TBL050]
GO
ALTER TABLE [dbo].[TBL047]  WITH CHECK ADD  CONSTRAINT [FK_TBL047_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL047] CHECK CONSTRAINT [FK_TBL047_TBL042]
GO
ALTER TABLE [dbo].[TBL047]  WITH CHECK ADD  CONSTRAINT [FK_TBL047_TBL046] FOREIGN KEY([CardGuide])
REFERENCES [dbo].[TBL046] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL047] CHECK CONSTRAINT [FK_TBL047_TBL046]
GO
ALTER TABLE [dbo].[TBL048]  WITH CHECK ADD  CONSTRAINT [FK_TBL048_TBL013] FOREIGN KEY([CardGuide])
REFERENCES [dbo].[TBL013] ([UsGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL048] CHECK CONSTRAINT [FK_TBL048_TBL013]
GO
ALTER TABLE [dbo].[TBL048]  WITH CHECK ADD  CONSTRAINT [FK_TBL048_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL048] CHECK CONSTRAINT [FK_TBL048_TBL042]
GO
ALTER TABLE [dbo].[TBL049]  WITH CHECK ADD  CONSTRAINT [FK_TBL049_TBL004] FOREIGN KEY([DefaultAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL049] CHECK CONSTRAINT [FK_TBL049_TBL004]
GO
ALTER TABLE [dbo].[TBL049]  WITH CHECK ADD  CONSTRAINT [FK_TBL049_TBL004_2] FOREIGN KEY([DefaultAccount2])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL049] CHECK CONSTRAINT [FK_TBL049_TBL004_2]
GO
ALTER TABLE [dbo].[TBL049]  WITH CHECK ADD  CONSTRAINT [FK_TBL049_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL049] CHECK CONSTRAINT [FK_TBL049_TBL013]
GO
ALTER TABLE [dbo].[TBL049]  WITH CHECK ADD  CONSTRAINT [FK_TBL049_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL049] CHECK CONSTRAINT [FK_TBL049_TBL042]
GO
ALTER TABLE [dbo].[TBL049]  WITH CHECK ADD  CONSTRAINT [FK_TBL049_TBL049] FOREIGN KEY([MainProject])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL049] CHECK CONSTRAINT [FK_TBL049_TBL049]
GO
ALTER TABLE [dbo].[TBL050]  WITH CHECK ADD  CONSTRAINT [FK_TBL050_TBL004] FOREIGN KEY([DefaultAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL050] CHECK CONSTRAINT [FK_TBL050_TBL004]
GO
ALTER TABLE [dbo].[TBL050]  WITH CHECK ADD  CONSTRAINT [FK_TBL050_TBL013] FOREIGN KEY([ByUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL050] CHECK CONSTRAINT [FK_TBL050_TBL013]
GO
ALTER TABLE [dbo].[TBL050]  WITH CHECK ADD  CONSTRAINT [FK_TBL050_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL050] CHECK CONSTRAINT [FK_TBL050_TBL042]
GO
ALTER TABLE [dbo].[TBL050]  WITH CHECK ADD  CONSTRAINT [FK_TBL050_TBL050] FOREIGN KEY([MainBronch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL050] CHECK CONSTRAINT [FK_TBL050_TBL050]
GO
ALTER TABLE [dbo].[TBL051]  WITH CHECK ADD  CONSTRAINT [FK_TBL051_TBL001] FOREIGN KEY([DefaultCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL051] CHECK CONSTRAINT [FK_TBL051_TBL001]
GO
ALTER TABLE [dbo].[TBL051]  WITH CHECK ADD  CONSTRAINT [FK_TBL051_TBL004] FOREIGN KEY([DefaultAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL051] CHECK CONSTRAINT [FK_TBL051_TBL004]
GO
ALTER TABLE [dbo].[TBL052]  WITH CHECK ADD  CONSTRAINT [FK_TBL052_TBL013] FOREIGN KEY([ForUser])
REFERENCES [dbo].[TBL013] ([UsGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL052] CHECK CONSTRAINT [FK_TBL052_TBL013]
GO
ALTER TABLE [dbo].[TBL052]  WITH CHECK ADD  CONSTRAINT [FK_TBL052_TBL051] FOREIGN KEY([FormKey])
REFERENCES [dbo].[TBL051] ([FrmName])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL052] CHECK CONSTRAINT [FK_TBL052_TBL051]
GO
ALTER TABLE [dbo].[TBL054]  WITH CHECK ADD  CONSTRAINT [FK_TBL054_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL054] CHECK CONSTRAINT [FK_TBL054_TBL001]
GO
ALTER TABLE [dbo].[TBL054]  WITH CHECK ADD  CONSTRAINT [FK_TBL054_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL054] CHECK CONSTRAINT [FK_TBL054_TBL004]
GO
ALTER TABLE [dbo].[TBL054]  WITH CHECK ADD  CONSTRAINT [FK_TBL054_TBL022] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL022] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL054] CHECK CONSTRAINT [FK_TBL054_TBL022]
GO
ALTER TABLE [dbo].[TBL054]  WITH CHECK ADD  CONSTRAINT [FK_TBL054_TBL025] FOREIGN KEY([CreditCardGuide])
REFERENCES [dbo].[TBL025] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL054] CHECK CONSTRAINT [FK_TBL054_TBL025]
GO
ALTER TABLE [dbo].[TBL055]  WITH CHECK ADD  CONSTRAINT [FK_TBL055_TBL006] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL006] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL055] CHECK CONSTRAINT [FK_TBL055_TBL006]
GO
ALTER TABLE [dbo].[TBL055]  WITH CHECK ADD  CONSTRAINT [FK_TBL055_TBL020] FOREIGN KEY([BillGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL055] CHECK CONSTRAINT [FK_TBL055_TBL020]
GO
ALTER TABLE [dbo].[TBL056]  WITH CHECK ADD  CONSTRAINT [FK_TBL056_TBL007] FOREIGN KEY([ItemGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL056] CHECK CONSTRAINT [FK_TBL056_TBL007]
GO
ALTER TABLE [dbo].[TBL056]  WITH CHECK ADD  CONSTRAINT [FK_TBL056_TBL020] FOREIGN KEY([BillGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL056] CHECK CONSTRAINT [FK_TBL056_TBL020]
GO
ALTER TABLE [dbo].[TBL057]  WITH CHECK ADD  CONSTRAINT [FK_TBL057_TBL020] FOREIGN KEY([BillGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL057] CHECK CONSTRAINT [FK_TBL057_TBL020]
GO
ALTER TABLE [dbo].[TBL057]  WITH CHECK ADD  CONSTRAINT [FK_TBL057_TBL033] FOREIGN KEY([TypeGuide])
REFERENCES [dbo].[TBL033] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL057] CHECK CONSTRAINT [FK_TBL057_TBL033]
GO
ALTER TABLE [dbo].[TBL060]  WITH CHECK ADD  CONSTRAINT [FK_TBL060_TBL022] FOREIGN KEY([BillGuide])
REFERENCES [dbo].[TBL022] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL060] CHECK CONSTRAINT [FK_TBL060_TBL022]
GO
ALTER TABLE [dbo].[TBL061]  WITH CHECK ADD  CONSTRAINT [FK_TBL061_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL061] CHECK CONSTRAINT [FK_TBL061_TBL042]
GO
ALTER TABLE [dbo].[TBL062]  WITH CHECK ADD  CONSTRAINT [FK_TBL062_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL062] CHECK CONSTRAINT [FK_TBL062_TBL042]
GO
ALTER TABLE [dbo].[TBL063]  WITH CHECK ADD  CONSTRAINT [FK_TBL063_TBL007] FOREIGN KEY([ItemGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL063] CHECK CONSTRAINT [FK_TBL063_TBL007]
GO
ALTER TABLE [dbo].[TBL063]  WITH CHECK ADD  CONSTRAINT [FK_TBL063_TBL007_2] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL063] CHECK CONSTRAINT [FK_TBL063_TBL007_2]
GO
ALTER TABLE [dbo].[TBL063]  WITH CHECK ADD  CONSTRAINT [FK_TBL063_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL063] CHECK CONSTRAINT [FK_TBL063_TBL081_1]
GO
ALTER TABLE [dbo].[TBL063]  WITH CHECK ADD  CONSTRAINT [FK_TBL063_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL063] CHECK CONSTRAINT [FK_TBL063_TBL081_2]
GO
ALTER TABLE [dbo].[TBL063]  WITH CHECK ADD  CONSTRAINT [FK_TBL063_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL063] CHECK CONSTRAINT [FK_TBL063_TBL081_3]
GO
ALTER TABLE [dbo].[TBL063]  WITH CHECK ADD  CONSTRAINT [FK_TBL063_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL063] CHECK CONSTRAINT [FK_TBL063_TBL081_4]
GO
ALTER TABLE [dbo].[TBL063]  WITH CHECK ADD  CONSTRAINT [FK_TBL063_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL063] CHECK CONSTRAINT [FK_TBL063_TBL081_5]
GO
ALTER TABLE [dbo].[TBL064]  WITH CHECK ADD  CONSTRAINT [FK_TBL064_TBL017_1] FOREIGN KEY([MinimumPrice])
REFERENCES [dbo].[TBL017] ([ID])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL064] CHECK CONSTRAINT [FK_TBL064_TBL017_1]
GO
ALTER TABLE [dbo].[TBL064]  WITH CHECK ADD  CONSTRAINT [FK_TBL064_TBL026] FOREIGN KEY([CardGuide])
REFERENCES [dbo].[TBL026] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL064] CHECK CONSTRAINT [FK_TBL064_TBL026]
GO
ALTER TABLE [dbo].[TBL064]  WITH CHECK ADD  CONSTRAINT [FK_TBL064_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL064] CHECK CONSTRAINT [FK_TBL064_TBL042]
GO
ALTER TABLE [dbo].[TBL065]  WITH CHECK ADD  CONSTRAINT [FK_TBL065_TBL017] FOREIGN KEY([PriceType])
REFERENCES [dbo].[TBL017] ([ID])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL065] CHECK CONSTRAINT [FK_TBL065_TBL017]
GO
ALTER TABLE [dbo].[TBL065]  WITH CHECK ADD  CONSTRAINT [FK_TBL065_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL065] CHECK CONSTRAINT [FK_TBL065_TBL042]
GO
ALTER TABLE [dbo].[TBL066]  WITH CHECK ADD  CONSTRAINT [FK_TBL066_TBL023] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL023] ([RowGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL066] CHECK CONSTRAINT [FK_TBL066_TBL023]
GO
ALTER TABLE [dbo].[TBL067]  WITH CHECK ADD  CONSTRAINT [FK_TBL067_TBL067] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL067] CHECK CONSTRAINT [FK_TBL067_TBL067]
GO
ALTER TABLE [dbo].[TBL068]  WITH CHECK ADD  CONSTRAINT [FK_TBL068_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL068] CHECK CONSTRAINT [FK_TBL068_TBL001]
GO
ALTER TABLE [dbo].[TBL068]  WITH CHECK ADD  CONSTRAINT [FK_TBL068_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL068] CHECK CONSTRAINT [FK_TBL068_TBL004]
GO
ALTER TABLE [dbo].[TBL068]  WITH CHECK ADD  CONSTRAINT [FK_TBL068_TBL004_2] FOREIGN KEY([ContraAccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL068] CHECK CONSTRAINT [FK_TBL068_TBL004_2]
GO
ALTER TABLE [dbo].[TBL068]  WITH CHECK ADD  CONSTRAINT [FK_TBL068_TBL038] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL038] ([RowGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL068] CHECK CONSTRAINT [FK_TBL068_TBL038]
GO
ALTER TABLE [dbo].[TBL069]  WITH CHECK ADD  CONSTRAINT [FK_TBL069_TBL006] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL006] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL069] CHECK CONSTRAINT [FK_TBL069_TBL006]
GO
ALTER TABLE [dbo].[TBL070]  WITH CHECK ADD  CONSTRAINT [FK_TBL070_TBL004] FOREIGN KEY([ProductsAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL070] CHECK CONSTRAINT [FK_TBL070_TBL004]
GO
ALTER TABLE [dbo].[TBL070]  WITH CHECK ADD  CONSTRAINT [FK_TBL070_TBL004_2] FOREIGN KEY([CashAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL070] CHECK CONSTRAINT [FK_TBL070_TBL004_2]
GO
ALTER TABLE [dbo].[TBL070]  WITH CHECK ADD  CONSTRAINT [FK_TBL070_TBL005] FOREIGN KEY([DefaultCostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL070] CHECK CONSTRAINT [FK_TBL070_TBL005]
GO
ALTER TABLE [dbo].[TBL070]  WITH CHECK ADD  CONSTRAINT [FK_TBL070_TBL008] FOREIGN KEY([StoreGuide])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL070] CHECK CONSTRAINT [FK_TBL070_TBL008]
GO
ALTER TABLE [dbo].[TBL070]  WITH CHECK ADD  CONSTRAINT [FK_TBL070_TBL017_1] FOREIGN KEY([MinimumPrice])
REFERENCES [dbo].[TBL017] ([ID])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL070] CHECK CONSTRAINT [FK_TBL070_TBL017_1]
GO
ALTER TABLE [dbo].[TBL070]  WITH CHECK ADD  CONSTRAINT [FK_TBL070_TBL020] FOREIGN KEY([CardGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL070] CHECK CONSTRAINT [FK_TBL070_TBL020]
GO
ALTER TABLE [dbo].[TBL070]  WITH CHECK ADD  CONSTRAINT [FK_TBL070_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL070] CHECK CONSTRAINT [FK_TBL070_TBL042]
GO
ALTER TABLE [dbo].[TBL070]  WITH CHECK ADD  CONSTRAINT [FK_TBL070_TBL049] FOREIGN KEY([DefaultProject])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL070] CHECK CONSTRAINT [FK_TBL070_TBL049]
GO
ALTER TABLE [dbo].[TBL070]  WITH CHECK ADD  CONSTRAINT [FK_TBL070_TBL050] FOREIGN KEY([DefaultBranch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL070] CHECK CONSTRAINT [FK_TBL070_TBL050]
GO
ALTER TABLE [dbo].[TBL071]  WITH CHECK ADD  CONSTRAINT [FK_TBL071_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL071] CHECK CONSTRAINT [FK_TBL071_TBL004]
GO
ALTER TABLE [dbo].[TBL071]  WITH CHECK ADD  CONSTRAINT [FK_TBL071_TBL015] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL015] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL071] CHECK CONSTRAINT [FK_TBL071_TBL015]
GO
ALTER TABLE [dbo].[TBL073]  WITH CHECK ADD  CONSTRAINT [FK_TBL073_TBL010] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL010] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL073] CHECK CONSTRAINT [FK_TBL073_TBL010]
GO
ALTER TABLE [dbo].[TBL073]  WITH CHECK ADD  CONSTRAINT [FK_TBL073_TBL072] FOREIGN KEY([TypeGuide])
REFERENCES [dbo].[TBL072] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL073] CHECK CONSTRAINT [FK_TBL073_TBL072]
GO
ALTER TABLE [dbo].[TBL073]  WITH CHECK ADD  CONSTRAINT [FK_TBL073_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL073] CHECK CONSTRAINT [FK_TBL073_TBL081_1]
GO
ALTER TABLE [dbo].[TBL073]  WITH CHECK ADD  CONSTRAINT [FK_TBL073_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL073] CHECK CONSTRAINT [FK_TBL073_TBL081_2]
GO
ALTER TABLE [dbo].[TBL073]  WITH CHECK ADD  CONSTRAINT [FK_TBL073_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL073] CHECK CONSTRAINT [FK_TBL073_TBL081_3]
GO
ALTER TABLE [dbo].[TBL073]  WITH CHECK ADD  CONSTRAINT [FK_TBL073_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL073] CHECK CONSTRAINT [FK_TBL073_TBL081_4]
GO
ALTER TABLE [dbo].[TBL073]  WITH CHECK ADD  CONSTRAINT [FK_TBL073_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL073] CHECK CONSTRAINT [FK_TBL073_TBL081_5]
GO
ALTER TABLE [dbo].[TBL074]  WITH CHECK ADD  CONSTRAINT [FK_TBL074_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL074] CHECK CONSTRAINT [FK_TBL074_TBL001]
GO
ALTER TABLE [dbo].[TBL074]  WITH CHECK ADD  CONSTRAINT [FK_TBL074_TBL005] FOREIGN KEY([CostCenterGuide])
REFERENCES [dbo].[TBL005] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL074] CHECK CONSTRAINT [FK_TBL074_TBL005]
GO
ALTER TABLE [dbo].[TBL074]  WITH CHECK ADD  CONSTRAINT [FK_TBL074_TBL007] FOREIGN KEY([ItemGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL074] CHECK CONSTRAINT [FK_TBL074_TBL007]
GO
ALTER TABLE [dbo].[TBL074]  WITH CHECK ADD  CONSTRAINT [FK_TBL074_TBL008] FOREIGN KEY([StoreGuide])
REFERENCES [dbo].[TBL008] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL074] CHECK CONSTRAINT [FK_TBL074_TBL008]
GO
ALTER TABLE [dbo].[TBL074]  WITH CHECK ADD  CONSTRAINT [FK_TBL074_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL074] CHECK CONSTRAINT [FK_TBL074_TBL016]
GO
ALTER TABLE [dbo].[TBL074]  WITH CHECK ADD  CONSTRAINT [FK_TBL074_TBL017] FOREIGN KEY([PriceType])
REFERENCES [dbo].[TBL017] ([ID])
GO
ALTER TABLE [dbo].[TBL074] CHECK CONSTRAINT [FK_TBL074_TBL017]
GO
ALTER TABLE [dbo].[TBL074]  WITH CHECK ADD  CONSTRAINT [FK_TBL074_TBL023] FOREIGN KEY([BillRowGuide])
REFERENCES [dbo].[TBL023] ([RowGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL074] CHECK CONSTRAINT [FK_TBL074_TBL023]
GO
ALTER TABLE [dbo].[TBL074]  WITH CHECK ADD  CONSTRAINT [FK_TBL074_TBL049] FOREIGN KEY([ProjectGuide])
REFERENCES [dbo].[TBL049] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL074] CHECK CONSTRAINT [FK_TBL074_TBL049]
GO
ALTER TABLE [dbo].[TBL074]  WITH CHECK ADD  CONSTRAINT [FK_TBL074_TBL050] FOREIGN KEY([BranchGuide])
REFERENCES [dbo].[TBL050] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL074] CHECK CONSTRAINT [FK_TBL074_TBL050]
GO
ALTER TABLE [dbo].[TBL076]  WITH CHECK ADD  CONSTRAINT [FK_TBL076_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL076] CHECK CONSTRAINT [FK_TBL076_TBL004]
GO
ALTER TABLE [dbo].[TBL076]  WITH CHECK ADD  CONSTRAINT [FK_TBL076_TBL007] FOREIGN KEY([ItemsGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL076] CHECK CONSTRAINT [FK_TBL076_TBL007]
GO
ALTER TABLE [dbo].[TBL076]  WITH CHECK ADD  CONSTRAINT [FK_TBL076_TBL075] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL075] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL076] CHECK CONSTRAINT [FK_TBL076_TBL075]
GO
ALTER TABLE [dbo].[TBL077]  WITH CHECK ADD  CONSTRAINT [FK_TBL077_TBL004] FOREIGN KEY([ItemsAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL077] CHECK CONSTRAINT [FK_TBL077_TBL004]
GO
ALTER TABLE [dbo].[TBL077]  WITH CHECK ADD  CONSTRAINT [FK_TBL077_TBL004_2] FOREIGN KEY([DiscountAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL077] CHECK CONSTRAINT [FK_TBL077_TBL004_2]
GO
ALTER TABLE [dbo].[TBL077]  WITH CHECK ADD  CONSTRAINT [FK_TBL077_TBL004_3] FOREIGN KEY([ExtraAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL077] CHECK CONSTRAINT [FK_TBL077_TBL004_3]
GO
ALTER TABLE [dbo].[TBL077]  WITH CHECK ADD  CONSTRAINT [FK_TBL077_TBL004_4] FOREIGN KEY([StoreAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL077] CHECK CONSTRAINT [FK_TBL077_TBL004_4]
GO
ALTER TABLE [dbo].[TBL077]  WITH CHECK ADD  CONSTRAINT [FK_TBL077_TBL004_5] FOREIGN KEY([CostAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL077] CHECK CONSTRAINT [FK_TBL077_TBL004_5]
GO
ALTER TABLE [dbo].[TBL077]  WITH CHECK ADD  CONSTRAINT [FK_TBL077_TBL006] FOREIGN KEY([GrouptID])
REFERENCES [dbo].[TBL006] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL077] CHECK CONSTRAINT [FK_TBL077_TBL006]
GO
ALTER TABLE [dbo].[TBL077]  WITH CHECK ADD  CONSTRAINT [FK_TBL077_TBL020] FOREIGN KEY([InvoiceID])
REFERENCES [dbo].[TBL020] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL077] CHECK CONSTRAINT [FK_TBL077_TBL020]
GO
ALTER TABLE [dbo].[TBL078]  WITH CHECK ADD  CONSTRAINT [FK_TBL078_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL078] CHECK CONSTRAINT [FK_TBL078_TBL001]
GO
ALTER TABLE [dbo].[TBL078]  WITH CHECK ADD  CONSTRAINT [FK_TBL078_TBL078] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL078] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL078] CHECK CONSTRAINT [FK_TBL078_TBL078]
GO
ALTER TABLE [dbo].[TBL079]  WITH CHECK ADD  CONSTRAINT [FK_TBL079_TBL007] FOREIGN KEY([ProductGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL079] CHECK CONSTRAINT [FK_TBL079_TBL007]
GO
ALTER TABLE [dbo].[TBL079]  WITH CHECK ADD  CONSTRAINT [FK_TBL079_TBL078] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL078] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL079] CHECK CONSTRAINT [FK_TBL079_TBL078]
GO
ALTER TABLE [dbo].[TBL079]  WITH CHECK ADD  CONSTRAINT [FK_TBL079_TBL078_2] FOREIGN KEY([RelatedMethod])
REFERENCES [dbo].[TBL078] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL079] CHECK CONSTRAINT [FK_TBL079_TBL078_2]
GO
ALTER TABLE [dbo].[TBL079]  WITH CHECK ADD  CONSTRAINT [FK_TBL079_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL079] CHECK CONSTRAINT [FK_TBL079_TBL081_1]
GO
ALTER TABLE [dbo].[TBL079]  WITH CHECK ADD  CONSTRAINT [FK_TBL079_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL079] CHECK CONSTRAINT [FK_TBL079_TBL081_2]
GO
ALTER TABLE [dbo].[TBL079]  WITH CHECK ADD  CONSTRAINT [FK_TBL079_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL079] CHECK CONSTRAINT [FK_TBL079_TBL081_3]
GO
ALTER TABLE [dbo].[TBL079]  WITH CHECK ADD  CONSTRAINT [FK_TBL079_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL079] CHECK CONSTRAINT [FK_TBL079_TBL081_4]
GO
ALTER TABLE [dbo].[TBL079]  WITH CHECK ADD  CONSTRAINT [FK_TBL079_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL079] CHECK CONSTRAINT [FK_TBL079_TBL081_5]
GO
ALTER TABLE [dbo].[TBL079]  WITH CHECK ADD  CONSTRAINT [FK_TBL079_TBL128] FOREIGN KEY([RelatedUnit])
REFERENCES [dbo].[TBL128] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL079] CHECK CONSTRAINT [FK_TBL079_TBL128]
GO
ALTER TABLE [dbo].[TBL080]  WITH CHECK ADD  CONSTRAINT [FK_TBL080_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL080] CHECK CONSTRAINT [FK_TBL080_TBL001]
GO
ALTER TABLE [dbo].[TBL080]  WITH CHECK ADD  CONSTRAINT [FK_TBL080_TBL004] FOREIGN KEY([AccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL080] CHECK CONSTRAINT [FK_TBL080_TBL004]
GO
ALTER TABLE [dbo].[TBL080]  WITH CHECK ADD  CONSTRAINT [FK_TBL080_TBL004_2] FOREIGN KEY([ContraAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL080] CHECK CONSTRAINT [FK_TBL080_TBL004_2]
GO
ALTER TABLE [dbo].[TBL080]  WITH CHECK ADD  CONSTRAINT [FK_TBL080_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL080] CHECK CONSTRAINT [FK_TBL080_TBL005]
GO
ALTER TABLE [dbo].[TBL080]  WITH CHECK ADD  CONSTRAINT [FK_TBL080_TBL078] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL078] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL080] CHECK CONSTRAINT [FK_TBL080_TBL078]
GO
ALTER TABLE [dbo].[TBL081]  WITH CHECK ADD  CONSTRAINT [FK_TBL081_TBL067] FOREIGN KEY([CategoryType])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL081] CHECK CONSTRAINT [FK_TBL081_TBL067]
GO
ALTER TABLE [dbo].[TBL081]  WITH CHECK ADD  CONSTRAINT [FK_TBL081_TBL081] FOREIGN KEY([MainCard])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL081] CHECK CONSTRAINT [FK_TBL081_TBL081]
GO
ALTER TABLE [dbo].[TBL082]  WITH CHECK ADD  CONSTRAINT [FK_TBL082_TBL016] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL082] CHECK CONSTRAINT [FK_TBL082_TBL016]
GO
ALTER TABLE [dbo].[TBL082]  WITH CHECK ADD  CONSTRAINT [FK_TBL082_TBL067] FOREIGN KEY([CategoryType])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL082] CHECK CONSTRAINT [FK_TBL082_TBL067]
GO
ALTER TABLE [dbo].[TBL082]  WITH CHECK ADD  CONSTRAINT [FK_TBL082_TBL081] FOREIGN KEY([Category])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL082] CHECK CONSTRAINT [FK_TBL082_TBL081]
GO
ALTER TABLE [dbo].[TBL083]  WITH CHECK ADD  CONSTRAINT [FK_TBL083_TBL005] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL005] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL083] CHECK CONSTRAINT [FK_TBL083_TBL005]
GO
ALTER TABLE [dbo].[TBL083]  WITH CHECK ADD  CONSTRAINT [FK_TBL083_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL083] CHECK CONSTRAINT [FK_TBL083_TBL081_1]
GO
ALTER TABLE [dbo].[TBL083]  WITH CHECK ADD  CONSTRAINT [FK_TBL083_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL083] CHECK CONSTRAINT [FK_TBL083_TBL081_2]
GO
ALTER TABLE [dbo].[TBL083]  WITH CHECK ADD  CONSTRAINT [FK_TBL083_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL083] CHECK CONSTRAINT [FK_TBL083_TBL081_3]
GO
ALTER TABLE [dbo].[TBL083]  WITH CHECK ADD  CONSTRAINT [FK_TBL083_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL083] CHECK CONSTRAINT [FK_TBL083_TBL081_4]
GO
ALTER TABLE [dbo].[TBL083]  WITH CHECK ADD  CONSTRAINT [FK_TBL083_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL083] CHECK CONSTRAINT [FK_TBL083_TBL081_5]
GO
ALTER TABLE [dbo].[TBL084]  WITH CHECK ADD  CONSTRAINT [FK_TBL084_TBL084] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL084] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL084] CHECK CONSTRAINT [FK_TBL084_TBL084]
GO
ALTER TABLE [dbo].[TBL085]  WITH CHECK ADD  CONSTRAINT [FK_TBL085_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL085] CHECK CONSTRAINT [FK_TBL085_TBL005]
GO
ALTER TABLE [dbo].[TBL085]  WITH CHECK ADD  CONSTRAINT [FK_TBL085_TBL005_2] FOREIGN KEY([RelatedCostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL085] CHECK CONSTRAINT [FK_TBL085_TBL005_2]
GO
ALTER TABLE [dbo].[TBL085]  WITH CHECK ADD  CONSTRAINT [FK_TBL085_TBL008] FOREIGN KEY([Store])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL085] CHECK CONSTRAINT [FK_TBL085_TBL008]
GO
ALTER TABLE [dbo].[TBL085]  WITH CHECK ADD  CONSTRAINT [FK_TBL085_TBL013] FOREIGN KEY([UserGuide])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL085] CHECK CONSTRAINT [FK_TBL085_TBL013]
GO
ALTER TABLE [dbo].[TBL085]  WITH CHECK ADD  CONSTRAINT [FK_TBL085_TBL042] FOREIGN KEY([ByGroup])
REFERENCES [dbo].[TBL042] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL085] CHECK CONSTRAINT [FK_TBL085_TBL042]
GO
ALTER TABLE [dbo].[TBL085]  WITH CHECK ADD  CONSTRAINT [FK_TBL085_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL085] CHECK CONSTRAINT [FK_TBL085_TBL049]
GO
ALTER TABLE [dbo].[TBL085]  WITH CHECK ADD  CONSTRAINT [FK_TBL085_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL085] CHECK CONSTRAINT [FK_TBL085_TBL050]
GO
ALTER TABLE [dbo].[TBL085]  WITH CHECK ADD  CONSTRAINT [FK_TBL085_TBL084] FOREIGN KEY([TypeGuide])
REFERENCES [dbo].[TBL084] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL085] CHECK CONSTRAINT [FK_TBL085_TBL084]
GO
ALTER TABLE [dbo].[TBL085]  WITH CHECK ADD  CONSTRAINT [FK_TBL085_TBL085] FOREIGN KEY([RelatedArchive])
REFERENCES [dbo].[TBL085] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL085] CHECK CONSTRAINT [FK_TBL085_TBL085]
GO
ALTER TABLE [dbo].[TBL085]  WITH CHECK ADD  CONSTRAINT [FK_TBL085_TBL085_2] FOREIGN KEY([RelatedArchive2])
REFERENCES [dbo].[TBL085] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL085] CHECK CONSTRAINT [FK_TBL085_TBL085_2]
GO
ALTER TABLE [dbo].[TBL086]  WITH CHECK ADD  CONSTRAINT [FK_TBL086_TBL004] FOREIGN KEY([AccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL086] CHECK CONSTRAINT [FK_TBL086_TBL004]
GO
ALTER TABLE [dbo].[TBL086]  WITH CHECK ADD  CONSTRAINT [FK_TBL086_TBL004_2] FOREIGN KEY([ContraAccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL086] CHECK CONSTRAINT [FK_TBL086_TBL004_2]
GO
ALTER TABLE [dbo].[TBL086]  WITH CHECK ADD  CONSTRAINT [FK_TBL086_TBL004_3] FOREIGN KEY([AccountID2])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL086] CHECK CONSTRAINT [FK_TBL086_TBL004_3]
GO
ALTER TABLE [dbo].[TBL086]  WITH CHECK ADD  CONSTRAINT [FK_TBL086_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL086] CHECK CONSTRAINT [FK_TBL086_TBL005]
GO
ALTER TABLE [dbo].[TBL086]  WITH CHECK ADD  CONSTRAINT [FK_TBL086_TBL015] FOREIGN KEY([AgentGroupID])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL086] CHECK CONSTRAINT [FK_TBL086_TBL015]
GO
ALTER TABLE [dbo].[TBL086]  WITH CHECK ADD  CONSTRAINT [FK_TBL086_TBL015_2] FOREIGN KEY([AgentGroupID2])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL086] CHECK CONSTRAINT [FK_TBL086_TBL015_2]
GO
ALTER TABLE [dbo].[TBL086]  WITH CHECK ADD  CONSTRAINT [FK_TBL086_TBL026] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL026] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL086] CHECK CONSTRAINT [FK_TBL086_TBL026]
GO
ALTER TABLE [dbo].[TBL087]  WITH CHECK ADD  CONSTRAINT [FK_TBL087_TBL001] FOREIGN KEY([CurrencyID])
REFERENCES [dbo].[TBL001] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL087] CHECK CONSTRAINT [FK_TBL087_TBL001]
GO
ALTER TABLE [dbo].[TBL087]  WITH CHECK ADD  CONSTRAINT [FK_TBL087_TBL004] FOREIGN KEY([AccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL087] CHECK CONSTRAINT [FK_TBL087_TBL004]
GO
ALTER TABLE [dbo].[TBL088]  WITH CHECK ADD  CONSTRAINT [FK_TBL088_TBL001] FOREIGN KEY([CurrencyID])
REFERENCES [dbo].[TBL001] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL088] CHECK CONSTRAINT [FK_TBL088_TBL001]
GO
ALTER TABLE [dbo].[TBL089]  WITH CHECK ADD  CONSTRAINT [FK_TBL089_TBL005] FOREIGN KEY([CostCenter01])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL089] CHECK CONSTRAINT [FK_TBL089_TBL005]
GO
ALTER TABLE [dbo].[TBL089]  WITH CHECK ADD  CONSTRAINT [FK_TBL089_TBL013] FOREIGN KEY([UserGuide])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL089] CHECK CONSTRAINT [FK_TBL089_TBL013]
GO
ALTER TABLE [dbo].[TBL089]  WITH CHECK ADD  CONSTRAINT [FK_TBL089_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL089] CHECK CONSTRAINT [FK_TBL089_TBL016]
GO
ALTER TABLE [dbo].[TBL090]  WITH CHECK ADD  CONSTRAINT [FK_TBL090_TBL013] FOREIGN KEY([UserGuide])
REFERENCES [dbo].[TBL013] ([UsGuide])
GO
ALTER TABLE [dbo].[TBL090] CHECK CONSTRAINT [FK_TBL090_TBL013]
GO
ALTER TABLE [dbo].[TBL090]  WITH CHECK ADD  CONSTRAINT [FK_TBL090_TBL089] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL089] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL090] CHECK CONSTRAINT [FK_TBL090_TBL089]
GO
ALTER TABLE [dbo].[TBL092]  WITH CHECK ADD  CONSTRAINT [FK_TBL092_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL092] CHECK CONSTRAINT [FK_TBL092_TBL001]
GO
ALTER TABLE [dbo].[TBL092]  WITH CHECK ADD  CONSTRAINT [FK_TBL092_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL092] CHECK CONSTRAINT [FK_TBL092_TBL004]
GO
ALTER TABLE [dbo].[TBL092]  WITH CHECK ADD  CONSTRAINT [FK_TBL092_TBL005] FOREIGN KEY([JobGuide])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL092] CHECK CONSTRAINT [FK_TBL092_TBL005]
GO
ALTER TABLE [dbo].[TBL092]  WITH CHECK ADD  CONSTRAINT [FK_TBL092_TBL014] FOREIGN KEY([RelatedAdministration])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL092] CHECK CONSTRAINT [FK_TBL092_TBL014]
GO
ALTER TABLE [dbo].[TBL092]  WITH CHECK ADD  CONSTRAINT [FK_TBL092_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL092] CHECK CONSTRAINT [FK_TBL092_TBL016]
GO
ALTER TABLE [dbo].[TBL092]  WITH CHECK ADD  CONSTRAINT [FK_TBL092_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL092] CHECK CONSTRAINT [FK_TBL092_TBL081_1]
GO
ALTER TABLE [dbo].[TBL092]  WITH CHECK ADD  CONSTRAINT [FK_TBL092_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL092] CHECK CONSTRAINT [FK_TBL092_TBL081_2]
GO
ALTER TABLE [dbo].[TBL092]  WITH CHECK ADD  CONSTRAINT [FK_TBL092_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL092] CHECK CONSTRAINT [FK_TBL092_TBL081_3]
GO
ALTER TABLE [dbo].[TBL092]  WITH CHECK ADD  CONSTRAINT [FK_TBL092_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL092] CHECK CONSTRAINT [FK_TBL092_TBL081_4]
GO
ALTER TABLE [dbo].[TBL092]  WITH CHECK ADD  CONSTRAINT [FK_TBL092_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL092] CHECK CONSTRAINT [FK_TBL092_TBL081_5]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL005] FOREIGN KEY([JobGuide])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL005]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL007] FOREIGN KEY([ItemGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL007]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL007_2] FOREIGN KEY([Item01])
REFERENCES [dbo].[TBL007] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL007_2]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL008] FOREIGN KEY([StoreGuide])
REFERENCES [dbo].[TBL008] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL008]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL016]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL016_2] FOREIGN KEY([AgentGuide2])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL016_2]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL049] FOREIGN KEY([ProjectGuide])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL049]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL050] FOREIGN KEY([BranchGuide])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL050]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL081_1]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL081_2]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL081_3]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL081_4]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL081_5]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL085] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL085] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL085]
GO
ALTER TABLE [dbo].[TBL093]  WITH CHECK ADD  CONSTRAINT [FK_TBL093_TBL085_2] FOREIGN KEY([RelatedArchive])
REFERENCES [dbo].[TBL085] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL093] CHECK CONSTRAINT [FK_TBL093_TBL085_2]
GO
ALTER TABLE [dbo].[TBL095]  WITH CHECK ADD  CONSTRAINT [FK_TBL095_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL095] CHECK CONSTRAINT [FK_TBL095_TBL004]
GO
ALTER TABLE [dbo].[TBL095]  WITH CHECK ADD  CONSTRAINT [FK_TBL095_TBL009] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL009] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL095] CHECK CONSTRAINT [FK_TBL095_TBL009]
GO
ALTER TABLE [dbo].[TBL096]  WITH CHECK ADD  CONSTRAINT [FK_TBL096_TBL014] FOREIGN KEY([DefaultShift])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL096] CHECK CONSTRAINT [FK_TBL096_TBL014]
GO
ALTER TABLE [dbo].[TBL096]  WITH CHECK ADD  CONSTRAINT [FK_TBL096_TBL067] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL096] CHECK CONSTRAINT [FK_TBL096_TBL067]
GO
ALTER TABLE [dbo].[TBL096]  WITH CHECK ADD  CONSTRAINT [FK_TBL096_TBL067_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL096] CHECK CONSTRAINT [FK_TBL096_TBL067_2]
GO
ALTER TABLE [dbo].[TBL096]  WITH CHECK ADD  CONSTRAINT [FK_TBL096_TBL067_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL096] CHECK CONSTRAINT [FK_TBL096_TBL067_3]
GO
ALTER TABLE [dbo].[TBL096]  WITH CHECK ADD  CONSTRAINT [FK_TBL096_TBL067_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL096] CHECK CONSTRAINT [FK_TBL096_TBL067_4]
GO
ALTER TABLE [dbo].[TBL096]  WITH CHECK ADD  CONSTRAINT [FK_TBL096_TBL067_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL096] CHECK CONSTRAINT [FK_TBL096_TBL067_5]
GO
ALTER TABLE [dbo].[TBL096]  WITH CHECK ADD  CONSTRAINT [FK_TBL096_TBL067_6] FOREIGN KEY([Category06])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL096] CHECK CONSTRAINT [FK_TBL096_TBL067_6]
GO
ALTER TABLE [dbo].[TBL096]  WITH CHECK ADD  CONSTRAINT [FK_TBL096_TBL067_7] FOREIGN KEY([Category07])
REFERENCES [dbo].[TBL067] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL096] CHECK CONSTRAINT [FK_TBL096_TBL067_7]
GO
ALTER TABLE [dbo].[TBL096]  WITH CHECK ADD  CONSTRAINT [FK_TBL096_TBL096] FOREIGN KEY([MainAttendance])
REFERENCES [dbo].[TBL096] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL096] CHECK CONSTRAINT [FK_TBL096_TBL096]
GO
ALTER TABLE [dbo].[TBL097]  WITH CHECK ADD  CONSTRAINT [FK_TBL097_TBL015] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL015] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL097] CHECK CONSTRAINT [FK_TBL097_TBL015]
GO
ALTER TABLE [dbo].[TBL097]  WITH CHECK ADD  CONSTRAINT [FK_TBL097_TBL096] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL096] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL097] CHECK CONSTRAINT [FK_TBL097_TBL096]
GO
ALTER TABLE [dbo].[TBL098]  WITH CHECK ADD  CONSTRAINT [FK_TBL098_TBL014] FOREIGN KEY([ShiftGuide])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL098] CHECK CONSTRAINT [FK_TBL098_TBL014]
GO
ALTER TABLE [dbo].[TBL098]  WITH CHECK ADD  CONSTRAINT [FK_TBL098_TBL081] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL098] CHECK CONSTRAINT [FK_TBL098_TBL081]
GO
ALTER TABLE [dbo].[TBL098]  WITH CHECK ADD  CONSTRAINT [FK_TBL098_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL098] CHECK CONSTRAINT [FK_TBL098_TBL081_2]
GO
ALTER TABLE [dbo].[TBL098]  WITH CHECK ADD  CONSTRAINT [FK_TBL098_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL098] CHECK CONSTRAINT [FK_TBL098_TBL081_3]
GO
ALTER TABLE [dbo].[TBL098]  WITH CHECK ADD  CONSTRAINT [FK_TBL098_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL098] CHECK CONSTRAINT [FK_TBL098_TBL081_4]
GO
ALTER TABLE [dbo].[TBL098]  WITH CHECK ADD  CONSTRAINT [FK_TBL098_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL098] CHECK CONSTRAINT [FK_TBL098_TBL081_5]
GO
ALTER TABLE [dbo].[TBL098]  WITH CHECK ADD  CONSTRAINT [FK_TBL098_TBL096] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL096] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL098] CHECK CONSTRAINT [FK_TBL098_TBL096]
GO
ALTER TABLE [dbo].[TBL098]  WITH CHECK ADD  CONSTRAINT [FK_TBL098_TBL136] FOREIGN KEY([AttendanceGuide])
REFERENCES [dbo].[TBL136] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL098] CHECK CONSTRAINT [FK_TBL098_TBL136]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL005]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL014] FOREIGN KEY([ShiftGuide])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL014]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL014_2] FOREIGN KEY([DetailsGuide])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL014_2]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL016]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL081_1]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL081_2]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL081_3]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL081_4]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL081_5]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL081_6] FOREIGN KEY([Category06])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL081_6]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL081_7] FOREIGN KEY([Category07])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL081_7]
GO
ALTER TABLE [dbo].[TBL099]  WITH CHECK ADD  CONSTRAINT [FK_TBL099_TBL098] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL098] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL099] CHECK CONSTRAINT [FK_TBL099_TBL098]
GO
ALTER TABLE [dbo].[TBL100]  WITH CHECK ADD  CONSTRAINT [FK_TBL100_TBL006] FOREIGN KEY([ItemGroupGuide])
REFERENCES [dbo].[TBL006] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL100] CHECK CONSTRAINT [FK_TBL100_TBL006]
GO
ALTER TABLE [dbo].[TBL100]  WITH CHECK ADD  CONSTRAINT [FK_TBL100_TBL006_2] FOREIGN KEY([MainGroup])
REFERENCES [dbo].[TBL006] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL100] CHECK CONSTRAINT [FK_TBL100_TBL006_2]
GO
ALTER TABLE [dbo].[TBL100]  WITH CHECK ADD  CONSTRAINT [FK_TBL100_TBL007] FOREIGN KEY([ItemGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL100] CHECK CONSTRAINT [FK_TBL100_TBL007]
GO
ALTER TABLE [dbo].[TBL100]  WITH CHECK ADD  CONSTRAINT [FK_TBL100_TBL026] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL026] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL100] CHECK CONSTRAINT [FK_TBL100_TBL026]
GO
ALTER TABLE [dbo].[TBL101]  WITH CHECK ADD  CONSTRAINT [FK_TBL101_TBL013] FOREIGN KEY([UserGuide])
REFERENCES [dbo].[TBL013] ([UsGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL101] CHECK CONSTRAINT [FK_TBL101_TBL013]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL005]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL005_2] FOREIGN KEY([AgentCostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL005_2]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL006] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL006] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL006]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL007] FOREIGN KEY([ItemGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL007]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL015_2] FOREIGN KEY([AgentGroup])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL015_2]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL016]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL020] FOREIGN KEY([BillType])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL020]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL049]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL049_2] FOREIGN KEY([AgentProject])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL049_2]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL050]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL050_2] FOREIGN KEY([AgentBranch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL050_2]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL081] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL081]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL081_11] FOREIGN KEY([AgentCategory01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL081_11]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL081_12] FOREIGN KEY([AgentCategory02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL081_12]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL081_13] FOREIGN KEY([AgentCategory03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL081_13]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL081_14] FOREIGN KEY([AgentCategory04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL081_14]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL081_15] FOREIGN KEY([AgentCategory05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL081_15]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL081_2]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL081_3]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL081_4]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL081_5]
GO
ALTER TABLE [dbo].[TBL103]  WITH CHECK ADD  CONSTRAINT [FK_TBL103_TBL128] FOREIGN KEY([RelatedUnit])
REFERENCES [dbo].[TBL128] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL103] CHECK CONSTRAINT [FK_TBL103_TBL128]
GO
ALTER TABLE [dbo].[TBL104]  WITH CHECK ADD  CONSTRAINT [FK_TBL104_TBL081] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL081] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL104] CHECK CONSTRAINT [FK_TBL104_TBL081]
GO
ALTER TABLE [dbo].[TBL105]  WITH CHECK ADD  CONSTRAINT [FK_TBL105_TBL007] FOREIGN KEY([ItemGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL105] CHECK CONSTRAINT [FK_TBL105_TBL007]
GO
ALTER TABLE [dbo].[TBL105]  WITH CHECK ADD  CONSTRAINT [FK_TBL105_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL105] CHECK CONSTRAINT [FK_TBL105_TBL016]
GO
ALTER TABLE [dbo].[TBL106]  WITH CHECK ADD  CONSTRAINT [FK_TBL106_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL106] CHECK CONSTRAINT [FK_TBL106_TBL016]
GO
ALTER TABLE [dbo].[TBL107]  WITH CHECK ADD  CONSTRAINT [FK_TBL107_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL107] CHECK CONSTRAINT [FK_TBL107_TBL005]
GO
ALTER TABLE [dbo].[TBL107]  WITH CHECK ADD  CONSTRAINT [FK_TBL107_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL107] CHECK CONSTRAINT [FK_TBL107_TBL049]
GO
ALTER TABLE [dbo].[TBL107]  WITH CHECK ADD  CONSTRAINT [FK_TBL107_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL107] CHECK CONSTRAINT [FK_TBL107_TBL050]
GO
ALTER TABLE [dbo].[TBL107]  WITH CHECK ADD  CONSTRAINT [FK_TBL107_TBL081] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL107] CHECK CONSTRAINT [FK_TBL107_TBL081]
GO
ALTER TABLE [dbo].[TBL107]  WITH CHECK ADD  CONSTRAINT [FK_TBL107_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL107] CHECK CONSTRAINT [FK_TBL107_TBL081_2]
GO
ALTER TABLE [dbo].[TBL108]  WITH CHECK ADD  CONSTRAINT [FK_TBL108_TBL084] FOREIGN KEY([ArchiveType])
REFERENCES [dbo].[TBL084] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL108] CHECK CONSTRAINT [FK_TBL108_TBL084]
GO
ALTER TABLE [dbo].[TBL109]  WITH CHECK ADD  CONSTRAINT [FK_TBL109_TBL023] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL023] ([RowGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL109] CHECK CONSTRAINT [FK_TBL109_TBL023]
GO
ALTER TABLE [dbo].[TBL111]  WITH CHECK ADD  CONSTRAINT [FK_TBL111_TBL110] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL110] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL111] CHECK CONSTRAINT [FK_TBL111_TBL110]
GO
ALTER TABLE [dbo].[TBL113]  WITH CHECK ADD  CONSTRAINT [FK_TBL113_TBL112] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL112] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL113] CHECK CONSTRAINT [FK_TBL113_TBL112]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL001]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL004]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL005]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL014] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL014] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL014]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL014_3] FOREIGN KEY([RelatedCard])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL014_3]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL016] FOREIGN KEY([RelatedAgent])
REFERENCES [dbo].[TBL016] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL016]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL081_1]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL081_2]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL081_3]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL081_4]
GO
ALTER TABLE [dbo].[TBL114]  WITH CHECK ADD  CONSTRAINT [FK_TBL114_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL114] CHECK CONSTRAINT [FK_TBL114_TBL081_5]
GO
ALTER TABLE [dbo].[TBL116]  WITH CHECK ADD  CONSTRAINT [FK_TBL116_TBL014] FOREIGN KEY([DetailsGuide])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL116] CHECK CONSTRAINT [FK_TBL116_TBL014]
GO
ALTER TABLE [dbo].[TBL116]  WITH CHECK ADD  CONSTRAINT [FK_TBL116_TBL099] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL099] ([RecordGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL116] CHECK CONSTRAINT [FK_TBL116_TBL099]
GO
ALTER TABLE [dbo].[TBL117]  WITH CHECK ADD  CONSTRAINT [FK_TBL117_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL117] CHECK CONSTRAINT [FK_TBL117_TBL005]
GO
ALTER TABLE [dbo].[TBL117]  WITH CHECK ADD  CONSTRAINT [FK_TBL117_TBL015] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL015] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL117] CHECK CONSTRAINT [FK_TBL117_TBL015]
GO
ALTER TABLE [dbo].[TBL118]  WITH CHECK ADD  CONSTRAINT [FK_TBL118_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL118] CHECK CONSTRAINT [FK_TBL118_TBL004]
GO
ALTER TABLE [dbo].[TBL118]  WITH CHECK ADD  CONSTRAINT [FK_TBL118_TBL020] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL118] CHECK CONSTRAINT [FK_TBL118_TBL020]
GO
ALTER TABLE [dbo].[TBL119]  WITH CHECK ADD  CONSTRAINT [FK_TBL119_TBL001] FOREIGN KEY([DefaultCurrency])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL119] CHECK CONSTRAINT [FK_TBL119_TBL001]
GO
ALTER TABLE [dbo].[TBL119]  WITH CHECK ADD  CONSTRAINT [FK_TBL119_TBL004] FOREIGN KEY([DefaultAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL119] CHECK CONSTRAINT [FK_TBL119_TBL004]
GO
ALTER TABLE [dbo].[TBL119]  WITH CHECK ADD  CONSTRAINT [FK_TBL119_TBL009] FOREIGN KEY([BondGuide])
REFERENCES [dbo].[TBL009] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL119] CHECK CONSTRAINT [FK_TBL119_TBL009]
GO
ALTER TABLE [dbo].[TBL119]  WITH CHECK ADD  CONSTRAINT [FK_TBL119_TBL020] FOREIGN KEY([BillGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL119] CHECK CONSTRAINT [FK_TBL119_TBL020]
GO
ALTER TABLE [dbo].[TBL120]  WITH CHECK ADD  CONSTRAINT [FK_TBL120_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL120] CHECK CONSTRAINT [FK_TBL120_TBL001]
GO
ALTER TABLE [dbo].[TBL120]  WITH CHECK ADD  CONSTRAINT [FK_TBL120_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL120] CHECK CONSTRAINT [FK_TBL120_TBL004]
GO
ALTER TABLE [dbo].[TBL120]  WITH CHECK ADD  CONSTRAINT [FK_TBL120_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL120] CHECK CONSTRAINT [FK_TBL120_TBL005]
GO
ALTER TABLE [dbo].[TBL120]  WITH CHECK ADD  CONSTRAINT [FK_TBL120_TBL014] FOREIGN KEY([MainAdmin])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL120] CHECK CONSTRAINT [FK_TBL120_TBL014]
GO
ALTER TABLE [dbo].[TBL120]  WITH CHECK ADD  CONSTRAINT [FK_TBL120_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL120] CHECK CONSTRAINT [FK_TBL120_TBL016]
GO
ALTER TABLE [dbo].[TBL120]  WITH CHECK ADD  CONSTRAINT [FK_TBL120_TBL022] FOREIGN KEY([MainBill])
REFERENCES [dbo].[TBL022] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL120] CHECK CONSTRAINT [FK_TBL120_TBL022]
GO
ALTER TABLE [dbo].[TBL120]  WITH CHECK ADD  CONSTRAINT [FK_TBL120_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL120] CHECK CONSTRAINT [FK_TBL120_TBL049]
GO
ALTER TABLE [dbo].[TBL120]  WITH CHECK ADD  CONSTRAINT [FK_TBL120_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL120] CHECK CONSTRAINT [FK_TBL120_TBL050]
GO
ALTER TABLE [dbo].[TBL120]  WITH CHECK ADD  CONSTRAINT [FK_TBL120_TBL119] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL119] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL120] CHECK CONSTRAINT [FK_TBL120_TBL119]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL001]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL004]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL004_2] FOREIGN KEY([ContraAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL004_2]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL005]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL007] FOREIGN KEY([ProductGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL007]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL014] FOREIGN KEY([RelatedAdministration])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL014]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL016]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL022] FOREIGN KEY([BillGuide])
REFERENCES [dbo].[TBL022] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL022]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL027] FOREIGN KEY([OperationBill])
REFERENCES [dbo].[TBL027] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL027]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL049] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL049]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL050] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL050]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL081_1]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL081_2]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL081_3]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL081_4]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL081_5]
GO
ALTER TABLE [dbo].[TBL121]  WITH CHECK ADD  CONSTRAINT [FK_TBL121_TBL120] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL120] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL121] CHECK CONSTRAINT [FK_TBL121_TBL120]
GO
ALTER TABLE [dbo].[TBL122]  WITH CHECK ADD  CONSTRAINT [FK_TBL122_TBL122] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL122] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL122] CHECK CONSTRAINT [FK_TBL122_TBL122]
GO
ALTER TABLE [dbo].[TBL123]  WITH CHECK ADD  CONSTRAINT [FK_TBL123_TBL004] FOREIGN KEY([AccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL123] CHECK CONSTRAINT [FK_TBL123_TBL004]
GO
ALTER TABLE [dbo].[TBL123]  WITH CHECK ADD  CONSTRAINT [FK_TBL123_TBL005] FOREIGN KEY([CostCenterID])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL123] CHECK CONSTRAINT [FK_TBL123_TBL005]
GO
ALTER TABLE [dbo].[TBL123]  WITH CHECK ADD  CONSTRAINT [FK_TBL123_TBL008] FOREIGN KEY([StoreID])
REFERENCES [dbo].[TBL008] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL123] CHECK CONSTRAINT [FK_TBL123_TBL008]
GO
ALTER TABLE [dbo].[TBL123]  WITH CHECK ADD  CONSTRAINT [FK_TBL123_TBL049] FOREIGN KEY([ProjectID])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL123] CHECK CONSTRAINT [FK_TBL123_TBL049]
GO
ALTER TABLE [dbo].[TBL123]  WITH CHECK ADD  CONSTRAINT [FK_TBL123_TBL050] FOREIGN KEY([BranchID])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL123] CHECK CONSTRAINT [FK_TBL123_TBL050]
GO
ALTER TABLE [dbo].[TBL123]  WITH CHECK ADD  CONSTRAINT [FK_TBL123_TBL122] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL122] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL123] CHECK CONSTRAINT [FK_TBL123_TBL122]
GO
ALTER TABLE [dbo].[TBL125]  WITH CHECK ADD  CONSTRAINT [FK_TBL125_TBL005] FOREIGN KEY([JobGuide])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL125] CHECK CONSTRAINT [FK_TBL125_TBL005]
GO
ALTER TABLE [dbo].[TBL125]  WITH CHECK ADD  CONSTRAINT [FK_TBL125_TBL013] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL013] ([UsGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL125] CHECK CONSTRAINT [FK_TBL125_TBL013]
GO
ALTER TABLE [dbo].[TBL125]  WITH CHECK ADD  CONSTRAINT [FK_TBL125_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL125] CHECK CONSTRAINT [FK_TBL125_TBL081_1]
GO
ALTER TABLE [dbo].[TBL125]  WITH CHECK ADD  CONSTRAINT [FK_TBL125_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL125] CHECK CONSTRAINT [FK_TBL125_TBL081_2]
GO
ALTER TABLE [dbo].[TBL125]  WITH CHECK ADD  CONSTRAINT [FK_TBL125_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL125] CHECK CONSTRAINT [FK_TBL125_TBL081_3]
GO
ALTER TABLE [dbo].[TBL125]  WITH CHECK ADD  CONSTRAINT [FK_TBL125_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL125] CHECK CONSTRAINT [FK_TBL125_TBL081_4]
GO
ALTER TABLE [dbo].[TBL125]  WITH CHECK ADD  CONSTRAINT [FK_TBL125_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL125] CHECK CONSTRAINT [FK_TBL125_TBL081_5]
GO
ALTER TABLE [dbo].[TBL126]  WITH CHECK ADD  CONSTRAINT [FK_TBL126_TBL013] FOREIGN KEY([UserGuide])
REFERENCES [dbo].[TBL013] ([UsGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL126] CHECK CONSTRAINT [FK_TBL126_TBL013]
GO
ALTER TABLE [dbo].[TBL127]  WITH CHECK ADD  CONSTRAINT [FK_TBL127_TBL126] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL126] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL127] CHECK CONSTRAINT [FK_TBL127_TBL126]
GO
ALTER TABLE [dbo].[TBL128]  WITH CHECK ADD  CONSTRAINT [FK_TBL128_TBL007] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL128] CHECK CONSTRAINT [FK_TBL128_TBL007]
GO
ALTER TABLE [dbo].[TBL129]  WITH CHECK ADD  CONSTRAINT [FK_TBL129_TBL020] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL129] CHECK CONSTRAINT [FK_TBL129_TBL020]
GO
ALTER TABLE [dbo].[TBL129]  WITH CHECK ADD  CONSTRAINT [FK_TBL129_TBL020_2] FOREIGN KEY([BillGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL129] CHECK CONSTRAINT [FK_TBL129_TBL020_2]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL001] FOREIGN KEY([CurrencyGuide])
REFERENCES [dbo].[TBL001] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL001]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL004]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL004_2] FOREIGN KEY([ContraAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL004_2]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL005] FOREIGN KEY([CostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL005]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL007] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL007]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL049] FOREIGN KEY([Branch])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL049]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL050] FOREIGN KEY([Project])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL050]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL081_1] FOREIGN KEY([Category01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL081_1]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL081_2] FOREIGN KEY([Category02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL081_2]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL081_3] FOREIGN KEY([Category03])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL081_3]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL081_4] FOREIGN KEY([Category04])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL081_4]
GO
ALTER TABLE [dbo].[TBL130]  WITH CHECK ADD  CONSTRAINT [FK_TBL130_TBL081_5] FOREIGN KEY([Category05])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL130] CHECK CONSTRAINT [FK_TBL130_TBL081_5]
GO
ALTER TABLE [dbo].[TBL131]  WITH CHECK ADD  CONSTRAINT [FK_TBL131_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL131] CHECK CONSTRAINT [FK_TBL131_TBL004]
GO
ALTER TABLE [dbo].[TBL131]  WITH CHECK ADD  CONSTRAINT [FK_TBL131_TBL022] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL022] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL131] CHECK CONSTRAINT [FK_TBL131_TBL022]
GO
ALTER TABLE [dbo].[TBL131]  WITH CHECK ADD  CONSTRAINT [FK_TBL131_TBL037] FOREIGN KEY([PeriodGuide])
REFERENCES [dbo].[TBL037] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL131] CHECK CONSTRAINT [FK_TBL131_TBL037]
GO
ALTER TABLE [dbo].[TBL133]  WITH CHECK ADD  CONSTRAINT [FK_TBL133_TBL004] FOREIGN KEY([AccountGuide])
REFERENCES [dbo].[TBL004] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL133] CHECK CONSTRAINT [FK_TBL133_TBL004]
GO
ALTER TABLE [dbo].[TBL133]  WITH CHECK ADD  CONSTRAINT [FK_TBL133_TBL005] FOREIGN KEY([CostCenterGuide])
REFERENCES [dbo].[TBL005] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL133] CHECK CONSTRAINT [FK_TBL133_TBL005]
GO
ALTER TABLE [dbo].[TBL133]  WITH CHECK ADD  CONSTRAINT [FK_TBL133_TBL006] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL006] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL133] CHECK CONSTRAINT [FK_TBL133_TBL006]
GO
ALTER TABLE [dbo].[TBL133]  WITH CHECK ADD  CONSTRAINT [FK_TBL133_TBL008] FOREIGN KEY([StoreGuide])
REFERENCES [dbo].[TBL008] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL133] CHECK CONSTRAINT [FK_TBL133_TBL008]
GO
ALTER TABLE [dbo].[TBL133]  WITH CHECK ADD  CONSTRAINT [FK_TBL133_TBL015] FOREIGN KEY([AgentsGroupGuide])
REFERENCES [dbo].[TBL015] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL133] CHECK CONSTRAINT [FK_TBL133_TBL015]
GO
ALTER TABLE [dbo].[TBL133]  WITH CHECK ADD  CONSTRAINT [FK_TBL133_TBL042] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL133] CHECK CONSTRAINT [FK_TBL133_TBL042]
GO
ALTER TABLE [dbo].[TBL133]  WITH CHECK ADD  CONSTRAINT [FK_TBL133_TBL049] FOREIGN KEY([ProjectGuide])
REFERENCES [dbo].[TBL049] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL133] CHECK CONSTRAINT [FK_TBL133_TBL049]
GO
ALTER TABLE [dbo].[TBL133]  WITH CHECK ADD  CONSTRAINT [FK_TBL133_TBL050] FOREIGN KEY([BranchGuide])
REFERENCES [dbo].[TBL050] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL133] CHECK CONSTRAINT [FK_TBL133_TBL050]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014] FOREIGN KEY([NormalAbcenteeVacation])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_10] FOREIGN KEY([EarlyEntranceExecutions])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_10]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_11] FOREIGN KEY([LateLeaveExecutions])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_11]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_12] FOREIGN KEY([AbsenteeTimeExecutions])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_12]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_2] FOREIGN KEY([UnjustifiedAbcenteeVacation])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_2]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_3] FOREIGN KEY([LateEntranceHourlyVacation])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_3]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_4] FOREIGN KEY([EarlyLeaveHourlyVacation])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_4]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_5] FOREIGN KEY([AbsenteeTimeHourlyVacation])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_5]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_6] FOREIGN KEY([NormalVacationExecutions])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_6]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_7] FOREIGN KEY([NormalAbcenteeExecutions])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_7]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_8] FOREIGN KEY([LateEntranceExecutions])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_8]
GO
ALTER TABLE [dbo].[TBL135]  WITH CHECK ADD  CONSTRAINT [FK_TBL135_TBL014_9] FOREIGN KEY([EarlyLeaveExecutions])
REFERENCES [dbo].[TBL014] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL135] CHECK CONSTRAINT [FK_TBL135_TBL014_9]
GO
ALTER TABLE [dbo].[TBL136]  WITH CHECK ADD  CONSTRAINT [FK_TBL136_TBL135] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL135] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL136] CHECK CONSTRAINT [FK_TBL136_TBL135]
GO
ALTER TABLE [dbo].[TBL137]  WITH CHECK ADD  CONSTRAINT [FK_TBL137_TBL136] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL136] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL137] CHECK CONSTRAINT [FK_TBL137_TBL136]
GO
ALTER TABLE [dbo].[TBL140]  WITH CHECK ADD  CONSTRAINT [FK_TBL140_TBL007] FOREIGN KEY([ItemID])
REFERENCES [dbo].[TBL007] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL140] CHECK CONSTRAINT [FK_TBL140_TBL007]
GO
ALTER TABLE [dbo].[TBL140]  WITH CHECK ADD  CONSTRAINT [FK_TBL140_TBL008] FOREIGN KEY([StoreID])
REFERENCES [dbo].[TBL008] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL140] CHECK CONSTRAINT [FK_TBL140_TBL008]
GO
ALTER TABLE [dbo].[TBL141]  WITH CHECK ADD  CONSTRAINT [FK_TBL141_TBL004] FOREIGN KEY([LCAccount])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL141] CHECK CONSTRAINT [FK_TBL141_TBL004]
GO
ALTER TABLE [dbo].[TBL141]  WITH CHECK ADD  CONSTRAINT [FK_TBL141_TBL022] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL022] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL141] CHECK CONSTRAINT [FK_TBL141_TBL022]
GO
ALTER TABLE [dbo].[TBL141]  WITH CHECK ADD  CONSTRAINT [FK_TBL141_TBL081] FOREIGN KEY([FreightType])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL141] CHECK CONSTRAINT [FK_TBL141_TBL081]
GO
ALTER TABLE [dbo].[TBL141]  WITH CHECK ADD  CONSTRAINT [FK_TBL141_TBL081_2] FOREIGN KEY([PaymentType])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL141] CHECK CONSTRAINT [FK_TBL141_TBL081_2]
GO
ALTER TABLE [dbo].[TBL141]  WITH CHECK ADD  CONSTRAINT [FK_TBL141_TBL081_3] FOREIGN KEY([LCType])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL141] CHECK CONSTRAINT [FK_TBL141_TBL081_3]
GO
ALTER TABLE [dbo].[TBL141]  WITH CHECK ADD  CONSTRAINT [FK_TBL141_TBL081_4] FOREIGN KEY([TermsOfPayment])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL141] CHECK CONSTRAINT [FK_TBL141_TBL081_4]
GO
ALTER TABLE [dbo].[TBL141]  WITH CHECK ADD  CONSTRAINT [FK_TBL141_TBL081_5] FOREIGN KEY([GoodsType])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL141] CHECK CONSTRAINT [FK_TBL141_TBL081_5]
GO
ALTER TABLE [dbo].[TBL142]  WITH CHECK ADD  CONSTRAINT [FK_TBL142_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL142] CHECK CONSTRAINT [FK_TBL142_TBL016]
GO
ALTER TABLE [dbo].[TBL142]  WITH CHECK ADD  CONSTRAINT [FK_TBL142_TBL022] FOREIGN KEY([BillGuide])
REFERENCES [dbo].[TBL022] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL142] CHECK CONSTRAINT [FK_TBL142_TBL022]
GO
ALTER TABLE [dbo].[TBL143]  WITH CHECK ADD  CONSTRAINT [FK_TBL143_TBL028] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL028] ([RowGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL143] CHECK CONSTRAINT [FK_TBL143_TBL028]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL005] FOREIGN KEY([CostCenterGuide])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL005]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL005_2] FOREIGN KEY([AgentCostCenter])
REFERENCES [dbo].[TBL005] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL005_2]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL015] FOREIGN KEY([AgentGroupGuide])
REFERENCES [dbo].[TBL015] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL015]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL016] FOREIGN KEY([AgentGuide])
REFERENCES [dbo].[TBL016] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL016]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL030] FOREIGN KEY([AgentAddress])
REFERENCES [dbo].[TBL030] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL030]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL049] FOREIGN KEY([ProjectGuide])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL049]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL049_2] FOREIGN KEY([AgentProject])
REFERENCES [dbo].[TBL049] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL049_2]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL050] FOREIGN KEY([BranchGuide])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL050]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL050_2] FOREIGN KEY([AgentBranch])
REFERENCES [dbo].[TBL050] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL050_2]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL081] FOREIGN KEY([AgentCategory01])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL081]
GO
ALTER TABLE [dbo].[TBL144]  WITH CHECK ADD  CONSTRAINT [FK_TBL144_TBL081_2] FOREIGN KEY([AgentCategory02])
REFERENCES [dbo].[TBL081] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL144] CHECK CONSTRAINT [FK_TBL144_TBL081_2]
GO
ALTER TABLE [dbo].[TBL145]  WITH CHECK ADD  CONSTRAINT [FK_TBL145_TBL006] FOREIGN KEY([GroupID])
REFERENCES [dbo].[TBL006] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL145] CHECK CONSTRAINT [FK_TBL145_TBL006]
GO
ALTER TABLE [dbo].[TBL145]  WITH CHECK ADD  CONSTRAINT [FK_TBL145_TBL007] FOREIGN KEY([ItemID])
REFERENCES [dbo].[TBL007] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL145] CHECK CONSTRAINT [FK_TBL145_TBL007]
GO
ALTER TABLE [dbo].[TBL145]  WITH CHECK ADD  CONSTRAINT [FK_TBL145_TBL144] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL144] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL145] CHECK CONSTRAINT [FK_TBL145_TBL144]
GO
ALTER TABLE [dbo].[TBL146]  WITH CHECK ADD  CONSTRAINT [FK_TBL146_TBL026] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL026] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL146] CHECK CONSTRAINT [FK_TBL146_TBL026]
GO
ALTER TABLE [dbo].[TBL146]  WITH CHECK ADD  CONSTRAINT [FK_TBL146_TBL078] FOREIGN KEY([MethodGuide])
REFERENCES [dbo].[TBL078] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL146] CHECK CONSTRAINT [FK_TBL146_TBL078]
GO
ALTER TABLE [dbo].[TBL147]  WITH CHECK ADD  CONSTRAINT [FK_TBL147_TBL020] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL147] CHECK CONSTRAINT [FK_TBL147_TBL020]
GO
ALTER TABLE [dbo].[TBL151]  WITH CHECK ADD  CONSTRAINT [FK_TBL151_TBL015] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL015] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL151] CHECK CONSTRAINT [FK_TBL151_TBL015]
GO
ALTER TABLE [dbo].[TBL151]  WITH CHECK ADD  CONSTRAINT [FK_TBL151_TBL135] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL135] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL151] CHECK CONSTRAINT [FK_TBL151_TBL135]
GO
ALTER TABLE [dbo].[TBL152]  WITH CHECK ADD  CONSTRAINT [FK_TBL152_TBL007] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL007] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL152] CHECK CONSTRAINT [FK_TBL152_TBL007]
GO
ALTER TABLE [dbo].[TBL153]  WITH CHECK ADD  CONSTRAINT [FK_TBL153_TBL005] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL005] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL153] CHECK CONSTRAINT [FK_TBL153_TBL005]
GO
ALTER TABLE [dbo].[TBL154]  WITH CHECK ADD  CONSTRAINT [FK_TBL154_TBL025] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL025] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL154] CHECK CONSTRAINT [FK_TBL154_TBL025]
GO
ALTER TABLE [dbo].[TBL157]  WITH CHECK ADD  CONSTRAINT [FK_TBL157_TBL004] FOREIGN KEY([AccountID])
REFERENCES [dbo].[TBL004] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL157] CHECK CONSTRAINT [FK_TBL157_TBL004]
GO
ALTER TABLE [dbo].[TBL157]  WITH CHECK ADD  CONSTRAINT [FK_TBL157_TBL156] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL156] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL157] CHECK CONSTRAINT [FK_TBL157_TBL156]
GO
ALTER TABLE [dbo].[TBL158]  WITH CHECK ADD  CONSTRAINT [FK_TBL158_TBL027] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL027] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL158] CHECK CONSTRAINT [FK_TBL158_TBL027]
GO
ALTER TABLE [dbo].[TBL160]  WITH CHECK ADD  CONSTRAINT [FK_TBL160_TBL020_2] FOREIGN KEY([BillGuide])
REFERENCES [dbo].[TBL020] ([CardGuide])
GO
ALTER TABLE [dbo].[TBL160] CHECK CONSTRAINT [FK_TBL160_TBL020_2]
GO
ALTER TABLE [dbo].[TBL160]  WITH CHECK ADD  CONSTRAINT [FK_TBL160_TBL026] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL026] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL160] CHECK CONSTRAINT [FK_TBL160_TBL026]
GO
ALTER TABLE [dbo].[TBL161]  WITH CHECK ADD  CONSTRAINT [FK_TBL161_TBL013] FOREIGN KEY([UserGuide])
REFERENCES [dbo].[TBL013] ([UsGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL161] CHECK CONSTRAINT [FK_TBL161_TBL013]
GO
ALTER TABLE [dbo].[TBL161]  WITH CHECK ADD  CONSTRAINT [FK_TBL161_TBL042] FOREIGN KEY([GroupGuide])
REFERENCES [dbo].[TBL042] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL161] CHECK CONSTRAINT [FK_TBL161_TBL042]
GO
ALTER TABLE [dbo].[TBL161]  WITH CHECK ADD  CONSTRAINT [FK_TBL161_TBL150] FOREIGN KEY([MainGuide])
REFERENCES [dbo].[TBL150] ([CardGuide])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[TBL161] CHECK CONSTRAINT [FK_TBL161_TBL150]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [CK_TBL012] CHECK  (([Debit]>(0) AND [Credit]=(0) OR [Credit]>(0) AND [Debit]=(0)))
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [CK_TBL012]
GO
ALTER TABLE [dbo].[TBL012]  WITH CHECK ADD  CONSTRAINT [CK1_TBL012] CHECK  (([DebitRate]>(0) AND [CreditRate]=(0) OR [CreditRate]>(0) AND [DebitRate]=(0)))
GO
ALTER TABLE [dbo].[TBL012] CHECK CONSTRAINT [CK1_TBL012]
GO
ALTER TABLE [dbo].[TBL020]  WITH CHECK ADD  CONSTRAINT [CK_TBL020] CHECK  (([AgentAccountSide]=(-1) OR [AgentAccountSide]=(1)))
GO
ALTER TABLE [dbo].[TBL020] CHECK CONSTRAINT [CK_TBL020]
GO
ALTER TABLE [dbo].[TBL022]  WITH CHECK ADD  CONSTRAINT [CK_TBL022] CHECK  (([BillNumber]>(0)))
GO
ALTER TABLE [dbo].[TBL022] CHECK CONSTRAINT [CK_TBL022]
GO
ALTER TABLE [dbo].[TBL023]  WITH CHECK ADD  CONSTRAINT [CK_TBL023] CHECK  (([Quantity]>(0) OR [ExtraQuantity]>(0)))
GO
ALTER TABLE [dbo].[TBL023] CHECK CONSTRAINT [CK_TBL023]
GO
ALTER TABLE [dbo].[TBL024]  WITH CHECK ADD  CONSTRAINT [CK_TBL024] CHECK  (([Discount]>(0) AND [Extra]=(0) OR [Extra]>(0) AND [Discount]=(0)))
GO
ALTER TABLE [dbo].[TBL024] CHECK CONSTRAINT [CK_TBL024]
GO
ALTER TABLE [dbo].[TBL029]  WITH CHECK ADD  CONSTRAINT [CK_TBL029] CHECK  (([Discount]>(0) AND [Extra]=(0) OR [Extra]>(0) AND [Discount]=(0)))
GO
ALTER TABLE [dbo].[TBL029] CHECK CONSTRAINT [CK_TBL029]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [CK_TBL038] CHECK  (([Debit]>(0) AND [Credit]=(0) OR [Credit]>(0) AND [Debit]=(0)))
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [CK_TBL038]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [CK_TBL038_2] CHECK  (([DebitRate]>(0) AND [CreditRate]=(0) OR [CreditRate]>(0) AND [DebitRate]=(0)))
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [CK_TBL038_2]
GO
ALTER TABLE [dbo].[TBL038]  WITH CHECK ADD  CONSTRAINT [CK_TBL038_3] CHECK  (([TruncatedValueRate]>(0) AND [TruncatedValue]>(0) OR [TruncatedValueRate]=(0) AND [TruncatedValue]=(0)))
GO
ALTER TABLE [dbo].[TBL038] CHECK CONSTRAINT [CK_TBL038_3]
GO
ALTER TABLE [dbo].[TBL054]  WITH CHECK ADD  CONSTRAINT [CK_TBL054] CHECK  (([Value]>(0)))
GO
ALTER TABLE [dbo].[TBL054] CHECK CONSTRAINT [CK_TBL054]
GO
ALTER TABLE [dbo].[TBL063]  WITH CHECK ADD  CONSTRAINT [CK_TBL063] CHECK  (([Quantity]>(0)))
GO
ALTER TABLE [dbo].[TBL063] CHECK CONSTRAINT [CK_TBL063]
GO
ALTER TABLE [dbo].[TBL068]  WITH CHECK ADD  CONSTRAINT [CK_TBL068] CHECK  (([Debit]>(0) AND [Credit]=(0) OR [Credit]>(0) AND [Debit]=(0)))
GO
ALTER TABLE [dbo].[TBL068] CHECK CONSTRAINT [CK_TBL068]
GO
ALTER TABLE [dbo].[TBL068]  WITH CHECK ADD  CONSTRAINT [CK1_TBL068] CHECK  (([DebitRate]>(0) AND [CreditRate]=(0) OR [CreditRate]>(0) AND [DebitRate]=(0)))
GO
ALTER TABLE [dbo].[TBL068] CHECK CONSTRAINT [CK1_TBL068]
GO
ALTER TABLE [dbo].[TBL080]  WITH CHECK ADD  CONSTRAINT [CK_TBL080] CHECK  (([Discount]>(0) AND [Extra]=(0) OR [Extra]>(0) AND [Discount]=(0)))
GO
ALTER TABLE [dbo].[TBL080] CHECK CONSTRAINT [CK_TBL080]
GO
/****** Object:  StoredProcedure [dbo].[Prc000]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc000](@EntID uniqueidentifier) 
 as begin
 declare @Tbl table(ID int, AccountGuide uniqueidentifier, CurrencyGuide uniqueidentifier, Debit float, Credit float, DebitRate float, CreditRate float, ContraAccount uniqueidentifier, CostCenter uniqueidentifier, Txt nvarchar(255), Txt2 nvarchar(255), Txt3 nvarchar(255), Project uniqueidentifier,Branch uniqueidentifier,AgentGuide uniqueidentifier,Category01 uniqueidentifier,Category02 uniqueidentifier,Category03 uniqueidentifier,Category04 uniqueidentifier,Category05 uniqueidentifier,NoMerge bit,RowDate int)
 insert Into @Tbl Select ID,AccountGuide,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,ContraAccount,CostCenter,Description,EntryDetailsNotes2,EntryDetailsNotes3,Project,Branch,AgentGuide,Category01,Category02,Category03,Category04,Category05,NoMerge,dbo.DateToInt(RowDate) From TBL012 Where MainGuide=@EntID Order By AccountGuide,CurrencyGuide,ContraAccount,CostCenter,RowDate,ID
 Delete From TBL012 Where MainGuide=@EntID
 declare @Txt nvarchar(Max)
 declare @Txt2 nvarchar(Max)
 declare @Txt3 nvarchar(Max)
 declare @TmpTxt nvarchar(Max)
 declare @TmpTxt2 nvarchar(Max)
 declare @TmpTxt3 nvarchar(Max)
 Set @Txt=''
 declare @Nmg bit
 declare @TmpNmg bit
 declare @Acc uniqueidentifier
 declare @Pr uniqueidentifier
 declare @Br uniqueidentifier
 declare @Ag uniqueidentifier
 declare @Crr uniqueidentifier
 declare @ConAcc uniqueidentifier
 declare @CostCenter uniqueidentifier
 declare @TmpAcc uniqueidentifier
 declare @TmpPr uniqueidentifier
 declare @TmpBr uniqueidentifier
 declare @TmpAg uniqueidentifier
 declare @TmpCrr uniqueidentifier
 declare @TmpConAcc uniqueidentifier
 declare @TmpCostCenter uniqueidentifier
 declare @Dbt float
 declare @TmpDbt float
 declare @RowDate int
 declare @TmpCt1 uniqueidentifier
 declare @TmpCt2 uniqueidentifier
 declare @TmpCt3 uniqueidentifier
 declare @TmpCt4 uniqueidentifier
 declare @TmpCt5 uniqueidentifier
 declare @Ct1 uniqueidentifier
 declare @Ct2 uniqueidentifier
 declare @Ct3 uniqueidentifier
 declare @Ct4 uniqueidentifier
 declare @Ct5 uniqueidentifier
 Set @Dbt=0
 declare @Crt float
 declare @TmpCrt float
 Set @Crt=0
 declare @DbtRate float
 declare @TmpDbtRate float
 declare @TmpRowDate int
 Set @DbtRate=0
 declare @CrtRate float
 declare @TmpCrtRate float
 Set @CrtRate=0
 declare @ID int
 DECLARE Y CURSOR READ_ONLY FAST_FORWARD FOR
 	SELECT ID,AccountGuide,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,ContraAccount,CostCenter,Txt,Txt2,Txt3,Project,Branch,AgentGuide,Category01,Category02,Category03,Category04,Category05,NoMerge,RowDate
 	FROM @Tbl Order By NoMerge,AccountGuide,CurrencyGuide,ContraAccount,CostCenter,RowDate,ID
 OPEN Y
 FETCH NEXT FROM Y INTO @ID,@TmpAcc,@TmpCrr,@TmpDbt,@TmpCrt,@TmpDbtRate,@TmpCrtRate,@TmpConAcc,@TmpCostCenter,@TmpTxt,@TmpTxt2,@TmpTxt3,@TmpPr,@TmpBr,@TmpAg,@TmpCt1,@TmpCt2,@TmpCt3,@TmpCt4,@TmpCt5,@TmpNmg,@TmpRowDate
 WHILE (@@FETCH_STATUS = 0)
 BEGIN
 	if(@TmpNmg>0 Or @Nmg>0 Or dbo.IsEqualGuides(@Acc,@TmpAcc)=0 Or dbo.IsEqualGuides( @Crr,@TmpCrr)=0 Or dbo.IsEqualGuides( @ConAcc,@TmpConAcc)=0 Or dbo.IsEqualGuides( @CostCenter,@TmpCostCenter)=0 Or dbo.IsEqualGuides(@Pr,@TmpPr)=0 Or dbo.IsEqualGuides(@Br,@TmpBr)=0 Or dbo.IsEqualGuides(@Ag,@TmpAg)=0 Or
 	dbo.IsEqualGuides(@Ct1,@TmpCt1)=0 Or dbo.IsEqualGuides(@Ct2,@TmpCt2)=0 Or dbo.IsEqualGuides(@Ct3,@TmpCt3)=0 Or dbo.IsEqualGuides(@Ct4,@TmpCt4)=0 Or dbo.IsEqualGuides(@Ct5,@TmpCt5)=0 Or
 	(IsNull(@RowDate,0) <> IsNull(@TmpRowDate,0)))
 	begin
 		if(@Dbt>0 Or @Crt>0)
 		begin
 			if(@Dbt>@Crt)
 			begin
 				Set @Dbt=@Dbt-@Crt
 				Set @Crt=0
 				Set @DbtRate=@DbtRate-@CrtRate
 				Set @CrtRate=0
 			end
 			else
 			begin
 				Set @Crt=@Crt-@Dbt
 				Set @Dbt=0
 				Set @CrtRate=@CrtRate-@DbtRate
 				Set @DbtRate=0
 			end
 			if((@Acc is Not Null)And((@Crt+@Dbt)>0))
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,ContraAccount,CostCenter,Description,EntryDetailsNotes2,EntryDetailsNotes3,Project,Branch,AgentGuide,Category01,Category02,Category03,Category04,Category05,RowDate)Values
 		(@EntID,@Acc,@Crr,@Dbt,@Crt,@DbtRate,@CrtRate,@ConAcc,@CostCenter,@Txt,@Txt2,@Txt3,@Pr,@Br,@Ag,@Ct1,@Ct2,@Ct3,@Ct4,@Ct5,@RowDate)
 		end
 		Select @Acc=@TmpAcc ,@Pr=@TmpPr ,@Br=@TmpBr ,@Ag=@TmpAg ,@Crr=@TmpCrr ,@Dbt=@TmpDbt ,@Crt=@TmpCrt ,@Nmg=@TmpNmg ,@RowDate=@TmpRowDate ,
 		@DbtRate=@TmpDbtRate ,@CrtRate=@TmpCrtRate ,@ConAcc=@TmpConAcc ,@CostCenter=@TmpCostCenter ,@Txt=@TmpTxt ,@Txt2=@TmpTxt2 ,@Txt3=@TmpTxt3 ,
 		@Ct1=@TmpCt1 ,@Ct2=@TmpCt2 ,@Ct3=@TmpCt3 ,@Ct4=@TmpCt4 ,@Ct5=@TmpCt5
 	end
 	else
 	begin
 		Set @Dbt=@Dbt+@TmpDbt
 		Set @Crt=@Crt+@TmpCrt
 		Set @DbtRate=@DbtRate+@TmpDbtRate
 		Set @CrtRate=@CrtRate+@TmpCrtRate
 		if(@Txt!=@TmpTxt)begin
 		if(Len(IsNull(@Txt,''))>0 And Len(IsNull(@TmpTxt,''))>0 And @Txt<>@TmpTxt)
 			begin
 				if (len(@Txt+@TmpTxt)<254)
 					Set @Txt=@Txt+'-'+@TmpTxt
 			end
 		else if(len(isnull(@TmpTxt,''))>0)
 			Set @Txt=@Txt+@TmpTxt
 		end
 		if(@Txt2!=@TmpTxt2)
 begin
 			if(Len(IsNull(@Txt2,''))>0 And Len(IsNull(@TmpTxt2,''))>0 )
 			begin
 				if (len(@Txt2+@TmpTxt2)<254) Set @Txt2=@Txt2+'-'+@TmpTxt2
 			end
 			else if(len(isnull(@TmpTxt2,''))>0)
 				Set @Txt2=@Txt2+@TmpTxt2
 		end
 		if(@Txt3!=@TmpTxt3)begin
 		if(Len(IsNull(@Txt3,''))>0 And Len(IsNull(@TmpTxt3,''))>0 )
 		begin
 			if (len(@Txt3+@TmpTxt3)<254) Set @Txt3=@Txt3+'-'+@TmpTxt3
 		end
 		else if(len(isnull(@TmpTxt3,''))>0)
 			Set @Txt3=@Txt3+@TmpTxt3
 		end
 	end
 	FETCH NEXT FROM Y INTO @ID,@TmpAcc,@TmpCrr,@TmpDbt,@TmpCrt,@TmpDbtRate,@TmpCrtRate,@TmpConAcc,@TmpCostCenter,@TmpTxt,@TmpTxt2,@TmpTxt3,@TmpPr,@TmpBr,@TmpAg,@TmpCt1,@TmpCt2,@TmpCt3,@TmpCt4,@TmpCt5,@TmpNmg,@TmpRowDate
 END
 if(@Dbt>@Crt)
 begin
 	Set @Dbt=@Dbt-@Crt
 	Set @Crt=0
 	Set @DbtRate=@DbtRate-@CrtRate
 	Set @CrtRate=0
 end
 else
 begin
 	Set @Crt=@Crt-@Dbt
 	Set @Dbt=0
 	Set @CrtRate=@CrtRate-@DbtRate
 	Set @DbtRate=0
 end
 if((@Dbt+@Crt)>0)
 	Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,ContraAccount,CostCenter,Description,EntryDetailsNotes2,EntryDetailsNotes3,Project,Branch,AgentGuide,Category01,Category02,Category03,Category04,Category05,RowDate)Values
 (@EntID,@Acc,@Crr,@Dbt,@Crt,@DbtRate,@CrtRate,@ConAcc,@CostCenter,@Txt,@Txt2,@Txt3,@Pr,@Br,@Ag,@Ct1,@Ct2,@Ct3,@Ct4,@Ct5,@RowDate)
 CLOSE Y
 DEALLOCATE Y
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc002]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure [dbo].[Prc002](@BillGuide uniqueidentifier,@ItemDescountDesc nvarchar(255),@ItemExtrasDesc nvarchar(255),@EnNum int,@ForceBuildEntry bit) 
	as begin 
	declare @BillType uniqueidentifier 
	declare @POSType uniqueidentifier 
	declare @BillDsc float 
	Select @BillType=MainGuide,@BillDsc=Discount,@POSType=POSGuide From TBL022 Where CardGuide=@BillGuide 
	if(@BillDsc>0) 
	begin 
		declare @DiscAcc uniqueidentifier 
		set @DiscAcc=(Select DiscountsAccount From TBL020 Where CardGuide=@BillType) 
		if(@DiscAcc Is Not null) 
		begin 
			declare @BillCr uniqueidentifier 
			declare @DiscountCap nvarchar(255) 
			Select @DiscountCap=DiscountCaption From TBL020 Where CardGuide=@BillType 
			declare @BillRate float 
			set @BillCr=(Select CurrencyGuide From TBL022 Where CardGuide=@BillGuide) 
			set @BillRate=(Select Rate From TBL022 Where CardGuide=@BillGuide) 
			Delete From TBL024 Where MainGuide=@BillGuide 
			Insert Into TBL024(MainGuide,AccountID,CurrencyGuide,DiscountToSave,Discount,Description)Values 
				(@BillGuide,@DiscAcc,@BillCr,@BillDsc*@BillRate,@BillDsc,@DiscountCap) 
		end 
	end 
	else if((Select BillMethod From TBL020 Where CardGuide=@BillType)=1 Or @POSType Is Not Null) 
		Delete From TBL024 Where MainGuide=@BillGuide 
	if(((Select GenerateEntry From TBL020 Where CardGuide=@BillType)+@ForceBuildEntry)>0) 
		exec Prc001 @BillGuide,@ItemDescountDesc,@ItemExtrasDesc,@EnNum 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc003]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure [dbo].[Prc003] (@BondGuide uniqueidentifier,@EntryNumber int) as begin 
 exec dbo.Prc067 11,0
 Delete From TBL011 Where BondGuide=@BondGuide
 Declare @CntraAcID uniqueidentifier
 Declare @MnCntraAcID uniqueidentifier
 Select @CntraAcID=AccountGuide,@MnCntraAcID=AccountGuide From TBL010 Where CardGuide=@BondGuide
 Declare @CurRecord int
 Set @CurRecord=0
 declare @SetInfoToEntryHead bit
 declare @AutoSetContra bit
 Declare @AfctCntrAc bit
 declare @ClCntra bit
 declare @BuiltTowEntries bit
 Declare @BndRwCnt int
 Set @BndRwCnt=(Select Count(*) From TBL038 Where MainGuide=@BondGuide)+IsNull((Select Count(*) From TBL038 Where MainGuide=@BondGuide And TruncatedValue>0),0)
 Declare @EnTp tinyint
 Declare @EnTp2 tinyint
 declare @JbTp tinyint declare @JbTp2 tinyint declare @JbTp3 tinyint
 declare @PrTp tinyint declare @PrTp2 tinyint declare @PrTp3 tinyint
 declare @BrTp tinyint declare @BrTp2 tinyint declare @BrTp3 tinyint
 declare @CgTp tinyint declare @CgTp2 tinyint declare @CgTp3 tinyint
 declare @AgTp tinyint declare @AgTp2 tinyint declare @AgTp3 tinyint
 Declare @HeadCost uniqueidentifier
 Declare @Cg01 uniqueidentifier
 Declare @Cg02 uniqueidentifier
 Declare @Cg03 uniqueidentifier
 Declare @Cg04 uniqueidentifier
 Declare @Cg05 uniqueidentifier
 Declare @Currncy uniqueidentifier
 Declare @AccID uniqueidentifier
 Declare @JobID uniqueidentifier
 Declare @Project uniqueidentifier
 Declare @Branch uniqueidentifier
 Declare @Agent uniqueidentifier
 Declare @BondContraAc uniqueidentifier
 declare @BlV tinyint
 declare @CardMode tinyint
 Declare @Debit float
 Declare @Credit float
 Declare @DebitRate float
 Declare @CreditRate float
 Declare @Notes nvarchar(255)
 Declare @Notes2 nvarchar(255)
 Declare @Notes3 nvarchar(255)
 Declare @Notes4 nvarchar(255)
 Declare @Notes5 nvarchar(255)
 Declare @BondTypeGuide uniqueidentifier
 Declare @BondType int
 Declare @EntryGuide uniqueidentifier
 Declare @EntryCurrncy uniqueidentifier
 Declare @Posted bit
 Declare @MainAffContra bit
 Declare @BondSecurity tinyint
 Declare @DoneIn datetime
 Declare @RowDate datetime
 Declare @EntryDate datetime
 Declare @EntryRate float
 Declare @EntryNotes nvarchar(255)
 Declare @EntryBranch uniqueidentifier
 Declare @EntryProject uniqueidentifier
 Declare @EntryAgent uniqueidentifier
 Declare @EntryCostCenter uniqueidentifier
 Declare @TrnCut float
 Declare @TrnCutRate float
 Declare @TrnCutAcc uniqueidentifier
 Declare @TrnCutNotes nvarchar(255)
 Declare @TNotes nvarchar(255)
 Declare @UseHeadNoteOnRecord bit
 Declare @BondTrnCutAcc uniqueidentifier
 Declare @CreditCard uniqueidentifier
 Declare @CreditCardAcID uniqueidentifier
 Declare @CreditCardTaxAc uniqueidentifier
 Declare @CmmTaxRatio float
 declare @HNote2 nvarchar(max)
 declare @HNote3 nvarchar(max)
 declare @HNote4 nvarchar(max)
 declare @HNote5 nvarchar(max)
 declare @TruncateFromContraAc bit
 Select @Posted=Posted,@DoneIn=DoneIn,@EntryDate=IsNull(OperationDate,DueDate),@EntryNotes=Notes,@BondTypeGuide=MainGuide,@HeadCost=CostCenter,@EntryCurrncy=CurrencyGuide,
 	@BondSecurity=Security,@EntryRate=Rate,@EntryBranch=Branch,@EntryProject=Project,@EntryCostCenter=CostCenter,@EntryAgent=AgentGuide,
 	@HNote2=BondNotes2,@HNote3=BondNotes3,@HNote4=BondNotes4,@HNote5=BondNotes5
 	From TBL010 Where CardGuide=@BondGuide
 Set @BlV=(Select BooleanOption1 From TBL009 Where CardGuide=@BondTypeGuide)
 if(@EntryDate Is Null)
 	Set @EntryDate=(Select BondDate From TBL010 Where CardGuide=@BondGuide)
 Select @EnTp=EntryType,@EnTp2=EntryType2,@CardMode=CardMode,@AfctCntrAc=AffectContraAccountInEntry,@MainAffContra=AffectContraAccountInEntry,@BondType=BondType,@AutoSetContra=AutoGenerateContraAccount
 	,@JbTp=CostCenterType,@JbTp2=CostCenterType2,@PrTp=ProjectType,@PrTp2=ProjectType2,@BrTp=BranchType,@BrTp2=BranchType2,@CgTp=CategoriesType,@CgTp2=CategoriesType2,@AgTp=AgentType,@AgTp2=AgentType2
 	,@JbTp3=CostCenterType3,@PrTp3=ProjectType3,@BrTp3=BranchType3,@CgTp3=CategoriesType3,@AgTp3=AgentType3,@TruncateFromContraAc=BooleanOption12
 	,@BuiltTowEntries=BuiltTowEntries,@BondTrnCutAcc=TruncateAccount,@SetInfoToEntryHead=BooleanOption9,@UseHeadNoteOnRecord=BooleanOption10
 From TBL009 Where CardGuide=@BondTypeGuide
 if(@BndRwCnt<2)
 begin
 	Set @EnTp=1
 	Set @EnTp2=1
 	Set @ClCntra=0
 end
 else
 begin
 	if(@EnTp>0)Set @EnTp=0 Else Set @EnTp=1
 	if(@EnTp2>0)Set @EnTp2=0 Else Set @EnTp2=1
 end
 DECLARE @Prc nvarchar(Max)
 Set @Prc=(Select BuildEvent From TBL094 Where FormName=@BondTypeGuide and EventID=3)
 declare @Parmt nvarchar(250)
 Set @Parmt='@PAcG uniqueidentifier,@PEntryG uniqueidentifier,@PBondG uniqueidentifier,@PDbt float,@PCrt float,@RPDbt float,@RPCrt float,@PAcCoG uniqueidentifier,@PCoG uniqueidentifier,@PCrG uniqueidentifier,@PPrG uniqueidentifier,@PBrG uniqueidentifier'
 Set @EntryGuide=newid()
 if(@EntryNumber<1)Set @EntryNumber=dbo.Fun005()
 	if (isnull(@EntryNumber,0)=0)Set @EntryNumber=1
 exec dbo.Prc067 11,0
 Insert Into TBL011 (CardGuide,EntryNumber,Posted,EntryDate,DoneIn,CurrencyGuide,Rate,Notes,BondGuide,Security,CostCenter,Project,Branch)Values
 	(@EntryGuide,@EntryNumber,@Posted,@EntryDate,@DoneIn,@EntryCurrncy,@EntryRate,@EntryNotes,@BondGuide,@BondSecurity,(case when @SetInfoToEntryHead=1 Then @EntryCostCenter End),(case when @SetInfoToEntryHead=1 Then @EntryProject End),(case when @SetInfoToEntryHead=1 Then @EntryBranch End))
 exec dbo.Prc067 11,1
 if((Len(isNull(@Prc,''))<2 ) And (@BondType!=3) And (@CardMode=1))
 begin
 	Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,ContraAccount,CostCenter,Description,Project,Branch,Category01,Category02,Category03,Category04,Category05,RowDate,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,AgentGuide) Select @EntryGuide, AccountGuide,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,ContraAccount,CostCenter,Notes,Project,Branch,Category01,Category02,Category03,Category04,Category05,RowDate,BondDetailsNotes2,BondDetailsNotes3,BondDetailsNotes4,BondDetailsNotes5,AgentGuide From TBL038 Where MainGuide=@BondGuide Order By ID
 end
 else
 begin
 	DECLARE R CURSOR READ_ONLY FAST_FORWARD FOR
 		Select ID,ContraAccount,AccountGuide,IsNull(CostCenter,@HeadCost),CurrencyGuide,Debit,Credit,DebitRate,CreditRate,
 			Notes,TruncatedValue,TruncatedValueRate,IsNull(TruncatedValueAccount,@BondTrnCutAcc),TruncatedNotes,IsNull(Project,@EntryProject),IsNull(Branch,@EntryBranch),IsNull(AgentGuide,@EntryAgent)
 			,Category01 ,Category02 ,Category03 ,Category04 ,Category05,
 			IsNull((case when len(isnull(BondDetailsNotes2,''))>0 then BondDetailsNotes2 end),@HNote2),
 			IsNull((case when len(isnull(BondDetailsNotes3,''))>0 then BondDetailsNotes3 end),@HNote3),
 			IsNull((case when len(isnull(BondDetailsNotes4,''))>0 then BondDetailsNotes4 end),@HNote4),
 			IsNull((case when len(isnull(BondDetailsNotes5,''))>0 then BondDetailsNotes5 end),@HNote5),
 			ContraNotAffected,RowDate,CreditCard
 		From TBL038 Where MainGuide=@BondGuide Order By ID
 	OPEN R
 	FETCH NEXT FROM R INTO @CurRecord, @BondContraAc, @AccID,@JobID,@Currncy,@Debit,@Credit,@DebitRate,@CreditRate,
 		@Notes,@TrnCut,@TrnCutRate,@TrnCutAcc,@TrnCutNotes,@Project,@Branch,@Agent
 		,@Cg01,@Cg02,@Cg03,@Cg04,@Cg05,@Notes2,@Notes3,@Notes4,@Notes5,@ClCntra,@RowDate,@CreditCard
 	WHILE (@@FETCH_STATUS = 0)
 	BEGIN
 		Set @TNotes=@EntryNotes
 		if(len(IsNull(@TNotes,''))<1) Set @TNotes=@Notes
 		if(@ClCntra>0 And @BndRwCnt>1)
 		Begin
 			Set @AfctCntrAc=0
 			Set @BondContraAc=Null
 		End
 		Else
 			Set @AfctCntrAc=@MainAffContra
 		if(@AfctCntrAc>0 And @BondContraAc Is Not Null)Set @CntraAcID=@BondContraAc
 		Set @Notes=isnull(@Notes,@EntryNotes)
 		if(@TrnCut=0 Or @TrnCutRate=0 Or @TrnCutAcc Is Null)
 		begin
 			Set @TrnCut=0
 			Set @TrnCutRate=0
 			Set @TrnCutAcc=Null
 		end
 		if (@Debit>0)
 		begin
 			if((@Debit-@TrnCut)>0 And @CntraAcID Is Not Null)
 			begin
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 					(@EntryGuide,@AccID,@Currncy,@Debit-@TrnCut,@DebitRate-@TrnCutRate,(CASE WHEN @AutoSetContra>0 And @EnTp2>0 THEN @CntraAcID ELSE @BondContraAc END),@Notes,(CASE When @JbTp2>0 Then @JobID Else Null End),(CASE When @PrTp2>0 Then @Project Else Null End),(CASE When @BrTp2>0 Then @Branch Else Null End),(CASE When @AgTp2>0 Then @Agent Else Null End),
 					(CASE When @CgTp2>0 Then @Cg01 Else Null End),(CASE When @CgTp2>0 Then @Cg02 Else Null End),(CASE When @CgTp2>0 Then @Cg03 Else Null End),(CASE When @CgTp2>0 Then @Cg04 Else Null End),(CASE When @CgTp2>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp2,@RowDate)
 					if(len(@Prc)>0)exec sp_executesql @Prc,@Parmt,@PAcG=@AccID,@PEntryG=@EntryGuide,@PBondG=@BondGuide,@PDbt=@Debit,@PCrt=@Credit,@RPDbt=@DebitRate,@RPCrt=@CreditRate,@PAcCoG=@BondContraAc,@PCoG=@JobID,@PCrG=@Currncy,@PPrG=@Project,@PBrG=@Branch
 				if(@TrnCut>0 And @EnTp2>0)
 				begin
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 					(@EntryGuide,(CASE WHEN @AutoSetContra>0 And @EnTp2>0 THEN @CntraAcID ELSE IsNull(@BondContraAc,@CntraAcID) END),@Currncy,@TrnCut,@TrnCutRate,(Case When @AutoSetContra=1 Then @TrnCutAcc End),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @Notes end),(CASE When @JbTp>0 Then @JobID Else Null End),(CASE When @PrTp>0 Then @Project Else Null End),(CASE When @BrTp>0 Then @Branch Else Null End),(CASE When @AgTp>0 Then @Agent Else Null End),
 					(CASE When @CgTp>0 Then @Cg01 Else Null End),(CASE When @CgTp>0 Then @Cg02 Else Null End),(CASE When @CgTp>0 Then @Cg03 Else Null End),(CASE When @CgTp>0 Then @Cg04 Else Null End),(CASE When @CgTp>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp,@RowDate)
 				end
 			end
 			if((@Debit-@TrnCut)>0 And (@CardMode!=1 Or (@BondType=3 And @BuiltTowEntries=0)))
 			Begin
 				if(@CntraAcID Is Not Null)Begin
 				if(@EnTp2>0)
 					Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 						(@EntryGuide,@CntraAcID,@Currncy,@Debit-@TrnCut,@DebitRate-@TrnCutRate,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @AccID ELSE Null END),@TNotes,(CASE When @JbTp>0 Then @JobID Else Null End),(CASE When @PrTp>0 Then @Project Else Null End),(CASE When @BrTp>0 Then @Branch Else Null End),(CASE When @AgTp>0 Then @Agent Else Null End),
 						(CASE When @CgTp>0 Then @Cg01 Else Null End),(CASE When @CgTp>0 Then @Cg02 Else Null End),(CASE When @CgTp>0 Then @Cg03 Else Null End),(CASE When @CgTp>0 Then @Cg04 Else Null End),(CASE When @CgTp>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp,@RowDate)
 				Else
 					Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 						(@EntryGuide,@CntraAcID,@Currncy,@Debit,@DebitRate,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @AccID ELSE Null END),@TNotes,(CASE When @JbTp>0 Then @JobID Else Null End),(CASE When @PrTp>0 Then @Project Else Null End),(CASE When @BrTp>0 Then @Branch Else Null End),(CASE When @AgTp>0 Then @Agent Else Null End),
 						(CASE When @CgTp>0 Then @Cg01 Else Null End),(CASE When @CgTp>0 Then @Cg02 Else Null End),(CASE When @CgTp>0 Then @Cg03 Else Null End),(CASE When @CgTp>0 Then @Cg04 Else Null End),(CASE When @CgTp>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp,@RowDate)
 				End
 				if(@TrnCut>0)
 				begin
 					Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 					(@EntryGuide,@TrnCutAcc,@Currncy,@TrnCut,@TrnCutRate,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @CntraAcID ELSE Null END),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @TrnCutNotes end),(CASE When @JbTp3>0 Then @JobID Else Null End),(CASE When @PrTp3>0 Then @Project Else Null End),(CASE When @BrTp3>0 Then @Branch Else Null End),(CASE When @AgTp3>0 Then @Agent Else Null End),
 				(CASE When @CgTp3>0 Then @Cg01 Else Null End),(CASE When @CgTp3>0 Then @Cg02 Else Null End),(CASE When @CgTp3>0 Then @Cg03 Else Null End),(CASE When @CgTp3>0 Then @Cg04 Else Null End),(CASE When @CgTp3>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp2,@RowDate)
 					if(@TrnCut>@Debit And @CntraAcID Is Not Null)
 					begin
 						Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 						(@EntryGuide,@CntraAcID,@Currncy,@TrnCut-@Debit,@TrnCutRate-@DebitRate,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @AccID ELSE Null END),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @TrnCutNotes end),(CASE When @JbTp>0 Then @JobID Else Null End),(CASE When @PrTp>0 Then @Project Else Null End),(CASE When @BrTp>0 Then @Branch Else Null End),(CASE When @AgTp>0 Then @Agent Else Null End),
 				(CASE When @CgTp>0 Then @Cg01 Else Null End),(CASE When @CgTp>0 Then @Cg02 Else Null End),(CASE When @CgTp>0 Then @Cg03 Else Null End),(CASE When @CgTp>0 Then @Cg04 Else Null End),(CASE When @CgTp>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp,@RowDate)
 					end
 				end
 			end
 		end
 		else
 		begin
 			if(@TruncateFromContraAc=0)
 			begin
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 					(@EntryGuide,@CntraAcID,@Currncy,@Credit,@CreditRate,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @AccID ELSE Null END),@TNotes,(CASE When @JbTp>0 Then @JobID Else Null End),(CASE When @PrTp>0 Then @Project Else Null End),(CASE When @BrTp>0 Then @Branch Else Null End),(CASE When @AgTp>0 Then @Agent Else Null End),
 					(CASE When @CgTp>0 Then @Cg01 Else Null End),(CASE When @CgTp>0 Then @Cg02 Else Null End),(CASE When @CgTp>0 Then @Cg03 Else Null End),(CASE When @CgTp>0 Then @Cg04 Else Null End),(CASE When @CgTp>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp,@RowDate)
 				if((@Credit-@TrnCut)>0 And @CntraAcID Is Not Null)
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 					(@EntryGuide,@AccID,@Currncy,@Credit-@TrnCut,@CreditRate-@TrnCutRate,(CASE WHEN @AutoSetContra>0 Then (Case When @EnTp2>0 THEN @CntraAcID ELSE IsNull(@BondContraAc,@CntraAcID) END) End),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @Notes end),(CASE When @JbTp2>0 Then @JobID Else Null End),(CASE When @PrTp2>0 Then @Project Else Null End),(CASE When @BrTp2>0 Then @Branch Else Null End),(CASE When @AgTp2>0 Then @Agent Else Null End),
 					(CASE When @CgTp2>0 Then @Cg01 Else Null End),(CASE When @CgTp2>0 Then @Cg02 Else Null End),(CASE When @CgTp2>0 Then @Cg03 Else Null End),(CASE When @CgTp2>0 Then @Cg04 Else Null End),(CASE When @CgTp2>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp2,@RowDate)
 				if(len(@Prc)>0)exec sp_executesql @Prc,@Parmt,@PAcG=@AccID,@PEntryG=@EntryGuide,@PBondG=@BondGuide,@PDbt=@Debit,@PCrt=@Credit,@RPDbt=@DebitRate,@RPCrt=@CreditRate,@PAcCoG=@BondContraAc,@PCoG=@JobID,@PCrG=@Currncy,@PPrG=@Project,@PBrG=@Branch
 				if(@CardMode!=1 Or (@BondType=3 And @BuiltTowEntries=0))
 				Begin
 					if(@TrnCut>0)
 					begin
 						Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 							(@EntryGuide,@TrnCutAcc,@Currncy,@TrnCut,@TrnCutRate,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @AccID ELSE Null END),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @TrnCutNotes end),(CASE When @JbTp3>0 Then @JobID Else Null End),(CASE When @PrTp3>0 Then @Project Else Null End),(CASE When @BrTp3>0 Then @Branch Else Null End),(CASE When @AgTp3>0 Then @Agent Else Null End),
 							(CASE When @CgTp3>0 Then @Cg01 Else Null End),(CASE When @CgTp3>0 Then @Cg02 Else Null End),(CASE When @CgTp3>0 Then @Cg03 Else Null End),(CASE When @CgTp3>0 Then @Cg04 Else Null End),(CASE When @CgTp3>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp2,@RowDate)
 						if(@TrnCut>@Credit And @CntraAcID Is Not Null)
 						begin
 							Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 							(@EntryGuide,@CntraAcID,@Currncy,@TrnCut-@Credit,@TrnCutRate-@CreditRate,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @AccID ELSE Null END),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @TrnCutNotes end),(CASE When @JbTp>0 Then @JobID Else Null End),(CASE When @PrTp>0 Then @Project Else Null End),(CASE When @BrTp>0 Then @Branch Else Null End),(CASE When @AgTp>0 Then @Agent Else Null End),
 							(CASE When @CgTp>0 Then @Cg01 Else Null End),(CASE When @CgTp>0 Then @Cg02 Else Null End),(CASE When @CgTp>0 Then @Cg03 Else Null End),(CASE When @CgTp>0 Then @Cg04 Else Null End),(CASE When @CgTp>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp,@RowDate)
 						end
 						Select @CmmTaxRatio=TaxRatio/100,@CreditCardAcID=AccountID ,@CreditCardTaxAc=TaxAccountID From TBL025 Where CardGuide=@CreditCard
 						if(@CmmTaxRatio>0)
 						begin
 							Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 								(@EntryGuide,@CreditCardAcID,@Currncy,@TrnCut*@CmmTaxRatio,@TrnCutRate*@CmmTaxRatio,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @CreditCardTaxAc ELSE Null END),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @TrnCutNotes end),(CASE When @JbTp3>0 Then @JobID Else Null End),(CASE When @PrTp3>0 Then @Project Else Null End),(CASE When @BrTp3>0 Then @Branch Else Null End),(CASE When @AgTp3>0 Then @Agent Else Null End),
 								(CASE When @CgTp3>0 Then @Cg01 Else Null End),(CASE When @CgTp3>0 Then @Cg02 Else Null End),(CASE When @CgTp3>0 Then @Cg03 Else Null End),(CASE When @CgTp3>0 Then @Cg04 Else Null End),(CASE When @CgTp3>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp2,@RowDate)
 							Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 								(@EntryGuide,@CreditCardTaxAc,@Currncy,@TrnCut*@CmmTaxRatio,@TrnCutRate*@CmmTaxRatio,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @CreditCardAcID ELSE Null END),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @TrnCutNotes end),(CASE When @JbTp>0 Then @JobID Else Null End),(CASE When @PrTp>0 Then @Project Else Null End),(CASE When @BrTp>0 Then @Branch Else Null End),(CASE When @AgTp>0 Then @Agent Else Null End),
 								(CASE When @CgTp>0 Then @Cg01 Else Null End),(CASE When @CgTp>0 Then @Cg02 Else Null End),(CASE When @CgTp>0 Then @Cg03 Else Null End),(CASE When @CgTp>0 Then @Cg04 Else Null End),(CASE When @CgTp>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp,@RowDate)
 						end
 					end
 				end
 			end
 			else
 			begin
 				if((@Credit-@TrnCut)>0 And @CntraAcID Is Not Null)
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 					(@EntryGuide,@CntraAcID,@Currncy,@Credit-@TrnCut,@CreditRate-@TrnCutRate,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @AccID ELSE Null END),@TNotes,(CASE When @JbTp>0 Then @JobID Else Null End),(CASE When @PrTp>0 Then @Project Else Null End),(CASE When @BrTp>0 Then @Branch Else Null End),(CASE When @AgTp>0 Then @Agent Else Null End),
 					(CASE When @CgTp>0 Then @Cg01 Else Null End),(CASE When @CgTp>0 Then @Cg02 Else Null End),(CASE When @CgTp>0 Then @Cg03 Else Null End),(CASE When @CgTp>0 Then @Cg04 Else Null End),(CASE When @CgTp>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp,@RowDate)
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 					(@EntryGuide,@AccID,@Currncy,@Credit,@CreditRate,(CASE WHEN @AutoSetContra>0 Then (Case When @EnTp2>0 THEN @CntraAcID ELSE IsNull(@BondContraAc,@CntraAcID) END) End),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @Notes end),(CASE When @JbTp2>0 Then @JobID Else Null End),(CASE When @PrTp2>0 Then @Project Else Null End),(CASE When @BrTp2>0 Then @Branch Else Null End),(CASE When @AgTp2>0 Then @Agent Else Null End),
 					(CASE When @CgTp2>0 Then @Cg01 Else Null End),(CASE When @CgTp2>0 Then @Cg02 Else Null End),(CASE When @CgTp2>0 Then @Cg03 Else Null End),(CASE When @CgTp2>0 Then @Cg04 Else Null End),(CASE When @CgTp2>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp2,@RowDate)
 				if(len(@Prc)>0)exec sp_executesql @Prc,@Parmt,@PAcG=@AccID,@PEntryG=@EntryGuide,@PBondG=@BondGuide,@PDbt=@Debit,@PCrt=@Credit,@RPDbt=@DebitRate,@RPCrt=@CreditRate,@PAcCoG=@BondContraAc,@PCoG=@JobID,@PCrG=@Currncy,@PPrG=@Project,@PBrG=@Branch
 				if(@CardMode!=1 Or (@BondType=3 And @BuiltTowEntries=0))
 				Begin
 					if(@TrnCut>0)
 					begin
 						Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 							(@EntryGuide,@TrnCutAcc,@Currncy,@TrnCut,@TrnCutRate,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @AccID ELSE Null END),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @TrnCutNotes end),(CASE When @JbTp3>0 Then @JobID Else Null End),(CASE When @PrTp3>0 Then @Project Else Null End),(CASE When @BrTp3>0 Then @Branch Else Null End),(CASE When @AgTp3>0 Then @Agent Else Null End),
 							(CASE When @CgTp3>0 Then @Cg01 Else Null End),(CASE When @CgTp3>0 Then @Cg02 Else Null End),(CASE When @CgTp3>0 Then @Cg03 Else Null End),(CASE When @CgTp3>0 Then @Cg04 Else Null End),(CASE When @CgTp3>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp2,@RowDate)
 						if(@TrnCut>@Credit And @CntraAcID Is Not Null)
 						begin
 							Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 							(@EntryGuide,@CntraAcID,@Currncy,@TrnCut-@Credit,@TrnCutRate-@CreditRate,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @AccID ELSE Null END),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @TrnCutNotes end),(CASE When @JbTp>0 Then @JobID Else Null End),(CASE When @PrTp>0 Then @Project Else Null End),(CASE When @BrTp>0 Then @Branch Else Null End),(CASE When @AgTp>0 Then @Agent Else Null End),
 							(CASE When @CgTp>0 Then @Cg01 Else Null End),(CASE When @CgTp>0 Then @Cg02 Else Null End),(CASE When @CgTp>0 Then @Cg03 Else Null End),(CASE When @CgTp>0 Then @Cg04 Else Null End),(CASE When @CgTp>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp,@RowDate)
 						end
 						Select @CmmTaxRatio=TaxRatio/100,@CreditCardAcID=AccountID ,@CreditCardTaxAc=TaxAccountID From TBL025 Where CardGuide=@CreditCard
 						if(@CmmTaxRatio>0)
 						begin
 							Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 								(@EntryGuide,@CreditCardAcID,@Currncy,@TrnCut*@CmmTaxRatio,@TrnCutRate*@CmmTaxRatio,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @CreditCardTaxAc ELSE Null END),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @TrnCutNotes end),(CASE When @JbTp3>0 Then @JobID Else Null End),(CASE When @PrTp3>0 Then @Project Else Null End),(CASE When @BrTp3>0 Then @Branch Else Null End),(CASE When @AgTp3>0 Then @Agent Else Null End),
 								(CASE When @CgTp3>0 Then @Cg01 Else Null End),(CASE When @CgTp3>0 Then @Cg02 Else Null End),(CASE When @CgTp3>0 Then @Cg03 Else Null End),(CASE When @CgTp3>0 Then @Cg04 Else Null End),(CASE When @CgTp3>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp2,@RowDate)
 							Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 								(@EntryGuide,@CreditCardTaxAc,@Currncy,@TrnCut*@CmmTaxRatio,@TrnCutRate*@CmmTaxRatio,(CASE WHEN @AutoSetContra>0 And @EnTp>0 THEN @CreditCardAcID ELSE Null END),(case @UseHeadNoteOnRecord when 1 Then @EntryNotes else @TrnCutNotes end),(CASE When @JbTp>0 Then @JobID Else Null End),(CASE When @PrTp>0 Then @Project Else Null End),(CASE When @BrTp>0 Then @Branch Else Null End),(CASE When @AgTp>0 Then @Agent Else Null End),
 								(CASE When @CgTp>0 Then @Cg01 Else Null End),(CASE When @CgTp>0 Then @Cg02 Else Null End),(CASE When @CgTp>0 Then @Cg03 Else Null End),(CASE When @CgTp>0 Then @Cg04 Else Null End),(CASE When @CgTp>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp,@RowDate)
 						end
 					end
 				end
 			end
 		end
 		if(@BlV=1)
 		begin
 			declare @bAcDbt uniqueidentifier
 			declare @bAcCrt uniqueidentifier
 			declare @bAcDbtTp tinyint
 			declare @bAcCrtTp tinyint
 			Set @bAcDbtTp=(Select BooleanOption2 From TBL009 Where CardGuide=@BondTypeGuide)
 			Set @bAcCrtTp=(Select BooleanOption3 From TBL009 Where CardGuide=@BondTypeGuide)
 			if(@bAcDbtTp=1)
 				Set @bAcDbt=@CntraAcID
 			else
 				Set @bAcDbt=@AccID
 			if(@bAcCrtTp=1)
 				Set @bAcCrt=@CntraAcID
 			else
 				Set @bAcCrt=@AccID
 			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,CostCenter,Description,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 				(@EntryGuide,@bAcDbt,@Currncy,@Debit+@Credit,@DebitRate+@CreditRate,@bAcCrt,(CASE When @JbTp2>0 Then @JobID Else Null End),@Notes,(CASE When @PrTp2>0 Then @Project Else Null End),(CASE When @BrTp2>0 Then @Branch Else Null End),(CASE When @AgTp2>0 Then @Agent Else Null End),
 				(CASE When @CgTp2>0 Then @Cg01 Else Null End),(CASE When @CgTp2>0 Then @Cg02 Else Null End),(CASE When @CgTp2>0 Then @Cg03 Else Null End),(CASE When @CgTp2>0 Then @Cg04 Else Null End),(CASE When @CgTp2>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp2,@RowDate)
 			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,CostCenter,Description,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5,NoMerge,RowDate)Values
 				(@EntryGuide,@bAcCrt,@Currncy,@Debit+@Credit,@DebitRate+@CreditRate,@bAcDbt,(CASE When @JbTp2>0 Then @JobID Else Null End),@Notes,(CASE When @PrTp2>0 Then @Project Else Null End),(CASE When @BrTp2>0 Then @Branch Else Null End),(CASE When @AgTp2>0 Then @Agent Else Null End),
 				(CASE When @CgTp2>0 Then @Cg01 Else Null End),(CASE When @CgTp2>0 Then @Cg02 Else Null End),(CASE When @CgTp2>0 Then @Cg03 Else Null End),(CASE When @CgTp2>0 Then @Cg04 Else Null End),(CASE When @CgTp2>0 Then @Cg05 Else Null End),@Notes2,@Notes3,@Notes4,@Notes5,@EnTp2,@RowDate)
 		end
 		Set @CntraAcID=@MnCntraAcID
 	FETCH NEXT FROM R INTO @CurRecord, @BondContraAc, @AccID,@JobID,@Currncy,@Debit,@Credit,@DebitRate,@CreditRate,
 		@Notes,@TrnCut,@TrnCutRate,@TrnCutAcc,@TrnCutNotes,@Project,@Branch,@Agent
 		,@Cg01,@Cg02,@Cg03,@Cg04,@Cg05,@Notes2,@Notes3,@Notes4,@Notes5,@ClCntra,@RowDate,@CreditCard
 		end
 	CLOSE R
 	Deallocate R
 	end
 if((Select EntryType From TBL009 Where CardGuide=@BondTypeGuide)>0)
 	exec Prc000 @EntryGuide
 if((Select Count(*) From TBL012 Where MainGuide=@EntryGuide)=0)
 begin
 	Alter Table TBL011 Disable Trigger All
 	Delete From TBL011 Where CardGuide=@EntryGuide
 	Alter Table TBL011 Enable Trigger All
 end
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc004]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure [dbo].[Prc004] (@BondGuide uniqueidentifier,@EntryNumber int) 
 as begin 
 declare @BlV tinyint 
 Declare @CntraAcID uniqueidentifier 
 Declare @MCntraAcID uniqueidentifier 
 Set @MCntraAcID=(Select IntermediateAccount From TBL009 Where CardGuide=(Select MainGuide From TBL010 Where CardGuide=@BondGuide)) 
 Declare @CurRecord int 
 Set @CurRecord=0 
 Declare @HeadCost uniqueidentifier 
 declare @IntmAc uniqueidentifier 
 Declare @HeadProject uniqueidentifier 
 Declare @HeadBranch uniqueidentifier 
 Declare @Currncy uniqueidentifier 
 Declare @BondTypeGuide uniqueidentifier 
 Declare @AccID uniqueidentifier 
 Declare @Debit float 
 Declare @Credit float 
 Declare @DebitRate float 
 Declare @CreditRate float 
 Declare @Notes nvarchar(255) 
 Declare @EntryGuide uniqueidentifier 
 Declare @EntryCurrncy uniqueidentifier 
 Declare @Posted bit 
 Declare @BondSecurity tinyint 
 Declare @DoneIn datetime 
 Declare @EntryDate datetime 
 Declare @EntryRate float 
 Declare @EntryNotes nvarchar(255) 
 declare @JbTp tinyint declare @JbTp2 tinyint 
 declare @PrTp tinyint declare @PrTp2 tinyint 
 declare @BrTp tinyint declare @BrTp2 tinyint 
 declare @CgTp tinyint declare @CgTp2 tinyint 
 Declare @Jb uniqueidentifier 
 Declare @Pr uniqueidentifier 
 Declare @Br uniqueidentifier 
 Declare @C1 uniqueidentifier 
 Declare @C2 uniqueidentifier 
 Declare @C3 uniqueidentifier 
 Declare @C4 uniqueidentifier 
 Declare @C5 uniqueidentifier 
 declare @BondDate datetime 
 Select @BondTypeGuide=MainGuide,@Posted=Posted,@DoneIn=DoneIn,@EntryDate=DueDate,@BondDate=BondDate,@EntryNotes=Notes,@EntryCurrncy=CurrencyGuide, 
 	@BondSecurity=Security,@EntryRate=Rate,@HeadCost=CostCenter,@HeadProject=Project,@HeadBranch=Branch 
 	From TBL010 Where CardGuide=@BondGuide 
 Set @EntryDate=(Select BondDate From TBL010 Where CardGuide=@BondGuide) 
 Select @BlV=BooleanOption1,@JbTp=CostCenterType,@JbTp2=CostCenterType2,@PrTp=ProjectType,@PrTp2=ProjectType2,@BrTp=BranchType,@BrTp2=BranchType2, 
 	@CgTp=CategoriesType,@CgTp2=CategoriesType2 From TBL009 Where CardGuide=@BondTypeGuide 
 declare @InFD datetime 
 Select @InFD=@EntryDate 
 if(dbo.Fun071(@BondDate)=0)return 
 Set @EntryGuide=newid() 
 if(@EntryNumber<1)Set @EntryNumber=dbo.Fun005() 
 if (isnull(@EntryNumber,0)=0)Set @EntryNumber=1 
 Insert Into TBL011 (CardGuide,EntryNumber,Posted,EntryDate,DoneIn,CurrencyGuide,Rate,Notes,BondGuide,Security)Values 
 	(@EntryGuide,@EntryNumber,@Posted,@InFD,@DoneIn,@EntryCurrncy,@EntryRate,@EntryNotes,@BondGuide,@BondSecurity) 
 DECLARE C08 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select AccountGuide,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,Notes,IsNull(CostCenter,@HeadCost),IsNull(Project,@HeadProject),IsNull(Branch,@HeadBranch), 
 	Category01,Category02,Category03,Category04,Category05,IntermediateAccount From TBL038 Where MainGuide=@BondGuide Order By ID --And IsNull(IsNull(CollectDate,DueDate),@BondDate)=@InFD 
 OPEN C08 
 FETCH NEXT FROM C08 INTO @AccID,@Currncy,@Debit,@Credit,@DebitRate,@CreditRate,@Notes,@Jb,@Pr,@Br,@C1,@C2,@C3,@C4,@C5,@IntmAc 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Set @CntraAcID=IsNull(@IntmAc,@MCntraAcID) 
 	if (@CntraAcID Is Not Null) 
 	begin 
 		if (@Debit>0) 
 		begin 
 			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 				(@EntryGuide,@AccID,@Currncy,@Debit,@DebitRate,@CntraAcID,@Notes,(CASE When @JbTp2>0 Then @Jb Else Null End),(CASE When @PrTp2>0 Then @Pr Else Null End),(CASE When @BrTp2>0 Then @Br Else Null End), 
 				(CASE When @CgTp2>0 Then @C1 Else Null End),(CASE When @CgTp2>0 Then @C2 Else Null End),(CASE When @CgTp2>0 Then @C3 Else Null End),(CASE When @CgTp2>0 Then @C4 Else Null End),(CASE When @CgTp2>0 Then @C5 Else Null End)) 
 			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 				(@EntryGuide,@CntraAcID,@Currncy,@Debit,@DebitRate,@AccID,@Notes,(CASE When @JbTp>0 Then @Jb Else Null End),(CASE When @PrTp>0 Then @Pr Else Null End),(CASE When @BrTp>0 Then @Br Else Null End), 
 				(CASE When @CgTp>0 Then @C1 Else Null End),(CASE When @CgTp>0 Then @C2 Else Null End),(CASE When @CgTp>0 Then @C3 Else Null End),(CASE When @CgTp>0 Then @C4 Else Null End),(CASE When @CgTp>0 Then @C5 Else Null End)) 
 		end 
 		else 
 		begin 
 			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 				(@EntryGuide,@CntraAcID,@Currncy,@Credit,@CreditRate,@AccID,@Notes,(CASE When @JbTp>0 Then @Jb Else Null End),(CASE When @PrTp>0 Then @Pr Else Null End),(CASE When @BrTp>0 Then @Br Else Null End), 
 				(CASE When @CgTp>0 Then @C1 Else Null End),(CASE When @CgTp>0 Then @C2 Else Null End),(CASE When @CgTp>0 Then @C3 Else Null End),(CASE When @CgTp>0 Then @C4 Else Null End),(CASE When @CgTp>0 Then @C5 Else Null End)) 
 			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 				(@EntryGuide,@AccID,@Currncy,@Credit,@CreditRate,@CntraAcID,@Notes,(CASE When @JbTp2>0 Then @Jb Else Null End),(CASE When @PrTp2>0 Then @Pr Else Null End),(CASE When @BrTp2>0 Then @Br Else Null End), 
 				(CASE When @CgTp2>0 Then @C1 Else Null End),(CASE When @CgTp2>0 Then @C2 Else Null End),(CASE When @CgTp2>0 Then @C3 Else Null End),(CASE When @CgTp2>0 Then @C4 Else Null End),(CASE When @CgTp2>0 Then @C5 Else Null End)) 
 		end 
 	end 
 	if(@BlV=1) 
 	begin 
 		declare @bAcDbt uniqueidentifier 
 		declare @bAcCrt uniqueidentifier 
 		declare @bAcDbtTp tinyint 
 		declare @bAcCrtTp tinyint 
 		Set @CntraAcID=(Select AccountGuide From TBL010 Where CardGuide=@BondGuide) 
 		Set @bAcDbtTp=(Select BooleanOption2 From TBL009 Where CardGuide=@BondTypeGuide) 
 		Set @bAcCrtTp=(Select BooleanOption3 From TBL009 Where CardGuide=@BondTypeGuide) 
 		if(@bAcDbtTp=1) 
 			Set @bAcDbt=@CntraAcID 
 		else 
 			Set @bAcDbt=@AccID 
 		if(@bAcCrtTp=1) 
 			Set @bAcCrt=@CntraAcID 
 		else 
 			Set @bAcCrt=@AccID 
 		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 			(@EntryGuide,@bAcDbt,@Currncy,@Debit+@Credit,@DebitRate+@CreditRate,@bAcCrt,@Notes,@Jb,@Pr,@Br,@C1,@C2,@C3,@C4,@C5) 
 		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 			(@EntryGuide,@bAcCrt,@Currncy,@Debit+@Credit,@DebitRate+@CreditRate,@bAcDbt,@Notes,@Jb,@Pr,@Br,@C1,@C2,@C3,@C4,@C5) 
 	end 
 FETCH NEXT FROM C08 INTO @AccID,@Currncy,@Debit,@Credit,@DebitRate,@CreditRate,@Notes,@Jb,@Pr,@Br,@C1,@C2,@C3,@C4,@C5,@IntmAc 
 END 
 CLOSE C08 
 Deallocate C08 
 Set @EntryNumber=0 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc005]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc005](@BondGuide uniqueidentifier) 
 as begin 
 declare @Nts nvarchar(255) 
 declare @Pstd tinyint 
 declare @EntryDte datetime 
 declare @BondDate datetime 
 declare @DoneIn datetime 
 declare @Srct tinyint 
 declare @BlV tinyint 
 declare @IntmAc uniqueidentifier 
 Declare @AccID uniqueidentifier 
 Declare @Debit float 
 Declare @Credit float 
 Declare @DebitRate float 
 Declare @CreditRate float 
 declare @Rte float 
 declare @Collected bit 
 declare @Vlu float 
 declare @VluRte float 
 declare @Crnt uniqueidentifier 
 declare @Acnt uniqueidentifier 
 declare @CollectAcnt uniqueidentifier 
 declare @SameAcc bit 
 declare @ReverseCollectEntry bit 
 declare @BondType uniqueidentifier 
 Declare @Jb uniqueidentifier 
 declare @D int 
 Declare @HeadCost uniqueidentifier 
 Declare @HeadProject uniqueidentifier 
 Declare @HeadBranch uniqueidentifier 
 declare @JbTp tinyint declare @JbTp2 tinyint 
 declare @PrTp tinyint declare @PrTp2 tinyint 
 declare @BrTp tinyint declare @BrTp2 tinyint 
 declare @CgTp tinyint declare @CgTp2 tinyint 
 Declare @Pr uniqueidentifier 
 Declare @Br uniqueidentifier 
 Declare @C1 uniqueidentifier 
 Declare @C2 uniqueidentifier 
 Declare @C3 uniqueidentifier 
 Declare @C4 uniqueidentifier 
 Declare @C5 uniqueidentifier 
 Declare @MCollectAcnt uniqueidentifier 
 Set @BondType=(Select MainGuide From TBL010 Where CardGuide=@BondGuide) 
 declare @AffectContraAccountInEntry bit 
 Select @ReverseCollectEntry=ReverseCollectEntry,@BlV=BooleanOption1,@AffectContraAccountInEntry=AffectContraAccountInEntry From TBL009 Where CardGuide=@BondType 
 Select @Pstd=Posted,@BondDate=BondDate,@DoneIn=DoneIn,@Nts=Notes,@Srct=Security,@Rte=Rate,@Crnt=CurrencyGuide,@Acnt=AccountGuide, 
 	@HeadCost=CostCenter,@HeadProject=Project,@HeadBranch=Branch From TBL010 Where CardGuide=@BondGuide 
 declare @SingleEntry bit 
 Set @SingleEntry=1 
 if((Select BuiltTowEntries From TBL009 Where CardGuide=@BondType)>0) 
 Set @SingleEntry=0 
 Select @MCollectAcnt=CollectAccount,@SameAcc=UseSameAccountForCollect,@JbTp=CostCenterType,@JbTp2=CostCenterType2,@PrTp=ProjectType,@PrTp2=ProjectType2,@BrTp=BranchType,@BrTp2=BranchType2, 
 @CgTp=CategoriesType,@CgTp2=CategoriesType2 From TBL009 Where CardGuide=@BondType 
 declare @EnNum int 
 declare @EntryGuide uniqueidentifier 
 declare @CntAccount uniqueidentifier 
 declare @TransferAc uniqueidentifier 
 declare @Row uniqueidentifier 
 DECLARE C09 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select RowGuide,IsNull(CollectDate,@BondDate),ID,AccountGuide,Collected,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,Notes,IsNull(CostCenter,@HeadCost),IsNull(Project,@HeadProject),IsNull(Branch,@HeadBranch), 
 	Category01,Category02,Category03,Category04,Category05,ContraAccount,IntermediateAccount,(case when SetoffDate Is Not Null Then TransferToAccount End) 
 	From TBL038 
 	Where MainGuide=@BondGuide 
 	And dbo.Fun071(IsNull(CollectDate,@BondDate))=1 
 	Order By ID 
 OPEN C09 
 FETCH NEXT FROM C09 INTO @Row,@EntryDte,@D,@AccID,@Collected,@Crnt,@Debit,@Credit,@DebitRate,@CreditRate,@Nts,@Jb,@Pr,@Br,@C1,@C2,@C3,@C4,@C5,@CntAccount,@IntmAc,@TransferAc 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Set @CollectAcnt=IsNull(@TransferAc,IsNull(@IntmAc,@MCollectAcnt)) 
 	if(@Collected=0) 
 		Update TBL038 Set [CollectEntry]=null Where ID=@D 
 	else 
 	begin 
 		Set @EnNum=isnull( dbo.Fun005(),0) 
 		if (@EnNum=0)Set @EnNum=1 
 		Set @EntryGuide=newid() 
 		if (@EntryDte Is Not Null) 
 		begin 
 			Insert Into TBL011 (CardGuide,RowGuide,TypeID,EntryNumber,Posted,EntryDate,DoneIn,CurrencyGuide,Rate,Notes,BondGuide,Security)Values 
 				(@EntryGuide,@Row,1,@EnNum,@Pstd,@EntryDte,@DoneIn,@Crnt,@Rte,@Nts,@BondGuide,@Srct) 
 			if(@SingleEntry>0) 
 				Set @CollectAcnt=@AccID 
 			if(@SameAcc>0) 
 				Set @CollectAcnt=@AccID 
 			if(@ReverseCollectEntry>0) 
 			begin 
 				declare @TmpAc uniqueidentifier 
 				Set @TmpAc=@Acnt 
 				Set @Acnt=@CollectAcnt 
 				Set @CollectAcnt=@TmpAc 
 			end 
 			if(@Debit>0) 
 			begin 
 				Set @Vlu=@Debit 
 				Set @VluRte=@DebitRate 
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 					(@EntryGuide,@CollectAcnt,@Crnt,@Vlu,@VluRte,(CASE @AffectContraAccountInEntry When 1 Then IsNull(@CntAccount,@Acnt) Else @Acnt End),@Nts,(CASE When @JbTp>0 Then @Jb Else Null End),(CASE When @PrTp>0 Then @Pr Else Null End),(CASE When @BrTp>0 Then @Br Else Null End), 
 					(CASE When @CgTp>0 Then @C1 Else Null End),(CASE When @CgTp>0 Then @C2 Else Null End),(CASE When @CgTp>0 Then @C3 Else Null End),(CASE When @CgTp>0 Then @C4 Else Null End),(CASE When @CgTp>0 Then @C5 Else Null End)) 
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 					(@EntryGuide,(CASE @AffectContraAccountInEntry When 1 Then IsNull(@CntAccount,@Acnt) Else @Acnt End),@Crnt,@Vlu,@VluRte,@CollectAcnt,@Nts,(CASE When @JbTp2>0 Then @Jb Else Null End),(CASE When @PrTp2>0 Then @Pr Else Null End),(CASE When @BrTp2>0 Then @Br Else Null End), 
 					(CASE When @CgTp2>0 Then @C1 Else Null End),(CASE When @CgTp2>0 Then @C2 Else Null End),(CASE When @CgTp2>0 Then @C3 Else Null End),(CASE When @CgTp2>0 Then @C4 Else Null End),(CASE When @CgTp2>0 Then @C5 Else Null End)) 
 			end 
 			else 
 			begin 
 				Set @Vlu=@Credit 
 				Set @VluRte=@CreditRate 
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 					(@EntryGuide,(CASE @AffectContraAccountInEntry When 1 Then IsNull(@CntAccount,@Acnt) Else @Acnt End),@Crnt,@Vlu,@VluRte,@CollectAcnt,@Nts,(CASE When @JbTp2>0 Then @Jb Else Null End),(CASE When @PrTp2>0 Then @Pr Else Null End),(CASE When @BrTp2>0 Then @Br Else Null End), 
 					(CASE When @CgTp2>0 Then @C1 Else Null End),(CASE When @CgTp2>0 Then @C2 Else Null End),(CASE When @CgTp2>0 Then @C3 Else Null End),(CASE When @CgTp2>0 Then @C4 Else Null End),(CASE When @CgTp2>0 Then @C5 Else Null End)) 
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 					(@EntryGuide,@CollectAcnt,@Crnt,@Vlu,@VluRte,(CASE @AffectContraAccountInEntry When 1 Then IsNull(@CntAccount,@Acnt) Else @Acnt End),@Nts,(CASE When @JbTp>0 Then @Jb Else Null End),(CASE When @PrTp>0 Then @Pr Else Null End),(CASE When @BrTp>0 Then @Br Else Null End), 
 					(CASE When @CgTp>0 Then @C1 Else Null End),(CASE When @CgTp>0 Then @C2 Else Null End),(CASE When @CgTp>0 Then @C3 Else Null End),(CASE When @CgTp>0 Then @C4 Else Null End),(CASE When @CgTp>0 Then @C5 Else Null End)) 
 			end 
 			if(@BlV=2) 
 			begin 
 				declare @bAcDbt uniqueidentifier 
 				declare @bAcCrt uniqueidentifier 
 				declare @bAcDbtTp tinyint 
 				declare @bAcCrtTp tinyint 
 				Set @bAcDbtTp=(Select BooleanOption2 From TBL009 Where CardGuide=@BondType) 
 				Set @bAcCrtTp=(Select BooleanOption3 From TBL009 Where CardGuide=@BondType) 
 				if(@bAcDbtTp=1) 
 					Set @bAcDbt=@Acnt 
 				else 
 					Set @bAcDbt=@AccID 
 				if(@bAcCrtTp=1) 
 					Set @bAcCrt=@Acnt 
 				else 
 					Set @bAcCrt=@AccID 
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 					(@EntryGuide,@bAcDbt,@Crnt,@Vlu,@VluRte,@bAcCrt,@Nts,@Jb,@Pr,@Br,@C1,@C2,@C3,@C4,@C5) 
 				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter,Project,Branch,Category01,Category02,Category03,Category04,Category05)Values 
 					(@EntryGuide,@bAcCrt,@Crnt,@Vlu,@VluRte,@bAcDbt,@Nts,@Jb,@Pr,@Br,@C1,@C2,@C3,@C4,@C5) 
 			end 
 			Update TBL038 Set [CollectEntry]=@EntryGuide Where ID=@D 
 		end 
 	end 
 	FETCH NEXT FROM C09 INTO @Row,@EntryDte,@D,@AccID,@Collected,@Crnt,@Debit,@Credit,@DebitRate,@CreditRate,@Nts,@Jb,@Pr,@Br,@C1,@C2,@C3,@C4,@C5,@CntAccount,@IntmAc,@TransferAc 
 END 
 CLOSE C09 
 Deallocate C09 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc006]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc006](@BondGuide uniqueidentifier) 
 as begin 
 declare @BondType uniqueidentifier 
 set @BondType=(Select MainGuide From TBL010 Where CardGuide=@BondGuide) 
 if((Select BondType From TBL009 Where CardGuide=@BondType)=3) 
 begin 
 	declare @BID int 
 	set @BID=0 
 	declare @EntryDate datetime 
 	declare @DoneIn datetime 
 	declare @Notes nvarchar(255) 
 	declare @EntrySec tinyint 
 	declare @Posted tinyint 
 	declare @EndrsmntAcc uniqueidentifier 
 	declare @EntryNumber int 
 	declare @CrrID uniqueidentifier 
 	declare @EntryID uniqueidentifier 
 	declare @Vlu float 
 	declare @VluRate float 
 	declare @Rte float 
 	declare @ContraAc uniqueidentifier 
 	declare @Collected bit 
 	declare @AccountGuide uniqueidentifier 
 	declare @IntermediateAccount uniqueidentifier 
 	declare @Job uniqueidentifier 
 	declare @Prj uniqueidentifier 
 	declare @Brn uniqueidentifier 
 	declare @Nts nvarchar(255) 
 	declare @TJob uniqueidentifier 
 	declare @TPrj uniqueidentifier 
 	declare @TBrn uniqueidentifier 
 	declare @Row uniqueidentifier 
 	declare @Debit float 
 	declare @Credit float 
 	declare @DebitRate float 
 	declare @CreditRate float 
 	Select @IntermediateAccount=IntermediateAccount From TBL009 Where CardGuide=(Select MainGuide From TBL010 Where CardGuide=@BondGuide) 
 	Select @Job=CostCenter,@Prj=Project,@Brn=Branch,@Posted=Posted,@EntrySec=Security,@DoneIn=DoneIn,@Nts=Notes From TBL010 Where CardGuide=@BondGuide 
 	DECLARE CPrc006 CURSOR READ_ONLY FAST_FORWARD FOR 
 		SELECT TBL038.RowGuide,TBL038.ID,TBL038.Collected,IsNull(TBL010.AccountGuide,TBL038.AccountGuide),TBL038.EndorseToAccountGuide,TBL038.CurrencyGuide,TBL038.Debit,TBL038.Credit,TBL038.DebitRate,TBL038.CreditRate,IsNull(TBL038.CostCenter,@Job),IsNull(TBL038.Project,@Prj),IsNull(TBL038.Branch,@Brn),TBL038.EndorsementDate,@Nts 
 		FROM TBL038 Inner Join TBL010 On TBL010.CardGuide=TBL038.MainGuide Where TBL038.MainGuide=@BondGuide And TBL038.EndorsementDate Is Not Null Order By TBL038.ID 
 	OPEN CPrc006 
 	FETCH NEXT FROM CPrc006 INTO @Row,@BID,@Collected,@AccountGuide,@EndrsmntAcc,@CrrID,@Debit,@Credit,@DebitRate,@CreditRate,@TJob,@TPrj,@TBrn,@EntryDate,@Notes 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		if((@EntryDate Is Not Null)And(@EndrsmntAcc Is not Null)And(@Collected=0) And dbo.Fun071(@EntryDate)=1) 
 		begin 
 			if((Select BuiltTowEntries From TBL009 Where CardGuide=@BondType)>0) 
 			begin 
 				Set @ContraAc=@IntermediateAccount 
 			end 
 			else 
 			begin 
 				Set @ContraAc=@AccountGuide 
 			end 
 			begin 
 				set @EntryID=newid() 
 				set @EntryNumber=dbo.Fun005() 
 				if((Select Credit From TBL038 Where ID=@BID)>0) 
 				begin 
 					Set @Vlu=@Credit 
 					Set @VluRate=@CreditRate 
 					Set @Rte=(@Vlu)/(@VluRate) 
 					Insert Into TBL011(CardGuide,RowGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,CostCenter,Project,Branch)Values 
 						(@EntryID,@Row,@EntryNumber,@Posted,@EntrySec,@EntryDate,@DoneIn,@CrrID,@BondGuide,@Rte,@TJob,@TPrj,@TBrn) 
 					Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,Description,CostCenter,Project,Branch)Values 
 						(@EntryID,@EndrsmntAcc,@CrrID,@Vlu,@VluRate,@Notes,@TJob,@TPrj,@TBrn) 
 					Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,Description,CostCenter,Project,Branch)Values 
 						(@EntryID,@ContraAc,@CrrID,@Vlu,@VluRate,@Notes,@TJob,@TPrj,@TBrn) 
 				end 
 				else 
 				begin 
 					Set @Vlu=@Debit 
 					Set @VluRate=@DebitRate 
 					Set @Rte=(@Vlu)/(@VluRate) 
 					Insert Into TBL011(CardGuide,RowGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,CostCenter,Project,Branch)Values 
 						(@EntryID,@Row,@EntryNumber,@Posted,@EntrySec,@EntryDate,@DoneIn,@CrrID,@BondGuide,@Rte,@TJob,@TPrj,@TBrn) 
 					Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,Description,CostCenter,Project,Branch)Values 
 						(@EntryID,@ContraAc,@CrrID,@Vlu,@VluRate,@Notes,@TJob,@TPrj,@TBrn) 
 					Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,Description,CostCenter,Project,Branch)Values 
 						(@EntryID,@EndrsmntAcc,@CrrID,@Vlu,@VluRate,@Notes,@TJob,@TPrj,@TBrn) 
 				end 
 			end 
 		end 
 		FETCH NEXT FROM CPrc006 INTO @Row,@BID,@Collected,@AccountGuide,@EndrsmntAcc,@CrrID,@Debit,@Credit,@DebitRate,@CreditRate,@TJob,@TPrj,@TBrn,@EntryDate,@Notes 
 	end 
 	CLOSE CPrc006 
 	Deallocate CPrc006 
 end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc007]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc007](@BillGuide uniqueidentifier) 
	As 
	begin 
		Delete From TBL022 Where ContraGuide=@BillGuide 
		declare @CntraGd uniqueidentifier 
		declare @StoreGd uniqueidentifier 
		declare @CurrencyGd uniqueidentifier 
		declare @AgntGd uniqueidentifier 
		declare @PostToAccount uniqueidentifier 
		declare @Dte datetime 
		declare @DoneIn datetime 
		declare @BNum int 
		declare @Poset tinyint 
		declare @Security tinyint 
		declare @Rte float 
		Set @CntraGd=(Select CardGuide From TBL020 Where MainBill=(Select MainGuide From TBL022 Where CardGuide=@BillGuide)) 
		Set @StoreGd=(Select StoreGuide From TBL022 Where CardGuide=@BillGuide) 
		Set @CurrencyGd=(Select CurrencyGuide From TBL022 Where CardGuide=@BillGuide) 
		Set @Dte=(Select ReturnDate From TBL022 Where CardGuide=@BillGuide) 
		Set @DoneIn=(Select DoneIn From TBL022 Where CardGuide=@BillGuide) 
		Set @BNum=(Select BillNumber From TBL022 Where CardGuide=@BillGuide) 
		Set @Rte=(Select Rate From TBL022 Where CardGuide=@BillGuide) 
		Set @AgntGd=(Select AgentGuide From TBL022 Where CardGuide=@BillGuide) 
		Set @PostToAccount=(Select PostToAccount From TBL022 Where CardGuide=@BillGuide) 
		Set @Poset=(Select Returned From TBL022 Where CardGuide=@BillGuide) 
		Set @Security=(Select Security From TBL022 Where CardGuide=@BillGuide) 
		declare @ProductGuide uniqueidentifier 
		declare @Quantity float 
		declare @Unit tinyint 
		declare @TotalValue float 
		declare @NewBillGd uniqueidentifier 
		declare @DiscountValue float 
		declare @ExtraValue float 
		declare @StoreID uniqueidentifier 
		declare @ExpiryDate datetime 
		declare @Length float 
		declare @Width float 
		declare @Hieght float 
		declare @TaxValue float 
		Set @NewBillGd=newid() 
		if(@Dte>0) 
		begin 
			Insert Into TBL022(CardGuide,MainGuide,StoreGuide,CurrencyGuide,BillNumber,Rate,AgentGuide,PostToAccount,Posted,Security,ContraGuide,BillDate)Values 
				(@NewBillGd,@CntraGd,@StoreGd,@CurrencyGd,@BNum,@Rte,@AgntGd,@PostToAccount,@Poset,@Security,@BillGuide,@Dte) 
			Declare @CurID int 
			Set @CurID=0 
			while ((Select Count(*) From TBL023 Where ID>@CurID And MainGuide=@BillGuide)>0) 
			begin 
				Set @CurID=(Select Min(ID) From TBL023 Where ID>@CurID And MainGuide=@BillGuide) 
				Set @ProductGuide=(Select ProductGuide From TBL023 Where ID=@CurID) 
				Set @Quantity=(Select Quantity From TBL023 Where ID=@CurID) 
				Set @Unit=(Select Unit From TBL023 Where ID=@CurID) 
				Set @TotalValue=(Select TotalValue From TBL023 Where ID=@CurID) 
				Set @DiscountValue=(Select DiscountValue From TBL023 Where ID=@CurID) 
				Set @ExtraValue=(Select ExtraValue From TBL023 Where ID=@CurID) 
				Set @StoreID=(Select StoreID From TBL023 Where ID=@CurID) 
				Set @ExpiryDate=(Select ExpiryDate From TBL023 Where ID=@CurID) 
				Set @Length=(Select Length From TBL023 Where ID=@CurID) 
				Set @Width=(Select Width From TBL023 Where ID=@CurID) 
				Set @Hieght=(Select Hieght From TBL023 Where ID=@CurID) 
				Set @TaxValue=(Select TaxValue From TBL023 Where ID=@CurID) 
				Insert Into TBL023(MainGuide,ProductGuide,Quantity,Unit,TotalValue,DiscountValue,ExtraValue,StoreID,ExpiryDate,Length,Width,Hieght,TaxValue)Values 
					(@NewBillGd,@ProductGuide,@Quantity,@Unit,@TotalValue,@DiscountValue,@ExtraValue,@StoreID,@ExpiryDate,@Length,@Width,@Hieght,@TaxValue) 
			end 
		end 
	End
GO
/****** Object:  StoredProcedure [dbo].[Prc008]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[Prc008](@BillGuide uniqueidentifier,@ItemDescountDesc nvarchar(255),@ItemExtrasDesc nvarchar(255),@ForceBuildEntry bit) 
 as begin
 ------------------Check For Auto Locked Related Bills------------------
 if((Select Count(*) From TBL020 Where BooleanOption28=1)>0)
 begin
 	declare @Tb table(CardGuide uniqueidentifier,MainGuide uniqueidentifier,ProductGuide uniqueidentifier,BillQty float,RelatedQty float,RestQty float)
 	Insert Into @Tb(CardGuide,ProductGuide,BillQty,RelatedQty,RestQty)
 	Select a.CardGuide,a.ProductGuide,Sum(a.InvoiceMovementSide*a.Qty) As BillQty,Sum(a.InvoiceMovementSide*(ISNULL(b.Qty*a.InvoiceMovementSide,0))) As RelatedQty,
 	Round(Sum(a.InvoiceMovementSide*(a.Qty-ISNULL(b.Qty*-1,0))),4) As RestQty
 	From
 	(
 	Select b.CardGuide,a.ProductGuide,b.MainGuide,c.InvoiceMovementSide,
 	Sum((a.Quantity+a.ExtraQuantity) * (case a.Unit When 3 Then d.Factor3 When 2 Then d.Factor2 Else 1 end))*c.InvoiceMovementSide As Qty From TBL023 a
 	Inner Join TBL022 b On a.MainGuide=b.CardGuide
 	Inner Join TBL020 c On b.MainGuide=c.CardGuide
 	Inner Join TBL007 d On a.ProductGuide=d.CardGuide
 	Where c.BooleanOption28=1
 	Group By b.CardGuide,a.ProductGuide,b.MainGuide,c.InvoiceMovementSide
 	)a
 	Left Join
 	(
 	Select a.SourceBill,a.ProductGuide,--b.MainGuide As RelatedBillType,
 	Sum((a.Quantity+a.ExtraQuantity) * (case a.Unit When 3 Then d.Factor3 When 2 Then d.Factor2 Else 1 end) * IsNull(r.BillSide,c.InvoiceMovementSide)) As Qty From TBL023 a
 	Inner Join TBL022 b On a.MainGuide=b.CardGuide
 	Inner Join TBL007 d On a.ProductGuide=d.CardGuide
 	Inner Join TBL020 c On b.MainGuide=c.CardGuide
 	Inner Join TBL022 s On a.SourceBill=s.CardGuide
 	Left Join TBL129 r On r.MainGuide=s.MainGuide And r.BillGuide=b.MainGuide
 	Group By a.SourceBill,a.ProductGuide
 	)b
 	On a.CardGuide=b.SourceBill And a.ProductGuide=b.ProductGuide
 	Group By a.CardGuide,a.ProductGuide
 	alter table TBL022 disable trigger All
 	Update b Set[LockRelations]=a.Rst From (Select CardGuide,(case when a.RestQty>0 then 0 else 1 end) As Rst From
 	(Select CardGuide,Sum(BillQty)As BillQty,Sum(RelatedQty)As RelatedQty,Sum(RestQty)As RestQty From @Tb Group By CardGuide)a)a
 	Inner Join TBL022 b On a.CardGuide=b.CardGuide Where a.Rst<>b.LockRelations
 end
 -----------------------------------------------
 declare @BillType uniqueidentifier
 Declare @EnNum int
 declare @BillTypeID int
 declare @BillAgentIsRecipient bit
 declare @OnlyReserved bit
 declare @RecipientBill uniqueidentifier
 Select @BillType=MainGuide,@EnNum=BillNumber From TBL022 Where CardGuide=@BillGuide
 Select @BillTypeID=BillType,@RecipientBill=RecipientBill,@BillAgentIsRecipient=BooleanOption35,@OnlyReserved=BooleanOption38 From TBL020 Where CardGuide=@BillType
 Delete From TBL022 Where ContraGuide=@BillGuide And GeneratedBill=1
 exec dbo.Prc067 22,0
 ALTER TABLE TBL022 DISABLE TRIGGER ALL
 Update TBL022 Set[BillNumber]=dbo.Fun099(@BillGuide,@BillType,@EnNum)Where CardGuide=@BillGuide
 exec dbo.Prc067 22,1
 Set @EnNum=(Select Min(EntryNumber)From TBL011 Where BillGuide=@BillGuide)
 Delete From TBL010 Where BillGuide=@BillGuide
 Delete From TBL011 Where BillGuide=@BillGuide
 exec Prc002 @BillGuide,@ItemDescountDesc,@ItemExtrasDesc,@EnNum ,@ForceBuildEntry
 if(@BillTypeID=4)
 	exec Prc007 @BillGuide
 if((Select Count(*) From TBL060 Where BillGuide=@BillGuide)>0)
 begin
 	declare @BondType uniqueidentifier
 	Set @BondType=(Select InstalmentBondGuide From TBL020 Where CardGuide=@BillType)
 	if(@BondType Is Not Null)
 	Begin
 		declare @NewBond uniqueidentifier
 		declare @NewBondNumber int
 		declare @CrID uniqueidentifier
 		declare @JbID uniqueidentifier
 		declare @PrID uniqueidentifier
 		declare @BrID uniqueidentifier
 		declare @AcID uniqueidentifier
 		declare @MainAc uniqueidentifier
 		declare @MainDate datetime
 		declare @DoneIn datetime
 		declare @Rte float
 		declare @Nts nvarchar (255)
 		declare @Posted tinyint
 		declare @Sec tinyint
 		if ((Select Count(*) From TBL010 Where BillGuide=@BillGuide)>0)
 		begin
 			Set @NewBond=(Select Top 1 CardGuide From TBL010 Where BillGuide=@BillGuide)
 			Set @NewBondNumber =(Select Top 1 BondNumber From TBL010 Where BillGuide=@BillGuide)
 		end
 		else
 		begin
 			Set @NewBond=newid()
 			Set @NewBondNumber=isnull((Select Max(BondNumber)From TBL010 Where MainGuide=@BondType),0)+1
 		end
 		Select @CrID=CurrencyGuide,@JbID=CostCenter,@AcID=PostToAccount,@PrID=Project,@BrID=Branch,
 	@MainDate=BillDate,@DoneIn=DoneIn,@Rte=Rate,@Posted=Posted,@Sec=Security From TBL022 Where CardGuide=@BillGuide
 		Set @MainAc=(Select DefaultAccount From TBL009 Where CardGuide=@BondType)
 		--Set @Nts=(Select Notes From TBL022 Where CardGuide=@BillGuide)
 		Delete From TBL010 Where BillGuide=@BillGuide
 		Insert Into TBL010 (CardGuide,BondNumber,Posted,MainGuide,BondDate,CostCenter,Project,Branch,DoneIn,CurrencyGuide,AccountGuide,Rate,Security,BillGuide)Values
 	(@NewBond,@NewBondNumber,@Posted,@BondType,@MainDate,@JbID,@PrID,@BrID,@DoneIn,@CrID,@MainAc,@Rte,@Sec,@BillGuide)
 		declare @CurrID int
 		Set @CurrID=0
 		declare @BondDate datetime
 		declare @BondNote nvarchar(255)
 		declare @Value float
 		while((Select Count(*) From TBL060 Where BillGuide=@BillGuide And ID>@CurrID)>0)
 		Begin
 			Set @CurrID=(Select Min(ID)From TBL060 Where BillGuide=@BillGuide And ID> @CurrID)
 			Set @BondDate=(Select CollectDate From TBL060 Where ID=@CurrID)
 			Set @BondNote=(Select Notes From TBL060 Where ID=@CurrID)
 			Set @Value=(Select Value From TBL060 Where ID=@CurrID)
 			if((Select InvoiceMovementSide From TBL020 Where CardGuide=@BillType)<0)
 			begin
 				Insert Into TBL038(MainGuide , AccountGuide, CurrencyGuide, CostCenter, Debit, Credit, DebitRate, CreditRate, ContraAccount, Notes, CollectDate, DueDate )Values
 	(@NewBond, @AcID, @CrID, @JbID, 0, @Value * @Rte , 0, @Value , @MainAc, @BondNote, @BondDate, @BondDate)
 			end
 			else
 			begin
 				Insert Into TBL038(MainGuide , AccountGuide, CurrencyGuide, Debit, Credit, DebitRate, CreditRate, ContraAccount, Notes, CollectDate, DueDate )Values
 	(@NewBond, @AcID, @CrID,@Value * @Rte, 0, @Value , 0, @MainAc, @BondNote, @BondDate, @BondDate)
 			end
 		end
 		exec Prc027 @NewBond,0
 	End
 end
 ------------------------Check Recipient Bill------------------------
 if(@RecipientBill Is Not Null)
 begin
 	declare @NRBill uniqueidentifier
 	declare @Ag uniqueidentifier
 	declare @Ac uniqueidentifier
 	declare @NRRowID uniqueidentifier
 	declare @NRNewRow uniqueidentifier
 	declare @NRNom int
 	declare @NRIsPosted bit
 	declare @NRStore uniqueidentifier
 	declare @PBill table(G uniqueidentifier)
 	declare @RtTb table(Fld int)
 		Insert Into @RtTb(Fld)Select Int01 From Qry266 Where MainGuide=@BillType And Bit02=1 Group By Int01
 	declare @nTpCo bit
 	declare @nTpC1 bit
 	declare @nTpC2 bit
 	declare @nTpC3 bit
 	declare @nTpC4 bit
 	declare @nTpC5 bit
 	declare @nTpPTch bit
 	declare @nTpRvDt bit
 	declare @nTpStr bit
 	declare @nTpRcpt bit
 	declare @nTpCuStg bit
 	declare @nTpSrcBl bit
 	Select @nTpCo=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=1),0)),
 	@nTpC1=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=2),0)),
 	@nTpC2=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=3),0)),
 	@nTpC3=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=4),0)),
 	@nTpC4=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=5),0)),
 	@nTpC5=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=6),0)),
 	@nTpPTch=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=7),0)),
 	@nTpRvDt=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=8),0)),
 	@nTpStr=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=9),0)),
 	@nTpRcpt=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=10),0)),
 	@nTpCuStg=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=11),0)),
 	@nTpSrcBl=Convert(bit,Isnull((Select Count(*) From @RtTb Where Fld=12),0))
 	Select @NRIsPosted=(CASE DoNotPostToStores When 0 Then 1 Else 0 End) From TBL020 Where CardGuide=@RecipientBill
 	DECLARE CPrc008 CURSOR READ_ONLY FAST_FORWARD FOR
 		Select a.RelatedAgent,b.AccountID From(Select (case @BillAgentIsRecipient when 1 then IsNull(a.RelatedAgent,b.AgentGuide) else a.RelatedAgent end) As RelatedAgent
 		From TBL023 a Inner Join TBL022 b On a.MainGuide=b.CardGuide
 		Where a.MainGuide=@BillGuide And (case @BillAgentIsRecipient when 1 then IsNull(a.RelatedAgent,b.AgentGuide) else a.RelatedAgent end) Is Not Null
 		And (@OnlyReserved=0 Or a.ReserveDate is not null))a
 		Inner Join TBL016 b On a.RelatedAgent=b.CardGuide
 		Group By a.RelatedAgent,b.AccountID
 	OPEN CPrc008
 	FETCH NEXT FROM CPrc008 INTO @Ag,@Ac
 	WHILE (@@FETCH_STATUS = 0)
 	BEGIN
 		Select @NRBill=NEWID(),@NRNom=IsNull((Select MAX(BillNumber) From TBL022 Where MainGuide=@RecipientBill),0)+1
 		Insert Into TBL022(CardGuide,MainGuide,StoreGuide,BillDate,PayMethod
 ,TaxMethod,DoneIn,CurrencyGuide,BillNumber,Rate,Notes,AgentGuide,PostToAccount
 ,Security,Posted,ContraGuide,CostCenter,CurrentStage,GeneratedBill,Project,Branch)
 Select @NRBill,@RecipientBill,StoreGuide,BillDate,PayMethod
 ,TaxMethod,DoneIn,CurrencyGuide,@NRNom,Rate,Notes,@Ag,(CASE PayMethod When 1 Then PostToAccount Else @Ac End)
 ,Security,@NRIsPosted,@BillGuide,CostCenter,CurrentStage,1,Project,Branch
 From TBL022 Where CardGuide=@BillGuide
 		DECLARE CPrc008_2 CURSOR READ_ONLY FAST_FORWARD FOR
 			Select a.RowGuide From TBL023 a Inner Join TBL022 b On a.Mainguide=b.CardGuide Where a.MainGuide=@BillGuide And (@OnlyReserved=0 Or a.ReserveDate is not null) And (case @BillAgentIsRecipient when 1 then IsNull(a.RelatedAgent,b.AgentGuide) else a.RelatedAgent end)=@Ag Order By a.ID
 		OPEN CPrc008_2
 		FETCH NEXT FROM CPrc008_2 INTO @NRRowID
 		WHILE (@@FETCH_STATUS = 0)
 		BEGIN
 			Set @NRNewRow=NEWID()
 			Insert Into TBL023 (RowGuide,MainGuide,ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue,TotalValue2
 	,DiscountValue,ExtraValue,TaxValue,StoreID,StatementName,ExpiryDate,EstablishDate,Color,Weight,Value
 	,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5
 	,PatchCode,Category01,Category02,Category03,Category04,Category05,SourceBill,CurrentStage
 	,RelatedUnit,UnitQuantity,SalesPrice,Quantity2,Description2,RelatedObjects,Printed,Nonmergeable,RecordDate
 	,RecordSecurity,CalcKeyField,ProductsAccount,ReserveDate)
 			Select @NRNewRow,@NRBill,ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue,TotalValue2
 	,DiscountValue,ExtraValue,TaxValue,
 	(case @nTpStr when 0 then StoreID end),StatementName,ExpiryDate,EstablishDate,Color,Weight,Value
 	,Length,Width,Hieght,Description,(case @nTpCo when 0 then CostCenter end),
 	BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,
 	(case @nTpPTch when 0 then PatchCode end),
 	(case @nTpC1 when 0 then Category01 end),
 	(case @nTpC2 when 0 then Category02 end),
 	(case @nTpC3 when 0 then Category03 end),
 	(case @nTpC4 when 0 then Category04 end),
 	(case @nTpC5 when 0 then Category05 end),
 	(case @nTpSrcBl when 0 then @BillGuide end),
 	(case @nTpCuStg when 0 then CurrentStage end),
 	RelatedUnit,UnitQuantity,SalesPrice,Quantity2,Description2,RelatedObjects,Printed,Nonmergeable,
 	RecordDate,RecordSecurity,CalcKeyField,ProductsAccount,
 	(case @nTpRvDt when 0 then ReserveDate end) From TBL023 Where RowGuide=@NRRowID
 			Insert Into TBL066(MainGuide,SerialCode,ExpiryDate,EstablishDate,Notes)
 				Select @NRNewRow,SerialCode,ExpiryDate,EstablishDate,Notes From TBL066 Where MainGuide=@NRRowID Order By ID
 			FETCH NEXT FROM CPrc008_2 INTO @NRRowID
 		END
 		CLOSE CPrc008_2
 		Deallocate CPrc008_2
 		Insert Into @PBill(G)Values(@NRBill)
 		--exec dbo.Prc008 @NRBill ,@ItemDescountDesc ,@ItemExtrasDesc ,0
 		FETCH NEXT FROM CPrc008 INTO @Ag,@Ac
 	END
 	CLOSE CPrc008
 	Deallocate CPrc008
 end
 declare @TmpG uniqueidentifier
 while((Select Count(*) From @PBill)>0)
 begin
 	Select Top 1 @TmpG=G From @PBill
 	exec dbo.Prc008 @TmpG ,@ItemDescountDesc ,@ItemExtrasDesc ,0
 	Delete From @PBill Where G=@TmpG
 end
 declare @C nvarchar(Max)
 Set @C=ltrim(rtrim(IsNull((Select Top 1 BuildEvent From TBL094 Where EventID=9 And FormName=@BillType),'')))
 if(Len(@C)>0)
 begin
 	Set @C='declare @CardGuide uniqueidentifier Set @CardGuide='''+Convert(varchar(100),@BillGuide)+''' '+@C
 	exec (@C)
 end
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc009]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[Prc009](@FactoryBillGuide uniqueidentifier, @BillNote1 nvarchar(255) , @BillNote2 nvarchar(255) )  
	as begin 
		declare @FactoryBillType uniqueidentifier 
		declare @BillNumber int 
		declare @BSec tinyint 
		set @FactoryBillType=(Select MainGuide From TBL027 Where CardGuide=@FactoryBillGuide) 
		set @BSec=(Select Security From TBL027 Where CardGuide=@FactoryBillGuide) 
		declare @BillGuideToBuild uniqueidentifier 
		declare @StoreGuide uniqueidentifier 
		declare @BillPosted bit 
		declare @BillCurrency uniqueidentifier 
		declare @BillType uniqueidentifier 
		declare @BillDoneIn datetime 
		declare @Rate float 
		declare @PostToAccount uniqueidentifier 
		declare @Item uniqueidentifier 
		declare @Qty float 
		declare @Unit tinyint 
		declare @TotalValue float 
		set @BillType=(Select BuildBillTypeGuide1 From TBL026 Where CardGuide=@FactoryBillType) 
		set @BillGuideToBuild=(Select Top 1 CardGuide From TBL022 Where MainBillGuide=@FactoryBillType) 
		-----------------------------------------------Delete Old Bill----------------------------------------------- 
			Delete From TBL022 Where MainBillGuide=@FactoryBillGuide 
		---------------------------------------------Prepare First Bill.--------------------------------------------- 
		if ((@BillType Is Not Null)and((Select Count(*) From TBL028 Where MainGuide=@FactoryBillGuide)>0)and((Select DoNotGenerateBill1 From TBL026 Where CardGuide=@FactoryBillType)=0)) 
		begin 
			set @BillNumber=(Select isnull(Max(BillNumber),0) From TBL022 Where MainBillGuide=@FactoryBillGuide) 
			if (@BillNumber<1) 
				Set @BillNumber=(Select isnull(Max(BillNumber),0) From TBL022 Where MainGuide=@BillType) 
			if (@BillNumber<1) 
				Set @BillNumber=1 
			if(@BillGuideToBuild Is Null) 
				Set @BillGuideToBuild=newid() 
			declare @BDate datetime 
			Set @BDate=(Select InDate From TBL027 Where CardGuide=@FactoryBillGuide) 
			Set @BillDoneIn=(Select DoneIn From TBL027 Where CardGuide=@FactoryBillGuide) 
			Set @BillPosted=(Select Posted From TBL027 Where CardGuide=@FactoryBillGuide) 
			Set @StoreGuide=(Select StoreGuide1 From TBL027 Where CardGuide=@FactoryBillGuide) 
			Set @BillCurrency=(Select CurrencyGuide1 From TBL027 Where CardGuide=@FactoryBillGuide) 
			Set @Rate=(Select Rate1 From TBL027 Where CardGuide=@FactoryBillGuide) 
			Set @PostToAccount=(Select AccountA1 From TBL027 Where CardGuide=@FactoryBillGuide) 
			if (@BillCurrency Is Null) 
			begin 
				Set @BillCurrency=(Select DefaultCurrency1 From TBL026 Where CardGuide=@FactoryBillType) 
				if (@BillCurrency Is Null) 
				begin 
					Set @BillCurrency=(Select CardGuide From TBL001 Where ID=(Select Min(ID)From TBL001)) 
					Update TBL026 Set [DefaultCurrency1]=@BillCurrency 
					Update TBL027 Set [CurrencyGuide1]=@BillCurrency 
				end 
				else 
				begin 
					Update TBL027 Set [CurrencyGuide1]=@BillCurrency 
				end 
			end 
			if(@Rate=0) 
				Set @Rate=dbo.Fun031(@BillCurrency) 
			if(@PostToAccount Is Null) 
			begin 
				Set @PostToAccount=(Select AccountOFOption1 From TBL026 Where CardGuide=@FactoryBillType) 
				Update TBL027 Set [AccountA1]=@PostToAccount 
			end 
			-------------------------------------Insert First Bill------------------------------------- 
			Insert Into TBL022(CardGuide,MainGuide,StoreGuide,BillDate,PayMethod,DoneIn,CurrencyGuide,BillNumber,Rate,PostToAccount,Notes,Posted,MainBillGuide)Values 
				(@BillGuideToBuild,@BillType,@StoreGuide,@BDate,1,@BillDoneIn,@BillCurrency,@BillNumber,@Rate,@PostToAccount,@BillNote1,@BillPosted,@FactoryBillGuide) 
			-----------------------------------Insert First Bill Body----------------------------------- 
			declare @TID int 
			set @TID=0 
			while((Select Count(*) From TBL028 Where MainGuide=@FactoryBillGuide And ID>@TID)>0) 
			begin 
				Set @TID=(Select Min(ID)From TBL028 Where MainGuide=@FactoryBillGuide And ID>@TID) 
				Set @Item=(Select ItemGuide From TBL028 Where ID=@TID) 
				Set @Qty=(Select Quantity From TBL028 Where ID=@TID) 
				Set @Unit=(Select Unit From TBL028 Where ID=@TID) 
				Set @TotalValue=(Select TotalValue From TBL028 Where ID=@TID) 
				Insert Into TBL023(MainGuide,ProductGuide,Quantity,Unit,TotalValue)Values 
					(@BillGuideToBuild,@Item,@Qty,@Unit,@TotalValue) 
			end 
			-------------------------------------Insert First Bill------------------------------------- 
			exec Prc008 @BillGuideToBuild,'','',0 
		end 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc010]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc010](@B uniqueidentifier,@PTp int)
 as begin
 --declare @B uniqueidentifier
 --declare @PTp int
 --Set @PTp=0
 declare @ID int
 declare @nQ nvarchar(Max)
 declare @nF nvarchar(4000)
 declare @nG nvarchar(4000)
 declare @nR nvarchar(4000)
 declare @TypeID int
 declare @DetailingByCostCenter bit
 declare @DetailingByProject bit
 declare @DetailingByBranch bit
 declare @DetailingByCategory01 bit
 declare @DetailingByCategory02 bit
 declare @DetailingByCategory03 bit
 declare @DetailingByCategory04 bit
 declare @DetailingByCategory05 bit
 declare @DetailingByPatchCode bit
 declare @DetailingByExpiryDate bit
 declare @DetailingByUnit bit
 declare @DetailingByVariableUnit bit
 DECLARE CPrc010 CURSOR READ_ONLY FAST_FORWARD FOR
 	Select ID,TypeID,DetailingByCostCenter,DetailingByProject,DetailingByBranch
 ,DetailingByCategory01,DetailingByCategory02,DetailingByCategory03,DetailingByCategory04,DetailingByCategory05
 ,DetailingByPatchCode,DetailingByExpiryDate,DetailingByUnit,DetailingByVariableUnit
 	From TBL017 Where ID>150 And (@PTp=0 Or ID=@PTp) Order By ID
 OPEN CPrc010
 FETCH NEXT FROM CPrc010 INTO @ID,@TypeID,@DetailingByCostCenter,@DetailingByProject,@DetailingByBranch
 ,@DetailingByCategory01,@DetailingByCategory02,@DetailingByCategory03,@DetailingByCategory04,@DetailingByCategory05
 ,@DetailingByPatchCode,@DetailingByExpiryDate,@DetailingByUnit,@DetailingByVariableUnit
 WHILE (@@FETCH_STATUS = 0)
 BEGIN
 	FETCH NEXT FROM CPrc010 INTO @ID,@TypeID,@DetailingByCostCenter,@DetailingByProject,@DetailingByBranch
 ,@DetailingByCategory01,@DetailingByCategory02,@DetailingByCategory03,@DetailingByCategory04,@DetailingByCategory05
 ,@DetailingByPatchCode,@DetailingByExpiryDate,@DetailingByUnit,@DetailingByVariableUnit
 	Set @nQ='declare @Ims table(G uniqueidentifier,LastStoredDate datetime)
 '	if(@B is not null)
 		Set @nQ=@nQ+'Insert Into @Ims(G) Select ProductGuide From TBL023 Where MainGuide='''+Convert(varchar(100),@B)+''' Group By ProductGuide
 '	else
 		Set @nQ=@nQ+'Insert Into @Ims(G) Select CardGuide From TBL007
 '	Set @nQ=@nQ+'Update a Set[LastStoredDate]=IsNull(b.LastDate,getdate()) From @Ims a Left Join
 (Select a.G,Max(b.InsertedIn) As LastDate From @Ims a Inner Join TBL023 b On a.G=b.ProductGuide Group By a.G)b On a.G=b.G
 '	Set @nQ=@nQ+'declare @VTb table(
 [ID] [int] IDENTITY(1,1) NOT NULL,
 [PriceType] [tinyint] NOT NULL,
 [LastCalulatedDate] [datetime] NOT NULL,
 [ItemUnit] [tinyint] NOT NULL,
 [CurrencyGuide] [uniqueidentifier] NULL,
 [ItemGuide] [uniqueidentifier] NOT NULL,
 [PriceValue] [float] NOT NULL,
 [PriceRate] [float] NOT NULL,
 [AgentGuide] [uniqueidentifier] NULL,
 [DiscountRation] [float] NOT NULL,
 [ExtraRatio] [float] NOT NULL,
 [CostCenterGuide] [uniqueidentifier] NULL,
 [ProjectGuide] [uniqueidentifier] NULL,
 [BranchGuide] [uniqueidentifier] NULL,
 [CategoryGuide01] [uniqueidentifier] NULL,
 [CategoryGuide02] [uniqueidentifier] NULL,
 [CategoryGuide03] [uniqueidentifier] NULL,
 [CategoryGuide04] [uniqueidentifier] NULL,
 [CategoryGuide05] [uniqueidentifier] NULL,
 [ExpiryDate] [datetime] NULL,
 [PatchCode] [nvarchar] (250) NULL)
 '	Set @nQ=@nQ+'declare @Tb table(G uniqueidentifier,LastStoredDate datetime)
 Insert Into @Tb(G,LastStoredDate)
 Select a.G,a.LastStoredDate From @Ims a Left Join (Select ItemGuide,DATEADD(Second,1,Min(LastCalulatedDate)) As LastDate From TBL074 Where PriceType='+
 Convert(varchar(10),@TypeID)+' Group By ItemGuide) b
 On a.G=b.ItemGuide Where b.LastDate is null Or a.LastStoredDate>b.LastDate
 Delete b From @Tb a Inner Join TBL074 b On a.G=b.ItemGuide Where b.PriceType='+Convert(varchar(10),@TypeID)+'
 And b.LastCalulatedDate is null Or a.LastStoredDate>b.LastCalulatedDate
 '	Select @nF='b.ProductGuide',@nG='b.ProductGuide,z.LastStoredDate'
 	if(@TypeID=1)--Cost Average
 	begin
 		if(@DetailingByCostCenter=1)Select @nF=@nF+',IsNull(b.CostCenter,a.CostCenter)',@nG=@nG+',IsNull(b.CostCenter,a.CostCenter)' else Select @nF=@nF+',Null'
 		if(@DetailingByProject=1)Select @nF=@nF+',a.Project',@nG=@nG+',a.Project' else Select @nF=@nF+',Null'
 		if(@DetailingByBranch=1)Select @nF=@nF+',a.Branch',@nG=@nG+',a.Branch' else Select @nF=@nF+',Null'
 		if(@DetailingByCategory01=1)Select @nF=@nF+',b.Category01',@nG=@nG+',b.Category01' else Select @nF=@nF+',Null'
 		if(@DetailingByCategory02=1)Select @nF=@nF+',b.Category02',@nG=@nG+',b.Category02' else Select @nF=@nF+',Null'
 		if(@DetailingByCategory03=1)Select @nF=@nF+',b.Category03',@nG=@nG+',b.Category03' else Select @nF=@nF+',Null'
 		if(@DetailingByCategory04=1)Select @nF=@nF+',b.Category04',@nG=@nG+',b.Category04' else Select @nF=@nF+',Null'
 		if(@DetailingByCategory05=1)Select @nF=@nF+',b.Category05',@nG=@nG+',b.Category05' else Select @nF=@nF+',Null'
 		if(@DetailingByPatchCode=1)Select @nF=@nF+',b.PatchCode',@nG=@nG+',b.PatchCode' else Select @nF=@nF+',Null'
 		if(@DetailingByExpiryDate=1)Select @nF=@nF+',b.ExpiryDate',@nG=@nG+',b.ExpiryDate' else Select @nF=@nF+',Null'
 		if(@DetailingByUnit=1)Select @nF=@nF+',b.Unit',@nG=@nG+',b.Unit' else Select @nF=@nF+',1'
 		Set @nQ=@nQ+'Insert Into @VTb(PriceType,LastCalulatedDate,CurrencyGuide,PriceValue,PriceRate,AgentGuide,DiscountRation,ExtraRatio
 ,ItemGuide,CostCenterGuide,ProjectGuide,BranchGuide,CategoryGuide01,CategoryGuide02,CategoryGuide03,CategoryGuide04,CategoryGuide05
 ,PatchCode,ExpiryDate,ItemUnit)
 Select '+Convert(varchar(10),@TypeID)+',z.LastStoredDate,Null
 ,IsNull(Sum((b.TotalValue+b.ExtraValue-b.DiscountValue-b.Discount2)*a.Rate)/Sum((b.Quantity+b.ExtraQuantity)*(case b.Unit when 3 then c.Factor3 when 2 then c.Factor2 else 1 end)),0),1
 ,Null,0,0,'+@nF+'
 From @Tb z Inner Join TBL023 b On b.ProductGuide=z.G
 Inner Join TBL022 a On a.CardGuide=b.MainGuide
 Inner Join TBL007 c On z.G=c.CardGuide
 Inner Join TBL020 d On a.MainGuide=d.CardGuide
 Where (a.Posted=1 And d.AffectLastPurchasePrice=1) Or b.ID is null
 Group By '+@nG+'
 '	--exec(@nQ)
 	end
 	else--Last Price
 	begin
 		Set @nR=' an.ProductGuide=i.ProductGuide And an.LastDate=i.InsertedIn '
 		if(@DetailingByCostCenter=1)Select @nF=@nF+',IsNull(b.CostCenter,a.CostCenter)',@nG=@nG+',IsNull(b.CostCenter,a.CostCenter)',@nR=@nR+' and an.CostCenter=i.CostCenter' else Select @nF=@nF+',Null' Set @nF=@nF+' As CostCenter'
 		if(@DetailingByProject=1)Select @nF=@nF+',a.Project',@nG=@nG+',a.Project',@nR=@nR+' and an.Project=i.Project' else Select @nF=@nF+',Null' Set @nF=@nF+' As Project'
 		if(@DetailingByBranch=1)Select @nF=@nF+',a.Branch',@nG=@nG+',a.Branch',@nR=@nR+' And an.Branch=i.Branch' else Select @nF=@nF+',Null' Set @nF=@nF+' As Branch'
 		if(@DetailingByCategory01=1)Select @nF=@nF+',b.Category01',@nG=@nG+',b.Category01',@nR=@nR+' And an.Category01=i.Category01' else Select @nF=@nF+',Null' Set @nF=@nF+' As Category01'
 		if(@DetailingByCategory02=1)Select @nF=@nF+',b.Category02',@nG=@nG+',b.Category02',@nR=@nR+' And an.Category02=i.Category02' else Select @nF=@nF+',Null' Set @nF=@nF+' As Category02'
 		if(@DetailingByCategory03=1)Select @nF=@nF+',b.Category03',@nG=@nG+',b.Category03',@nR=@nR+' And an.Category03=i.Category03' else Select @nF=@nF+',Null' Set @nF=@nF+' As Category03'
 		if(@DetailingByCategory04=1)Select @nF=@nF+',b.Category04',@nG=@nG+',b.Category04',@nR=@nR+' And an.Category04=i.Category04' else Select @nF=@nF+',Null' Set @nF=@nF+' As Category04'
 		if(@DetailingByCategory05=1)Select @nF=@nF+',b.Category05',@nG=@nG+',b.Category05',@nR=@nR+' And an.Category05=i.Category05' else Select @nF=@nF+',Null' Set @nF=@nF+' As Category05'
 		if(@DetailingByPatchCode=1)Select @nF=@nF+',b.PatchCode',@nG=@nG+',b.PatchCode',@nR=@nR+' And an.PatchCode=i.PatchCode' else Select @nF=@nF+',Null' Set @nF=@nF+' As PatchCode'
 		if(@DetailingByExpiryDate=1)Select @nF=@nF+',b.ExpiryDate',@nG=@nG+',b.ExpiryDate',@nR=@nR+' And an.ExpiryDate=i.ExpiryDate' else Select @nF=@nF+',Null' Set @nF=@nF+' As ExpiryDate'
 		if(@DetailingByUnit=1)Select @nF=@nF+',b.Unit',@nG=@nG+',b.Unit',@nR=@nR+' And an.Unit=i.Unit' else Select @nF=@nF+',1' Set @nF=@nF+' As Unit'
 		Set @nQ=@nQ+'Insert Into @VTb(PriceType,LastCalulatedDate,CurrencyGuide,PriceValue,PriceRate,AgentGuide,DiscountRation,ExtraRatio
 ,ItemGuide,CostCenterGuide,ProjectGuide,BranchGuide,CategoryGuide01,CategoryGuide02,CategoryGuide03,CategoryGuide04,CategoryGuide05
 ,PatchCode,ExpiryDate,ItemUnit)
 Select '+Convert(varchar(10),@TypeID)+',z.LastDate,null,
 IsNull(((b.TotalValue+b.ExtraValue-b.DiscountValue-b.Discount2)*a.Rate)/((b.Quantity+b.ExtraQuantity)*(case b.Unit when 3 then c.Factor3 when 2 then c.Factor2 else 1 end)),0),1
 ,null,0,0,z.ProductGuide,z.CostCenter,z.Project,z.Branch,z.Category01,z.Category02,z.Category03,z.Category04,z.Category05,z.PatchCode,z.ExpiryDate,z.Unit
 From(
 Select Max(i.ID)As InID,an.ProductGuide,an.LastDate,an.CostCenter,an.Project,an.Branch,an.PatchCode,an.ExpiryDate,an.Unit
 ,an.Category01,an.Category02,an.Category03,an.Category04,an.Category05 From (
 Select Max(b.InsertedIn) As LastDate,'+@nF+'
 From TBL022 a Inner Join TBL023 b On a.CardGuide=b.MainGuide
 Inner Join @Tb z On b.ProductGuide=z.G
 Inner Join TBL020 d On a.MainGuide=d.CardGuide
 Where a.Posted=1 And d.AffectLastPurchasePrice=1
 Group By '+@nG+')an
 Inner Join (Select b.ID,b.InsertedIn,'+@nF+'
 From TBL023 b Inner Join TBL022 a On b.MainGuide=a.CardGuide) i On
 '+@nR+'
 Group By an.ProductGuide,an.LastDate,an.CostCenter,an.Project,an.Branch,an.PatchCode,an.ExpiryDate,an.Unit
 ,an.Category01,an.Category02,an.Category03,an.Category04,an.Category05)z
 Inner Join TBL023 b On z.InID=b.ID
 Inner Join TBL022 a On b.MainGuide=a.CardGuide
 Inner Join TBL007 c On b.ProductGuide=c.CardGuide
 '	end
 	Set @nQ=@nQ+'Insert Into TBL074(PriceType,LastCalulatedDate,CurrencyGuide,PriceValue,PriceRate,AgentGuide,DiscountRation,ExtraRatio
 ,ItemGuide,CostCenterGuide,ProjectGuide,BranchGuide,CategoryGuide01,CategoryGuide02,CategoryGuide03,CategoryGuide04,CategoryGuide05
 ,PatchCode,ExpiryDate,ItemUnit)
 Select PriceType,LastCalulatedDate,CurrencyGuide,PriceValue,PriceRate,AgentGuide,DiscountRation,ExtraRatio
 ,ItemGuide,CostCenterGuide,ProjectGuide,BranchGuide,CategoryGuide01,CategoryGuide02,CategoryGuide03,CategoryGuide04,CategoryGuide05
 ,PatchCode,ExpiryDate,ItemUnit From @VTb Order By ID'
 	exec (@nQ)
 END
 CLOSE CPrc010
 DEALLOCATE CPrc010
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc011]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc011](@M uniqueidentifier)	
 as begin	
 declare @G uniqueidentifier	
 DECLARE CPrc011 CURSOR READ_ONLY FAST_FORWARD FOR	
 	Select CardGuide From TBL042 Where MainGuide=@M Order By ID	
 OPEN CPrc011	
 FETCH NEXT FROM CPrc011 INTO @G	
 WHILE (@@FETCH_STATUS = 0)	
 BEGIN	
 	Update c Set[HideRecord]=(case b.HideRecord when 1 then 1 else c.HideRecord end) ,	
 	[BrowsingPosted]=(case when b.BrowsingPosted<c.BrowsingPosted then b.BrowsingPosted else c.BrowsingPosted end),	
 	[InsertingPosted]=(case when b.InsertingPosted<c.InsertingPosted then b.InsertingPosted else c.InsertingPosted end),	
 	[UpdatingPosted]=(case when b.UpdatingPosted<c.UpdatingPosted then b.UpdatingPosted else c.UpdatingPosted end),	
 	[DeletingPosted]=(case when b.DeletingPosted<c.DeletingPosted then b.DeletingPosted else c.DeletingPosted end),	
 	[PrintingPosted]=(case when b.PrintingPosted<c.PrintingPosted then b.PrintingPosted else c.PrintingPosted end),	
 	[BuildEntryPosted]=(case when b.BuildEntryPosted<c.BuildEntryPosted then b.BuildEntryPosted else c.BuildEntryPosted end),	
 	[ChangePricesPosted]=(case when b.ChangePricesPosted<c.ChangePricesPosted then b.ChangePricesPosted else c.ChangePricesPosted end),	
 	[PostedExtraRatio]=(case when b.PostedExtraRatio<c.PostedExtraRatio then b.PostedExtraRatio else c.PostedExtraRatio end),	
 	[PostedDiscountRatio]=(case when b.PostedDiscountRatio<c.PostedDiscountRatio then b.PostedDiscountRatio else c.PostedDiscountRatio end),	
 	[PostedBillExtraRatio]=(case when b.PostedBillExtraRatio<c.PostedBillExtraRatio then b.PostedBillExtraRatio else c.PostedBillExtraRatio end),	
 	[PostedBillDiscountRatio]=(case when b.PostedBillDiscountRatio<c.PostedBillDiscountRatio then b.PostedBillDiscountRatio else c.PostedBillDiscountRatio end),	
 	[Posting]=(case when b.Posting<c.Posting then b.Posting else c.Posting end),	
 	[BrowsePrices]=(case when b.BrowsePrices<c.BrowsePrices then b.BrowsePrices else c.BrowsePrices end),	
 	[BrowsingUnPosted]=(case when b.BrowsingUnPosted<c.BrowsingUnPosted then b.BrowsingUnPosted else c.BrowsingUnPosted end),	
 	[InsertingUnPosted]=(case when b.InsertingUnPosted<c.InsertingUnPosted then b.InsertingUnPosted else c.InsertingUnPosted end),	
 	[UpdatingUnPosted]=(case when b.UpdatingUnPosted<c.UpdatingUnPosted then b.UpdatingUnPosted else c.UpdatingUnPosted end),	
 	[DeletingUnPosted]=(case when b.DeletingUnPosted<c.DeletingUnPosted then b.DeletingUnPosted else c.DeletingUnPosted end),	
 	[PrintingUnPosted]=(case when b.PrintingUnPosted<c.PrintingUnPosted then b.PrintingUnPosted else c.PrintingUnPosted end),	
 	[PrintingUnSaved]=(case when b.PrintingUnSaved<c.PrintingUnSaved then b.PrintingUnSaved else c.PrintingUnSaved end),	
 	[BuildEntryUnPosted]=(case when b.BuildEntryUnPosted<c.BuildEntryUnPosted then b.BuildEntryUnPosted else c.BuildEntryUnPosted end),	
 	[UnPostedExtraRatio]=(case when b.UnPostedExtraRatio<c.UnPostedExtraRatio then b.UnPostedExtraRatio else c.UnPostedExtraRatio end),	
 	[UnPostedDiscountRatio]=(case when b.UnPostedDiscountRatio<c.UnPostedDiscountRatio then b.UnPostedDiscountRatio else c.UnPostedDiscountRatio end),	
 	[UnPostedBillExtraRatio]=(case when b.UnPostedBillExtraRatio<c.UnPostedBillExtraRatio then b.UnPostedBillExtraRatio else c.UnPostedBillExtraRatio end),	
 	[UnPostedBillDiscountRatio]=(case when b.UnPostedBillDiscountRatio<c.UnPostedBillDiscountRatio then b.UnPostedBillDiscountRatio else c.UnPostedBillDiscountRatio end),	
 	[ChangePricesUnPosted]=(case when b.ChangePricesUnPosted<c.ChangePricesUnPosted then b.ChangePricesUnPosted else c.ChangePricesUnPosted end),	
 	[ChangeStockItemsPrice]=(case when b.ChangeStockItemsPrice<c.ChangeStockItemsPrice then b.ChangeStockItemsPrice else c.ChangeStockItemsPrice end),	
 	[ChangeServiceItemsPrice]=(case when b.ChangeServiceItemsPrice<c.ChangeServiceItemsPrice then b.ChangeServiceItemsPrice else c.ChangeServiceItemsPrice end),	
 	[CloseCashBox]=(case when b.CloseCashBox<c.CloseCashBox then b.CloseCashBox else c.CloseCashBox end),	
 	[PayExpense]=(case when b.PayExpense<c.PayExpense then b.PayExpense else c.PayExpense end),	
 	[SubtractOutput]=(case when b.SubtractOutput<c.SubtractOutput then b.SubtractOutput else c.SubtractOutput end),	
 	[EditPostedItems]=(case when b.EditPostedItems<c.EditPostedItems then b.EditPostedItems else c.EditPostedItems end),	
 	[EditUnPostedItems]=(case when b.EditUnPostedItems<c.EditUnPostedItems then b.EditUnPostedItems else c.EditUnPostedItems end),	
 	[BrowsingPosted2]=(case when b.BrowsingPosted2<c.BrowsingPosted2 then b.BrowsingPosted2 else c.BrowsingPosted2 end),	
 	[InsertingPosted2]=(case when b.InsertingPosted2<c.InsertingPosted2 then b.InsertingPosted2 else c.InsertingPosted2 end),	
 	[UpdatingPosted2]=(case when b.UpdatingPosted2<c.UpdatingPosted2 then b.UpdatingPosted2 else c.UpdatingPosted2 end),	
 	[DeletingPosted2]=(case when b.DeletingPosted2<c.DeletingPosted2 then b.DeletingPosted2 else c.DeletingPosted2 end),	
 	[PrintingPosted2]=(case when b.PrintingPosted2<c.PrintingPosted2 then b.PrintingPosted2 else c.PrintingPosted2 end),	
 	[BuildEntryPosted2]=(case when b.BuildEntryPosted2<c.BuildEntryPosted2 then b.BuildEntryPosted2 else c.BuildEntryPosted2 end),	
 	[ChangePricesPosted2]=(case when b.ChangePricesPosted2<c.ChangePricesPosted2 then b.ChangePricesPosted2 else c.ChangePricesPosted2 end),	
 	[PostedExtraRatio2]=(case when b.PostedExtraRatio2<c.PostedExtraRatio2 then b.PostedExtraRatio2 else c.PostedExtraRatio2 end),	
 	[PostedDiscountRatio2]=(case when b.PostedDiscountRatio2<c.PostedDiscountRatio2 then b.PostedDiscountRatio2 else c.PostedDiscountRatio2 end),	
 	[BrowsingUnPosted2]=(case when b.BrowsingUnPosted2<c.BrowsingUnPosted2 then b.BrowsingUnPosted2 else c.BrowsingUnPosted2 end),	
 	[InsertingUnPosted2]=(case when b.InsertingUnPosted2<c.InsertingUnPosted2 then b.InsertingUnPosted2 else c.InsertingUnPosted2 end),	
 	[UpdatingUnPosted2]=(case when b.UpdatingUnPosted2<c.UpdatingUnPosted2 then b.UpdatingUnPosted2 else c.UpdatingUnPosted2 end),	
 	[DeletingUnPosted2]=(case when b.DeletingUnPosted2<c.DeletingUnPosted2 then b.DeletingUnPosted2 else c.DeletingUnPosted2 end),	
 	[PrintingUnPosted2]=(case when b.PrintingUnPosted2<c.PrintingUnPosted2 then b.PrintingUnPosted2 else c.PrintingUnPosted2 end),	
 	[PrintingUnSaved2]=(case when b.PrintingUnSaved2<c.PrintingUnSaved2 then b.PrintingUnSaved2 else c.PrintingUnSaved2 end),	
 	[BuildEntryUnPosted2]=(case when b.BuildEntryUnPosted2<c.BuildEntryUnPosted2 then b.BuildEntryUnPosted2 else c.BuildEntryUnPosted2 end),	
 	[UnPostedExtraRatio2]=(case when b.UnPostedExtraRatio2<c.UnPostedExtraRatio2 then b.UnPostedExtraRatio2 else c.UnPostedExtraRatio2 end),	
 	[UnPostedDiscountRatio2]=(case when b.UnPostedDiscountRatio2<c.UnPostedDiscountRatio2 then b.UnPostedDiscountRatio2 else c.UnPostedDiscountRatio2 end),	
 	[ChangePricesUnPosted2]=(case when b.ChangePricesUnPosted2<c.ChangePricesUnPosted2 then b.ChangePricesUnPosted2 else c.ChangePricesUnPosted2 end),	
 	[ChangeStockItemsPrice2]=(case when b.ChangeStockItemsPrice2<c.ChangeStockItemsPrice2 then b.ChangeStockItemsPrice2 else c.ChangeStockItemsPrice2 end),	
 	[ChangeServiceItemsPrice2]=(case when b.ChangeServiceItemsPrice2<c.ChangeServiceItemsPrice2 then b.ChangeServiceItemsPrice2 else c.ChangeServiceItemsPrice2 end),	
 	[ModifyForOthers]=(case when b.ModifyForOthers<c.ModifyForOthers then b.ModifyForOthers else c.ModifyForOthers end),	
 	[ModelPrint]=(case when b.ModelPrint<c.ModelPrint then b.ModelPrint else c.ModelPrint end),	
 	[ModelDelete]=(case when b.ModelDelete<c.ModelDelete then b.ModelDelete else c.ModelDelete end),	
 	[ModelAdd]=(case when b.ModelAdd<c.ModelAdd then b.ModelAdd else c.ModelAdd end),	
 	[ModelUpdate]=(case when b.ModelUpdate<c.ModelUpdate then b.ModelUpdate else c.ModelUpdate end),	
 	[UnlimitedExtrasPosted]=(case when b.UnlimitedExtrasPosted<c.UnlimitedExtrasPosted then b.UnlimitedExtrasPosted else c.UnlimitedExtrasPosted end),	
 	[UnlimitedExtrasUnPosted]=(case when b.UnlimitedExtrasUnPosted<c.UnlimitedExtrasUnPosted then b.UnlimitedExtrasUnPosted else c.UnlimitedExtrasUnPosted end),	
 	[ProductsAccount]=(case when b.ProductsAccount is not null then b.ProductsAccount else c.ProductsAccount end),	
 	[CashAccount]=(case when b.CashAccount is not null then b.CashAccount else c.CashAccount end),	
 	[DefaultCostCenter]=(case when b.DefaultCostCenter is not null then b.DefaultCostCenter else c.DefaultCostCenter end),	
 	[DefaultProject]=(case when b.DefaultProject is not null then b.DefaultProject else c.DefaultProject end),	
 	[DefaultBranch]=(case when b.DefaultBranch is not null then b.DefaultBranch else c.DefaultBranch end),	
 	[MinimumPrice]=(case when b.MinimumPrice<c.MinimumPrice then b.MinimumPrice else c.MinimumPrice end),	
 	[MaximumPrice]=(case when b.MaximumPrice<c.MaximumPrice then b.MaximumPrice else c.MaximumPrice end)	
 	From	
 	(Select * From TBL070 Where GroupGuide=@G) a inner join	
 	(Select * From TBL070 Where GroupGuide=@M) b on a.CardGuide=b.CardGuide	
 	Inner Join TBL070 c On a.ID=c.ID	
 	-----------------------------------------------------------------------	
 	Update c Set[HideRecord]=(case b.HideRecord when 1 then 1 else c.HideRecord end),	
 	[BrowsingPosted]=(case when b.BrowsingPosted<c.BrowsingPosted then b.BrowsingPosted else c.BrowsingPosted end),	
 	[InsertingPosted]=(case when b.InsertingPosted<c.InsertingPosted then b.InsertingPosted else c.InsertingPosted end),	
 	[UpdatingPosted]=(case when b.UpdatingPosted<c.UpdatingPosted then b.UpdatingPosted else c.UpdatingPosted end),	
 	[DeletingPosted]=(case when b.DeletingPosted<c.DeletingPosted then b.DeletingPosted else c.DeletingPosted end),	
 	[PrintingPosted]=(case when b.PrintingPosted<c.PrintingPosted then b.PrintingPosted else c.PrintingPosted end),	
 	[Posting]=(case when b.Posting<c.Posting then b.Posting else c.Posting end),	
 	[BrowsingUnPosted]=(case when b.BrowsingUnPosted<c.BrowsingUnPosted then b.BrowsingUnPosted else c.BrowsingUnPosted end),	
 	[InsertingUnPosted]=(case when b.InsertingUnPosted<c.InsertingUnPosted then b.InsertingUnPosted else c.InsertingUnPosted end),	
 	[UpdatingUnPosted]=(case when b.UpdatingUnPosted<c.UpdatingUnPosted then b.UpdatingUnPosted else c.UpdatingUnPosted end),	
 	[DeletingUnPosted]=(case when b.DeletingUnPosted<c.DeletingUnPosted then b.DeletingUnPosted else c.DeletingUnPosted end),	
 	[PrintingUnSaved]=(case when b.PrintingUnSaved<c.PrintingUnSaved then b.PrintingUnSaved else c.PrintingUnSaved end),	
 	[ModelPrint]=(case when b.ModelPrint<c.ModelPrint then b.ModelPrint else c.ModelPrint end),	
 	[ModelDelete]=(case when b.ModelDelete<c.ModelDelete then b.ModelDelete else c.ModelDelete end),	
 	[ModelAdd]=(case when b.ModelAdd<c.ModelAdd then b.ModelAdd else c.ModelAdd end),	
 	[ModelUpdate]=(case when b.ModelUpdate<c.ModelUpdate then b.ModelUpdate else c.ModelUpdate end),	
 	[DefaultAccount]=(case when b.DefaultAccount is not null then b.DefaultAccount else c.DefaultAccount end),	
 	[DefaultCostCenter]=(case when b.DefaultCostCenter is not null then b.DefaultCostCenter else c.DefaultCostCenter end),	
 	[DefaultProject]=(case when b.DefaultProject is not null then b.DefaultProject else c.DefaultProject end),	
 	[DefaultBranch]=(case when b.DefaultBranch is not null then b.DefaultBranch else c.DefaultBranch end),	
 	[PrintingUnPosted]=(case when b.PrintingUnPosted<c.PrintingUnPosted then b.PrintingUnPosted else c.PrintingUnPosted end)	
 	From	
 	(Select * From TBL045 Where GroupGuide=@G) a inner join	
 	(Select * From TBL045 Where GroupGuide=@M) b on a.CardGuide=b.CardGuide	
 	Inner Join TBL045 c On a.ID=c.ID	
 	-----------------------------------------------------------------------	
 	Update c Set[Browsing]=(case when b.Browsing<c.Browsing then b.Browsing else c.Browsing end),	
 	[Inserting]=(case when b.Inserting<c.Inserting then b.Inserting else c.Inserting end),	
 	[Updating]=(case when b.Updating<c.Updating then b.Updating else c.Updating end),	
 	[Deleting]=(case when b.Deleting<c.Deleting then b.Deleting else c.Deleting end),	
 	[Printing]=(case when b.Printing<c.Printing then b.Printing else c.Printing end),	
 	[CardUsing]=(case when b.CardUsing<c.CardUsing then b.CardUsing else c.CardUsing end),	
 	[ModelPrint]=(case when b.ModelPrint<c.ModelPrint then b.ModelPrint else c.ModelPrint end),	
 	[ModelDelete]=(case when b.ModelDelete<c.ModelDelete then b.ModelDelete else c.ModelDelete end),	
 	[ModelAdd]=(case when b.ModelAdd<c.ModelAdd then b.ModelAdd else c.ModelAdd end),	
 	[ModelUpdate]=(case when b.ModelUpdate<c.ModelUpdate then b.ModelUpdate else c.ModelUpdate end),	
 	[ShowBalance]=(case when b.ShowBalance<c.ShowBalance then b.ShowBalance else c.ShowBalance end)	
 	From	
 	(Select * From TBL044 Where GroupGuide=@G) a inner join	
 	(Select * From TBL044 Where GroupGuide=@M) b on a.CardGuide=b.CardGuide	
 	Inner Join TBL044 c On a.ID=c.ID	
 	FETCH NEXT FROM CPrc011 INTO @G	
 END	
 CLOSE CPrc011	
 DEALLOCATE CPrc011	
 end	
GO
/****** Object:  StoredProcedure [dbo].[Prc012]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc012](@BondGuide as uniqueidentifier) 
	as begin 
	declare @BondType uniqueidentifier 
	set @BondType=(Select MainGuide From TBL010 Where CardGuide=@BondGuide) 
	declare @EntryDate datetime 
	declare @DoneIn datetime 
	declare @CrrID uniqueidentifier 
	declare @Debit float 
	declare @Credit float 
	declare @CreditRate float 
	declare @DebitRate float 
	declare @Notes nvarchar(255) 
	declare @AcID uniqueidentifier 
	declare @ContraAc uniqueidentifier 
	declare @RowGuide uniqueidentifier 
	declare @EntryID uniqueidentifier 
	declare @EntrySec tinyint 
	declare @ID int 
	declare @RwID int 
	declare @EntryNumber int 
	declare @Posted tinyint 
	declare @Rte float 
	Select @Posted=Posted,@EntrySec=Security From TBL010 Where CardGuide=@BondGuide 
	set @ID=0 
	DECLARE CPrc012 CURSOR READ_ONLY FAST_FORWARD FOR 
		Select ID,RowGuide,AccountGuide From TBL038 Where MainGuide=@BondGuide Order By ID 
	OPEN CPrc012 
	FETCH NEXT FROM CPrc012 INTO @ID,@RowGuide,@AcID 
	WHILE (@@FETCH_STATUS = 0) 
	BEGIN 
		DECLARE CPrc012_2 CURSOR READ_ONLY FAST_FORWARD FOR 
			Select ID From TBL068 Where MainGuide=@RowGuide And dbo.Fun071(InDate)=1 Order By ID 
		OPEN CPrc012_2 
		FETCH NEXT FROM CPrc012_2 INTO @RwID 
		WHILE (@@FETCH_STATUS = 0) 
		BEGIN 
			Set @EntryID=newid() 
			set @EntryNumber=dbo.Fun005() 
			Select @EntryDate=InDate,@DoneIn=DoneIn,@CrrID=CurrencyGuide,@Notes=Notes,@ContraAc=AccountGuide,@Debit=Debit, 
			@Credit=Credit,@DebitRate=DebitRate,@CreditRate=CreditRate From TBL068 Where ID=@RwID 
			if(@Credit>@Debit) 
				Set @Rte=dbo.Ratio(@Credit,@CreditRate) 
			else 
				Set @Rte=dbo.Ratio(@Debit,@DebitRate) 
			Insert Into TBL011(CardGuide,RowGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes)Values 
				(@EntryID,@RowGuide,@EntryNumber,@Posted,@EntrySec,@EntryDate,@DoneIn,@CrrID,@BondGuide,@Rte,@Notes) 
			if(@Credit>@Debit) 
			begin 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description)Values 
					(@EntryID,@AcID,@CrrID,@Credit,@CreditRate,@ContraAc,@Notes) 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description)Values 
					(@EntryID,@ContraAc,@CrrID,@Credit,@CreditRate,@AcID,@Notes) 
			end 
			else 
			begin 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description)Values 
					(@EntryID,@ContraAc,@CrrID,@Debit,@DebitRate,@AcID,@Notes) 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description)Values 
					(@EntryID,@AcID,@CrrID,@Debit,@DebitRate,@ContraAc,@Notes) 
			end 
			FETCH NEXT FROM CPrc012_2 INTO @RwID 
		END 
		CLOSE CPrc012_2 
		DEALLOCATE CPrc012_2 
		FETCH NEXT FROM CPrc012 INTO @ID,@RowGuide,@AcID 
	END 
	CLOSE CPrc012 
	DEALLOCATE CPrc012 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc013]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Procedure [dbo].[Prc013](@BondGuide uniqueidentifier,@ContraAc uniqueidentifier) 
	as begin 
		declare @ID int 
		set @ID=0 
		declare @RowGuide uniqueidentifier 
		set @RowGuide=(Select RowGuide From TBL038 Where MainGuide=@BondGuide) 
		declare @EntryGuide uniqueidentifier 
		declare @Cost1 uniqueidentifier 
		declare @Cost2 uniqueidentifier 
		set @Cost2=(Select CostCenter From TBL038 Where MainGuide=@BondGuide) 
		declare @EntryNumber int 
		declare @EntryDate datetime 
		declare @EntryPosted tinyint 
		declare @EntrySecurity tinyint 
		declare @EntryDoneIn datetime 
		declare @CrID uniqueidentifier 
		declare @Value float 
		declare @ValueRate float 
		declare @Notes nvarchar(255) 
		declare @AcID uniqueidentifier 
		declare @ContraAcID uniqueidentifier 
		Set @Cost1=(Select CostCenter From TBL010 Where CardGuide=@BondGuide) 
		Set @EntryPosted=(Select Posted From TBL010 Where CardGuide=@BondGuide) 
		Set @EntrySecurity=(Select Security From TBL010 Where CardGuide=@BondGuide) 
		Set @EntryDoneIn=(Select DoneIn From TBL010 Where CardGuide=@BondGuide) 
		while((Select Count(*) From TBL068 Where ID>@ID And MainGuide=@RowGuide)>0) 
		begin 
			Set @ID=(Select Min(ID)From TBL068 Where MainGuide=@RowGuide And ID>@ID) 
			Set @EntryGuide=newid() 
			Set @EntryNumber=dbo.Fun005() 
			Set @EntryDate=(Select InDate From TBL068 Where ID=@ID) 
			Set @CrID=(Select CurrencyGuide From TBL068 Where ID=@ID) 
			Set @Value=(Select Debit+Credit From TBL068 Where ID=@ID) 
			Set @ValueRate=(Select DebitRate+CreditRate From TBL068 Where ID=@ID) 
			Set @Notes=(Select Notes From TBL068 Where ID=@ID) 
			Set @AcID=(Select AccountGuide From TBL068 Where ID=@ID) 
			Set @ContraAcID=(Select ContraAccountGuide From TBL068 Where ID=@ID) 
			if(@ContraAcID Is Null)Set @ContraAcID=@ContraAc 
			Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes)Values 
				(@EntryGuide,@EntryNumber,@EntryPosted,@EntrySecurity,@EntryDate,@EntryDoneIn,@CrID,@BondGuide,dbo.Ratio(@ValueRate,@Value),@Notes) 
			if((Select Credit From TBL068 Where ID=@ID)>(Select Debit From TBL068 Where ID=@ID)) 
			begin 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter)Values 
					(@EntryGuide,@ContraAcID,@CrID,@Value,@ValueRate,@AcID,@Notes,@Cost1) 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter)Values 
					(@EntryGuide,@AcID,@CrID,@Value,@ValueRate,@ContraAcID,@Notes,@Cost2) 
			end 
			else 
			begin 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter)Values 
					(@EntryGuide,@AcID,@CrID,@Value,@ValueRate,@ContraAcID,@Notes,@Cost2) 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter)Values 
					(@EntryGuide,@ContraAcID,@CrID,@Value,@ValueRate,@AcID,@Notes,@Cost1) 
			end			 
		end 
	end 
GO
/****** Object:  StoredProcedure [dbo].[Prc014]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[Prc014](@BondGuide uniqueidentifier) 
	as begin  
		declare @BondType uniqueidentifier  
		declare @OldEntry int  
		Set @OldEntry=(Select Max(EntryNumber)From TBL011 Where BondGuide=@BondGuide) 
		Set @BondType=(Select MainGuide From TBL010 Where CardGuide=@BondGuide)  
		declare @EntryDate datetime 
		declare @DoneDate datetime 
		declare @CollectDate datetime 
		declare @EntryGuide uniqueidentifier 
		declare @CrrGuide uniqueidentifier 
		declare @EntryPosted tinyint 
		declare @EntrySecurity tinyint 
		declare @Rate float 
		declare @Note nvarchar(255) 
		declare @Note2 nvarchar(255) 
		declare @AcID uniqueidentifier 
		declare @ClAc uniqueidentifier 
		declare @CollectAc uniqueidentifier 
		declare @Vlu float 
		declare @VluRate float 
		declare @BondCollect bit 
		Set @BondCollect=(Select Collected From TBL038 Where MainGuide=@BondGuide) 
		Set @CollectDate=(Select CollectDate From TBL038 Where MainGuide=@BondGuide) 
		set @EntryGuide=newid() 
		if(@OldEntry Is Null)Set @OldEntry=dbo.Fun005() 
		if(@OldEntry=0)Set @OldEntry=dbo.Fun005() 
		set @EntryPosted=(Select Posted From TBL010 Where CardGuide=@BondGuide)  
		set @CollectAc=(Select AccountGuide2 From TBL010 Where CardGuide=@BondGuide)  
		set @EntrySecurity=(Select Security From TBL010 Where CardGuide=@BondGuide)  
		set @EntryDate=(Select DueDate From TBL010 Where CardGuide=@BondGuide)  
		set @DoneDate=(Select DoneIn From TBL010 Where CardGuide=@BondGuide)  
		set @CrrGuide=(Select CurrencyGuide From TBL010 Where CardGuide=@BondGuide)  
		set @Rate=(Select Rate From TBL010 Where CardGuide=@BondGuide)  
		set @Note=(Select Notes From TBL010 Where CardGuide=@BondGuide)  
		set @ClAc=(Select AccountGuide From TBL010 Where CardGuide=@BondGuide)  
		set @AcID=(Select AccountGuide From TBL038 Where MainGuide=@BondGuide) 
		set @Vlu=(Select Debit+Credit From TBL038 Where MainGuide=@BondGuide) 
		set @VluRate=(Select DebitRate+CreditRate From TBL038 Where MainGuide=@BondGuide) 
		set @Note2=(Select Notes From TBL038 Where MainGuide=@BondGuide) 
		declare @Cost1 uniqueidentifier 
		declare @Cost2 uniqueidentifier 
		set @Cost2=(Select CostCenter From TBL038 Where MainGuide=@BondGuide) 
		Set @Cost1=(Select CostCenter From TBL010 Where CardGuide=@BondGuide) 
		if(@EntryDate Is Null)set @EntryDate=(Select BondDate From TBL010 Where CardGuide=@BondGuide)  
		----------------------------------------------Insert Entry Head---------------------------------------------- 
		Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes) 
			Values(@EntryGuide,@OldEntry,@EntryPosted,@EntrySecurity,@EntryDate,@DoneDate,@CrrGuide,@BondGuide,@Rate,@Note) 
		----------------------------------------------Insert Agent Cheq---------------------------------------------- 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@AcID,@CrrGuide,@Vlu,@VluRate,@ClAc,@Note2,@Cost2) 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@ClAc,@CrrGuide,@Vlu,@VluRate,@AcID,@Note,@Cost1) 
		-------------------------------------------Insert The Collect Entry------------------------------------------- 
		if((@BondCollect>0)And(@CollectDate Is Not Null)And(@CollectAc Is Not Null)) 
		begin 
			Set @EntryGuide=newid() 
			Set @OldEntry=dbo.Fun005() 
		Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes)Values 
			(@EntryGuide,@OldEntry,@EntryPosted,@EntrySecurity,@CollectDate,@DoneDate,@CrrGuide,@BondGuide,@Rate,@Note) 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@CollectAc,@CrrGuide,@Vlu,@VluRate,@ClAc,@Note,@Cost2) 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@ClAc,@CrrGuide,@Vlu,@VluRate,@CollectAc,@Note,@Cost1) 
		end 
		----------------------------------------------Insert Other Entries---------------------------------------------- 
		exec Prc013 @BondGuide,@ClAc 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc015]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure [dbo].[Prc015](@BondGuide uniqueidentifier) 
	as begin   
		declare @BondType uniqueidentifier   
		declare @OldEntry int   
		declare @MainBond uniqueidentifier 
		Set @OldEntry=(Select Max(EntryNumber)From TBL011 Where BondGuide=@BondGuide)  
		Set @BondType=(Select MainGuide From TBL010 Where CardGuide=@BondGuide)   
		Set @MainBond=(Select MainBondType From TBL010 Where CardGuide=@BondGuide) 
		declare @EntryDate datetime  
		declare @DoneDate datetime  
		declare @CollectDate datetime  
		declare @EntryGuide uniqueidentifier  
		declare @CrrGuide uniqueidentifier  
		declare @EntryPosted tinyint  
		declare @EntrySecurity tinyint  
		declare @Rate float  
		declare @Note nvarchar(255)  
		declare @Note2 nvarchar(255)  
		declare @AcID uniqueidentifier  
		declare @ClAc uniqueidentifier  
		declare @CollectAc uniqueidentifier  
		declare @Vlu float  
		declare @VluRate float 
		declare @BondCollect bit  
		Set @BondCollect=(Select Collected From TBL038 Where MainGuide=@BondGuide)  
		Set @CollectDate=(Select CollectDate From TBL038 Where MainGuide=@BondGuide)  
		set @EntryGuide=newid()  
		if(@OldEntry Is Null)Set @OldEntry=dbo.Fun005()  
		if(@OldEntry=0)Set @OldEntry=dbo.Fun005()  
		set @EntryPosted=(Select Posted From TBL010 Where CardGuide=@BondGuide)   
		set @CollectAc=(Select AccountGuide2 From TBL010 Where CardGuide=@BondGuide) 
		set @EntrySecurity=(Select Security From TBL010 Where CardGuide=@BondGuide)   
		set @EntryDate=(Select DueDate From TBL010 Where CardGuide=@BondGuide)   
		set @DoneDate=(Select DoneIn From TBL010 Where CardGuide=@BondGuide)   
		set @CrrGuide=(Select CurrencyGuide From TBL010 Where CardGuide=@BondGuide)   
		set @Rate=(Select Rate From TBL010 Where CardGuide=@BondGuide)   
		set @Note=(Select Notes From TBL010 Where CardGuide=@BondGuide)   
		set @ClAc=(Select AccountGuide From TBL010 Where CardGuide=@MainBond)   
		set @AcID=(Select AccountGuide2 From TBL010 Where CardGuide=@BondGuide)  
		set @Vlu=(Select Debit+Credit From TBL038 Where MainGuide=@BondGuide)  
		set @VluRate=(Select DebitRate+CreditRate From TBL038 Where MainGuide=@BondGuide)  
		set @Note2=(Select Notes From TBL038 Where MainGuide=@BondGuide)  
		declare @Cost1 uniqueidentifier 
		declare @Cost2 uniqueidentifier 
		set @Cost2=(Select CostCenter From TBL038 Where MainGuide=@BondGuide) 
		Set @Cost1=(Select CostCenter From TBL010 Where CardGuide=@BondGuide) 
		if(@EntryDate Is Null)set @EntryDate=(Select BondDate From TBL010 Where CardGuide=@BondGuide)   
		----------------------------------------------Insert Entry Head----------------------------------------------  
		Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes)  
			Values(@EntryGuide,@OldEntry,@EntryPosted,@EntrySecurity,@EntryDate,@DoneDate,@CrrGuide,@BondGuide,@Rate,@Note)  
		----------------------------------------------Insert Agent Cheq----------------------------------------------  
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter)  
			Values(@EntryGuide,@ClAc,@CrrGuide,@Vlu,@VluRate,@AcID,@Note,@Cost2)  
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter)  
			Values(@EntryGuide,@AcID,@CrrGuide,@Vlu,@VluRate,@ClAc,@Note2,@Cost1)  
		-------------------------------------------Insert The Collect Entry-------------------------------------------  
		if((@BondCollect>0)And(@CollectDate Is Not Null)And(@CollectAc Is Not Null))  
		begin  
			Set @EntryGuide=newid()  
			Set @OldEntry=dbo.Fun005()  
		Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes)Values  
			(@EntryGuide,@OldEntry,@EntryPosted,@EntrySecurity,@CollectDate,@DoneDate,@CrrGuide,@BondGuide,@Rate,@Note)  
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter)  
			Values(@EntryGuide,@CollectAc,@CrrGuide,@Vlu,@VluRate,@ClAc,@Note,@Cost1)  
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter)  
			Values(@EntryGuide,@ClAc,@CrrGuide,@Vlu,@VluRate,@CollectAc,@Note,@Cost2)  
		end  
		----------------------------------------------Insert Other Entries----------------------------------------------  
		exec Prc013 @BondGuide,@ClAc  
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc016]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure [dbo].[Prc016](@BondGuide uniqueidentifier) 
	as begin   
		declare @BondType uniqueidentifier   
		declare @OldEntry int   
		declare @MainBond uniqueidentifier 
		Set @OldEntry=(Select Max(EntryNumber)From TBL011 Where BondGuide=@BondGuide)  
		Set @BondType=(Select MainGuide From TBL010 Where CardGuide=@BondGuide)   
		Set @MainBond=(Select MainBondType From TBL010 Where CardGuide=@BondGuide) 
		declare @EntryDate datetime  
		declare @DoneDate datetime  
		declare @CollectDate datetime  
		declare @EntryGuide uniqueidentifier  
		declare @CrrGuide uniqueidentifier  
		declare @EntryPosted tinyint  
		declare @EntrySecurity tinyint  
		declare @Rate float  
		declare @Note nvarchar(255)  
		declare @Note2 nvarchar(255)  
		declare @AcID uniqueidentifier  
		declare @ClAc uniqueidentifier  
		declare @CollectAc uniqueidentifier  
		declare @Vlu float  
		declare @VluRate float 
		declare @BondCollect bit  
		Set @BondCollect=(Select Collected From TBL038 Where MainGuide=@BondGuide)  
		Set @CollectDate=(Select CollectDate From TBL038 Where MainGuide=@BondGuide)  
		set @EntryGuide=newid()  
		if(@OldEntry Is Null)Set @OldEntry=dbo.Fun005()  
		if(@OldEntry=0)Set @OldEntry=dbo.Fun005()  
		set @EntryPosted=(Select Posted From TBL010 Where CardGuide=@BondGuide)   
		set @CollectAc=(Select AccountGuide2 From TBL010 Where CardGuide=@BondGuide) 
		set @EntrySecurity=(Select Security From TBL010 Where CardGuide=@BondGuide)   
		set @EntryDate=(Select DueDate From TBL010 Where CardGuide=@BondGuide)   
		set @DoneDate=(Select DoneIn From TBL010 Where CardGuide=@BondGuide)   
		set @CrrGuide=(Select CurrencyGuide From TBL010 Where CardGuide=@BondGuide)   
		set @Rate=(Select Rate From TBL010 Where CardGuide=@BondGuide)   
		set @Note=(Select Notes From TBL010 Where CardGuide=@BondGuide)   
		set @ClAc=(Select AccountGuide2 From TBL010 Where CardGuide=@BondGuide)   
		set @AcID=(Select AccountGuide From TBL010 Where CardGuide=@MainBond)  
		set @Vlu=(Select Debit+Credit From TBL038 Where MainGuide=@BondGuide)  
		set @VluRate=(Select DebitRate+CreditRate From TBL038 Where MainGuide=@BondGuide)  
		set @Note2=(Select Notes From TBL038 Where MainGuide=@BondGuide)  
		declare @Cost1 uniqueidentifier 
		declare @Cost2 uniqueidentifier 
		set @Cost2=(Select CostCenter From TBL038 Where MainGuide=@BondGuide) 
		Set @Cost1=(Select CostCenter From TBL010 Where CardGuide=@BondGuide) 
		if(@EntryDate Is Null)set @EntryDate=(Select BondDate From TBL010 Where CardGuide=@BondGuide)   
		----------------------------------------------Insert Entry Head----------------------------------------------  
		Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes)  
			Values(@EntryGuide,@OldEntry,@EntryPosted,@EntrySecurity,@EntryDate,@DoneDate,@CrrGuide,@BondGuide,@Rate,@Note)  
		----------------------------------------------Insert Agent Cheq----------------------------------------------  
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter)  
			Values(@EntryGuide,@AcID,@CrrGuide,@Vlu,@VluRate,@ClAc,@Note2,@Cost2)  
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter)  
			Values(@EntryGuide,@ClAc,@CrrGuide,@Vlu,@VluRate,@AcID,@Note,@Cost1)  
		-------------------------------------------Insert The Collect Entry-------------------------------------------  
		if((@BondCollect>0)And(@CollectDate Is Not Null)And(@CollectAc Is Not Null))  
		begin  
			Set @EntryGuide=newid()  
			Set @OldEntry=dbo.Fun005()  
		Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes)Values  
			(@EntryGuide,@OldEntry,@EntryPosted,@EntrySecurity,@CollectDate,@DoneDate,@CrrGuide,@BondGuide,@Rate,@Note)  
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter)  
			Values(@EntryGuide,@CollectAc,@CrrGuide,@Vlu,@VluRate,@ClAc,@Note,@Cost2)  
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter)  
			Values(@EntryGuide,@ClAc,@CrrGuide,@Vlu,@VluRate,@CollectAc,@Note,@Cost1)  
		end  
		----------------------------------------------Insert Other Entries----------------------------------------------  
		exec Prc013 @BondGuide,@ClAc  
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc017]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure [dbo].[Prc017](@BondGuide uniqueidentifier) 
	as begin 
		declare @BondType uniqueidentifier 
		declare @OldEntry int 
		declare @MainBond uniqueidentifier 
		Set @OldEntry=(Select Max(EntryNumber)From TBL011 Where BondGuide=@BondGuide) 
		Set @BondType=(Select MainGuide From TBL010 Where CardGuide=@BondGuide) 
		Set @MainBond=(Select MainBondType From TBL010 Where CardGuide=@BondGuide) 
		declare @EntryDate datetime 
		declare @DoneDate datetime 
		declare @CollectDate datetime 
		declare @EntryGuide uniqueidentifier 
		declare @CrrGuide uniqueidentifier 
		declare @EntryPosted tinyint 
		declare @EntrySecurity tinyint 
		declare @Rate float 
		declare @Note nvarchar(255) 
		declare @Note2 nvarchar(255) 
		declare @AcID uniqueidentifier 
		declare @ClAc uniqueidentifier 
		declare @CollectAc uniqueidentifier 
		declare @Vlu float 
		declare @VluRate float 
		declare @BondCollect bit 
		Set @BondCollect=(Select Collected From TBL038 Where MainGuide=@BondGuide) 
		Set @CollectDate=(Select CollectDate From TBL038 Where MainGuide=@BondGuide) 
		set @EntryGuide=newid() 
		if(@OldEntry Is Null)Set @OldEntry=dbo.Fun005() 
		if(@OldEntry=0)Set @OldEntry=dbo.Fun005() 
		set @EntryPosted=(Select Posted From TBL010 Where CardGuide=@BondGuide) 
		set @CollectAc=(Select AccountGuide2 From TBL010 Where CardGuide=@BondGuide) 
		set @EntrySecurity=(Select Security From TBL010 Where CardGuide=@BondGuide) 
		set @EntryDate=(Select DueDate From TBL010 Where CardGuide=@BondGuide) 
		set @DoneDate=(Select DoneIn From TBL010 Where CardGuide=@BondGuide) 
		set @CrrGuide=(Select CurrencyGuide From TBL010 Where CardGuide=@BondGuide) 
		set @Rate=(Select Rate From TBL010 Where CardGuide=@BondGuide) 
		set @Note=(Select Notes From TBL010 Where CardGuide=@BondGuide) 
		set @ClAc=(Select AccountGuide From TBL010 Where CardGuide=@BondGuide) 
		set @AcID=(Select AccountGuide From TBL010 Where CardGuide=@MainBond) 
		set @Vlu=(Select Debit+Credit From TBL038 Where MainGuide=@BondGuide) 
		set @VluRate=(Select DebitRate+CreditRate From TBL038 Where MainGuide=@BondGuide) 
		set @Note2=(Select Notes From TBL038 Where MainGuide=@BondGuide) 
		declare @Cost1 uniqueidentifier 
		declare @Cost2 uniqueidentifier 
		set @Cost2=(Select CostCenter From TBL038 Where MainGuide=@BondGuide) 
		Set @Cost1=(Select CostCenter From TBL010 Where CardGuide=@BondGuide) 
		if(@EntryDate Is Null)set @EntryDate=(Select BondDate From TBL010 Where CardGuide=@BondGuide) 
		----------------------------------------------Insert Entry Head---------------------------------------------- 
		Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes) 
			Values(@EntryGuide,@OldEntry,@EntryPosted,@EntrySecurity,@EntryDate,@DoneDate,@CrrGuide,@BondGuide,@Rate,@Note) 
		----------------------------------------------Insert Agent Cheq---------------------------------------------- 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@AcID,@CrrGuide,@Vlu,@VluRate,@ClAc,@Note2,@Cost2) 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@ClAc,@CrrGuide,@Vlu,@VluRate,@AcID,@Note,@Cost1) 
		-------------------------------------------Insert The Collect Entry------------------------------------------- 
		if((@BondCollect>0)And(@CollectDate Is Not Null)And(@CollectAc Is Not Null)) 
		begin 
			Set @EntryGuide=newid() 
			Set @OldEntry=dbo.Fun005() 
		Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes)Values 
			(@EntryGuide,@OldEntry,@EntryPosted,@EntrySecurity,@CollectDate,@DoneDate,@CrrGuide,@BondGuide,@Rate,@Note) 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@CollectAc,@CrrGuide,@Vlu,@VluRate,@ClAc,@Note,@Cost2) 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@ClAc,@CrrGuide,@Vlu,@VluRate,@CollectAc,@Note,@Cost1) 
		end 
		----------------------------------------------Insert Other Entries---------------------------------------------- 
		exec Prc013 @BondGuide,@ClAc 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc021]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure [dbo].[Prc021](@BondGuide uniqueidentifier) 
	as begin 
		declare @BondType uniqueidentifier 
		declare @OldEntry int 
		Set @OldEntry=(Select Max(EntryNumber)From TBL011 Where BondGuide=@BondGuide) 
		Set @BondType=(Select MainGuide From TBL010 Where CardGuide=@BondGuide) 
		declare @EntryDate datetime 
		declare @DoneDate datetime 
		declare @CollectDate datetime 
		declare @EntryGuide uniqueidentifier 
		declare @CrrGuide uniqueidentifier 
		declare @EntryPosted tinyint 
		declare @EntrySecurity tinyint 
		declare @Rate float 
		declare @Note nvarchar(255) 
		declare @Note2 nvarchar(255) 
		declare @AcID uniqueidentifier 
		declare @ClAc uniqueidentifier 
		declare @CollectAc uniqueidentifier 
		declare @Vlu float 
		declare @VluRate float 
		declare @BondCollect bit 
		Set @BondCollect=(Select Collected From TBL038 Where MainGuide=@BondGuide) 
		Set @CollectDate=(Select CollectDate From TBL038 Where MainGuide=@BondGuide) 
		set @EntryGuide=newid() 
		if(@OldEntry Is Null)Set @OldEntry=dbo.Fun005() 
		if(@OldEntry=0)Set @OldEntry=dbo.Fun005() 
		set @EntryPosted=(Select Posted From TBL010 Where CardGuide=@BondGuide) 
		set @CollectAc=(Select AccountGuide2 From TBL010 Where CardGuide=@BondGuide) 
		set @EntrySecurity=(Select Security From TBL010 Where CardGuide=@BondGuide) 
		set @EntryDate=(Select DueDate From TBL010 Where CardGuide=@BondGuide) 
		set @DoneDate=(Select DoneIn From TBL010 Where CardGuide=@BondGuide) 
		set @CrrGuide=(Select CurrencyGuide From TBL010 Where CardGuide=@BondGuide) 
		set @Rate=(Select Rate From TBL010 Where CardGuide=@BondGuide) 
		set @Note=(Select Notes From TBL010 Where CardGuide=@BondGuide) 
		set @ClAc=(Select AccountGuide2 From TBL010 Where CardGuide=@BondGuide) 
		set @AcID=(Select AccountGuide From TBL038 Where MainGuide=@BondGuide) 
		set @Vlu=(Select Debit+Credit From TBL038 Where MainGuide=@BondGuide) 
		set @VluRate=(Select DebitRate+CreditRate From TBL038 Where MainGuide=@BondGuide) 
		set @Note2=(Select Notes From TBL038 Where MainGuide=@BondGuide) 
		declare @Cost1 uniqueidentifier 
		declare @Cost2 uniqueidentifier 
		Set @Cost1=(Select CostCenter From TBL010 Where CardGuide=@BondGuide) 
		set @Cost2=(Select CostCenter From TBL038 Where MainGuide=@BondGuide) 
		if(@EntryDate Is Null)set @EntryDate=(Select BondDate From TBL010 Where CardGuide=@BondGuide) 
		----------------------------------------------Insert Entry Head---------------------------------------------- 
		Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes) 
			Values(@EntryGuide,@OldEntry,@EntryPosted,@EntrySecurity,@EntryDate,@DoneDate,@CrrGuide,@BondGuide,@Rate,@Note) 
		----------------------------------------------Insert Agent Cheq---------------------------------------------- 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@ClAc,@CrrGuide,@Vlu,@VluRate,@AcID,@Note,@Cost1) 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@AcID,@CrrGuide,@Vlu,@VluRate,@ClAc,@Note2,@Cost2) 
		-------------------------------------------Insert The Collect Entry------------------------------------------- 
		if((@BondCollect>0)And(@CollectDate Is Not Null)And(@CollectAc Is Not Null)) 
		begin 
			Set @EntryGuide=newid() 
			Set @OldEntry=dbo.Fun005() 
		Insert Into TBL011(CardGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,Rate,Notes)Values 
			(@EntryGuide,@OldEntry,@EntryPosted,@EntrySecurity,@CollectDate,@DoneDate,@CrrGuide,@BondGuide,@Rate,@Note) 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@CollectAc,@CrrGuide,@Vlu,@VluRate,@ClAc,@Note,@Cost2) 
		Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,Description,CostCenter) 
			Values(@EntryGuide,@ClAc,@CrrGuide,@Vlu,@VluRate,@CollectAc,@Note,@Cost1) 
		end 
		----------------------------------------------Insert Other Entries---------------------------------------------- 
		exec Prc013 @BondGuide,@ClAc 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc022]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc022]
 as begin
 declare @Tb table(ID int,MainGuide uniqueidentifier,TypeID int)
 Insert Into @Tb(ID,MainGuide,TypeID)
 Select LID,MainGuide,10 From
 (Select BondNumber,MainGuide,Max(ID)As LID,Count(*) As Cnt From TBL010 Group By BondNumber,MainGuide)a
 Where a.Cnt>1
 Insert Into @Tb(ID,TypeID)
 Select LID,11 From
 (Select EntryNumber,Max(ID)As LID,Count(*) As Cnt From TBL011 Group By EntryNumber)a
 Where a.Cnt>1
 declare @ID int
 declare @MainGuide uniqueidentifier
 declare @TypeID int
 declare @NewB int
 while((Select Count(*) From @Tb)>0)
 begin
 	Select Top 1 @ID=ID,@MainGuide=MainGuide,@TypeID=TypeID From @Tb
 	if(@TypeID=11)
 	begin
 		Set @NewB=dbo.Fun005()
 		Alter Table TBL011 Disable Trigger All
 		Update TBL011 Set [EntryNumber]=@NewB Where ID=@ID
 	end
 	else if(@TypeID=10)
 	begin
 		Set @NewB=IsNull((Select Max(BondNumber) From TBL010 Where MainGuide=@MainGuide),0)+1
 		Alter Table TBL010 Disable Trigger All
 		Update TBL010 Set [BondNumber]=@NewB Where ID=@ID
 	end
 	Delete From @Tb Where ID=@ID And TypeID=@TypeID
 end
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc023]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc023](@G uniqueidentifier)
 as begin
 if((Select Count(*) From TBL020 Where BooleanOption28=1)>0)
 begin
 	declare @Tb table(CardGuide uniqueidentifier,MainGuide uniqueidentifier,ProductGuide uniqueidentifier,BillQty float,RelatedQty float,RestQty float)
 	Insert Into @Tb(CardGuide,ProductGuide,BillQty,RelatedQty,RestQty)
 	Select a.CardGuide,a.ProductGuide,Sum(a.InvoiceMovementSide*a.Qty) As BillQty,Sum(a.InvoiceMovementSide*(ISNULL(b.Qty*a.InvoiceMovementSide,0))) As RelatedQty,
 	Round(Sum(a.InvoiceMovementSide*(a.Qty-ISNULL(b.Qty*-1,0))),4) As RestQty
 	From
 	(
 	Select b.CardGuide,a.ProductGuide,b.MainGuide,c.InvoiceMovementSide,
 	Sum((a.Quantity+a.ExtraQuantity) * (case a.Unit When 3 Then d.Factor3 When 2 Then d.Factor2 Else 1 end))*c.InvoiceMovementSide As Qty From TBL023 a
 	Inner Join TBL022 b On a.MainGuide=b.CardGuide
 	Inner Join TBL020 c On b.MainGuide=c.CardGuide
 	Inner Join TBL007 d On a.ProductGuide=d.CardGuide
 	Where c.BooleanOption28=1
 	Group By b.CardGuide,a.ProductGuide,b.MainGuide,c.InvoiceMovementSide
 	)a
 	Left Join
 	(
 	Select a.SourceBill,a.ProductGuide,--b.MainGuide As RelatedBillType,
 	Sum((a.Quantity+a.ExtraQuantity) * (case a.Unit When 3 Then d.Factor3 When 2 Then d.Factor2 Else 1 end) * IsNull(r.BillSide,c.InvoiceMovementSide)) As Qty From TBL023 a
 	Inner Join TBL022 b On a.MainGuide=b.CardGuide
 	Inner Join TBL007 d On a.ProductGuide=d.CardGuide
 	Inner Join TBL020 c On b.MainGuide=c.CardGuide
 	Inner Join TBL022 s On a.SourceBill=s.CardGuide
 	Left Join TBL129 r On r.MainGuide=s.MainGuide And r.BillGuide=b.MainGuide
 	Group By a.SourceBill,a.ProductGuide
 	)b
 	On a.CardGuide=b.SourceBill And a.ProductGuide=b.ProductGuide
 	Group By a.CardGuide,a.ProductGuide
 	alter table TBL022 disable trigger All
 	Update b Set[LockRelations]=a.Rst From (Select CardGuide,(case when a.RestQty>0 then 0 else 1 end) As Rst From
 	(Select CardGuide,Sum(BillQty)As BillQty,Sum(RelatedQty)As RelatedQty,Sum(RestQty)As RestQty From @Tb Group By CardGuide)a)a
 	Inner Join TBL022 b On a.CardGuide=b.CardGuide Where a.Rst<>b.LockRelations
 end
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc024]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc024](@BondID uniqueidentifier) 
	as begin 
	declare @BndTp uniqueidentifier 
	declare @IntmAc uniqueidentifier 
	Select @BndTp=MainGuide From TBL010 Where CardGuide=@BondID 
	declare @BuiltTowEntries bit 
	declare @DoNotGenerateEntry bit 
	declare @CollectAccount uniqueidentifier 
	declare @ReturnAccount uniqueidentifier 
	declare @TranferAccount uniqueidentifier 
	declare @IntermediateAccount uniqueidentifier 
	declare @BlV int 
	Declare @Agent uniqueidentifier 
	declare @bAcDbt uniqueidentifier 
	declare @bAcCrt uniqueidentifier 
	declare @bAcDbtTp tinyint 
	declare @bAcCrtTp tinyint 
	Declare @EnTp tinyint Declare @EnTp2 tinyint 
	declare @JbTp tinyint declare @JbTp2 tinyint 
	declare @PrTp tinyint declare @PrTp2 tinyint 
	declare @BrTp tinyint declare @BrTp2 tinyint 
	declare @CgTp tinyint declare @CgTp2 tinyint 
	declare @AgTp tinyint declare @AgTp2 tinyint 
	declare @CardMode tinyint 
	Declare @MainAffContra bit 
	Declare @AfctCntrAc bit 
	Declare @BondType int 
	declare @TCrt nvarchar(255) 
	declare @TDbt nvarchar(255) 
	declare @AutoSetContra bit 
	Select @ReturnAccount=ReturnAccount,@TCrt=Text01,@TDbt=Text02,@EnTp=EntryType,@EnTp2=EntryType2,@CardMode=CardMode,@AfctCntrAc=AffectContraAccountInEntry,@MainAffContra=AffectContraAccountInEntry,@BondType=BondType,@AutoSetContra=AutoGenerateContraAccount 
		,@JbTp=CostCenterType,@JbTp2=CostCenterType2,@PrTp=ProjectType,@PrTp2=ProjectType2,@BrTp=BranchType,@BrTp2=BranchType2,@CgTp=CategoriesType,@CgTp2=CategoriesType2,@AgTp=AgentType,@AgTp2=AgentType2, 
		@bAcDbtTp=BooleanOption2,@bAcCrtTp=BooleanOption3,@BuiltTowEntries=BuiltTowEntries,@BlV=BooleanOption1,@DoNotGenerateEntry=DoNotGenerateEntry,@CollectAccount=CollectAccount,@IntermediateAccount=IntermediateAccount 
	From TBL009 Where CardGuide=@BndTp 
	if(@DoNotGenerateEntry>0)return 
	declare @DoneIn datetime 
	declare @Security tinyint 
	declare @Pst tinyint 
	declare @ReturnDate datetime 
	declare @DAc uniqueidentifier 
	declare @HAc uniqueidentifier 
	Set @HAc=(Select AccountGuide From TBL010 Where CardGuide=@BondID) 
	if(@BuiltTowEntries>0) 
		Set @HAc=@IntermediateAccount 
	declare @DCr uniqueidentifier 
	declare @Dbt float 
	declare @Crt float 
	declare @DbtRate float 
	declare @CrtRate float 
	declare @Job uniqueidentifier 
	declare @Prj uniqueidentifier 
	declare @Brn uniqueidentifier 
	declare @Nts nvarchar(255) 
	declare @TJob uniqueidentifier 
	declare @TPrj uniqueidentifier 
	declare @TBrn uniqueidentifier 
	declare @TNts nvarchar(255) 
	declare @EntryNumber int 
	declare @EntryID uniqueidentifier 
	declare @SetOffAccount uniqueidentifier 
	declare @BondCollectAc uniqueidentifier 
	declare @SetoffDate datetime 
	Declare @Cg01 uniqueidentifier 
	Declare @Cg02 uniqueidentifier 
	Declare @Cg03 uniqueidentifier 
	Declare @Cg04 uniqueidentifier 
	Declare @Cg05 uniqueidentifier 
	Declare @Row uniqueidentifier 
	Declare @EntryAgent uniqueidentifier 
	Declare @RecordReturnedAccount uniqueidentifier 
	Declare @RecordNote nvarchar(255) 
	Select @BondCollectAc=AccountGuide,@EntryAgent=AgentGuide,@Job=CostCenter,@Prj=Project,@Brn=Branch,@Pst=Posted,@Security=Security,@DoneIn=DoneIn,@Nts=Notes From TBL010 Where CardGuide=@BondID 
	--------------------------------------Bond Return-------------------------------------- 
	DECLARE C CURSOR READ_ONLY FAST_FORWARD FOR 
		SELECT RowGuide,AccountGuide,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,IsNull(CostCenter,@Job),IsNull(Project,@Prj),IsNull(Branch,@Brn),ReturnDate,(case When Len(IsNull(Notes,''))>0 Then Notes End),(case When Len(IsNull(BondDetailsNotes2,''))>0 Then BondDetailsNotes2 Else @Nts end), 
		SetoffDate,IsNull(TransferToAccount,IsNull(IntermediateAccount,@CollectAccount)),IntermediateAccount, 
		Category01 ,Category02 ,Category03 ,Category04 ,Category05 ,IsNull(AgentGuide,@EntryAgent),TransferToAccount,ReturnedAccount 
		FROM TBL038 Where MainGuide=@BondID Order By ID 
	OPEN C 
	FETCH NEXT FROM C INTO @Row,@DAc,@DCr,@Dbt,@Crt,@DbtRate,@CrtRate,@TJob,@TPrj,@TBrn,@ReturnDate,@RecordNote,@TNts,@SetoffDate,@SetOffAccount,@IntmAc,@Cg01,@Cg02,@Cg03,@Cg04,@Cg05,@Agent,@TranferAccount,@RecordReturnedAccount 
	WHILE (@@FETCH_STATUS = 0) 
	BEGIN 
		if(@ReturnDate Is Not Null And dbo.Fun071(@ReturnDate)=1) 
		begin 
			Set @EntryID=newid() 
			Set @EntryNumber=dbo.Fun005() 
			if(@TranferAccount is Not Null) 
			begin 
				Set @DAc=IsNull(@RecordReturnedAccount,@DAc) 
				if(@SetOffAccount Is Not Null And @SetoffDate Is Not Null) 
					Set @ReturnAccount=@SetOffAccount 
			end 
			Insert Into TBL011(CardGuide,RowGuide,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,CostCenter,Project,Branch,Rate,Notes,TypeID)Values 
				(@EntryID,@Row,@EntryNumber,@Pst,@Security,@ReturnDate,@DoneIn,@DCr,@BondID,@TJob,@TPrj,@TBrn,((@Crt+@Dbt)/(@DbtRate+@CrtRate)),@TNts,3) 
			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,ContraAccount,CostCenter,Project,Branch,Description)Values 
				(@EntryID,@DAc,@DCr,@Crt,@Dbt,@CrtRate,@DbtRate,@HAc,@TJob,@TPrj,@TBrn,@TNts) 
			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,Credit,DebitRate,CreditRate,ContraAccount,CostCenter,Project,Branch,Description)Values 
				(@EntryID,IsNull(@ReturnAccount,(CASE When @SetoffDate Is Not Null Then IsNull(IsNull(@IntmAc,@CollectAccount),@HAc) Else @HAc End)),@DCr,@Dbt,@Crt,@DbtRate,@CrtRate,@DAc,@TJob,@TPrj,@TBrn,@TNts) 
			--------------------------------------Extra Entry-------------------------------------- 
			if(@BlV=3) 
			begin 
				if(@bAcDbtTp=1) 
					 Set @bAcDbt=@DAc 
				else if(@bAcDbtTp=2) 
					 Set @bAcDbt=@SetOffAccount 
				else 
					 Set @bAcDbt=@BondCollectAc 
				if(@bAcCrtTp=1) 
					 Set @bAcCrt=@DAc 
				else if(@bAcCrtTp=2) 
					 Set @bAcCrt=@SetOffAccount 
				else 
					 Set @bAcCrt=@BondCollectAc 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,CostCenter,Description,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05)Values 
					 (@EntryID,@bAcDbt,@DCr,@Dbt+@Crt,@DbtRate+@CrtRate,@bAcCrt,(CASE When @JbTp2>0 Then @TJob Else Null End),(case When Len(IsNull(@TDbt,''))>0 Then @TDbt Else @TNts End),(CASE When @PrTp2>0 Then @TPrj Else Null End),(CASE When @BrTp2>0 Then @TBrn Else Null End),(CASE When @AgTp2>0 Then @Agent Else Null End), 
				(CASE When @CgTp2>0 Then @Cg01 Else Null End),(CASE When @CgTp2>0 Then @Cg02 Else Null End),(CASE When @CgTp2>0 Then @Cg03 Else Null End),(CASE When @CgTp2>0 Then @Cg04 Else Null End),(CASE When @CgTp2>0 Then @Cg05 Else Null End)) 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,CostCenter,Description,Project,Branch,AgentGuide,Category01 ,Category02 ,Category03 ,Category04 ,Category05)Values 
					 (@EntryID,@bAcCrt,@DCr,@Dbt+@Crt,@DbtRate+@CrtRate,@bAcDbt,(CASE When @JbTp2>0 Then @TJob Else Null End),(case When Len(IsNull(@TCrt,''))>0 Then @TCrt Else @TNts End),(CASE When @PrTp2>0 Then @TPrj Else Null End),(CASE When @BrTp2>0 Then @TBrn Else Null End),(CASE When @AgTp2>0 Then @Agent Else Null End), 
				(CASE When @CgTp2>0 Then @Cg01 Else Null End),(CASE When @CgTp2>0 Then @Cg02 Else Null End),(CASE When @CgTp2>0 Then @Cg03 Else Null End),(CASE When @CgTp2>0 Then @Cg04 Else Null End),(CASE When @CgTp2>0 Then @Cg05 Else Null End)) 
			end 
		end 
		--------------------------------------Bond Setoff-------------------------------------- 
		if(@Crt>0 And @SetoffDate is not null And @CollectAccount Is Not Null And @IntermediateAccount Is Not Null And dbo.Fun071(@SetoffDate)=1) 
		begin 
			Set @EntryID=newid() 
			Set @EntryNumber=dbo.Fun005() 
			Insert Into TBL011(CardGuide,RowGuide,TypeID,EntryNumber,Posted,Security,EntryDate,DoneIn,CurrencyGuide,BondGuide,CostCenter,Project,Branch,Rate,Notes)Values 
				(@EntryID,@Row,2,@EntryNumber,@Pst,@Security,@SetoffDate,@DoneIn,@DCr,@BondID,@TJob,@TPrj,@TBrn,((@Crt+@Dbt)/(@DbtRate+@CrtRate)),IsNull(@RecordNote,@TNts)) 
			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,CostCenter,Project,Branch,Description)Values 
				(@EntryID,IsNull(@IntmAc,@SetOffAccount),@DCr,@Crt,@CrtRate,@IntermediateAccount,@TJob,@TPrj,@TBrn,IsNull(@RecordNote,@TNts)) 
			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,CostCenter,Project,Branch,Description)Values 
				(@EntryID,IsNull(@IntmAc,@IntermediateAccount),@DCr,@Crt,@CrtRate,@SetOffAccount,@TJob,@TPrj,@TBrn,IsNull(@RecordNote,@TNts)) 
		end 
	FETCH NEXT FROM C INTO @Row,@DAc,@DCr,@Dbt,@Crt,@DbtRate,@CrtRate,@TJob,@TPrj,@TBrn,@ReturnDate,@RecordNote,@TNts,@SetoffDate,@SetOffAccount,@IntmAc,@Cg01,@Cg02,@Cg03,@Cg04,@Cg05,@Agent,@TranferAccount,@RecordReturnedAccount 
	END 
	CLOSE C 
	Deallocate C 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc025]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc025](@BondGuide uniqueidentifier)as begin 
	-----------------------------General----------------------------- 
	declare @BndType uniqueidentifier 
	declare @EnNum int 
	declare @EnDate datetime 
	declare @DoneIn datetime 
	declare @EnGD uniqueidentifier 
	declare @ND int 
	declare @AcType uniqueidentifier 
	declare @Crrncy uniqueidentifier 
	declare @Project uniqueidentifier 
	declare @Branch uniqueidentifier 
	declare @CostCenter uniqueidentifier 
	declare @AgAc uniqueidentifier 
	declare @BnAc uniqueidentifier 
	declare @AvDate datetime 
	declare @Acpt bit 
	declare @Posted bit 
	declare @Security tinyint 
	declare @Vlu float 
	declare @VluRate float 
	declare @FRte float 
	declare @IsPaiment Bit 
	declare @Nts nvarchar(255) 
	declare @DNts nvarchar(255) 
	-----------------------------Start Work----------------------------- 
	set @IsPaiment=(Select IsPayment From TBL009 Where CardGuide=@BndType) 
	Select @FRte=Rate,@BnAc=AccountGuide,@DoneIn=DoneIn,@BndType=MainGuide,@Posted=Posted,@Project=Project,@Branch=Branch,@Security=Security,@CostCenter=CostCenter,@Nts=Notes From TBL010 Where CardGuide=@BondGuide 
	delete From TBL011 Where BondGuide=@BondGuide 
	declare @D int 
	Set @D=0 
	if((Select Count(*)From TBL038 Where MainGuide=@BondGuide)<2) 
	begin 
		declare @MainVlu float 
		Set @MainVlu=(Select Value From TBL010 Where CardGuide=@BondGuide) 
		if(@MainVlu>0) 
		begin 
			declare @FDte datetime 
			declare @FAc uniqueidentifier 
			declare @FCrnc uniqueidentifier 
			Set @FAc=(Select AccountGuide From TBL038 Where MainGuide=@BondGuide) 
			Set @FDte=(Select DueDate From TBL038 Where MainGuide=@BondGuide) 
			Set @FCrnc=(Select CurrencyGuide From TBL038 Where MainGuide=@BondGuide) 
			if(@FDte Is Null)Set @FDte=(Select BondDate From TBL010 Where CardGuide=@BondGuide) 
			if(@FAc Is Null)Set @FAc=(Select AccountGuide2 From TBL010 Where CardGuide=@BondGuide) 
			if(@FCrnc Is Null)Set @FCrnc=(Select CurrencyGuide From TBL010 Where CardGuide=@BondGuide) 
			Delete From TBL038 Where MainGuide=@BondGuide 
			declare @CNmb int 
			Set @CNmb=(Select TimeLength From TBL010 Where CardGuide=@BondGuide) 
			declare @DateTp uniqueidentifier 
			Set @DateTp=(Select PayType From TBL010 Where CardGuide=@BondGuide) 
			declare @TmpNm int 
			set @TmpNm=0 
			while(@TmpNm<@CNmb) 
			begin 
				if(@IsPaiment>0) 
					Insert Into TBL038(Credit,CreditRate,MainGuide,AccountGuide,CurrencyGuide,DueDate,CostCenter)Values( 
					@MainVlu*@FRte,@MainVlu,@BondGuide,@FAc,@FCrnc,@FDte,@CostCenter) 
				else 
					Insert Into TBL038(Debit,DebitRate,MainGuide,AccountGuide,CurrencyGuide,DueDate,CostCenter)Values( 
					@MainVlu*@FRte,@MainVlu,@BondGuide,@FAc,@FCrnc,@FDte,@CostCenter) 
				Set @TmpNm=@TmpNm+1 
				Set @FDte=dbo.Fun056(@FDte,@DateTp,1) 
			end 
		end 
	end 
	-----------------------------Insert Entries----------------------------- 
	WHILE ((Select Count(*) From TBL038 Where MainGuide=@BondGuide And ID>@D)>0) 
	BEGIN 
		Set @D=(Select Min(ID)From TBL038 Where MainGuide=@BondGuide And ID>@D) 
		Set @EnGD=newid() 
		Set @EnNum=dbo.Fun005() 
		Select @EnDate=DueDate,@DNts=IsNull(Notes,@Nts),@Vlu=Debit+Credit,@VluRate=DebitRate+CreditRate,@Crrncy=CurrencyGuide,@AgAc=AccountGuide From TBL038 Where ID=@D 
		Set @Acpt =1 
	-----------------------------Check Entry Active Date----------------------------- 
			Set @ND=0 
			Set @AvDate=1 
			WHILE ((Select Count(*) FROM TBL073 Where MainGuide=@BondGuide And InDate<=@EnDate And ID<>@ND)>0) 
			BEGIN 
				Set @AvDate=(Select Min(InDate) FROM TBL073 Where MainGuide=@BondGuide And InDate<=@EnDate And InDate>=@AvDate And ID<>@ND) 
				Set @ND=(Select Min(ID)FROM TBL073 Where MainGuide=@BondGuide And InDate=@AvDate And ID<>@ND) 
				Set @AcType=(Select TypeGuide From TBL073 Where ID=@ND) 
				if(@AcType='A321692A-8DDD-409A-A800-2BABE0178C67' And @AvDate<=@EnDate) 
					Set @Acpt=0 
				else if(@AvDate<=@EnDate) 
					Set @Acpt=1 
			END 
	------------------------------------------------------------------------ 
		if(@Acpt>0) 
		begin 
			Insert Into TBL011 (CardGuide,EntryNumber,Posted,Security,EntryDate,CurrencyGuide,DoneIn,BondGuide,Project,Branch,CostCenter,Rate,Notes)Values( 
			@EnGD,@EnNum,@Posted,@Security,@EnDate,@Crrncy,@DoneIn,@BondGuide,@Project,@Branch,@CostCenter,@VluRate/@Vlu,@DNts) 
			if((Select Debit From TBL038 Where ID=@D)>(Select Credit From TBL038 Where ID=@D)) 
			begin 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,CostCenter,Description)Values( 
				@EnGD,@AgAc,@Crrncy,@Vlu,@VluRate,@BnAc,@CostCenter,@DNts) 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,CostCenter,Description)Values( 
				@EnGD,@BnAc,@Crrncy,@Vlu,@VluRate,@AgAc,@CostCenter,@DNts) 
			end 
			else 
			begin 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,CostCenter,Description)Values( 
				@EnGD,@BnAc,@Crrncy,@Vlu,@VluRate,@AgAc,@CostCenter,@DNts) 
				Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,CostCenter,Description)Values( 
				@EnGD,@AgAc,@Crrncy,@Vlu,@VluRate,@BnAc,@CostCenter,@DNts) 
			end 
		end 
	END 
	declare @Vlu2 float 
	Set @Vlu2=(Select Value2 From TBL010 Where CardGuide=@BondGuide) 
	if(@Vlu2>0) 
	begin 
		Declare @CnAc uniqueidentifier 
		Set @CnAc=(Select AccountGuide3 From TBL010 Where CardGuide=@BondGuide) 
		Set @BnAc=isnull(@CnAc,@BnAc) 
		Set @EnNum=dbo.Fun005() 
		Set @EnGD=newid() 
		Set @EnDate=(Select BondDate From TBL010 Where CardGuide=@BondGuide) 
		Insert Into TBL011 (CardGuide,EntryNumber,Posted,Security,EntryDate,CurrencyGuide,DoneIn,BondGuide,Project,Branch,CostCenter,Rate,Notes)Values( 
			@EnGD,@EnNum,@Posted,@Security,@EnDate,@Crrncy,@DoneIn,@BondGuide,@Project,@Branch,@CostCenter,@FRte,@DNts) 
		if(@IsPaiment>0) 
		begin 
			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,CostCenter,Description)Values( 
			@EnGD,@BnAc,@Crrncy,@Vlu2*@FRte,@Vlu2,@AgAc,@CostCenter,@DNts) 
			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,CostCenter,Description)Values( 
			@EnGD,@AgAc,@Crrncy,@Vlu2*@FRte,@Vlu2,@BnAc,@CostCenter,@DNts) 
		end 
		else 
		begin 
			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,ContraAccount,CostCenter,Description)Values( 
			@EnGD,@BnAc,@Crrncy,@Vlu2*@FRte,@Vlu2,@AgAc,@CostCenter,@DNts) 
			Insert Into TBL012(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,ContraAccount,CostCenter,Description)Values( 
			@EnGD,@AgAc,@Crrncy,@Vlu2*@FRte,@Vlu2,@BnAc,@CostCenter,@DNts) 
		end 
	end 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc026]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc026](@EnGuide uniqueidentifier) 
	as begin 
		if((Select Count(*)From TBL012 Where MainGuide=@EnGuide)=2) 
		begin 
			Update TBL012 Set ContraAccount=(Select AccountGuide From TBL012 Where ID=(Select Min(ID) From TBL012 Where MainGuide=@EnGuide)) Where ID=(Select Max(ID) From TBL012 Where MainGuide=@EnGuide) 
			Update TBL012 Set ContraAccount=(Select AccountGuide From TBL012 Where ID=(Select Max(ID) From TBL012 Where MainGuide=@EnGuide)) Where ID=(Select Min(ID) From TBL012 Where MainGuide=@EnGuide) 
		end 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc027]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure [dbo].[Prc027](@BondGuide uniqueidentifier,@ForceGenerateEntry bit) 
 as begin
 declare @EntrNum int
 declare @BondNum int
 declare @BondType uniqueidentifier
 declare @BondDate datetime
 Select @BondType=MainGuide,@BondDate=BondDate,@BondNum=BondNumber From TBL010 Where CardGuide=@BondGuide
 Declare @Tp int
 --1 : Bonds , 2 : Entries , 3 : Old Bonds Entries
 declare @OLDBE table(CardGuide uniqueidentifier,ID int,LID int identity(1,1),ForType int,MainID int,CardNumber int,TypeID int)
 Insert Into @OLDBE(ForType,CardNumber)Select 1,BondNumber From TBL010 Where MainGuide=@BondGuide Order By ID
 Insert Into @OLDBE(ForType,CardNumber,TypeID)Select 2,EntryNumber,TypeID From TBL011 Where BondGuide=@BondGuide Order By ID
 Insert Into @OLDBE(ForType,CardNumber,MainID,TypeID)Select 3,a.EntryNumber,b.ID,a.TypeID From TBL011 a Inner Join TBL010 b On a.BondGuide=b.CardGuide Where b.MainBondType=@BondGuide Order By a.ID
 Update a Set[ID]=(Select Count(*) From @OLDBE b Where b.LID<=a.LID
 	And (b.ForType=a.ForType Or (b.ForType is null And a.ForType is null))
 	And (b.TypeID=a.TypeID Or (b.TypeID is null And a.TypeID is null))
 	) From @OLDBE a
 Set @Tp=(Select BondType From TBL009 Where CardGuide=@BondType)
 if((Select Count(*) From TBL010 Where MainGuide=@BondType And BondNumber=@BondNum And CardGuide<>@BondGuide)>0)
 begin
 	Set @BondNum=IsNull((Select Max(BondNumber) From TBL010 Where MainGuide=@BondType),0)+1
 	ALTER TABLE TBL010 DISABLE TRIGGER ALL
 	Update TBL010 Set [BondNumber]=@BondNum Where CardGuide=@BondGuide
 end
 Declare @EnNum int
 Set @EnNum=isnull((Select Min(EntryNumber)From TBL011 Where BondGuide=@BondGuide),0)
 Delete From TBL011 Where BondGuide=@BondGuide
 if(@Tp=1)
 Begin
 	if(dbo.Fun071(@BondDate)=1 And (@ForceGenerateEntry>0 Or ((Select DoNotGenerateEntry From TBL009 Where CardGuide=@BondType)=0)))
 	Begin
 		exec Prc003 @BondGuide, @EnNum
 	end
 end
 else if(@Tp=3)
 Begin
 	declare @Bd uniqueidentifier
 	Set @Bd=(Select BillGuide From TBL010 Where CardGuide=@BondGuide)
 	if(@Bd Is Not Null)
 	begin
 		Delete From TBL060 Where BillGuide=@Bd
 		Insert Into TBL060 (BillGuide,Value,CollectDate,Notes)Select @Bd,DebitRate+CreditRate,DueDate,Notes From TBL038 Where MainGuide=@BondGuide Order By ID
 	end
 	Delete From TBL011 Where BondGuide=@BondGuide
 	if((Select BuiltTowEntries From TBL009 Where CardGuide=@BondType)>0)
 		Begin
 			if((Select DoNotGenerateEntry From TBL009 Where CardGuide=@BondType)=0 And(Select DoNotPostToAccounts From TBL009 Where CardGuide=@BondType)=0)
 				exec Prc004 @BondGuide, @EnNum
 			if((Select DoNotGenerateEntryOnCollect From TBL009 Where CardGuide=@BondType)=0)
 				exec Prc005 @BondGuide
 		end
 	else
 		Begin
 	if(((Select DoNotGenerateEntry From TBL009 Where CardGuide=@BondType)=1) And ((Select DoNotGenerateEntryOnCollect From TBL009 Where CardGuide=@BondType)=0))
 			exec Prc005 @BondGuide
 		else if(dbo.Fun071(@BondDate)=1)
 			exec Prc003 @BondGuide, @EnNum
 		end
 	exec Prc006 @BondGuide
 	exec Prc012 @BondGuide
 	exec Prc024 @BondGuide
 end
 else if(@Tp=6)
 	exec Prc025 @BondGuide
 else if(@Tp=4)
 begin
 	set @EntrNum=(Select Max(EntryNumber) From TBL011 Where BondGuide=@BondGuide)
 	Delete From TBL011 Where BondGuide=@BondGuide
 	if(@BondType='961E2301-07CD-470A-A198-C1A11C01BC1D')
 		exec Prc014 @BondGuide
 	if(@BondType='B63A407F-BBE5-47A7-A869-4E1C41976F12')
 		exec Prc015 @BondGuide
 	if(@BondType='1B631370-FEED-4831-B0A2-AD635D7EA58D')
 		exec Prc016 @BondGuide
 	if(@BondType='4DD6C465-E20C-437A-9EDE-AD7761A3A577')
 		exec Prc017 @BondGuide
 end
 else if(@Tp=5)
 begin
 	set @EntrNum=(Select Max(EntryNumber) From TBL011 Where BondGuide=@BondGuide)
 	Delete From TBL011 Where BondGuide=@BondGuide
 	if(@BondType='1E583F10-8D9D-48DF-AFA7-3CDB3330CCCB')
 		exec Prc021 @BondGuide
 end
 declare @ID int
 declare @ForType int
 declare @MainID int
 declare @CardNumber int
 declare @TypeID int
 declare @TbBE table(CardGuide uniqueidentifier,ID int,LID int,MainID int,CardNumber int,TypeID int)
 DECLARE CPrc027_2 CURSOR READ_ONLY FAST_FORWARD FOR
 	Select ForType From @OLDBE Group By ForType Order By ForType
 OPEN CPrc027_2
 FETCH NEXT FROM CPrc027_2 INTO @ForType
 WHILE (@@FETCH_STATUS = 0)
 BEGIN
 	Delete From @TbBE
 	if(@ForType=1)
 	begin
 		Insert Into @TbBE(CardGuide,LID,CardNumber)Select CardGuide,ID,BondNumber From TBL010 Where MainGuide=@BondGuide Order By ID
 	end
 	else if(@ForType=2)
 	begin
 		Insert Into @TbBE(CardGuide,LID,CardNumber,TypeID)Select CardGuide,ID,EntryNumber,TypeID From TBL011 Where BondGuide=@BondGuide Order By ID
 	end
 	else if(@ForType=3)
 	begin
 		Insert Into @TbBE(CardGuide,LID,CardNumber,MainID,TypeID)Select a.CardGuide,a.ID,a.EntryNumber,b.ID,a.TypeID From TBL011 a Inner Join TBL010 b On a.BondGuide=b.CardGuide Where b.MainBondType=@BondGuide Order By a.ID
 	end
 	Update a Set[ID]=(Select Count(*) From @TbBE b Where b.LID<=a.LID
 	And (b.TypeID=a.TypeID Or (b.TypeID is null And a.TypeID is null))
 	) From @TbBE a
 	Update a Set [CardNumber]=b.CardNumber From @TbBE a Inner Join (Select * From @OLDBE Where ForType=@ForType) b On a.ID=b.ID
 	And (b.TypeID=a.TypeID Or (b.TypeID is null And a.TypeID is null))
 	if(@ForType=1)
 	begin
 		Update c Set[BondNumber]=a.CardNumber From @TbBE a
 		Inner Join TBL010 c On a.CardGuide=c.CardGuide
 	end
 	else if(@ForType=2)
 	begin
 		Update c Set[EntryNumber]=a.CardNumber From @TbBE a
 		Inner Join TBL011 c On a.CardGuide=c.CardGuide
 	end
 	else if(@ForType=3)
 	begin
 		Update c Set[EntryNumber]=a.CardNumber From @TbBE a
 		Inner Join TBL011 c On a.CardGuide=c.CardGuide
 	end
 	FETCH NEXT FROM CPrc027_2 INTO @ForType
 END
 CLOSE CPrc027_2
 DEALLOCATE CPrc027_2
 exec dbo.Prc022
 declare @C nvarchar(Max)
 Set @C=ltrim(rtrim(IsNull((Select Top 1 BuildEvent From TBL094 Where EventID=9 And FormName=@BondType),'')))
 if(Len(@C)>0)
 begin
 	Set @C='declare @CardGuide uniqueidentifier Set @CardGuide='''+Convert(varchar(100),@BondGuide)+''' '+@C
 	exec (@C)
 end
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc028]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[Prc028](@Tr uniqueidentifier,@DsTrm nvarchar(255),@XrTrm nvarchar(255)) 
	as begin 
		DECLARE @G uniqueidentifier 
		if((Select Count(*)From TBL009 Where CardGuide=@Tr)>0) 
		begin 
			DECLARE Y CURSOR READ_ONLY FAST_FORWARD FOR 
				SELECT CardGuide 
				FROM TBL010 Where MainGuide=@Tr 
			OPEN Y 
			FETCH NEXT FROM Y INTO @G 
			WHILE (@@FETCH_STATUS = 0) 
			BEGIN 
				exec Prc027 @G 
				FETCH NEXT FROM Y INTO @G 
			END 
			CLOSE Y 
			Deallocate Y 
		end 
		else if((Select Count(*)From TBL020 Where CardGuide=@Tr)>0) 
		begin 
			DECLARE Y CURSOR READ_ONLY FAST_FORWARD FOR 
				SELECT CardGuide 
				FROM TBL022 Where MainGuide=@Tr 
			OPEN Y 
			FETCH NEXT FROM Y INTO @G 
			WHILE (@@FETCH_STATUS = 0) 
			BEGIN 
				exec Prc008 @G,@DsTrm,@XrTrm,0 
				FETCH NEXT FROM Y INTO @G 
			END 
			CLOSE Y 
			Deallocate Y 
		END 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc029]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc029](@BID uniqueidentifier)as begin 
	declare @Agnt uniqueidentifier 
	Set @Agnt =(Select AgentGuide From TBL022 Where CardGuide=@BID) 
	if((@Agnt Is Not Null)And((Select AffectCostomerPrice From TBL020 Where CardGuide=(Select MainGuide From TBL022 Where CardGuide=@BID))>0)) 
	begin 
		declare @Rte float 
		Set @Rte=(Select Rate From TBL022 Where CardGuide=@BID) 
		declare @PrcTbl table(ItemGuide uniqueidentifier,LastCalulatedDate datetime,ItemUnit tinyint) 
		Insert Into @PrcTbl Select ItemGuide ,LastCalulatedDate , ItemUnit From TBL074 Where PriceType=6 And AgentGuide=@Agnt 
		declare @ItmID uniqueidentifier 
		declare @Prc float 
		declare @Unt tinyint 
		declare @DsRatio float 
		declare @ExRatio float 
		declare @CalcDate datetime 
		DECLARE Y CURSOR READ_ONLY FAST_FORWARD FOR 
			SELECT ProductGuide,Unit,UnitPrice=dbo.Ratio(TotalValue,Quantity) ,DiscountRatio=dbo.Ratio(DiscountValue,TotalValue) ,ExtraRatio=dbo.Ratio(ExtraValue,TotalValue),InsertedIn 
			FROM TBL023 Where MainGuide=@BID And TBL023.TotalValue>0 Order By ID 
		OPEN Y 
		FETCH NEXT FROM Y INTO @ItmID,@Unt,@Prc,@DsRatio,@ExRatio,@CalcDate 
		WHILE (@@FETCH_STATUS = 0) 
		BEGIN 
			if((Select Count(*) From @PrcTbl Where ItemGuide=@ItmID And ItemUnit=@Unt And LastCalulatedDate<=@CalcDate)=0) 
			begin 
				Delete From TBL074 Where PriceType=6 And ItemGuide=@ItmID And ItemUnit=@Unt And AgentGuide=@Agnt 
				Insert Into TBL074(PriceType,ItemUnit,ItemGuide,PriceValue,AgentGuide,DiscountRation,ExtraRatio,LastCalulatedDate) 
					Values(6, @Unt, @ItmID, @Prc*@Rte, @Agnt, @DsRatio, @ExRatio,@CalcDate) 
			end 
		FETCH NEXT FROM Y INTO @ItmID,@Unt,@Prc,@DsRatio,@ExRatio,@CalcDate 
		END 
		CLOSE Y 
		Deallocate Y 
	end 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc030]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Procedure [dbo].[Prc030](@Itm uniqueidentifier) 
	as begin 
		declare @LstDt datetime 
		set @LstDt=(Select Max(LastCalulatedDate) From TBL074 Where ItemGuide=@Itm And PriceType=8) 
		if((@LstDt Is Null)Or((Select Count(*) From Qry101 Where ProductGuide=@Itm And InsertedIn>@LstDt)>0)) 
		begin 
			declare @Dte datetime 
			declare @Vlu float 
			set @Dte=(Select Max(InsertedIn)From Qry101 Where ProductGuide=@Itm) 
			set @Vlu=(Select Max(ItemNetPriceBeforeTax) From Qry101 Where ItemSortID=(Select MAX(ItemSortID) From Qry101 Where AffectLastPurchasePrice=1 And ProductGuide=@Itm And Posted=1 And ItemFirstNetTotal>0 And BillDate=( 
			Select MAX(BillDate)From Qry101 Where AffectLastPurchasePrice=1 And ProductGuide=@Itm And Posted=1 And ItemFirstNetTotal>0))) 
			delete from TBL074 Where ItemGuide=@Itm And PriceType=8 
			Insert Into TBL074(ItemGuide,ItemUnit,LastCalulatedDate,PriceValue,PriceType)Values(@Itm,1,isnull(@Dte,getdate()),isnull(@Vlu,0),8) 
		end 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc031]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Procedure [dbo].[Prc031](@Itm uniqueidentifier) 
	as begin 
		declare @LstDt datetime 
		set @LstDt=(Select LastCalulatedDate From TBL074 Where ItemGuide=@Itm And PriceType=5) 
		if((@LstDt Is Null)Or((Select Count(*) From Qry110 Where ProductGuide=@Itm And InsertedIn>@LstDt)>0)) 
		begin 
			declare @Dte datetime 
			declare @Vlu float 
			set @Dte=(Select Max(InsertedIn)From Qry110 Where ProductGuide=@Itm) 
			set @Vlu=(Select Sum(ItemNetTotal)/Sum(Quantity) From Qry019 Where AffectLastPurchasePrice=1 And ProductGuide=@Itm) 
			delete from TBL074 Where ItemGuide=@Itm And PriceType=5 
			Insert Into TBL074(ItemGuide,ItemUnit,LastCalulatedDate,PriceValue,PriceType)Values(@Itm,1,isnull(@Dte,getdate()),isnull(@Vlu,0),5) 
		end 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc032]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc032](@BillID uniqueidentifier)as begin
 declare @BType uniqueidentifier
 declare @BDate datetime
 Select @BType=MainGuide,@BDate=BillDate From TBL022 Where CardGuide=@BillID
 if(((Select AffectLastPurchasePrice From TBL020 Where CardGuide=@BType)>0) Or ((Select AffectCostomerPrice From TBL020 Where CardGuide=@BType)>0))
 begin
 	declare @ItmID uniqueidentifier
 	DECLARE D CURSOR READ_ONLY FAST_FORWARD FOR
 		SELECT ProductGuide	FROM TBL023 Where MainGuide=@BillID Order By ID
 	OPEN D
 	FETCH NEXT FROM D INTO @ItmID
 	WHILE (@@FETCH_STATUS = 0)
 	begin
 		Delete From TBL074 Where ItemGuide=@ItmID And (PriceType=200 Or LastCalulatedDate>=@BDate)
 		FETCH NEXT FROM D INTO @ItmID
 	end
 	CLOSE D
 	Deallocate D
 end
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc033]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create procedure [dbo].[Prc033](@BID uniqueidentifier,@ContraBTp uniqueidentifier,@AllInNumber bit) 
	as begin 
		Alter Table TBL022 Disable Trigger All 
		Update c Set[BillNumber]=a.BillNumber From 
		(Select * From TBL022 Where MainGuide='C488222A-B265-467B-8501-5EB5E1CC650A')a 
		Inner Join 
		(Select * From TBL022 Where MainGuide='E1AFE377-C1FE-413C-8472-EFB9630243DC')b On a.ContraGuide=b.CardGuide 
		Inner Join TBL022 c On b.CardGuide=c.CardGuide 
		Where a.BillNumber<>b.BillNumber 
		declare @NewBillID uniqueidentifier 
		declare @BNumber int 
		declare @ContraStore uniqueidentifier 
		declare @BillDate datetime 
		declare @DoneIn datetime 
		declare @StoreGuide uniqueidentifier 
		declare @BillType uniqueidentifier 
		declare @PayMethod smallint 
		declare @CurrencyGuide uniqueidentifier 
		declare @Rate float 
		declare @OrderNumber int 
		declare @Notes nvarchar(255) 
		declare @AgentGuide uniqueidentifier 
		declare @POSGuide uniqueidentifier 
		declare @PostToAccount uniqueidentifier 
		declare @Security tinyint 
		declare @CustomerName nvarchar(255) 
		declare @Posted tinyint 
		declare @CostCenter uniqueidentifier 
		declare J CURSOR READ_ONLY For 
			Select BillNumber,MainGuide,StoreGuide,BillDate,PayMethod,DoneIn,CurrencyGuide,OrderNumber,Rate,Notes, 
		AgentGuide,POSGuide,PostToAccount,Security,CustomerName,Posted,CostCenter,ContraStore From TBL022 Where CardGuide=@BID 
		Open J 
			FETCH From J Into @BNumber ,@BillType ,@StoreGuide ,@BillDate , @PayMethod, @DoneIn, @CurrencyGuide, @OrderNumber, 
		@Rate ,@Notes , @AgentGuide, @POSGuide, @PostToAccount, @Security,@CustomerName , @Posted, @CostCenter, @ContraStore 
		if(@AllInNumber>0)begin 
         Update TBL022 Set[ContraGuide]=Null Where MainGuide=@ContraBTp And BillNumber=@BNumber 
         Update TBL022 Set[ContraGuide]=Null Where CardGuide=@BID 
         delete from TBL022 Where MainGuide=@ContraBTp And BillNumber=@BNumber 
		end 
		delete from TBL022 Where ContraGuide=@BID 
		if(@StoreGuide is Null Or @ContraStore Is Null)return 
		Set @NewBillID=newid() 
			Insert Into TBL022(CardGuide, MainGuide, StoreGuide, BillDate, PayMethod, DoneIn, CurrencyGuide, BillNumber, OrderNumber, Rate, 
		Notes , AgentGuide, POSGuide, PostToAccount, Security, CustomerName, Posted, ContraGuide, CostCenter, ContraStore)Values( @NewBillID, @ContraBTp, @ContraStore, 
		@BillDate ,@PayMethod , @DoneIn, @CurrencyGuide, @BNumber, @OrderNumber, @Rate, @Notes, @AgentGuide, @POSGuide, @PostToAccount, @Security, @CustomerName, 
		@Posted , @BID, @CostCenter, @StoreGuide) 
				Insert Into TBL023 (MainGuide,ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue,TotalValue2,DiscountValue,ExtraValue,TaxValue,StatementName,ExpiryDate, 
			EstablishDate,Color,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5, 
			PatchCode,Category01,Category02,Category03,Category04,Category05,SourceBill,RelatedAgent,CurrentStage,RelatedUnit,UnitQuantity,SalesPrice 
			,Quantity2,Description2,RelatedObjects,Printed,Nonmergeable,RecordDate,RecordSecurity,ProductsAccount) 
				Select @NewBillID,ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue,TotalValue2,DiscountValue,ExtraValue,TaxValue,StatementName,ExpiryDate, 
			EstablishDate,Color,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5, 
			PatchCode,Category01,Category02,Category03,Category04,Category05,SourceBill,RelatedAgent,CurrentStage,RelatedUnit,UnitQuantity,SalesPrice 
			,Quantity2,Description2,RelatedObjects,Printed,Nonmergeable,RecordDate,RecordSecurity,ProductsAccount From TBL023 Where MainGuide=@BID 
		CLOSE J 
		Deallocate J 
		Update TBL022 Set ContraGuide=@NewBillID Where CardGuide=@BID 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc034]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Procedure [dbo].[Prc034](@BID uniqueidentifier,@DsNote nvarchar(255),@ExNote nvarchar(255),@Ot1 bit,@Ot2 bit,@AutoBuildEntry bit)as begin 
 declare @Internel bit
 if(@Ot1>0 Or @Ot2>0)
 	Set @Internel=0
 else
 	Set @Internel=1
 declare @Bill1Type uniqueidentifier
 declare @Bill2Type uniqueidentifier
 declare @Bill1ID uniqueidentifier
 declare @Bill2ID uniqueidentifier
 declare @Bill1Number int
 declare @Bill2Number int
 declare @Currency uniqueidentifier
 declare @OprationType uniqueidentifier
 declare @Store1 uniqueidentifier
 declare @Store2 uniqueidentifier
 declare @Agent1 uniqueidentifier
 declare @Agent2 uniqueidentifier
 declare @Account1 uniqueidentifier
 declare @Account2 uniqueidentifier
 declare @Rate float
 declare @DoneIn datetime
 declare @InDate datetime
 declare @InDate2 datetime
 declare @Security tinyint
 declare @Posted bit
 declare @BuildBill1 bit
 declare @BuildBill2 bit
 declare @Posted1 bit
 declare @Posted2 bit
 declare @Notes1 nvarchar(255)
 declare @Notes2 nvarchar(255)
 declare @Notes3 nvarchar(255)
 declare @Notes4 nvarchar(255)
 declare @Notes5 nvarchar(255)
 declare @Notes6 nvarchar(255)
 declare @Job1 uniqueidentifier
 declare @Job2 uniqueidentifier
 declare @Project1 uniqueidentifier
 declare @Project2 uniqueidentifier
 declare @Branch1 uniqueidentifier
 declare @Branch2 uniqueidentifier
 ------------------------------------Get Information------------------------------------
 Select @Currency=CurrencyGuide1,@Job1=CostCenter1,@Job2=CostCenter2,@Project1=Project1,@Project2=Project2,@Branch1=Branch1,@Branch2=Branch2, @Rate=Rate1, @Store1=StoreGuide1, @Store2=StoreGuide2, @Agent1=AgentGuide1, @Agent2=AgentGuide2,
 @OprationType=MainGuide, @InDate=InDate, @InDate2=InDate2, @Security=Security, @Notes1=BuildBillNotes1, @Notes2=BuildBillNotes2, @Notes3=BuildBillNotes3, @Notes4=BuildBillNotes4, @Notes5=BuildBillNotes5, @Notes6=BuildBillNotes6, @Posted=Posted,
 @Posted1=Posted1, @Posted2=Posted2, @Bill1ID=RelatedBill1, @Bill2ID=RelatedBill2, @DoneIn=DoneIn From TBL027 Where CardGuide=@BID
 ------------------------------------Get Type Options------------------------------------
 Select @Bill1Type=BuildBillTypeGuide1, @Bill2Type=BuildBillTypeGuide2, @BuildBill1=BooleanOption1, @BuildBill2=BooleanOption2 From TBL026 Where CardGuide=@OprationType
 -----------------------------------Load Other Statics-----------------------------------
 if(@Bill1Type Is Not Null And ((@Internel>0 And @BuildBill1>0)Or (@Ot1>0)))
 begin
 	if (@Bill1ID Is Not Null)
 	begin
 		Set @Bill1Number=(Select BillNumber From TBL022 Where CardGuide=@Bill1ID)
 		if(@Bill1Number is Null)
 		begin
 			Set @Bill1Number=isnull((Select Max(BillNumber) From TBL022 Where MainGuide=@Bill1Type),0)+1
 			Set @Bill1ID=NEWID()
 		end
 	end
 	else
 	begin
 		Set @Bill1Number=isnull((Select Max(BillNumber) From TBL022 Where MainGuide=@Bill1Type),0)+1
 		Set @Bill1ID=NEWID()
 	end
 end
 if(@Bill2Type Is Not Null And ((@Internel>0 And @BuildBill2>0)Or (@Ot2>0)))
 begin
 	if (@Bill2ID Is Not Null )
 	begin
 		Set @Bill2Number=(Select BillNumber From TBL022 Where CardGuide=@Bill2ID)
 		if(@Bill2Number Is Null)
 		begin
 			Set @Bill2Number=isnull((Select Max(BillNumber) From TBL022 Where MainGuide=@Bill2Type),0)+1
 			Set @Bill2ID=NEWID()
 		end
 	end
 	else
 	begin
 		Set @Bill2Number=isnull((Select Max(BillNumber) From TBL022 Where MainGuide=@Bill2Type),0)+1
 		Set @Bill2ID=NEWID()
 	end
 end
 Update TBL027 Set[RelatedBill1]=null,[RelatedBill2]=null Where CardGuide=@BID
 if(@Bill1Number>0) Delete From TBL022 Where CardGuide=@Bill1ID
 if(@Bill2Number>0) Delete From TBL022 Where CardGuide=@Bill2ID
 Delete From TBL023 Where MainGuide=@Bill1ID
 Delete From TBL024 Where MainGuide=@Bill1ID
 Delete From TBL023 Where MainGuide=@Bill2ID
 Delete From TBL024 Where MainGuide=@Bill2ID
 declare @DTb table(RowGuide uniqueidentifier,NewRowGuide uniqueidentifier default(newid()))
 if(@Bill1Number>0)
 begin
 	Set @Account1=(Select AccountID From TBL016 Where CardGuide=@Agent1)
 	Insert Into TBL022 (CardGuide, MainGuide,CostCenter,Project,Branch, StoreGuide, BillDate, PayMethod, DoneIn, CurrencyGuide,
 		BillNumber, Rate, Notes, BillNotes2, BillNotes3, AgentGuide, MainBillGuide, PostToAccount, Security, Posted)
 	Values(@Bill1ID, @Bill1Type,@Job1,@Project1,@Branch1, @Store1, @InDate, 2, @DoneIn, @Currency,
 		@Bill1Number, @Rate, @Notes1, @Notes3, @Notes4, @Agent1, @BID, @Account1, @Security, @Posted)
 	Insert Into @DTb(RowGuide)Select RowGuide From Qry124 Where MainGuide=@BID
 	Insert Into TBL023(RowGuide,MainGuide, ProductGuide, Quantity, Unit, TotalValue, Length, Width, Hieght, Weight, Value, CostCenter, StoreID, Description ,Category01 ,Category02 ,Category03 ,Category04 ,Category05 ,BillCustom1 ,BillCustom2 ,BillCustom3 ,BillCustom4 ,BillCustom5 ,CurrentStage ,PatchCode ,DiscountValue,ExtraValue,TaxValue,EstablishDate,ExpiryDate)
 		Select NewRowGuide,@Bill1ID, ItemGuide, Quantity, Unit, TotalValue, Length, Width, Hieght, Weight, Value, CostCenter, StoreID, Notes ,Category01 ,Category02 ,Category03 ,Category04 ,Category05 ,BillCustom1 ,BillCustom2 ,BillCustom3 ,BillCustom4 ,BillCustom5 ,CurrentStage ,PatchCode ,DiscountValue,ExtraValue,TaxValue,EstablishDate,ExpiryDate From (Select b.NewRowGuide,c.* From Qry124 c Inner Join @DTb b On c.RowGuide=b.RowGuide) a Order By ID
 	Insert Into TBL066(MainGuide,SerialCode,ExpiryDate,EstablishDate,Notes)
 	Select b.NewRowGuide,a.SerialCode,a.ExpiryDate,a.EstablishDate,a.Notes From TBL143 a Inner Join @DTb b On a.MainGuide=b.RowGuide Order By ID
 	Insert Into TBL024(MainGuide, AccountID, CurrencyGuide, ContraAccount, Discount, Extra, DiscountToSave, ExtraToSave, CostCenter, Description)
 		Select @Bill1ID,AccountID, CurrencyGuide, ContraAccount, Discount, Extra, DiscountToSave, ExtraToSave, CostCenter, Description From Qry126 Where MainGuide=@BID
 	exec Prc029 @Bill1ID
 	if(@AutoBuildEntry>0)exec Prc008 @Bill1ID, @DsNote, @ExNote,0
 end
 if(@Bill2Number>0)
 begin
 	Delete From @DTb
 	Set @Account2=(Select AccountID From TBL016 Where CardGuide=@Agent2)
 	Insert Into TBL022 (CardGuide, MainGuide, CostCenter , Project , Branch, StoreGuide, BillDate, PayMethod, DoneIn, CurrencyGuide,
 		BillNumber, Rate, Notes, BillNotes2, BillNotes3, AgentGuide, MainBillGuide, PostToAccount, Security, Posted)
 	Values(@Bill2ID, @Bill2Type,@Job2,@Project2 ,@Branch2 , @Store2, @InDate2, 2, @DoneIn, @Currency,
 		@Bill2Number, @Rate, @Notes2, @Notes5, @Notes6, @Agent2, @BID, @Account2, @Security, @Posted)
 	Insert Into @DTb(RowGuide)Select RowGuide From Qry123 Where MainGuide=@BID
 	Insert Into TBL023(RowGuide,MainGuide, ProductGuide, Quantity, Unit, TotalValue, Length, Width, Hieght, Weight, Value, CostCenter, StoreID, Description ,Category01 ,Category02 ,Category03 ,Category04 ,Category05 ,BillCustom1 ,BillCustom2 ,BillCustom3 ,BillCustom4 ,BillCustom5 ,CurrentStage ,PatchCode ,DiscountValue,ExtraValue,TaxValue,EstablishDate,ExpiryDate)
 		Select NewRowGuide,@Bill2ID, ItemGuide, Quantity, Unit, TotalValue, Length, Width, Hieght, Weight, Value, CostCenter, StoreID, Notes ,Category01 ,Category02 ,Category03 ,Category04 ,Category05 ,BillCustom1 ,BillCustom2 ,BillCustom3 ,BillCustom4 ,BillCustom5 ,CurrentStage ,PatchCode ,DiscountValue,ExtraValue,TaxValue,EstablishDate,ExpiryDate From (Select b.NewRowGuide,c.* From Qry123 c Inner Join @DTb b On c.RowGuide=b.RowGuide) a Order By ID
 	Insert Into TBL066(MainGuide,SerialCode,ExpiryDate,EstablishDate,Notes)
 	Select b.NewRowGuide,a.SerialCode,a.ExpiryDate,a.EstablishDate,a.Notes From TBL143 a Inner Join @DTb b On a.MainGuide=b.RowGuide Order By ID
 	Insert Into TBL024(MainGuide, AccountID, CurrencyGuide, ContraAccount, Discount, Extra, DiscountToSave, ExtraToSave, CostCenter, Description)
 		Select @Bill2ID,AccountID, CurrencyGuide, ContraAccount, Discount, Extra, DiscountToSave, ExtraToSave, CostCenter, Description From Qry125 Where MainGuide=@BID Order By ID
 	exec Prc029 @Bill2ID
 	if(@AutoBuildEntry>0)exec Prc008 @Bill2ID, @DsNote, @ExNote,0
 end
 Update TBL027 Set[RelatedBill1]=@Bill1ID,[RelatedBill2]=@Bill2ID Where CardGuide=@BID
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc035]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Procedure [dbo].[Prc035](@BID uniqueidentifier,@DsNote nvarchar(255),@ExNote nvarchar(255))as begin 
		declare @BtpID smallint 
		Set @BtpID=(Select BillType From TBL026 Where CardGuide=(Select MainGuide From TBL027 Where CardGuide=@BID)) 
		if(@BtpID=1) 
			exec Prc034 @BID, @DsNote, @ExNote,0 ,0,1 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc036]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Procedure [dbo].[Prc036] 
	As Begin 
		declare @Itm uniqueidentifier 
		declare @DateIn datetime 
		declare @Price float 
		declare @Qty float 
		DECLARE G CURSOR READ_ONLY FAST_FORWARD FOR 
		Select a.CardGuide,isnull( a.InsertedIn,GetDate())as InsertedIn,a.ItemNetTotal,a.Quantity From (SELECT     TBL007.CardGuide, SUM(dbo.Qry115.Quantity) AS Quantity, SUM(dbo.Qry115.ItemNetTotal) AS ItemNetTotal, MAX(dbo.Qry111.LastCalulatedDate) 
							  AS LastCalulatedDate, MAX(dbo.Qry115.RowInsertedIn) AS InsertedIn 
		FROM         Qry111 RIGHT OUTER JOIN 
							  TBL007 ON Qry111.ItemGuide = TBL007.CardGuide LEFT OUTER JOIN 
							  Qry115 ON TBL007.CardGuide = Qry115.ProductGuide 
		GROUP BY TBL007.CardGuide)a Where a.LastCalulatedDate<a.InsertedIn Or a.LastCalulatedDate Is null 
		OPEN G 
		FETCH NEXT FROM G INTO @Itm,@DateIn,@Price,@Qty 
		WHILE (@@FETCH_STATUS = 0) 
		BEGIN 
			Delete From TBL074 Where PriceType=5 And ItemGuide=@Itm 
			if(@Qty>0) 
				Insert Into TBL074(PriceType,LastCalulatedDate,ItemUnit,ItemGuide,PriceValue)Values(5,@DateIn,1,@Itm,@Price/@Qty) 
			else 
				Insert Into TBL074(PriceType,LastCalulatedDate,ItemUnit,ItemGuide,PriceValue)Values(5,@DateIn,1,@Itm,0) 
		FETCH NEXT FROM G INTO @Itm,@DateIn,@Price,@Qty 
		END 
		CLOSE G 
		Deallocate G 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc037]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Procedure [dbo].[Prc037] 
	As Begin 
		declare @Tbl table(Itm uniqueidentifier,LastCost float,InsertedIn datetime) 
		Insert into @Tbl(Itm,LastCost,InsertedIn)Select a.CardGuide,a.ItemNetPrice ,isnull(a.InsertedIn,GetDate()) From (SELECT     TBL007.CardGuide,ISNULL( Qry020.ItemNetPrice,0)As ItemNetPrice, Qry116.InsertedIn, Qry112.LastCalulatedDate As LastCalulatedDate 
		FROM         Qry112 RIGHT OUTER JOIN 
							  TBL007 ON Qry112.ItemGuide = TBL007.CardGuide LEFT OUTER JOIN 
							  Qry116 INNER JOIN 
							  Qry020 ON Qry116.RowID = Qry020.ItemSortID ON TBL007.CardGuide = Qry116.ProductGuide)a 
		Where a.InsertedIn>a.LastCalulatedDate Or a.LastCalulatedDate Is Null 
		declare @Itm uniqueidentifier 
		declare @DateIn datetime 
		declare @Price float 
		DECLARE H CURSOR READ_ONLY FAST_FORWARD FOR 
		SELECT     Itm,InsertedIn,LastCost 
		FROM         @Tbl 
		OPEN H 
		FETCH NEXT FROM H INTO @Itm,@DateIn,@Price 
		WHILE (@@FETCH_STATUS = 0) 
		BEGIN 
			Delete From TBL074 Where PriceType=8 And ItemGuide=@Itm 
				Insert Into TBL074(PriceType,LastCalulatedDate,ItemUnit,ItemGuide,PriceValue)Values(8,@DateIn,1,@Itm,@Price) 
			FETCH NEXT FROM H INTO @Itm,@DateIn,@Price 
		END 
		CLOSE H 
		Deallocate H 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc038]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc038](@Bid uniqueIdentifier,@ForceBill1 bit,@ForceBill2 bit)as begin 
 declare @BTp uniqueidentifier
 declare @Date datetime
 declare @DoneIn datetime
 declare @Bill1 uniqueidentifier
 declare @Bill2 uniqueidentifier
 declare @Crr uniqueidentifier
 declare @Store uniqueidentifier
 declare @Agnt uniqueidentifier
 declare @Acc uniqueidentifier
 declare @Cost uniqueidentifier
 declare @Project uniqueidentifier
 declare @Branch uniqueidentifier
 declare @Rate float
 declare @Sec tinyint
 declare @Note nvarchar(255)
 declare @ReadFromSavedResults bit
 declare @DetailByStore bit
 declare @DetailByCost bit
 declare @DetailByProject bit
 declare @DetailByBranch bit
 Set @ReadFromSavedResults=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='ReadFromSavedResults'),0)
 Set @DetailByStore=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByStore'),0)
 Set @DetailByCost=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByCostCenter'),0)
 Set @DetailByProject=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByProject'),0)
 Set @DetailByBranch=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByBranch'),0)
 Select @DoneIn=DoneIn,@Crr=CurrencyGuide1,@Rate=Rate1,@Store=StoreGuide1,@Agnt=AgentGuide1,@Acc=AccountA1,@BTp=MainGuide,@Date=InDate,@Sec=Security,
 @Note=BuildBillNotes1,@Cost=CostCenter1,@Bill1=RelatedBill1,@Bill2=RelatedBill2,@Project=Project1,@Branch=Branch1
 From TBL027 Where CardGuide=@Bid
 declare @Q123 table(ProductGuide uniqueidentifier,Quantity float,Unit tinyint,ID int)
 declare @Q124 table(ProductGuide uniqueidentifier,Quantity float,Unit tinyint,ID int)
 Insert Into @Q123 Select ProductGuide,Quantity,Unit,ID From Qry123 Where MainGuide=@Bid
 Insert Into @Q124 Select ProductGuide,Quantity,Unit,ID From Qry124 Where MainGuide=@Bid
 declare @Tb table(Prc uniqueidentifier,Qty float)
 Insert Into @Tb (Prc,Qty)
 Select b.ProductGuide,b.Quantity From
 	(Select ISNULL( a.Prc1,a.Prc2) as ProductGuide,
 	ISNULL( dbo.Fun001(a.Prc1,a.Unt1,a.Qty1) ,0)-ISNULL(dbo.Fun001(a.Prc2,a.Unt2,a.Qty2) ,0) As Quantity
 	From(
 		SELECT f.ProductGuide As Prc1, g.ProductGuide AS Prc2,
 		f.Quantity As Qty1,Sum(g.Quantity) As Qty2 ,f.Unit As Unt1,g.Unit As Unt2
 		FROM @Q123 f FULL OUTER JOIN
 						@Q124 g ON f.ProductGuide = g.ProductGuide Group By f.ProductGuide,g.ProductGuide,f.Unit,g.Unit,f.Quantity,f.ID)a)b
 Where b.Quantity!=0
 declare @FTb table (Prc uniqueidentifier,Qty float,Total float)
 ---------------------------------------------------------------------------------------
 declare @GenBill1 bit
 declare @GenBill2 bit
 declare @PcrTp tinyint
 declare @BlTp1 uniqueidentifier
 declare @BlTp2 uniqueidentifier
 Select @GenBill1=(DoNotGenerateBill1-1)*-1,@GenBill2=(DoNotGenerateBill2-1)*-1,@BlTp1=BuildBillTypeGuide1,@BlTp2=BuildBillTypeGuide2,@PcrTp=PriceType
 From TBL026 Where CardGuide=@BTp
 if(@PcrTp=1)
 	Insert Into @FTb Select c.Prc,c.Qty,c.Qty*TBL007.AgentPrice From @Tb c Left Join TBL007 On c.Prc=TBL007.CardGuide
 else if(@PcrTp=2)
 	Insert Into @FTb Select c.Prc,c.Qty,c.Qty*TBL007.WholePrice From @Tb c Left Join TBL007 On c.Prc=TBL007.CardGuide
 else if(@PcrTp=3)
 	Insert Into @FTb Select c.Prc,c.Qty,c.Qty*TBL007.EndUserPrice From @Tb c Left Join TBL007 On c.Prc=TBL007.CardGuide
 else if(@PcrTp=4)
 	Insert Into @FTb Select c.Prc,c.Qty,c.Qty*TBL007.StanderCost From @Tb c Left Join TBL007 On c.Prc=TBL007.CardGuide
 else if(@PcrTp=5)
 begin
 	if(@ReadFromSavedResults=1)
 	begin
 		exec Prc036
 		Insert Into @FTb Select c.Prc,c.Qty,c.Qty*Qry111.PriceValue From @Tb c Left Join Qry111 On c.Prc=Qry111.ItemGuide
 	end
 	else
 		Insert Into @FTb Select c.Prc,c.Qty,c.Qty*dbo.Fun182(5,1,c.Prc,@DoneIn,@Crr,(case @DetailByCost When 1 then @Cost end),(case @DetailByProject When 1 then @Project end)
 	,(case @DetailByBranch When 1 then @Branch end),(case @DetailByStore When 1 then @Store end),null,null,null,null,null,0,null) From @Tb c
 End
 else if(@PcrTp=6)
 	Insert Into @FTb Select c.Prc,c.Qty,c.Qty*TBL007.Price5Item From @Tb c Left Join TBL007 On c.Prc=TBL007.CardGuide
 else if(@PcrTp=7)
 	Insert Into @FTb Select c.Prc,c.Qty,c.Qty*TBL007.Price6Item From @Tb c Left Join TBL007 On c.Prc=TBL007.CardGuide
 else if(@PcrTp=8)
 begin
 	exec Prc037
 	Insert Into @FTb Select c.Prc,c.Qty,c.Qty*Qry112.PriceValue From @Tb c Left Join Qry112 On c.Prc=Qry112.ItemGuide
 End
 else
 begin
 	----Insert Into @FTb Select c.Prc,c.Qty,0 From @Tb c
 		Insert Into @FTb Select c.Prc,c.Qty,c.Qty*dbo.Fun182(@PcrTp,1,c.Prc,@DoneIn,@Crr,(case @DetailByCost When 1 then @Cost end),(case @DetailByProject When 1 then @Project end)
 	,(case @DetailByBranch When 1 then @Branch end),(case @DetailByStore When 1 then @Store end),null,null,null,null,null,0,null) From @Tb c
 end
 ---------------------------------------------------------------------------------------
 declare @BNum1 int
 declare @BNum2 int
 Update TBL027 Set[RelatedBill1]=null,[RelatedBill2]=null Where CardGuide=@Bid
 if(@Bill1 Is Not Null)
 begin
 	Set @BNum1=(Select BillNumber From TBL022 Where CardGuide=@Bill1)
 	Delete From TBL022 Where CardGuide=@Bill1
 end
 else
 begin
 	Set @Bill1=NEWID()
 	Set @BNum1=ISNULL((Select Max(BillNumber)From TBL022 Where MainGuide=@BlTp1),0)+1
 end
 if(@Bill2 Is Not Null)
 begin
 	Set @BNum2=(Select BillNumber From TBL022 Where CardGuide=@Bill2)
 	Delete From TBL022 Where CardGuide=@Bill2
 end
 else
 begin
 	Set @Bill2=NEWID()
 	Set @BNum2=ISNULL((Select Max(BillNumber)From TBL022 Where MainGuide=@BlTp2),0)+1
 end
 if(((@GenBill1>0)Or(@ForceBill1>0))And ((Select COUNT(*) From @FTb Where Qty>0))>0)
 begin
 	Insert Into TBL022(MainBillGuide,CardGuide, MainGuide, StoreGuide, BillDate, PayMethod, DoneIn, CurrencyGuide, BillNumber, Rate, Notes,
 	AgentGuide,PostToAccount,CostCenter,Project,Branch)
 	Values(@Bid,@Bill1, @BlTp1, @Store, @Date, 2, @DoneIn, @Crr, @BNum1, @Rate, @Note,@Agnt,@Acc,@Cost,@Project,@Branch)
 	Insert Into TBL023(MainGuide , ProductGuide, Quantity, TotalValue)
 	Select @Bill1,d.Prc,d.Qty,d.Total From @FTb d Where d.Qty>0
 	exec Prc029 @Bill1
 	exec Prc008 @Bill1,'','',0
 	Update TBL027 Set[RelatedBill1]=@Bill1 Where CardGuide=@Bid
 end
 if(((@GenBill2>0)Or(@ForceBill2>0))And ((Select COUNT(*) From @FTb Where Qty<0))>0)
 begin
 	Insert Into TBL022(MainBillGuide,CardGuide, MainGuide, StoreGuide, BillDate, PayMethod, DoneIn, CurrencyGuide, BillNumber, Rate, Notes,
 	AgentGuide,PostToAccount,CostCenter,Project,Branch)
 	Values(@Bid,@Bill2, @BlTp2, @Store, @Date, 2, @DoneIn, @Crr, @BNum2, @Rate, @Note,@Agnt,@Acc,@Cost,@Project,@Branch)
 	Insert Into TBL023(MainGuide , ProductGuide, Quantity, TotalValue)
 	Select @Bill2,d.Prc,-d.Qty,-d.Total From @FTb d Where d.Qty<0
 	exec Prc029 @Bill2
 	exec Prc008 @Bill2,'','',0
 	Update TBL027 Set[RelatedBill2]=@Bill2 Where CardGuide=@Bid
 end
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc039]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc039] as begin 
	update TBL022 Set[ContraStore]=(Select StoreGuide From TBL022 a Where a.BillNumber=TBL022.BillNumber And MainGuide='E1AFE377-C1FE-413C-8472-EFB9630243DC') Where ContraStore Is Null And ContraGuide Is Null And MainGuide='C488222A-B265-467B-8501-5EB5E1CC650A' 
	update TBL022 Set[ContraStore]=(Select StoreGuide From TBL022 a Where a.BillNumber=TBL022.BillNumber And MainGuide='C488222A-B265-467B-8501-5EB5E1CC650A') Where ContraStore Is Null And ContraGuide Is Null And MainGuide='E1AFE377-C1FE-413C-8472-EFB9630243DC' 
	declare @ID Uniqueidentifier 
	declare @Cr Uniqueidentifier 
	declare @TblM table(CardGuide Uniqueidentifier,ContraGuide Uniqueidentifier) 
	declare @Tbl1 table(CardGuide Uniqueidentifier,ContraGuide Uniqueidentifier) 
	declare @Tbl2 table(CardGuide Uniqueidentifier,ContraGuide Uniqueidentifier) 
	Insert Into @Tbl1(CardGuide,ContraGuide) Select CardGuide,ContraGuide From TBL022 Where MainGuide='C488222A-B265-467B-8501-5EB5E1CC650A' 
	Insert Into @Tbl2(CardGuide,ContraGuide) Select CardGuide,ContraGuide From TBL022 Where MainGuide='E1AFE377-C1FE-413C-8472-EFB9630243DC' 
	Insert Into @TblM (CardGuide) 
	Select a.CardGuide From @Tbl1 a Left JOIN @Tbl2 b 
	On a.CardGuide=b.ContraGuide Where b.CardGuide Is Null 
	------------------------------------------------------------------ 
	Insert Into @TblM (CardGuide) 
	Select b.CardGuide From @Tbl2 b Left JOIN @Tbl1 a 
	On b.CardGuide=a.ContraGuide Where a.CardGuide Is Null 
	--Select * From @Tblm 
	declare M CURSOR READ_ONLY For 
		Select * From @TblM 
	Open M 
	Fetch From M Into @ID,@Cr 
	WHILE (@@FETCH_STATUS = 0) 
	begin 
		if(@Cr Is Null) 
			exec Prc033 @ID,'E1AFE377-C1FE-413C-8472-EFB9630243DC',1 
		else 
			Delete From TBK022 Where CardGuide=@Cr 
		Fetch From M Into @ID,@Cr 
	end 
	CLOSE M 
	Deallocate M 
	Update TBL022 Set[ContraStore]=(Select StoreGuide From TBL022 Where TBL022.CardGuide=ContraGuide) Where MainGuide='C488222A-B265-467B-8501-5EB5E1CC650A' And ContraStore Is Null 
	Update TBL022 Set[ContraStore]=(Select StoreGuide From TBL022 Where TBL022.CardGuide=ContraGuide) Where MainGuide='E1AFE377-C1FE-413C-8472-EFB9630243DC' And ContraStore Is Null 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc040]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Procedure [dbo].[Prc040](@BID uniqueidentifier) 
	As Begin 
		declare @Itm uniqueidentifier 
		declare @DateIn datetime 
		declare @Price float 
		declare @Qty float 
		DECLARE O CURSOR READ_ONLY FAST_FORWARD FOR 
		Select a.CardGuide,isnull( a.InsertedIn,GetDate())as InsertedIn,a.ItemNetTotal,a.Quantity From (SELECT     s.CardGuide, SUM(dbo.Qry115.Quantity) AS Quantity, SUM(dbo.Qry115.ItemNetTotal) AS ItemNetTotal, MAX(dbo.Qry111.LastCalulatedDate) 
							  AS LastCalulatedDate, MAX(dbo.Qry115.RowInsertedIn) AS InsertedIn 
		FROM         Qry111 RIGHT OUTER JOIN 
							  (Select ProductGuide as CardGuide From TBL023 Where MainGuide=@BID)s ON Qry111.ItemGuide = s.CardGuide LEFT OUTER JOIN 
							  Qry115 ON s.CardGuide = Qry115.ProductGuide 
		GROUP BY s.CardGuide)a Where a.LastCalulatedDate<a.InsertedIn Or a.LastCalulatedDate Is null 
		OPEN O 
		FETCH NEXT FROM O INTO @Itm,@DateIn,@Price,@Qty 
		WHILE (@@FETCH_STATUS = 0) 
		BEGIN 
			Delete From TBL074 Where PriceType=5 And ItemGuide=@Itm 
			if(@Qty>0) 
				Insert Into TBL074(PriceType,LastCalulatedDate,ItemUnit,ItemGuide,PriceValue)Values(5,@DateIn,1,@Itm,@Price/@Qty) 
			else 
				Insert Into TBL074(PriceType,LastCalulatedDate,ItemUnit,ItemGuide,PriceValue)Values(5,@DateIn,1,@Itm,0) 
		FETCH NEXT FROM O INTO @Itm,@DateIn,@Price,@Qty 
		END 
		CLOSE O 
		Deallocate O 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc041]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Procedure [dbo].[Prc041](@BID uniqueidentifier) 
	As Begin 
		declare @Tbl table(Itm uniqueidentifier,LastCost float,InsertedIn datetime) 
		Insert into @Tbl(Itm,LastCost,InsertedIn)Select a.CardGuide,a.ItemNetPrice ,isnull(a.InsertedIn,GetDate()) From (SELECT     s.CardGuide,ISNULL( Qry020.ItemNetPrice,0)As ItemNetPrice, Qry116.InsertedIn, Qry112.LastCalulatedDate As LastCalulatedDate 
		FROM         Qry112 RIGHT OUTER JOIN 
							  (Select ProductGuide as CardGuide From TBL023 Where MainGuide=@BID)s ON Qry112.ItemGuide = s.CardGuide LEFT OUTER JOIN 
							  Qry116 INNER JOIN 
							  Qry020 ON Qry116.RowID = Qry020.ItemSortID ON s.CardGuide = Qry116.ProductGuide)a 
		Where a.InsertedIn>a.LastCalulatedDate Or a.LastCalulatedDate Is Null 
		declare @Itm uniqueidentifier 
		declare @DateIn datetime 
		declare @Price float 
		DECLARE Q CURSOR READ_ONLY FAST_FORWARD FOR 
		SELECT     Itm,InsertedIn,LastCost 
		FROM         @Tbl 
		OPEN Q 
		FETCH NEXT FROM Q INTO @Itm,@DateIn,@Price 
		WHILE (@@FETCH_STATUS = 0) 
		BEGIN 
			Delete From TBL074 Where PriceType=8 And ItemGuide=@Itm 
				Insert Into TBL074(PriceType,LastCalulatedDate,ItemUnit,ItemGuide,PriceValue)Values(8,@DateIn,1,@Itm,@Price) 
			FETCH NEXT FROM Q INTO @Itm,@DateIn,@Price 
		END 
		CLOSE Q 
		Deallocate Q 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc042]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc042](@Pr uniqueidentifier) 
	as begin 
	declare @T datetime 
	Set @T =IsNull((Select MAX(InsertedIn)From TBL023 Where ProductGuide=@Pr),GETDATE()) 
		if((Select COUNT(*) From TBL074 Where ItemGuide=@Pr And PriceType=10 And LastCalulatedDate>=@T)=0) 
		begin 
			Delete From TBL074 Where ItemGuide=@Pr And PriceType=10 
			Insert Into TBL074(PriceType,LastCalulatedDate,ItemGuide,PriceValue,ItemUnit)Values( 
			10,@T,@Pr,dbo.Fun067(@Pr,Null,Null,Null,Null,Null,Null,Null,Null,Null),1) 
		end 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc043]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc043](@BID uniqueidentifier,@ForGr uniqueidentifier,@ForIm uniqueidentifier) 
 as begin 
 declare @T datetime 
 declare @D table(Pcr uniqueidentifier,Tm datetime) 
 Set @T=GETDATE() 
 if(@ForGr is not null) 
 begin 
 	declare @Tb table (G uniqueidentifier) 
 	Insert Into @Tb(G)Values(@ForGr) 
 	while((Select Count(*) From @Tb a Inner Join TBL006 b On a.G=b.MainGuide 
 	Left Join @Tb c On b.CardGuide=c.G 
 	Where c.G Is Null)>0) 
 	begin 
 		Insert Into @Tb(G) 
 		Select b.CardGuide From @Tb a Inner Join TBL006 b On a.G=b.MainGuide 
 	Left Join @Tb c On b.CardGuide=c.G 
 	Where c.G Is Null 
 	end 
 	Insert Into @D(Pcr,Tm) 
 	SELECT TBL007.CardGuide,ISNULL( a.InsertedIn,@T) 
 	FROM TBL007 Inner Join @Tb g On TBL007.GroupGuid=g.G 
 	Left Join (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Group By ProductGuide) a On TBL007.CardGuide=a.ProductGuide LEFT JOIN 
 		Qry139 ON TBL007.CardGuide = Qry139.ItemGuide 
 	Where ISNULL( a.InsertedIn,5)>IsNull(Qry139.LastCalulatedDate,0) 
 end 
 else if(@ForIm Is Not Null) 
 begin 
 	Insert Into @D(Pcr,Tm) 
 	SELECT a.ProductGuide, a.InsertedIn 
 	FROM (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Where ProductGuide=@ForIm Group By ProductGuide) a LEFT OUTER JOIN 
  		Qry139 ON a.ProductGuide = Qry139.ItemGuide 
 	Where a.InsertedIn>IsNull(Qry139.LastCalulatedDate,0) 
 end 
 else if(@BID Is Null) 
 begin 
 	Insert Into @D(Pcr,Tm) 
 	SELECT TBL007.CardGuide,ISNULL( a.InsertedIn,@T) 
 	FROM TBL007 Left Join (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Group By ProductGuide) a On TBL007.CardGuide=a.ProductGuide LEFT JOIN 
 		Qry139 ON TBL007.CardGuide = Qry139.ItemGuide 
 	Where ISNULL( a.InsertedIn,5)>IsNull(Qry139.LastCalulatedDate,0) 
 END 
 else 
 begin 
 	Insert Into @D(Pcr,Tm) 
 	SELECT a.ProductGuide, a.InsertedIn 
 	FROM (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Where MainGuide=@BID Group By ProductGuide) a LEFT OUTER JOIN 
 		Qry139 ON a.ProductGuide = Qry139.ItemGuide 
 	Where a.InsertedIn>IsNull(Qry139.LastCalulatedDate,0) 
 end 
 declare @Pr uniqueidentifier 
 DECLARE P CURSOR READ_ONLY FAST_FORWARD FOR 
 Select * From @D 
 OPEN P 
 FETCH NEXT FROM P INTO @Pr,@T 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Delete From TBL074 Where ItemGuide=@Pr And PriceType=10 
 	Insert Into TBL074(PriceType,LastCalulatedDate,ItemGuide,PriceValue,ItemUnit)Values( 
 	10,@T,@Pr,dbo.Fun067(@Pr,Null,Null,Null,Null,Null,Null,Null,Null,Null),1) 
 	FETCH NEXT FROM P INTO @Pr,@T 
 END 
 CLOSE P 
 Deallocate P 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc044]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc044](@Pr uniqueidentifier) 
	as begin 
	declare @T datetime 
	Set @T =IsNull((Select MAX(InsertedIn)From TBL023 Where ProductGuide=@Pr),GETDATE()) 
		if((Select COUNT(*) From TBL074 Where ItemGuide=@Pr And PriceType=11 And LastCalulatedDate>=@T)=0) 
		begin 
			Delete From TBL074 Where ItemGuide=@Pr And PriceType=11 
			Insert Into TBL074(PriceType,LastCalulatedDate,ItemGuide,PriceValue,ItemUnit)Values( 
			11,@T,@Pr,dbo.Fun068(@Pr),1) 
		end 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc045]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc045](@BID uniqueidentifier) 
	as begin 
		declare @T datetime 
		declare @D table(Pcr uniqueidentifier,Tm datetime) 
		Set @T=GETDATE() 
		if(@BID Is Null) 
		begin 
			Insert Into @D(Pcr,Tm) 
			SELECT     TBL007.CardGuide,ISNULL( a.InsertedIn,@T) 
			FROM       TBL007 Left Join (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Group By ProductGuide) a On TBL007.CardGuide=a.ProductGuide LEFT JOIN 
								  Qry140 ON TBL007.CardGuide = Qry140.ItemGuide 
			Where ISNULL( a.InsertedIn,5)>IsNull(Qry140.LastCalulatedDate,0) 
		END 
		else 
		begin 
			Insert Into @D(Pcr,Tm) 
			SELECT     a.ProductGuide, a.InsertedIn 
			FROM        (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Where MainGuide=@BID Group By ProductGuide) a LEFT OUTER JOIN 
								  Qry140 ON a.ProductGuide = Qry140.ItemGuide 
			Where a.InsertedIn>IsNull(Qry140.LastCalulatedDate,0) 
		end 
		declare @Pr uniqueidentifier 
		DECLARE P CURSOR READ_ONLY FAST_FORWARD FOR 
		Select * From @D 
		OPEN P 
		FETCH NEXT FROM P INTO @Pr,@T 
		WHILE (@@FETCH_STATUS = 0) 
		BEGIN 
			Delete From TBL074 Where ItemGuide=@Pr And PriceType=11 
			Insert Into TBL074(PriceType,LastCalulatedDate,ItemGuide,PriceValue,ItemUnit)Values( 
			11,@T,@Pr,dbo.Fun068(@Pr),1) 
			FETCH NEXT FROM P INTO @Pr,@T 
		END 
		CLOSE P 
		Deallocate P 
	end
GO
/****** Object:  StoredProcedure [dbo].[Prc046]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Procedure [dbo].[Prc046](@ID uniqueidentifier,@Altnv bit) 
 As Begin 
 if((Select ProductType From TBL007 Where CardGuide=@ID)=3) 
 BEGIN 
 	declare @St nvarchar(250) 
 	declare @Qt float 
 	declare @F1 float 
 	declare @F2 float 
 	declare @C float 
 	declare @Ut tinyint 
 	declare @Tm uniqueidentifier 
 	Delete From TBL063 Where MainGuide=@ID 
 	declare @T table(MainGuide uniqueidentifier,Unit tinyint,Quantity float,Factor1 float,Factor2 float) 
 	Insert Into @T(MainGuide ,Unit ,Quantity ,Factor1 ,Factor2 )Select TBL063.MainGuide,TBL063.Unit,TBL063.Quantity ,TBL007.Factor2,TBL007.Factor3 From TBL063 Left Join TBL007 On TBL063.MainGuide=TBL007.CardGuide Where TBL063.ItemGuide=@ID 
 	if(@Altnv>0) Insert Into @T(MainGuide ,Unit ,Quantity ,Factor1 ,Factor2 )Select @ID,1,1, Factor2,Factor3 From TBL007 Where CardGuide=@ID 
 	DECLARE C03 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select MainGuide ,Unit ,Quantity ,Factor1 ,Factor2 From @T 
 	OPEN C03 
 	FETCH NEXT FROM C03 INTO @Tm,@Ut,@Qt,@F1,@F2 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		if(@Altnv>0) 
 		BEGIN 
 			Set @C=(Select Sum(Quantity) From @T Where MainGuide=@Tm) 
 			Update TBL007 Set[ProductType]=3,ListAlternatives=1 Where CardGuide=@Tm 
 			Delete From TBL063 Where ItemGuide=@Tm 
 			Insert Into TBL063(ItemGuide,MainGuide,Unit,Quantity)Select @Tm,MainGuide,Unit,Quantity/@C From @T Where MainGuide!=@Tm 
 		END 
 		else 
 		BEGIN 
 			Update TBL007 Set[ProductType]=3 Where CardGuide=@Tm 
 			Insert Into TBL063(ItemGuide,MainGuide,Unit,Quantity)Values(@Tm,@ID,@Ut,dbo.Ratio(1,@Qt)) 
 		END 
 		FETCH NEXT FROM C03 INTO @Tm,@Ut,@Qt,@F1,@F2 
 	END 
 	CLOSE C03 
 	Deallocate C03 
 END 
 End 
GO
/****** Object:  StoredProcedure [dbo].[Prc047]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Procedure [dbo].[Prc047](@UsID uniqueidentifier) 
 As Begin 
 	Insert Into TBL091(EventID,ObjectID,PCID,UserGuide)Select 10,@@SPID,HOST_NAME(),@UsID 
 End  
GO
/****** Object:  StoredProcedure [dbo].[Prc048]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Procedure [dbo].[Prc048](@UsID uniqueidentifier) 
 As Begin 
 	Insert Into TBL091(EventID,ObjectID,PCID,UserGuide)Select 11,@@SPID,HOST_NAME(),@UsID 
 End  
GO
/****** Object:  StoredProcedure [dbo].[Prc049]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc049](@C uniqueidentifier,@Qry nvarchar(Max),@Tp tinyint,@ObID int,@FrmName varchar(200),@FrmKey uniqueidentifier)as begin 
  	declare @Ext bit 
  	declare @DTp tinyint 
  	Set @DTp=(CASE When @Tp>6 And @Tp<10 Then @Tp-5 Else @Tp End)
  	Set @Ext=0 
 	declare @TB varchar(10) 
 	declare @CrdN nvarchar(500) 
 	Set @TB=convert(varchar(3),@ObID) 
 	if(@Tp<10) Set @CrdN=dbo.Fun083(@C, @ObID) 
 	while(len(@TB)<3) 
 		Set @TB='0'+@TB 
 	Set @TB='TBL'+@TB 
 	if(len(@FrmKey)!=36)Set @FrmKey = Null 
 	if(@ObID<200)  exec dbo.Prc067 @ObID,0 
 	if(@ObID=22) exec ('ALTER TABLE '+ @TB +' ENABLE TRIGGER Trg001') 
 	if(@Tp<1 And @C Is NUll)
 	begin 
 		if(len(@Qry)>0) exec(@Qry) 
  		Set @Ext=1 
 		declare @T table(ID uniqueidentifier) 
 		declare @Qq nvarchar(1000) 
 		Set @Qq='Select '+(Case @ObID When 13 Then 'UsGuide' Else 'CardGuide' End)+' From '+@TB+' Where ID=(Select Max(ID)From '+@TB+')' 
 		Insert @T exec(@Qq) 
 		Set @C=(Select Top 1 ID From @T) 
 	end 
 	else 
 	if (@Tp=2) exec dbo.Prc055 @Tp,@C,@FrmKey,@FrmName 
 	if(len(@Qry)>0 And @Ext<1) exec(@Qry) 
 		Insert Into TBL091(EventID,ObjectID,UserGuide,CardGuide,PCID,FormName,FormKey,CardName) 
 			Values(@DTp,@ObID,dbo.Fun081(@@SPID),@C,HOST_NAME(),@FrmName,@FrmKey,@CrdN) 
 	if(@ObID<200) exec dbo.Prc067 @ObID,1 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc050]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc050](@Frm nvarchar(250),@Cr nvarchar(250),@Prp nvarchar(250),@Vlu nvarchar(250)) 
 As Begin 
 	if((Select COUNT(*) From TBL051 Where FrmName=@Frm)<1) 
 	begin 
 		Insert Into TBL051(FrmName)Values(@Frm) 
 	end 
 	Delete From TBL052 Where FormKey=@Frm And ControlKey=@Cr And Property=@Prp And ForUser=dbo.Fun081(@@SpID) 
 	Insert Into TBL052(FormKey,ControlKey,Property,ForUser,Value1) 
 	Values( @Frm ,@Cr , @Prp, dbo.Fun081(@@SpID),@Vlu )
 END
GO
/****** Object:  StoredProcedure [dbo].[Prc051]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc051](@B uniqueidentifier,@Store uniqueidentifier,@Cost uniqueidentifier,@DsExAc uniqueidentifier,@Cat1 uniqueidentifier,@Cat2 uniqueidentifier,@Cat3 uniqueidentifier,@Cat4 uniqueidentifier,@Cat5 uniqueidentifier) 
 as begin 
 	declare @D int 
 	Set @D=isnull((Select Max(ID) From TBL023 Where MainGuide=@B),0)+1 
 	declare @Qr nvarchar(1500) 
 	declare @Fn nvarchar(1500) 
 	declare @Gr nvarchar(1000) 
 	declare @Iq nvarchar(1000) 
 	Set @Gr=' Group By ProductGuide,SourceBill,Unit,WithDiscount,ExpiryDate,EstablishDate,ReserveDate' 
 	Set @Qr=' Select '''+convert(varchar(100),@B)+''',ProductGuide,SourceBill,Sum(Quantity),1,Sum(ExtraQuantity),Unit,Sum(TotalValue),Sum(DiscountValue),Sum(ExtraValue),Sum(TaxValue),ExpiryDate,EstablishDate,ReserveDate,Avg(Length),Avg(Width),Avg(Hieght)' 
 	Set @Iq=' Insert Into TBL023(MainGuide,ProductGuide,SourceBill,Quantity,Printed,ExtraQuantity,Unit,TotalValue,DiscountValue,ExtraValue,TaxValue,ExpiryDate,EstablishDate,ReserveDate,Length,Width,Hieght,StoreID,CostCenter,Category01,Category02,Category03,Category04,Category05)' 
 	Set @Fn=' From (Select (CASE WHEN DiscountValue>0 Then 1 Else 0 END)As WithDiscount,* From TBL023 Where MainGuide='''+convert(varchar(100),@B)+''') a' 
 	if(@Store Is Not Null) 
 	begin 
 		Set @Qr=@Qr + ''''+ convert(varchar(100),@Store)+''' As StoreID' 
 	end 
 	else 
 	begin 
 		Set @Qr=@Qr+',StoreID' 
 		Set @Gr=@Gr+',StoreID' 
 	end 
 	if(@Cost Is Not Null) 
 	begin 
 		Set @Qr=@Qr + ''''+convert(varchar(100),@Cost)+''' As CostCenter' 
 	end 
 	else 
 	begin 
 		Set @Qr=@Qr+',CostCenter' 
 		Set @Gr=@Gr+',CostCenter' 
 	end 
 	if(@Cat1 Is Not Null) 
 	begin 
 		Set @Qr=@Qr + ''''+convert(varchar(100),@Cat1)+''' As Category01' 
 	end 
 	else 
 	begin 
 		Set @Qr=@Qr+',Category01' 
 		Set @Gr=@Gr+',Category01' 
 	end 
 	if(@Cat2 Is Not Null) 
 	begin 
 		Set @Qr=@Qr + ''''+convert(varchar(100),@Cat2)+''' As Category02' 
 	end 
 	else 
 	begin 
 		Set @Qr=@Qr+',Category02' 
 		Set @Gr=@Gr+',Category02' 
 	end 
 	if(@Cat3 Is Not Null) 
 	begin 
 		Set @Qr=@Qr + ''''+convert(varchar(100),@Cat3)+''' As Category03' 
 	end 
 	else 
 	begin 
 		Set @Qr=@Qr+',Category03' 
 		Set @Gr=@Gr+',Category03' 
 	end 
 	if(@Cat4 Is Not Null) 
 	begin 
 		Set @Qr=@Qr + ''''+convert(varchar(100),@Cat4)+''' As Category04' 
 	end 
 	else 
 	begin 
 		Set @Qr=@Qr+',Category04' 
 		Set @Gr=@Gr+',Category04' 
 	end 
 	if(@Cat5 Is Not Null) 
 	begin 
 		Set @Qr=@Qr + ''''+convert(varchar(100),@Cat5)+''' As Category05' 
 	end 
 	else 
 	begin 
 		Set @Qr=@Qr+',Category05' 
 		Set @Gr=@Gr+',Category05' 
 	end 
 	exec(@Iq+@Qr+@Fn+@Gr) 
 	delete from TBL023 Where MainGuide=@B And ID<@D 
 	Set @D=isnull((Select Max(ID) From TBL024 Where MainGuide=@B),0)+1 
 	Set @Gr=' Group By AccountID,CurrencyGuide,ContraAccount' 
 	Set @Qr=' Select '''+convert(varchar(100),@B)+''',AccountID,CurrencyGuide,ContraAccount,Sum(Discount),Sum(Extra),Sum(DiscountToSave),Sum(ExtraToSave)' 
 	Set @Iq=' Insert Into TBL024(MainGuide,AccountID,CurrencyGuide,ContraAccount,Discount,Extra,DiscountToSave,ExtraToSave,CostCenter)' 
 	Set @Fn=' From TBL024 Where MainGuide='''+convert(varchar(100),@B)+'''' 
 	if(@Cost Is Not Null) 
 	begin 
 		Set @Qr=@Qr + ''''+convert(varchar(100),@Cost)+''' As CostCenter' 
 	end 
 	else 
 	begin 
 		Set @Qr=@Qr+',CostCenter' 
 		Set @Gr=@Gr+',CostCenter' 
 	end 
 	exec(@Iq+@Qr+@Fn+@Gr) 
 	declare @BillDiscount float 
 	declare @BillDiscountCount int 
 	Select @BillDiscount=Sum(DiscountToSave),@BillDiscountCount=Count(*) From TBL024 Where MainGuide=@B 
 	if(@BillDiscountCount=1 And @BillDiscount>0) 
 	begin 
 		Alter Table TBL022 Disable Trigger All 
 		Update TBL022 Set[Discount]=@BillDiscount Where CardGuide=@B 
 		Alter Table TBL022 Enable Trigger All 
 	end 
 	delete from TBL024 Where MainGuide=@B And ID<@D 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc052]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create Procedure [dbo].[Prc052](@Q nvarchar(4000),@ItemDescountDesc nvarchar(255),@ItemExtrasDesc nvarchar(255),@Mrg bit,@ItemStore uniqueidentifier,@ItemCostCenter uniqueidentifier) 
 as begin 
 	if((Select Count(*)From sysobjects Where Name='#T')>0)drop table #T 
 	create table #T( 
 		CardGuide uniqueidentifier, 
 		MainGuide uniqueidentifier, 
 		StoreGuide uniqueidentifier, 
 		CurrencyGuide uniqueidentifier, 
 		AgentGuide uniqueidentifier, 
 		MainBillGuide uniqueidentifier, 
 		PostToAccount uniqueidentifier, 
 		ProductsAccount uniqueidentifier, 
 		CostCenter uniqueidentifier, 
 		Project uniqueidentifier, 
 		Branch uniqueidentifier, 
 		SecurityField int, 
 		PostedField tinyint, 
 		ForDate int, 
 		BillNumber int, 
 		BillDate Datetime, 
 		Rate float 
 	) 
 	declare @CardGuide uniqueidentifier 
 	declare @MainGuide uniqueidentifier 
 	declare @StoreGuide uniqueidentifier 
 	declare @CurrencyGuide uniqueidentifier 
 	declare @AgentGuide uniqueidentifier 
 	declare @MainBillGuide uniqueidentifier 
 	declare @PostToAccount uniqueidentifier 
 	declare @ProductsAccount uniqueidentifier 
 	declare @CostCenter uniqueidentifier 
 	declare @Project uniqueidentifier 
 	declare @Branch uniqueidentifier 
 	declare @SecurityField int 
 	declare @PostedField tinyint 
 	declare @ForDate int 
 	declare @BillNumber int 
 	declare @BillDate Datetime 
 	declare @Rate float 
 	declare @NGd uniqueidentifier 
 	declare @NNmb int 
 	declare @SNNmb nvarchar(15) 
 	declare @LCardGuide uniqueidentifier 
 	declare @LMainGuide uniqueidentifier 
 	declare @LStoreGuide uniqueidentifier 
 	declare @LCurrencyGuide uniqueidentifier 
 	declare @LAgentGuide uniqueidentifier 
 	declare @LMainBillGuide uniqueidentifier 
 	declare @LPostToAccount uniqueidentifier 
 	declare @LProductsAccount uniqueidentifier 
 	declare @LCostCenter uniqueidentifier 
 	declare @LProject uniqueidentifier 
 	declare @LBranch uniqueidentifier 
 	declare @LSecurityField int 
 	declare @LPostedField tinyint 
 	declare @LForDate int 
 	declare @LBillNumber int 
 	declare @LBillDate Datetime 
 	declare @LRate float 
 	declare @St nvarchar(3000) 
 	declare @St2 nvarchar(1000) 
 	exec('Insert Into #T(CardGuide,MainGuide,StoreGuide,CurrencyGuide,AgentGuide,MainBillGuide,PostToAccount,ProductsAccount,CostCenter,Project,Branch,SecurityField,PostedField,ForDate,BillNumber,BillDate,Rate) 
 	Select CardGuide,MainGuide,StoreGuide,CurrencyGuide,AgentGuide,MainBillGuide,PostToAccount,ProductsAccount,CostCenter,Project,Branch,SecurityField,PostedField,ForDate,BillNumber,BillDate,Rate From ('+@Q+') a') 
 	DECLARE C02 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select CardGuide ,MainGuide ,StoreGuide ,CurrencyGuide ,AgentGuide ,MainBillGuide ,PostToAccount ,ProductsAccount , 
 		CostCenter ,Project ,Branch ,SecurityField ,PostedField ,ForDate ,BillNumber ,BillDate ,Rate From #T Order By MainGuide ,BillDate ,StoreGuide ,CurrencyGuide ,AgentGuide ,MainBillGuide ,PostToAccount ,ProductsAccount , 
 		CostCenter ,Project ,Branch ,SecurityField ,PostedField ,ForDate,Rate  
 	OPEN C02 
 	FETCH NEXT FROM C02 INTO @CardGuide ,@MainGuide ,@StoreGuide ,@CurrencyGuide ,@AgentGuide ,@MainBillGuide ,@PostToAccount ,@ProductsAccount , 
 		@CostCenter ,@Project ,@Branch ,@SecurityField ,@PostedField ,@ForDate ,@BillNumber ,@BillDate ,@Rate 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		if(@NGd Is Null Or @MainGuide!=@LMainGuide Or @StoreGuide!=@LStoreGuide Or @CurrencyGuide!=@LCurrencyGuide Or @AgentGuide!=@LAgentGuide Or 
 		@MainBillGuide!=@LMainBillGuide Or @PostToAccount!=@LPostToAccount Or @ProductsAccount!=@LProductsAccount Or @CostCenter!=@LCostCenter Or 
 		@Project!=@LProject Or @Branch!=@LBranch Or @SecurityField!=@LSecurityField Or @PostedField!=@LPostedField Or @ForDate!=@LForDate Or 
 		@BillNumber!=@LBillNumber Or @Rate!=@LRate) 
 		BEGIN 
 			if(@NGd Is Not Null) 
 			begin 
 				if(@Mrg>0) exec dbo.Prc051 @NGd,@ItemStore,@ItemCostCenter,Null,Null,Null,Null,Null,Null 
 				exec dbo.Prc008 @NGd,@ItemDescountDesc,@ItemExtrasDesc,0 
 			end 
 			Set @LCardGuide=@CardGuide 
 			Set @LMainGuide=@MainGuide 
 			Set @LStoreGuide=@StoreGuide 
 			Set @LCurrencyGuide=@CurrencyGuide 
 			Set @LAgentGuide=@AgentGuide 
 			Set @LMainBillGuide=@MainBillGuide 
 			Set @LPostToAccount=@PostToAccount 
 			Set @LProductsAccount=@ProductsAccount 
 			Set @LCostCenter=@CostCenter 
 			Set @LProject=@Project 
 			Set @LBranch=@Branch 
 			Set @LSecurityField=@SecurityField 
 			Set @LPostedField=@PostedField 
 			Set @LForDate=@ForDate 
 			Set @NGd=NEWID() 
 			Set @NNmb=(Select MAX(BillNumber)From TBL022 Where MainGuide=@MainGuide)+1 
 			Set @SNNmb=CONVERT(nvarchar(30),@NNmb) 
 			Set @St='Insert Into TBL022(CardGuide,MainGuide,StoreGuide,BillDate,PayMethod,CurrencyGuide,BillNumber,Rate,Posted,Security' 
 			Set @St2=''''+ CONVERT(varchar(100), @NGd) +''','''+ CONVERT(varchar(100), @MainGuide) +''','''+ CONVERT(varchar(100), @StoreGuide) +''','+CONVERT(varchar(15), CONVERT(float,@BillDate))+',1,'''+ CONVERT(varchar(100), @CurrencyGuide) +''','+@SNNmb+','+CONVERT(varchar(15),@Rate)+','+ CONVERT(varchar(15),@PostedField)+','+ CONVERT(varchar(15),@SecurityField) 
 			if(@AgentGuide Is Not Null) 
 			begin 
 				Set @St=@St+',AgentGuide' 
 				Set @St2=@St2+','''+ CONVERT(varchar(100), @AgentGuide) +'''' 
 			end 
 			if(@MainBillGuide Is Not Null) 
 			begin 
 				Set @St=@St+',MainBillGuide' 
 				Set @St2=@St2+','''+ CONVERT(varchar(100), @MainBillGuide) +'''' 
 			end 
 			if(@PostToAccount Is Not Null) 
 			begin 
 				Set @St=@St+',PostToAccount' 
 				Set @St2=@St2+','''+ CONVERT(varchar(100), @PostToAccount) +'''' 
 			end 
 			if(@ProductsAccount Is Not Null) 
 			begin 
 				Set @St=@St+',ProductsAccount' 
 				Set @St2=@St2+','''+ CONVERT(varchar(100), @ProductsAccount) +'''' 
 			end 
 			if(@CostCenter Is Not Null) 
 			begin 
 				Set @St=@St+',CostCenter' 
 				Set @St2=@St2+','''+ CONVERT(varchar(100), @CostCenter) +'''' 
 			end 
 			if(@Project Is Not Null) 
 			begin 
 				Set @St=@St+',Project' 
 				Set @St2=@St2+','''+ CONVERT(varchar(100), @Project) +'''' 
 			end 
 			if(@Branch Is Not Null) 
 			begin 
 				Set @St=@St+',Branch' 
 				Set @St2=@St2+','''+ CONVERT(varchar(100), @Branch) +'''' 
 			end 
 			Set @St=@St+')Values('+@St2+')' 
 			exec dbo.Prc049 @NGd, @St,0,22,@SNNmb,@MainGuide 
 		END 
 			Insert Into TBL023(MainGuide,ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue,DiscountValue,ExtraValue,TaxValue,StoreID,StatementName,ExpiryDate,EstablishDate,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,Description2,RelatedObjects) 
 				Select @NGd,ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue,DiscountValue,ExtraValue,TaxValue,StoreID,StatementName,ExpiryDate,EstablishDate,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,Description2,RelatedObjects From TBL023 Where MainGuide=@CardGuide 
 			Insert Into TBL024(MainGuide,AccountID,CurrencyGuide,ContraAccount,Discount,Extra,DiscountToSave,ExtraToSave,CostCenter,Description) 
 				Select @NGd,AccountID,CurrencyGuide,ContraAccount,Discount,Extra,DiscountToSave,ExtraToSave,CostCenter,Description From TBL024 Where MainGuide=@CardGuide 
 		Set @St='Delete From TBL022 Where CardGuide='''+CONVERT(varchar(100),@CardGuide)+'''' 
 		exec dbo.Prc049 @CardGuide, @St,2,22,@SNNmb,@MainGuide 
 		FETCH NEXT FROM C02 INTO @CardGuide ,@MainGuide ,@StoreGuide ,@CurrencyGuide ,@AgentGuide ,@MainBillGuide ,@PostToAccount ,@ProductsAccount , 
 			@CostCenter ,@Project ,@Branch ,@SecurityField ,@PostedField ,@ForDate ,@BillNumber ,@BillDate ,@Rate 
 	END 
 	CLOSE C02 
 	Deallocate C02 
 	if(@NGd Is Not Null) 
 	begin 
 		if(@Mrg>0) exec dbo.Prc051 @NGd,@ItemStore,@ItemCostCenter,Null,Null,Null,Null,Null,Null 
 		exec dbo.Prc008 @NGd,@ItemDescountDesc,@ItemExtrasDesc,0 
 	end 
 	drop table #T 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc053]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc053](@B uniqueidentifier,@In1 nvarchar(20),@In2 nvarchar(20),@Out1 nvarchar(20),@Out2 nvarchar(20)) 
 as begin 
 declare @O uniqueidentifier 
 declare @I uniqueidentifier 
 Set @O=(Select CardGuide From TBL020 Where OperationBill=@B And InvoiceMovementSide<0) 
 Set @I=(Select CardGuide From TBL020 Where OperationBill=@B And InvoiceMovementSide>0) 
 if(@In1 Is Null)Select @In1=InvoiceName ,@In2=LatinName From TBL020 Where CardGuide=@I 
 if(@Out1 Is Null)Select @Out1=InvoiceName ,@Out2=LatinName From TBL020 Where CardGuide=@O 
 declare @GenerateEntry1 int 
 declare @GenerateEntry2 int 
 declare @DoNotGenerateBill1 bit 
 declare @DoNotGenerateBill2 bit 
 declare @PriceType tinyint 
 declare @BillName nvarchar(250) 
 declare @BillLatinName nvarchar(250) 
 declare @DefaultStore1 uniqueidentifier 
 declare @DefaultStore2 uniqueidentifier 
 declare @DefaultCostCenter1 uniqueidentifier 
 declare @DefaultCostCenter2 uniqueidentifier 
 declare @DefaultCurrency1 uniqueidentifier 
 declare @DefaultCurrency2 uniqueidentifier 
 declare @AccountOFOption1 uniqueidentifier 
 declare @AccountOFOption2 uniqueidentifier 
 declare @AccountOFOption3 uniqueidentifier 
 declare @AccountOFOption4 uniqueidentifier 
 declare @AccountOFOption5 uniqueidentifier 
 declare @AccountOFOption6 uniqueidentifier 
 declare @AccountOFOption7 uniqueidentifier 
 declare @AccountOFOption8 uniqueidentifier 
 declare @AccountOFOption9 uniqueidentifier 
 declare @AccountOFOption10 uniqueidentifier 
 declare @AffectCustomPrice bit 
 declare @BooleanOption1 bit 
 declare @BooleanOption2 bit 
 declare @BooleanOption3 bit 
 declare @BooleanOption4 bit 
 declare @BooleanOption10 bit 
 declare @BooleanOption11 bit 
 declare @EntryType1 bit 
 declare @EntryType2 bit 
 declare @GenerateContraAccount1 bit 
 declare @GenerateContraAccount2 bit 
 declare @CostCenterBelongsToBillAccount bit 
 declare @CostCenterBelongsToItems bit 
 declare @ProjectBelongsToBillAccount bit 
 declare @ProjectBelongsToItems bit 
 declare @BranchBelongsToBillAccount bit 
 declare @BranchBelongsToItems bit 
 declare @AgentBelongsToBillAccount bit 
 declare @AgentBelongsToItems bit 
 declare @CategoriesBelongsToBillAccount bit 
 declare @CategoriesBelongsToItems bit 
 declare @DoNotUseItemAccount bit 
 declare @NotAffectCostActivity bit 
 declare @DefaultAgent uniqueidentifier 
 declare @DefaultAgent2 uniqueidentifier 
 declare @Fields nvarchar(512) 
 declare @Color1 int 
 declare @Color2 int 
  	Select @GenerateEntry1=GenerateEntry1,@GenerateEntry2=GenerateEntry2,@DoNotGenerateBill1=DoNotGenerateBill1,@DoNotGenerateBill2=DoNotGenerateBill2, 
 @PriceType=PriceType,@BillName=BillName,@BillLatinName=BillLatinName,@DefaultStore1=DefaultStore1,@DefaultStore2=DefaultStore2,@DefaultCostCenter1=DefaultCostCenter1, 
 @DefaultCostCenter2=DefaultCostCenter2,@DefaultCurrency1=DefaultCurrency1,@DefaultCurrency2=DefaultCurrency2,@AccountOFOption1=AccountOFOption1, 
 @AccountOFOption2=AccountOFOption2,@AccountOFOption3=AccountOFOption3,@AccountOFOption4=AccountOFOption4,@AccountOFOption5=AccountOFOption5, 
 @AccountOFOption6=AccountOFOption6,@AccountOFOption7=AccountOFOption7,@AccountOFOption8=AccountOFOption8,@AccountOFOption9=AccountOFOption9,@AccountOFOption10=AccountOFOption10, 
 @BooleanOption1=BooleanOption1,@BooleanOption2=BooleanOption2,@BooleanOption3=BooleanOption3,@BooleanOption4=BooleanOption4,@BooleanOption10=BooleanOption10, 
 @BooleanOption11=BooleanOption11,@DefaultAgent=DefaultAgent,@DefaultAgent2=DefaultAgent2,@Fields=Fields,@Color1=Color1,@Color2=Color2,@NotAffectCostActivity=BooleanOption41, 
 @CostCenterBelongsToBillAccount=BooleanOption15,@CostCenterBelongsToItems=BooleanOption16,@ProjectBelongsToBillAccount=BooleanOption17,@ProjectBelongsToItems=BooleanOption18, 
 @BranchBelongsToBillAccount=BooleanOption19,@BranchBelongsToItems=BooleanOption20,@AgentBelongsToBillAccount=BooleanOption21,@AgentBelongsToItems=BooleanOption22, 
 @CategoriesBelongsToBillAccount=BooleanOption23,@CategoriesBelongsToItems=BooleanOption24,@DoNotUseItemAccount=BooleanOption25,@AffectCustomPrice=BooleanOption30, 
 @EntryType1=BooleanOption27,@EntryType2=BooleanOption28,@GenerateContraAccount1=BooleanOption26,@GenerateContraAccount2=BooleanOption29 From TBL026 Where CardGuide=@B 
 if(len(isnull(@BillLatinName,''))<1) 
 begin 
  	Set @BillLatinName=@BillName 
  	Set @Out2=@Out1 
  	Set @In2=@In1 
 end 
 if(@O Is Not Null) 
  	Update TBL020 Set[InvoiceName]=@Out1+'.'+@BillName,[LatinName]=@Out2+'.'+@BillLatinName,[PriceType]=@PriceType,[GenerateEntry]=@GenerateEntry1, 
 [DoNotPostToStores]=@DoNotGenerateBill1,[AffectCostomerPrice]=@BooleanOption1,[ProductsAccount]=@AccountOFOption2,[DiscountsAccount]=@AccountOFOption5, 
 [ExtrasAccount]=@AccountOFOption6,[SubjectToTaxAccount]=@AccountOFOption9,[DefaultStore]=@DefaultStore1,[DefaultCostCenter]=@DefaultCostCenter1, 
 [DefaultCurrency]=@DefaultCurrency1,[BillType]=8,[Fields]=@Fields,[AffectLastPurchasePrice]=@BooleanOption10, 
 [CostCenterType2]=@CostCenterBelongsToBillAccount,[CostCenterType]=@CostCenterBelongsToItems,[ProjectType2]=@ProjectBelongsToBillAccount,[ProjectType]=@ProjectBelongsToItems, 
 [BranchType2]=@BranchBelongsToBillAccount,[BranchType]=@BranchBelongsToItems,[AgentType2]=@AgentBelongsToBillAccount,[AgentType]=@AgentBelongsToItems, 
 [CategoriesType2]=@CategoriesBelongsToBillAccount,[CategoriesType]=@CategoriesBelongsToItems,[BooleanOption19]=@DoNotUseItemAccount,[EntryType]=@EntryType1, 
 [AutoGenerateContraAccount]=@GenerateContraAccount1,[BooleanOption2]=@AffectCustomPrice,[NotAffectCostActivity]=@NotAffectCostActivity 
 Where CardGuide=@O 
 else 
 begin 
  	Set @O=newid() 
  	Insert Into TBL020(CardGuide,OperationBill,InvoiceMovementSide,InvoiceName,LatinName,PriceType,GenerateEntry, 
 DoNotPostToStores,AffectCostomerPrice,ProductsAccount,DiscountsAccount,ExtrasAccount,SubjectToTaxAccount,DefaultStore,DefaultCostCenter,DefaultCurrency,BillType,Fields,AffectLastPurchasePrice, 
 CostCenterType2,CostCenterType,ProjectType2,ProjectType,BranchType2,BranchType,AgentType2,AgentType,CategoriesType2,CategoriesType,BooleanOption19,EntryType,AutoGenerateContraAccount,BooleanOption2,NotAffectCostActivity)Values 
 (@O,@B,-1,@Out1+'.'+@BillName,@Out2+'.'+@BillLatinName,@PriceType,@GenerateEntry1,@DoNotGenerateBill1,@BooleanOption1,@AccountOFOption2,@AccountOFOption5,@AccountOFOption6,@AccountOFOption9, 
 @DefaultStore1,@DefaultCostCenter1,@DefaultCurrency1,8,@Fields,@BooleanOption10, 
 @CostCenterBelongsToBillAccount,@CostCenterBelongsToItems,@ProjectBelongsToBillAccount,@ProjectBelongsToItems,@BranchBelongsToBillAccount,@BranchBelongsToItems,@AgentBelongsToBillAccount, 
 @AgentBelongsToItems,@CategoriesBelongsToBillAccount,@CategoriesBelongsToItems,@DoNotUseItemAccount,@EntryType1,@GenerateContraAccount1,@AffectCustomPrice,@NotAffectCostActivity) 
 end 
 if(@I Is Not Null) 
  	Update TBL020 Set[InvoiceName]=@In1+'.'+@BillName,[LatinName]=@In2+'.'+@BillLatinName,[PriceType]=@PriceType,[GenerateEntry]=@GenerateEntry2, 
 [DoNotPostToStores]=@DoNotGenerateBill2,[AffectCostomerPrice]=@BooleanOption2,[ProductsAccount]=@AccountOFOption4,[DiscountsAccount]=@AccountOFOption7,[ExtrasAccount]=@AccountOFOption8, 
 [SubjectToTaxAccount]=@AccountOFOption10,[DefaultStore]=@DefaultStore2,[DefaultCostCenter]=@DefaultCostCenter2, 
 [DefaultCurrency]=@DefaultCurrency1,[BillType]=9,[Fields]=@Fields,[AffectLastPurchasePrice]=@BooleanOption11, 
 [CostCenterType2]=@CostCenterBelongsToBillAccount,[CostCenterType]=@CostCenterBelongsToItems,[ProjectType2]=@ProjectBelongsToBillAccount,[ProjectType]=@ProjectBelongsToItems, 
 [BranchType2]=@BranchBelongsToBillAccount,[BranchType]=@BranchBelongsToItems,[AgentType2]=@AgentBelongsToBillAccount,[AgentType]=@AgentBelongsToItems, 
 [CategoriesType2]=@CategoriesBelongsToBillAccount,[CategoriesType]=@CategoriesBelongsToItems,[BooleanOption19]=@DoNotUseItemAccount,[EntryType]=@EntryType2, 
 [AutoGenerateContraAccount]=@GenerateContraAccount2 ,[BooleanOption2]=@AffectCustomPrice 
 Where CardGuide=@I 
 else 
 begin 
  	Set @I=newid() 
  	Insert Into TBL020(CardGuide,OperationBill,InvoiceMovementSide,InvoiceName,LatinName,PriceType,GenerateEntry, 
 DoNotPostToStores,AffectCostomerPrice,ProductsAccount,DiscountsAccount,ExtrasAccount,SubjectToTaxAccount,DefaultStore,DefaultCostCenter,DefaultCurrency,BillType,Fields,AffectLastPurchasePrice, 
 CostCenterType2,CostCenterType,ProjectType2,ProjectType,BranchType2,BranchType,AgentType2,AgentType,CategoriesType2,CategoriesType,BooleanOption19,EntryType,AutoGenerateContraAccount,BooleanOption2)Values 
 (@I,@B,1,@In1+'.'+@BillName,@In2+'.'+@BillLatinName,@PriceType,@GenerateEntry2,@DoNotGenerateBill2,@BooleanOption2,@AccountOFOption4,@AccountOFOption7,@AccountOFOption8, 
 @AccountOFOption10,@DefaultStore2,@DefaultCostCenter2,@DefaultCurrency1,9,@Fields,@BooleanOption11, 
 @CostCenterBelongsToBillAccount,@CostCenterBelongsToItems,@ProjectBelongsToBillAccount,@ProjectBelongsToItems,@BranchBelongsToBillAccount,@BranchBelongsToItems,@AgentBelongsToBillAccount, 
 @AgentBelongsToItems,@CategoriesBelongsToBillAccount,@CategoriesBelongsToItems,@DoNotUseItemAccount,@EntryType2,@GenerateContraAccount2,@AffectCustomPrice) 
 end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc054]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc054](@F uniqueidentifier,@ItemDescountDesc nvarchar(255),@ItemExtrasDesc nvarchar(255)) 
 as begin
 declare @PFIn bit
 declare @T uniqueidentifier
 declare @MainT uniqueidentifier
 declare @CMainT uniqueidentifier
 declare @BNumber int
 Select Top 1 @T=CardGuide,@BNumber=BillNumber From TBL022 Where ContraGuide=@F
 declare @CoStore uniqueidentifier
 declare @Posted tinyint
 Select @CoStore=ContraStore,@MainT=MainGuide,@Posted=Posted From TBL022 Where CardGuide=@F
 declare @OpBill uniqueidentifier
 declare @DoNotGenOtBill tinyint
 declare @TMode int
 declare @TSide int
 Select @OpBill=OperationBill,@TSide=InvoiceMovementSide From TBL020 Where CardGuide=@MainT
 if(@TSide>0)
 begin
 	Set @CMainT=(Select CardGuide From TBL020 Where OperationBill=@OpBill And InvoiceMovementSide<0)
 	Update TBL022 Set[MainGuide]=@CMainT,[ContraGuide]=null Where CardGuide=@F
 	Delete From TBL022 Where MainGuide in (@MainT,@CMainT) And BillNumber=@BNumber And CardGuide<>@F
 	Select @MainT=@CMainT,@T=null
 	alter table TBL022 disable trigger all
 	Select @OpBill=OperationBill,@TSide=InvoiceMovementSide From TBL020 Where CardGuide=@MainT
 end
 Select @DoNotGenOtBill=DoNotGenerateBill2,@TMode=IntValue01 From TBL026 Where CardGuide=@OpBill
 if(@DoNotGenOtBill=1)
 begin
 	if(@Posted=1)
 		Set @DoNotGenOtBill=0
 	else
 		Delete From TBL022 Where ContraGuide=@F
 end
 if(@DoNotGenOtBill=0)
 begin
 	if(@T Is null)
 	begin
 		declare @TMb uniqueidentifier
 		if(@CoStore Is Null)return
 		Set @TMb=(Select Top 1 CardGuide From TBL020 Where OperationBill=@OpBill And CardGuide<>@MainT)
 		if(@TMb Is Null)return
 		Set @T=NEWID()
 		Insert Into TBL022(CardGuide,MainGuide,StoreGuide,ContraStore,BillDate,DateValue01,PayMethod,LockRelations,TaxMethod,DoneIn
 			,InsertedIn,CurrencyGuide,BillNumber,BillNumber2,OrderNumber,Rate,Discount,LocalAdministrativeTax,TaxValue,DownPayment,DownPaymentNotes
 			,ChangeValue,Notes,AgentGuide,MainBillGuide,POSGuide,PostToAccount,ProductsAccount,CommissionAccount,CreditCard,Paid,Security,CustomerName
 			,Posted,CardImage,ContraGuide,CashAccount,ReturnDate,Returned,CostCenter,BillNotes2,BillNotes3,BillNotes4,BillNotes5,IntValue01
 			,Project,Branch,CurrentStage)
 		Select @T,@TMb,@CoStore,StoreGuide,BillDate,DateValue01,PayMethod,LockRelations,TaxMethod,DoneIn
 			,InsertedIn,CurrencyGuide,BillNumber,BillNumber2,OrderNumber,Rate,Discount,LocalAdministrativeTax,TaxValue,DownPayment,DownPaymentNotes
 			,ChangeValue,Notes,AgentGuide,MainBillGuide,POSGuide,PostToAccount,ProductsAccount,CommissionAccount,CreditCard,Paid,Security,CustomerName
 			,Posted,CardImage,@F,CashAccount,ReturnDate,Returned,CostCenter,BillNotes2,BillNotes3,BillNotes4,BillNotes5,IntValue01
 			,Project,Branch,CurrentStage From TBL022 Where CardGuide=@F
 		Update TBL022 Set[ContraGuide]=@T Where CardGuide=@F
 	end
 	declare @AffectQty2 bit
 	Select @PFIn=BooleanOption3,@AffectQty2=BooleanOption13 From TBL026 Where CardGuide=@OpBill
 	Update a Set [StoreGuide]=b.ContraStore,[DateValue01]=b.DateValue01,[PayMethod]=b.PayMethod,[TaxMethod]=b.TaxMethod,[BillDate]=(case @TMode When 10 then b.BillDate else a.BillDate end),
 		[DoneIn]=b.DoneIn,[InsertedIn]=b.InsertedIn,[CurrencyGuide]=b.CurrencyGuide,[BillNumber]=b.BillNumber,[BillNumber2]=b.BillNumber2,[OrderNumber]=b.OrderNumber,
 		[Rate]=b.Rate,[Discount]=b.Discount,[LocalAdministrativeTax]=b.LocalAdministrativeTax,[TaxValue]=b.TaxValue,[DownPayment]=b.DownPayment,[DownPaymentNotes]=b.DownPaymentNotes,
 		[ChangeValue]=b.ChangeValue,[Notes]=b.Notes,[MainBillGuide]=b.MainBillGuide,[POSGuide]=b.POSGuide,
 		[CommissionAccount]=b.CommissionAccount,[CreditCard]=b.CreditCard,[Paid]=b.Paid,[Security]=b.Security,[CustomerName]=b.CustomerName,
 		[ContraStore]=b.StoreGuide,[ContraGuide]=b.CardGuide,[CashAccount]=b.CashAccount,[ReturnDate]=b.ReturnDate,[Returned]=b.Returned,
 		[BillNotes2]=b.BillNotes2,[BillNotes3]=b.BillNotes3,[BillNotes4]=b.BillNotes4,[BillNotes5]=b.BillNotes5,[IntValue01]=b.IntValue01,
 		[CurrentStage]=b.CurrentStage,[RoundValue]=b.RoundValue,[Posted]=(case @TMode when 10 then b.Posted else a.Posted end)
 	From TBL022 a
 	Inner Join (Select * From TBL022 Where CardGuide=@F)b On a.ContraGuide=b.CardGuide
 	Where a.CardGuide=@T
 	Delete From TBL023 Where MainGuide=@T
 	if(@AffectQty2>0)
 	Begin
 		Insert Into TBL023(MainGuide, ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue,DiscountValue,ExtraValue,TaxValue,StatementName,ExpiryDate,
 			EstablishDate,Color,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,
 			PatchCode,Category01,Category02,Category03,Category04,Category05,SourceBill,RelatedAgent,CurrentStage,RelatedUnit,UnitQuantity,SalesPrice
 			,Description2,RelatedObjects,Printed,Nonmergeable,RecordDate,RecordSecurity,ProductsAccount)
 		Select @T, ProductGuide,Quantity2,ExtraQuantity,Unit,(CASE When @PFIn>0 Then TotalValue2 Else TotalValue End), DiscountValue,ExtraValue,TaxValue,StatementName,ExpiryDate,
 			EstablishDate,Color,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,
 			PatchCode,Category01,Category02,Category03,Category04,Category05,SourceBill,RelatedAgent,CurrentStage,RelatedUnit,UnitQuantity,SalesPrice
 			,Description2,RelatedObjects,Printed,Nonmergeable,RecordDate,RecordSecurity,ProductsAccount From TBL023 Where MainGuide=@F Order By ID
 	End
 	Else
 	Begin
 		Insert Into TBL023(MainGuide, ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue,DiscountValue,ExtraValue,TaxValue,StatementName,ExpiryDate,
 			EstablishDate,Color,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,
 			PatchCode,Category01,Category02,Category03,Category04,Category05,SourceBill,RelatedAgent,CurrentStage,RelatedUnit,UnitQuantity,SalesPrice
 			,Quantity2,Description2,RelatedObjects,Printed,Nonmergeable,RecordDate,RecordSecurity,ProductsAccount)
 		Select @T, ProductGuide,Quantity,ExtraQuantity,Unit,(CASE When @PFIn>0 Then TotalValue2 Else TotalValue End), DiscountValue,ExtraValue,TaxValue,StatementName,ExpiryDate,
 			EstablishDate,Color,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,
 			PatchCode,Category01,Category02,Category03,Category04,Category05,SourceBill,RelatedAgent,CurrentStage,RelatedUnit,UnitQuantity,SalesPrice
 			,Quantity2,Description2,RelatedObjects,Printed,Nonmergeable,RecordDate,RecordSecurity,ProductsAccount From TBL023 Where MainGuide=@F Order By ID
 	End
 end
 exec dbo.Prc029 @F
 if((Select PostToAccount From TBL022 Where CardGuide=@F)Is Not Null And (Select IsNull(ProductsAccount,(Select ProductsAccount From TBL020 Where CardGuide=(Select MainGuide From TBL022 Where CardGuide=@F)))From TBL022 Where CardGuide=@F) Is Not Null)
 	exec dbo.Prc008 @F,@ItemDescountDesc,@ItemExtrasDesc,0
 else
 	Begin exec dbo.Prc067 11,0 Delete From TBL011 Where BillGuide=@F exec dbo.Prc067 11,1 End
 if(@DoNotGenOtBill=0)
 begin
 	exec dbo.Prc029 @T
 	if((Select PostToAccount From TBL022 Where CardGuide=@T)Is Not Null And (Select IsNull(ProductsAccount,(Select ProductsAccount From TBL020 Where CardGuide=(Select MainGuide From TBL022 Where CardGuide=@T)))From TBL022 Where CardGuide=@T) Is Not Null)
 		exec dbo.Prc008 @T,@ItemDescountDesc,@ItemExtrasDesc,0
 	else
 		Begin exec dbo.Prc067 11,0 Delete From TBL011 Where BillGuide=@T exec dbo.Prc067 11,1 End
 end
 ----Transfare Codes-----
 declare @R uniqueidentifier
 declare @N uniqueidentifier
 declare @I int
 Set @I=0
 if((Select Count(*) From TBL066 Left Join TBL023 On TBL066.MainGuide=TBL023.RowGuide Where TBL023.MainGuide=@F)>0)
 begin
 	declare @Fd table(ID int,RowGuide uniqueidentifier)
 	DECLARE MrgTrnfsr CURSOR READ_ONLY FAST_FORWARD FOR
 		Select RowGuide From TBL023 Where MainGuide=@F Order By ID
 	OPEN MrgTrnfsr
 	FETCH NEXT FROM MrgTrnfsr INTO @R
 	WHILE (@@FETCH_STATUS = 0)
 	BEGIN
 		Insert Into @Fd(ID,RowGuide)Values(@I,@R)
 		Set @I=@I+1
 		FETCH NEXT FROM MrgTrnfsr INTO @R
 	END
 	CLOSE MrgTrnfsr
 	Deallocate MrgTrnfsr
 	Set @I=0
 	if(@DoNotGenOtBill=0)
 	begin
 		declare @Td table(ID int,RowGuide uniqueidentifier)
 		DECLARE MrgTrnfsr CURSOR READ_ONLY FAST_FORWARD FOR
 			Select RowGuide From TBL023 Where MainGuide=@T Order By ID
 		OPEN MrgTrnfsr
 		FETCH NEXT FROM MrgTrnfsr INTO @R
 		WHILE (@@FETCH_STATUS = 0)
 		BEGIN
 			Insert Into @Td(ID,RowGuide)Values(@I,@R)
 			Set @I=@I+1
 			FETCH NEXT FROM MrgTrnfsr INTO @R
 		END
 		CLOSE MrgTrnfsr
 		Deallocate MrgTrnfsr
 		DECLARE MrgTrnfsr CURSOR READ_ONLY FAST_FORWARD FOR
 			Select a.RowGuide,b.RowGuide From @Fd a Inner Join @Td b On a.ID=b.ID
 		OPEN MrgTrnfsr
 		FETCH NEXT FROM MrgTrnfsr INTO @R,@N
 		WHILE (@@FETCH_STATUS = 0)
 		BEGIN
 			Insert Into TBL066(MainGuide,SerialCode,Notes)Select @N,SerialCode,Notes From TBL066 Where MainGuide=@R
 			FETCH NEXT FROM MrgTrnfsr INTO @R,@N
 		END
 		CLOSE MrgTrnfsr
 		Deallocate MrgTrnfsr
 	end
 end
 Alter Table TBL022 Disable Trigger All
 Update TBL022 Set[CheckID01]=( Select Max(a.ID) From TBL023 a Inner Join TBL022 b On a.MainGuide=b.CardGuide
 Where b.ContraGuide=@F Or b.CardGuide=@F)
 Where ContraGuide=@F Or CardGuide=@F
 Alter Table TBL022 Enable Trigger All
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc055]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc055](@Tp tinyint,@C uniqueidentifier,@FormKey uniqueidentifier,@FrmName nvarchar(255)) 
 	As begin 
 	if(@C Is Not Null) 
 	begin 
 	declare @Qry nvarchar(4000) 
 	if(@Tp<3 And len(isnull(@FrmName,''))>0) 
 	begin 
 		if(@FormKey Is Null) 
 			Set @Qry=(Select Top 1 BuildEvent From TBL094 Where EventID=@Tp And FormName=@FrmName) 
 		else 
 			Set @Qry=(Select Top 1 BuildEvent From TBL094 Where EventID=@Tp And FormName=Convert(varchar(100),@FormKey)) 
 		if(len(isnull( @Qry,''))>0) 
 		begin 
 				Set @Qry='declare @CardGuide uniqueidentifier 
 Set @CardGuide='''+Convert(varchar(100),@C)+''''+@Qry 
 				exec(@Qry) 
 		end 
 	end 
 	end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc056]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc056](@Tp uniqueidentifier, 
 --0:By Date 
 --1:By Entry 
 @OrdrBy tinyint) 
 as begin 
 	declare @E int Set @E=0 
 	declare @G int 
 	declare @Tb Table(ID int,Srt float) 
 	if(@OrdrBy<1) 
 		Insert Into @Tb Select ID,Convert(float,BondDate) From TBL010 Where MainGuide=@Tp Order By BondDate,BondNumber 
 	else --if(@OrdrBy<2) 
 		Insert Into @Tb Select ID,ID As Srt From TBL010 Where MainGuide=@Tp Order By ID 
 	DECLARE C05 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select ID From @Tb Order By Srt 
 	OPEN C05 
 	FETCH NEXT FROM C05 INTO @G 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		Set @E=@E+1 
 		exec dbo.Prc067 10,0  
 		Update TBL010 Set[BondNumber]=@E Where ID=@G 
 		exec dbo.Prc067 10,1 
 		FETCH NEXT FROM C05 INTO @G 
 	END 
 	CLOSE C05 
 	Deallocate C05 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc057]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc057](--0:By Date 
 --1:By Entry 
 @OrdrBy tinyint) 
 as begin 
 	declare @E int Set @E=0 
 	declare @G uniqueidentifier 
 	declare @Tb Table(ID uniqueidentifier,Srt float) 
 	if(@OrdrBy<1) 
 		Insert Into @Tb Select CardGuide,Convert(float,EntryDate) From TBL011 Order By EntryDate,EntryNumber 
 	else --if(@OrdrBy<2) 
 		Insert Into @Tb Select CardGuide,ID From TBL011 Order By ID 
 	DECLARE C06 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select ID From @Tb Order By Srt
 	OPEN C06 
 	FETCH NEXT FROM C06 INTO @G 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		Set @E=@E+1 
 		exec dbo.Prc067 11,0 
 		Update TBL011 Set[EntryNumber]=@E Where CardGuide=@G 
 		exec dbo.Prc067 11,1 
 		FETCH NEXT FROM C06 INTO @G 
 	END 
 	CLOSE C06 
 	Deallocate C06 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc058]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc058](@Tp uniqueidentifier, 
 --0:By Date 
 --1:By Entry 
 @OrdrBy tinyint)
 as begin
 	declare @E int Set @E=0
 	declare @G uniqueidentifier
 	declare @T1 uniqueidentifier
 	declare @OpTp uniqueidentifier
 	declare @CntB uniqueidentifier
 	declare @BTp int
 	declare @POSBill uniqueidentifier
 	Select @POSBill=MainBill,@BTp=BillType From TBL020 Where CardGuide=@Tp
 	declare @Tb Table(ID uniqueidentifier ,Srt float ,OperationBill uniqueidentifier,ContraBillType uniqueidentifier)
 	if(@OrdrBy<1)
 	begin
 		if(@BTp=3)
 			Insert Into @Tb (ID,Srt,OperationBill,ContraBillType) Select a.CardGuide,Convert(float,a.BillDate),b.OperationBill,c.CardGuide From TBL022 a Inner Join TBL020 b on a.MainGuide=b.CardGuide Left Join (Select * From TBL020 e Where e.BillType=9) c On b.OperationBill=c.OperationBill Where a.MainGuide=@POSBill And a.POSGuide=@Tp Order By BillDate,BillNumber
 		else
 			Insert Into @Tb (ID,Srt,OperationBill,ContraBillType) Select a.CardGuide,Convert(float,a.BillDate),b.OperationBill,c.CardGuide From TBL022 a Inner Join TBL020 b on a.MainGuide=b.CardGuide Left Join (Select * From TBL020 e Where e.BillType=9) c On b.OperationBill=c.OperationBill Where a.MainGuide=@Tp Order By a.BillDate,a.BillNumber
 	end
 	else if(@OrdrBy<2)
 	begin
 		if(@BTp=3)
 			Insert Into @Tb (ID,Srt,OperationBill,ContraBillType) Select a.CardGuide,a.ID,b.OperationBill,c.CardGuide From TBL022 a Inner Join TBL020 b on a.MainGuide=b.CardGuide Left Join (Select * From TBL020 e Where e.BillType=9) c On b.OperationBill=c.OperationBill Where a.MainGuide=@POSBill And a.POSGuide=@Tp Order By a.ID
 		else
 			Insert Into @Tb (ID,Srt,OperationBill,ContraBillType) Select a.CardGuide,a.ID,b.OperationBill,c.CardGuide From TBL022 a Inner Join TBL020 b on a.MainGuide=b.CardGuide Left Join (Select * From TBL020 e Where e.BillType=9) c On b.OperationBill=c.OperationBill Where a.MainGuide=@Tp Order By a.ID
 	end
 	DECLARE C07 CURSOR READ_ONLY FAST_FORWARD FOR
 		Select ID,OperationBill,ContraBillType From @Tb Order By Srt
 	OPEN C07
 	FETCH NEXT FROM C07 INTO @G,@OpTp,@CntB
 	WHILE (@@FETCH_STATUS = 0)
 	BEGIN
 		Set @E=@E+1
 		Alter Table TBL022 Disable Trigger Trg067
 		if(@BTp=3)
 		Update TBL022 Set[BillNumber2]=@E Where CardGuide=@G
 		else if(@BTp=2)
 			Update TBL022 Set[BillNumber2]=@E Where CardGuide=@G Or ContraGuide=@G
 		else if(@BTp=8)
 		begin
 			Update TBL022 Set[BillNumber2]=@E Where CardGuide=@G Or ContraGuide=@G
 		end
 		else
 		Update TBL022 Set[BillNumber]=@E Where CardGuide=@G
 		ALTER TABLE TBL022 ENABLE TRIGGER ALL
 		FETCH NEXT FROM C07 INTO @G,@OpTp,@CntB
 	END
 	CLOSE C07
 	Deallocate C07
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc059]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc059](@B uniqueidentifier,@PtToBl uniqueidentifier,@UseDefault bit) 
 as begin 
 	declare @Tp uniqueidentifier 
 	declare @Paid float 
 	declare @B6 Bit 
 	declare @B11 Bit 
 	declare @Posted tinyint 
 	Select @Tp=POSGuide From TBL022 Where CardGuide=@B 
 	Select @PtToBl=(CASE When @PtToBl Is Null Then PostToBill Else @PtToBl END),@B6=BooleanOption6,@B11=BooleanOption11 From TBL020 Where CardGuide=@Tp 
 	Select @Posted=(CASE DoNotPostToStores When 1 Then 0 Else 1 End) From TBL020 Where CardGuide=@PtToBl 
 	if(@PtToBl Is Not Null) 
 	begin 
 		delete from TBL022 Where ContraGuide=@B 
 		declare @PayType int 
 		declare @PostToAc uniqueidentifier 
 		Select @PostToAc=CashAccount,@PayType=DefaultPayType From TBL020 Where CardGuide=@PtToBl 
 		if(@PostToAc Is Null Or @PayType<>1)Set @UseDefault=0 
 			declare @G uniqueidentifier 
 			Set @G=newid() 
 		    exec dbo.Prc067 22,0 
 			Insert Into TBL022(CardGuide,BillNumber2 , MainGuide, StoreGuide, BillDate, PayMethod, CurrencyGuide, BillNumber, OrderNumber, 
 	Rate, Discount, LocalAdministrativeTax, DownPayment, Notes, AgentGuide, MainBillGuide, PostToAccount, ProductsAccount, 
 	CommissionAccount , CustomerName, Posted, CardImage, ContraGuide, ContraStore, ReturnDate, Returned, CostCenter, BillNotes2,BillNotes3, 
 	BillNotes4, Branch, CashAccount) 
 	Select @G,BillNumber2 , @PtToBl, StoreGuide, BillDate,(CASE When @UseDefault>0 Then @PayType Else PayMethod End), CurrencyGuide, dbo.Fun099(Null,@PtToBl,0), OrderNumber, 
 	Rate, Discount, LocalAdministrativeTax, DownPayment, Notes, AgentGuide, MainBillGuide,(CASE When @UseDefault>0 Then @PostToAc Else PostToAccount End), ProductsAccount, 
 	CommissionAccount , CustomerName, @Posted, CardImage, @B, ContraStore, ReturnDate, Returned, CostCenter, BillNotes2,BillNotes3, 
 	BillNotes4, Branch, CashAccount  
 	From TBL022 Where CardGuide=@B 
 		exec dbo.Prc067 22,0 
 	    Update TBL022 Set[ContraGuide]=@B Where CardGuide=@G 
 		exec dbo.Prc067 22,1 
 	if(@B11<1)Insert Into TBL024(MainGuide,AccountID,CurrencyGuide,ContraAccount,Discount,Extra,DiscountToSave,ExtraToSave,CostCenter,Description)Select @G,AccountID,CurrencyGuide,ContraAccount,Discount,Extra,DiscountToSave,ExtraToSave,CostCenter,Description From TBL024 Where MainGuide=@B Order By ID 
 			if(@B6>0) 
 			begin 
 				Insert Into TBL023(MainGuide, ProductGuide, Quantity, Unit, TotalValue, DiscountValue, ExtraValue, TaxValue, StoreID, 
 	ExpiryDate, Length, Width, Hieght, Description, CostCenter, BillCustom1, BillCustom2, BillCustom3, BillCustom4, BillCustom5, 
 	Category01, Category02, Category03, Category04, Category05) 
 				Select @G ,ProductGuide, Quantity, Unit, ItemTotalValueRate, ItemDiscountValueRate, ItemExtraValueRate, ItemTaxValueRate, StoreGuide, 
 	ExpiryDate, Length, Width, Hieght, Description, CostCenter, BillCustom1, BillCustom2, BillCustom3, BillCustom4, BillCustom5, 
 	Category01, Category02, Category03, Category04, Category05 
 				From Qry008 Where InvoiceGuide=@B Order By ItemSortID 
 			end 
 			else 
 			begin 
 				Insert Into TBL023(MainGuide,ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue, 
 	DiscountValue,ExtraValue,TaxValue,StoreID,StatementName,ExpiryDate,EstablishDate,Color,Length,Width, 
 	Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,Description2, 
 	RelatedObjects,Category01,Category02,Category03,Category04,Category05,Weight,Value,TotalValue2,Printed) 
 	Select @G,ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue, 
 	DiscountValue,ExtraValue,TaxValue,StoreID,StatementName,ExpiryDate,EstablishDate,Color,Length,Width, 
 	Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,Description2, 
 	RelatedObjects,Category01,Category02,Category03,Category04,Category05,Weight,Value,TotalValue2,Printed From TBL023 Where MainGuide=@B Order By ID 
 			end 
 	exec dbo.Prc008 @G ,'','',0 
 	end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc060]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc060](@G uniqueidentifier) 
 as begin 
 	if((Select Count(*) From Qry182 Where BondGuide=@G)>0) 
 	begin 
 		declare @Q nvarchar(255) 
 		Set @Q=ltrim(rtrim(Convert(nvarchar(255),(Select ID From TBL009 Where CardGuide=@G)))) 
 		Set @Q='BndAgntQry'+ substring('000',1,3-len(Left(@Q,3)))+@Q 
 		if((Select Count(*) From Sysobjects Where Name=@Q)>0) 
 			exec('Drop View '+@Q) 
 		exec('Create View '+@Q+' As Select * From Qry182 Where BondGuide='''+@G+'''') 
 		Select @Q 
 	end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc061]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc061](@G uniqueidentifier) 
 as begin 
 	declare @T uniqueidentifier 
 	Set @T=(Select MainAttendance From TBL096 Where CardGuide=@G) 
 	if(@T Is Not Null) 
 	begin 
 		declare @Q nvarchar(255) 
 		Set @Q=ltrim(rtrim(Convert(nvarchar(255),(Select ID From TBL096 Where CardGuide=@G)))) 
 		Set @Q='AdncAgntQry'+ substring('000',1,3-len(@Q))+@Q 
 		if((Select Count(*) From Sysobjects Where Name=@Q)>0)exec('Drop View '+@Q) 
 		exec('Create View '+@Q+' As Select IsNull(TBL099.PLogIn,TBL098.CardDate)As AttDate, Qry132.* From Qry132 
 		Inner Join TBL099 On Qry132.CardGuide=TBL099.AgentGuide 
 		Inner Join TBL098 On TBL099.MainGuide=TBL098.CardGuide 
 		Where TBL098.MainGuide='''+@T+'''') 
 		Select @Q 
 	end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc062]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc062](@TblIx int,@Ord nvarchar(255)) As begin 
 	declare @Tb varchar(100) 
 	Set @Tb=Convert(varchar(10),@TblIx) 
 	While(Len(@Tb)<3) 
 		Set @Tb='0'+@Tb 
 	Set @Tb='TBL'+@Tb 
 	if((Select Count(*) From sysobjects Where Name='TmpTable')>0) 
 		Drop Table TmpTable 
 	declare @TmpTblCr nvarchar(Max) 
 	declare @TblCr nvarchar(Max) 
 	Set @TblCr=dbo.Fun103(@Tb,'') 
 	Set @TmpTblCr=dbo.Fun103(@Tb,'TmpTable') 
 	declare @Cls nvarchar(Max) 
 	declare @OCls nvarchar(Max) 
 	Set @Cls='' 
 	Set @OCls='' 
 	declare @TC nvarchar(255) 
 	DECLARE C062 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select Name From syscolumns Where id=(Select id From sysobjects Where name=@Tb) 
 	OPEN C062 
 	FETCH NEXT FROM C062 INTO @TC 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		if(Len(@Cls)>0)Set @Cls=@Cls+',' 
 		Set @Cls=@Cls+@TC 
 		if(@TC Not Like 'id') 
 		begin 
 			if(Len(@OCls)>0)Set @OCls=@OCls+',' 
 			Set @OCls=@OCls+@TC 
 		end 
 		FETCH NEXT FROM C062 INTO @TC 
 	End 
 	CLOSE C062 
 	Deallocate C062 
 	exec(@TmpTblCr) 
 	exec('Insert Into TmpTable('+@Cls+') Select '+@Cls+' From '+@Tb) 
 	declare @RTn table(FTable nvarchar(255),RTable nvarchar(255),RName nvarchar(255),RColumn nvarchar(255),FColumn nvarchar(255),DeleteAction tinyint,UpdateAction tinyint) 
 	Insert into @RTn exec('Select * From dbo.Fun104('''+@Tb+''')') 
 	declare @FTable nvarchar(255) 
 	declare @RTable nvarchar(255) 
 	declare @RName nvarchar(255) 
 	declare @RColumn nvarchar(255) 
 	declare @FColumn nvarchar(255) 
 	declare @DeleteAction tinyint 
 	declare @UpdateAction tinyint 
 	DECLARE C062 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select FTable,RTable,RName,RColumn,FColumn,DeleteAction,UpdateAction From @Rtn 
 	OPEN C062 
 	FETCH NEXT FROM C062 INTO @FTable,@RTable,@RName,@RColumn,@FColumn,@DeleteAction,@UpdateAction 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		exec('Alter Table ' + @RTable + ' Drop CONSTRAINT [' + @RName + ']') 
 		FETCH NEXT FROM C062 INTO @FTable,@RTable,@RName,@RColumn,@FColumn,@DeleteAction,@UpdateAction 
 	End 
 	CLOSE C062 
 	Deallocate C062 
 	exec('Drop Table '+@Tb) 
 	exec(@TblCr) 
 	declare @TRl nvarchar(Max) 
 	exec('Insert Into ' + @Tb + '('+@OCls+') Select ' + @OCls + ' From TmpTable Order By ' + @Ord) 
 	DECLARE C062 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select FTable,RTable,RName,RColumn,FColumn,DeleteAction,UpdateAction From @Rtn 
 	OPEN C062 
 	FETCH NEXT FROM C062 INTO @FTable,@RTable,@RName,@RColumn,@FColumn,@DeleteAction,@UpdateAction 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		Set @TRl='Alter Table ' + @RTable + ' WITH CHECK ADD CONSTRAINT [' + @RName + '] FOREIGN KEY(['+@RColumn+'])'+char(13)+' REFERENCES '+@FTable+'(['+@FColumn+'])' 
 		if(@UpdateAction>0) 
 			Set @TRl=@TRl+char(13)+'ON UPDATE CASCADE' 
 		if(@DeleteAction>0) 
 			Set @TRl=@TRl+char(13)+'ON DELETE CASCADE' 
 		exec(@TRl) 
 		FETCH NEXT FROM C062 INTO @FTable,@RTable,@RName,@RColumn,@FColumn,@DeleteAction,@UpdateAction 
 	End 
 	CLOSE C062 
 	Deallocate C062 
 	Drop Table TmpTable 
 End
GO
/****** Object:  StoredProcedure [dbo].[Prc063]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc063](@B uniqueidentifier) 
 as begin 
 	declare @D int 
 	Set @D=isnull((Select Max(ID) From TBL028 Where MainGuide=@B),0)+1 
 	declare @Qr nvarchar(1500) 
 	declare @Fn nvarchar(1500) 
 	declare @Gr nvarchar(1000) 
 	declare @Iq nvarchar(1000) 
 	Set @Gr=' Group By ItemGuide,Unit,ExpiryDate,EstablishDate,IsInPut,StoreID,CostCenter,Category01,Category02,Category03,Category04,Category05' 
 	Set @Qr=' Select '''+convert(varchar(100),@B)+''',ItemGuide,Sum(Quantity),Unit,Sum(TotalValue),ExpiryDate,EstablishDate,IsInPut,StoreID,CostCenter,Category01,Category02,Category03,Category04,Category05' 
 	Set @Iq=' Insert Into TBL028(MainGuide,ItemGuide,Quantity,Unit,TotalValue,ExpiryDate,EstablishDate,IsInPut,StoreID,CostCenter,Category01,Category02,Category03,Category04,Category05)' 
 	Set @Fn=' From (Select * From TBL028 Where MainGuide='''+convert(varchar(100),@B)+''') a' 
 	exec(@Iq+@Qr+@Fn+@Gr) 
 	delete from TBL028 Where MainGuide=@B And ID<@D 
 	Set @D=isnull((Select Max(ID) From TBL029 Where MainGuide=@B),0)+1 
 	Set @Gr=' Group By AccountID,CurrencyGuide,ContraAccount,IsInPut,CostCenter' 
 	Set @Qr=' Select '''+convert(varchar(100),@B)+''',AccountID,CurrencyGuide,ContraAccount,Sum(Discount),Sum(Extra),Sum(DiscountToSave),Sum(ExtraToSave),IsInPut,CostCenter' 
 	Set @Iq=' Insert Into TBL029(MainGuide,AccountID,CurrencyGuide,ContraAccount,Discount,Extra,DiscountToSave,ExtraToSave,IsInPut,CostCenter)' 
 	Set @Fn=' From TBL029 Where MainGuide='''+convert(varchar(100),@B)+'''' 
 	exec(@Iq+@Qr+@Fn+@Gr) 
 	delete from TBL029 Where MainGuide=@B And ID<@D 
 	declare @B1 uniqueidentifier 
 	declare @B2 uniqueidentifier 
 	Select @B1=RelatedBill1,@B2=RelatedBill2 From TBL027 Where CardGuide=@B 
 	if(@B1 Is Not Null)exec dbo.Prc051 @B1,Null,Null,Null,Null,Null,Null,Null,Null 
 	if(@B2 Is Not Null)exec dbo.Prc051 @B2,Null,Null,Null,Null,Null,Null,Null,Null 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc064]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc064](@B uniqueidentifier) 
 as begin 
 declare @POS uniqueidentifier 
 declare @BillType uniqueidentifier 
 declare @BillType2 uniqueidentifier 
 declare @PostToAccount uniqueidentifier 
 declare @CurrencyGuide uniqueidentifier 
 declare @StoreGuide uniqueidentifier 
 declare @AgentGuide uniqueidentifier 
 declare @CostCenter uniqueidentifier 
 declare @Project uniqueidentifier 
 declare @Branch uniqueidentifier 
 declare @Rate float 
 declare @DownPayment float 
 declare @ChangeValue float 
 declare @BillDate datetime 
 declare @DoneIn datetime 
 declare @OrderNumber int 
 declare @Notes nvarchar(250) 
 declare @Security tinyint 
 declare @Posted bit 
 Select @POS=MainGuide,@PostToAccount=AccountA1,@CurrencyGuide=CurrencyGuide1,@StoreGuide=StoreGuide1,@AgentGuide=AgentGuide1,@Rate=Rate1, 
 @DownPayment=DownPayment1,@ChangeValue=ChangeValue,@BillDate=InDate,@DoneIn=getdate(),@OrderNumber=IntValue01,@Notes=BuildBillNotes1, 
 @Security=Security,@Posted=Posted,@CostCenter=CostCenter1,@Project=Project1,@Branch=Branch1 From TBL027 Where CardGuide=@B 
 if(@PostToAccount Is Null Or @CurrencyGuide Is Null Or @StoreGuide Is Null Or (Select Count(*) From TBL020 Where CardGuide=@POS)<1) 
 	return 
 Select @BillType=MainBill,@BillType2=MainBill2 From TBL020 Where CardGuide=@POS 
 if(@BillType Is null) 
 	return 
 declare @Tb table(ProductGuide uniqueidentifier,Quantity float,ExtraQuantity float,Unit int,TotalValue float, 
 DiscountValue float,ExtraValue float,TaxValue float,StoreID uniqueidentifier,StatementName nvarchar(255),ExpiryDate datetime, 
 EstablishDate datetime,Weight float,Value float,Length float,Width float,Hieght float,Description nvarchar(250),CostCenter uniqueidentifier, 
 BillCustom1 nvarchar(250),BillCustom2 nvarchar(250),BillCustom3 nvarchar(250),BillCustom4 nvarchar(250),BillCustom5 nvarchar(250), 
 Category01 uniqueidentifier,Category02 uniqueidentifier,Category03 uniqueidentifier,Category04 uniqueidentifier,Category05 uniqueidentifier) 
 	Insert Into @Tb(ProductGuide,Quantity,Unit,TotalValue,DiscountValue,ExtraValue,TaxValue,StoreID,StatementName,ExpiryDate, 
 EstablishDate,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5, 
 Category01,Category02,Category03,Category04,Category05) 
 	Select a.ProductGuide,a.Quantity,a.Unit,a.TotalValue,a.DiscountValue,a.ExtraValue,a.TaxValue,a.StoreID,a.StatementName,a.ExpiryDate, 
 a.EstablishDate,a.Weight,a.Value,a.Length,a.Width,a.Hieght,b.Description,a.CostCenter,a.BillCustom1,a.BillCustom2,a.BillCustom3,a.BillCustom4, 
 a.BillCustom5,a.Category01,a.Category02,a.Category03,a.Category04,a.Category05 
 From 
 	(Select Min(ID) As ID, ProductGuide,Sum(Quantity)As Quantity,Unit,Sum(TotalValue)As TotalValue,Sum(DiscountValue)As DiscountValue, 
 Sum(ExtraValue)As ExtraValue,Sum(TaxValue)As TaxValue,StoreID,StatementName,ExpiryDate,EstablishDate,Sum(Weight)As Weight,Sum(Value)As Value, 
 Sum(Length)As Length,Sum(Width)As Width,Sum(Hieght)As Hieght,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5, 
 Category01,Category02,Category03,Category04,Category05 From Qry038 
 Where MainGuide=@B 
 Group By ProductGuide,Unit,StoreID,StatementName,ExpiryDate,EstablishDate,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5, 
 Category01,Category02,Category03,Category04,Category05) a Left Join TBL028 b On a.ID=b.ID Order By a.ID 
 declare @Bill1 uniqueidentifier 
 declare @Bill2 uniqueidentifier 
 declare @TmpID int 
 if(@BillType Is Not Null) 
 begin 
 	Set @TmpID=(Select Min(ID) From TBL022 Where MainGuide!=@BillType And MainBillGuide=@B) 
 	while(@TmpID Is Not Null) 
 	begin 
 		alter Table TBL022 Disable Trigger Trg067 
 		Update TBL022 Set[MainBillGuide]=Null Where ID=@TmpID 
 		Delete From TBL022 Where MainGuide!=@BillType And MainBillGuide=@B 
 		alter Table TBL022 Enable Trigger Trg067 
 		Set @TmpID=(Select Min(ID) From TBL022 Where MainGuide!=@BillType And MainBillGuide=@B) 
 	end 
 	if((Select Count(*) From TBL022 Where MainGuide=@BillType And MainBillGuide=@B)>1) 
 		Delete From TBL022 Where MainGuide=@BillType And MainBillGuide=@B 
 	else 
 		Set @Bill1=(Select Top 1 CardGuide From TBL022 Where MainGuide=@BillType And MainBillGuide=@B) 
 end 
 if(@BillType2 Is Not Null) 
 begin 
 	Set @TmpID=(Select Min(ID) From TBL022 Where MainGuide!=@BillType2 And MainBillGuide=@B) 
 	while(@TmpID Is Not Null) 
 	begin 
 		alter Table TBL022 Disable Trigger Trg067 
 		Update TBL022 Set[MainBillGuide]=Null Where ID=@TmpID 
 		Delete From TBL022 Where MainGuide!=@BillType2 And MainBillGuide=@B 
 		alter Table TBL022 Enable Trigger Trg067 
 		Set @TmpID=(Select Min(ID) From TBL022 Where MainGuide!=@BillType2 And MainBillGuide=@B) 
 	end 
 	if((Select Count(*) From TBL022 Where MainGuide=@BillType2 And MainBillGuide=@B)>1) 
 		Delete From TBL022 Where MainGuide=@BillType2 And MainBillGuide=@B 
 	else 
 		Set @Bill2=(Select Top 1 CardGuide From TBL022 Where MainGuide=@BillType2 And MainBillGuide=@B) 
 end 
 declare @Bn int 
 declare @Pn int 
 --------------------------------------Generate Sale Bill-------------------------------------- 
 if((Select Count(*) From @Tb Where Quantity>0)>0) 
 begin 
 	alter Table TBL022 Disable Trigger Trg067 
 	if(@Bill1 Is Null) 
 	begin 
 		Set @Bill1=newID() 
 		Set @Bn=IsNull((Select Max(BillNumber) From TBL022 Where MainGuide=@BillType),0)+1 
 		Set @Pn=IsNull((Select Max(BillNumber) From TBL022 Where POSGuide=@POS And MainBillGuide=@B),0)+1 
 		Insert Into TBL022(CardGuide,MainGuide,StoreGuide,BillDate,PayMethod,DoneIn,CurrencyGuide,BillNumber,BillNumber2,OrderNumber,Rate, 
 	DownPayment,Notes,AgentGuide,MainBillGuide,POSGuide,PostToAccount,Security,Posted,CostCenter,Project,Branch,ChangeValue) 
 	Values(@Bill1,@BillType,@StoreGuide,@BillDate,1,@DoneIn,@CurrencyGuide,@Bn,@Pn,@OrderNumber,@Rate,@DownPayment,@Notes,@AgentGuide, 
 	@B,@POS,@PostToAccount,@Security,@Posted,@CostCenter,@Project,@Branch,@ChangeValue) 
 	end 
 	else 
 	begin 
 		Update TBL022 Set[MainGuide]=@BillType,[StoreGuide]=@StoreGuide,[BillDate]=@BillDate,[PayMethod]=1,[DoneIn]=@DoneIn,[CurrencyGuide]=@CurrencyGuide, 
 	[OrderNumber]=@OrderNumber,[Rate]=@Rate,[DownPayment]=@DownPayment,[Notes]=@Notes,[AgentGuide]=@AgentGuide,[MainBillGuide]=@B,[POSGuide]=@POS, 
 	[PostToAccount]=@PostToAccount,[Security]=@Security,[Posted]=@Posted,[CostCenter]=@CostCenter,[Project]=@Project,[Branch]=@Branch,[ChangeValue]=@ChangeValue 
 		Where CardGuide=@Bill1 
 	end 
 	alter Table TBL022 Enable Trigger Trg067 
 	Delete From TBL023 Where MainGuide=@Bill1 
 	Insert Into TBL023(MainGuide,ProductGuide,Quantity,Unit,TotalValue,DiscountValue,ExtraValue,TaxValue,StoreID,StatementName,ExpiryDate, 
 EstablishDate,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5, 
 Category01,Category02,Category03,Category04,Category05) 
 	Select @Bill1,ProductGuide,Quantity,Unit,TotalValue,DiscountValue,ExtraValue,TaxValue,StoreID,StatementName,ExpiryDate, 
 EstablishDate,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5, 
 Category01,Category02,Category03,Category04,Category05 From @Tb Where Quantity>0 
 end 
 --------------------------------------Generate Return Bill-------------------------------------- 
 if((Select Count(*) From @Tb Where Quantity<0)>0) 
 begin 
 	alter Table TBL022 Disable Trigger Trg067 
 	if(@Bill2 Is Null) 
 	begin 
 		Set @Bill2=newID() 
 		Set @Bn=IsNull((Select Max(BillNumber) From TBL022 Where MainGuide=@BillType2),0)+1 
 		Set @Pn=IsNull((Select Max(BillNumber) From TBL022 Where POSGuide=@POS And MainBillGuide=@B),0)+1 
 		Insert Into TBL022(CardGuide,MainGuide,StoreGuide,BillDate,PayMethod,DoneIn,CurrencyGuide,BillNumber,BillNumber2,OrderNumber,Rate, 
 	DownPayment,Notes,AgentGuide,MainBillGuide,POSGuide,PostToAccount,Security,Posted,CostCenter,Project,Branch,ChangeValue) 
 	Values(@Bill2,@BillType2,@StoreGuide,@BillDate,1,@DoneIn,@CurrencyGuide,@Bn,@Pn,@OrderNumber,@Rate,@DownPayment,@Notes,@AgentGuide, 
 	@B,@POS,@PostToAccount,@Security,@Posted,@CostCenter,@Project,@Branch,@ChangeValue) 
 	end 
 	else 
 	begin 
 		Update TBL022 Set[MainGuide]=@BillType2,[StoreGuide]=@StoreGuide,[BillDate]=@BillDate,[PayMethod]=1,[DoneIn]=@DoneIn,[CurrencyGuide]=@CurrencyGuide, 
 	[OrderNumber]=@OrderNumber,[Rate]=@Rate,[DownPayment]=@DownPayment,[Notes]=@Notes,[AgentGuide]=@AgentGuide,[MainBillGuide]=@B,[POSGuide]=@POS, 
 	[PostToAccount]=@PostToAccount,[Security]=@Security,[Posted]=@Posted,[CostCenter]=@CostCenter,[Project]=@Project,[Branch]=@Branch,[ChangeValue]=@ChangeValue 
 		Where CardGuide=@Bill2 
 	end 
 	alter Table TBL022 Enable Trigger Trg067 
 	Delete From TBL023 Where MainGuide=@Bill2 
 	Insert Into TBL023(MainGuide,ProductGuide,Quantity,Unit,TotalValue,DiscountValue,ExtraValue,TaxValue,StoreID,StatementName,ExpiryDate, 
 EstablishDate,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5, 
 Category01,Category02,Category03,Category04,Category05) 
 	Select @Bill2,ProductGuide,Quantity,Unit,TotalValue,DiscountValue,ExtraValue,TaxValue,StoreID,StatementName,ExpiryDate, 
 EstablishDate,Weight,Value,Length,Width,Hieght,Description,CostCenter,BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5, 
 Category01,Category02,Category03,Category04,Category05 From @Tb Where Quantity<0 
 end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc065]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc065](@G uniqueidentifier,@T int) 
 as begin 
 --0:Is Account 
 --1:Is Agent 
 declare @X nvarchar(255) 
 declare @A uniqueidentifier 
 if(@T>0) 
 begin 
 	Select @X=TaxCode,@A=AccountID From TBL016 Where CardGuide=@G 
 	Update TBL004 Set[TaxCode]=@X Where CardGuide=@A 
 end 
 else 
 begin 
 	Set @X=(Select TaxCode From TBL004 Where CardGuide=@G) 
 	DECLARE CPrc065 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select CardGuide From TBL016 Where AccountID=@G 
 	OPEN CPrc065 
 	FETCH NEXT FROM CPrc065 INTO @A 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		Update TBL016 Set[TaxCode]=@X Where CardGuide=@A 
 		FETCH NEXT FROM CPrc065 INTO @A 
 	END 
 	CLOSE CPrc065 
 	Deallocate CPrc065 
 end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc066]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc066] 
 as begin 
 Update TBL023 Set[RecordDate]=a.BillDate,[RecordSecurity]=a.Security From TBL023 Inner Join 
 (Select TBL022.CardGuide as CardGuide,TBL022.BillDate as BillDate,TBL022.Security As Security 
 From TBL023 Inner Join TBL022 On TBL022.CardGuide=TBL023.MainGuide 
 Where TBL023.RecordDate Is Null Or TBL022.BillDate!=TBL023.RecordDate 
 Group By TBL022.CardGuide,TBL022.BillDate,TBL022.Security)a 
 On TBL023.MainGuide=a.CardGuide 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc067]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc067](@Sh int,@Tp bit)  
 as begin  
 return  
 declare @N varchar(5)  
 Set @N=CONVERT(Varchar(5),@Sh)  
 While(LEN(@N)<3)  
 	Set @N='0'+@N  
 declare @T varchar(300)  
 Set @T=(CASE @Tp When 1 Then 'ENABLE' Else 'DISABLE' End)  
 Set @T='ALTER TABLE TBL'+@N+' '+@T+' TRIGGER Trg'  
 if(@Sh=1)  
 begin  
 	exec (@T+'004')  
 	exec (@T+'005')  
 	exec (@T+'006')  
 end  
 else if(@Sh=2)  
 begin  
 	exec (@T+'007')  
 	exec (@T+'008')  
 	exec (@T+'009')  
 end  
 else if(@Sh=4)  
 begin  
 	exec (@T+'010')  
 	exec (@T+'011')  
 	exec (@T+'012')  
 end  
 else if(@Sh=5)  
 begin  
 	exec (@T+'013')  
 	exec (@T+'014')  
 	exec (@T+'015')  
 end  
 else if(@Sh=6)  
 begin  
 	exec (@T+'016')  
 	exec (@T+'017')  
 	exec (@T+'018')  
 end  
 else if(@Sh=7)  
 begin  
 	exec (@T+'019')  
 	exec (@T+'020')  
 	exec (@T+'021')  
 end  
 else if(@Sh=8)  
 begin  
 	exec (@T+'022')  
 	exec (@T+'023')  
 	exec (@T+'024')  
 end  
 else if(@Sh=9)  
 begin  
 	exec (@T+'025')  
 	exec (@T+'026')  
 	exec (@T+'027')  
 end  
 else if(@Sh=10)  
 begin  
 	exec (@T+'028')  
 	exec (@T+'029')  
 	exec (@T+'030')  
 end  
 else if(@Sh=11)  
 begin  
 	exec (@T+'031')  
 	exec (@T+'032')  
 	exec (@T+'033')  
 end  
 else if(@Sh=13)  
 begin  
 	exec (@T+'034')  
 	exec (@T+'035')  
 	exec (@T+'036')  
 end  
 else if(@Sh=15)  
 begin  
 	exec (@T+'037')  
 	exec (@T+'038')  
 	exec (@T+'039')  
 end  
 else if(@Sh=16)  
 begin  
 	exec (@T+'040')  
 	exec (@T+'041')  
 	exec (@T+'042')  
 end  
 else if(@Sh=20)  
 begin  
 	exec (@T+'043')  
 	exec (@T+'044')  
 	exec (@T+'045')  
 end  
 else if(@Sh=22)  
 begin  
 	exec (@T+'001')  
 	exec (@T+'047')  
 	exec (@T+'048')  
 end  
 else if(@Sh=27)  
 begin  
 	exec (@T+'002')  
 end  
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc068]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc068](@Bt uniqueidentifier)
 as begin
 declare @T uniqueidentifier
 declare @D datetime
 Set @T=(Select InstalmentBondGuide From TBL020 Where CardGuide=@Bt)
 if(@T Is Null)
  	return;
 declare @Tb table(CardGuide uniqueidentifier,InsertedIn datetime,CloseDate datetime,BondGuide uniqueidentifier)
 Insert Into @Tb(CardGuide,InsertedIn)
 	Select CardGuide,InsertedIn From TBL022 Where POSGuide=@Bt And CalculatingField Is Null
 declare @Bd table(BondGuide uniqueidentifier,BondDate datetime)
 Insert Into @Bd(BondGuide,BondDate)
 	Select CardGuide,Min(BondDate) From TBL010 Where MainGuide=@T And RelatedBillType=@Bt Group By CardGuide
 Update a Set[CloseDate]=(Select Min(BondDate) From @Bd Where BondDate>=a.InsertedIn) From @Tb a
 Update a Set[BondGuide]=b.BondGuide
 From @Tb a Inner Join @Bd b On a.CloseDate=b.BondDate
 Alter Table TBL022 Disable Trigger All
 Update b Set[CalculatingField]=a.BondGuide From @Tb a
 Inner Join TBL022 b On a.CardGuide=b.CardGuide
 Where a.BondGuide iS Not Null
 Alter Table TBL022 Enable Trigger All
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc069]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc069](@St nvarchar(Max),@V nvarchar(Max) Output)  
 as begin  
 DECLARE @SQLString NVARCHAR(500)  
 DECLARE @ParmDefinition NVARCHAR(500)  
 DECLARE @IntVariable INT  
 DECLARE @Resault varchar(30)  
 SET @SQLString = N'SELECT @ResaultOUT = Convert(varchar(100),('+@St+'))'  
 SET @ParmDefinition = N'@level tinyint,  
                         @ResaultOUT varchar(30) OUTPUT'  
 SET @IntVariable = 35  
 EXECUTE sp_executesql  
 @SQLString,  
 @ParmDefinition,  
 @level = @IntVariable,  
 @ResaultOUT=@Resault OUTPUT  
 Set @V=@Resault  
 End
GO
/****** Object:  StoredProcedure [dbo].[Prc070]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc070](@TblIx int,@Ord nvarchar(255)) As begin  
  	declare @Tb varchar(100)  
  	Set @Tb=Convert(varchar(10),@TblIx)  
  	While(Len(@Tb)<3)  
  		Set @Tb='0'+@Tb  
  	Set @Tb='TBL'+@Tb  
  	declare @TblCr nvarchar(4000)  
  	Set @TblCr=dbo.Fun103(@Tb,'')  
  	declare @Cls nvarchar(4000)  
  	declare @OCls nvarchar(4000)  
  	Set @Cls=''  
  	Set @OCls=''  
  	declare @TC nvarchar(255)  
  	DECLARE C070 CURSOR READ_ONLY FAST_FORWARD FOR  
  		Select Name From syscolumns Where id=(Select id From sysobjects Where name=@Tb)  
  	OPEN C070  
  	FETCH NEXT FROM C070 INTO @TC  
  	WHILE (@@FETCH_STATUS = 0)  
  	BEGIN  
  		if(Len(@Cls)>0)Set @Cls=@Cls+','  
  		Set @Cls=@Cls+@TC  
  		if(@TC Not Like 'id')  
  		begin  
  			if(Len(@OCls)>0)Set @OCls=@OCls+','  
  			Set @OCls=@OCls+@TC  
  		end  
  		FETCH NEXT FROM C070 INTO @TC  
  	End  
  	CLOSE C070  
  	Deallocate C070  
 	declare @LID int  
 	declare @NLID int  
 	declare @Sq nvarchar(4000)  
 	Set @Sq='Select Max(ID)From ' + @Tb  
 	exec dbo.Prc069 @Sq,@LID OUTPUT  
  	declare @RTn table (FTable nvarchar(255),RTable nvarchar(255),RName nvarchar(255),RColumn nvarchar(255),FColumn nvarchar(255),DeleteAction tinyint,UpdateAction tinyint)  
  	Insert into @RTn exec('Select * From dbo.Fun104('''+@Tb+''')')  
  	declare @FTable nvarchar(255)  
  	declare @RTable nvarchar(255)  
  	declare @RName nvarchar(255)  
  	declare @RColumn nvarchar(255)  
  	declare @FColumn nvarchar(255)  
  	declare @DeleteAction tinyint  
  	declare @UpdateAction tinyint  
  	DECLARE C070 CURSOR READ_ONLY FAST_FORWARD FOR  
  		Select FTable,RTable,RName,RColumn,FColumn,DeleteAction,UpdateAction From @RTn  
  	OPEN C070  
  	FETCH NEXT FROM C070 INTO @FTable,@RTable,@RName,@RColumn,@FColumn,@DeleteAction,@UpdateAction  
  	WHILE (@@FETCH_STATUS = 0)  
  	BEGIN  
  		exec('Alter Table ' + @RTable + ' Drop CONSTRAINT [' + @RName + ']')  
  		FETCH NEXT FROM C070 INTO @FTable,@RTable,@RName,@RColumn,@FColumn,@DeleteAction,@UpdateAction  
  	End  
  	CLOSE C070  
  	Deallocate C070  
  	declare @PK nvarchar(4000)  
  	Set @PK=(select name From sysobjects where xtype='PK' And parent_obj=(Select id from sysobjects where name=@Tb))  
  	if(@PK Is Not null)  
  		exec ('Alter Table '+@Tb+' Drop CONSTRAINT ['+@PK+']')  
  	exec('Insert Into '+@Tb+'('+@OCls+') Select '+@OCls+' From '+@Tb+' Order By ' + @Ord)  
 	exec dbo.Prc069 @Sq,@NLID OUTPUT  
 	if(@LID>=@NLID)  
 		return  
  	exec('Delete From '+@Tb+' Where ID<='+@LID)  
  	if(@PK Is Not null)  
  		exec ('ALTER TABLE '+@Tb+' ADD  CONSTRAINT ['+@PK+'] PRIMARY KEY CLUSTERED '+  
 		'( '+  
 		'	[CardGuide] ASC '+  
 		') ON [PRIMARY]')  
  	declare @TRl nvarchar(4000)  
  	DECLARE C070 CURSOR READ_ONLY FAST_FORWARD FOR  
  		Select FTable,RTable,RName,RColumn,FColumn,DeleteAction,UpdateAction From @RTn  
  	OPEN C070  
  	FETCH NEXT FROM C070 INTO @FTable,@RTable,@RName,@RColumn,@FColumn,@DeleteAction,@UpdateAction  
  	WHILE (@@FETCH_STATUS = 0)  
  	BEGIN  
  		Set @TRl='Alter Table ' + @RTable + ' WITH CHECK ADD CONSTRAINT [' + @RName + '] FOREIGN KEY(['+@RColumn+'])'+char(13)+' REFERENCES '+@FTable+'(['+@FColumn+'])'  
  		if(@UpdateAction>0)  
  			Set @TRl=@TRl+char(13)+'ON UPDATE CASCADE'  
  		if(@DeleteAction>0)  
  			Set @TRl=@TRl+char(13)+'ON DELETE CASCADE'  
  		exec(@TRl)  
  		FETCH NEXT FROM C070 INTO @FTable,@RTable,@RName,@RColumn,@FColumn,@DeleteAction,@UpdateAction  
  	End  
  	CLOSE C070  
  	Deallocate C070  
  End
GO
/****** Object:  StoredProcedure [dbo].[Prc071]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc071](@P uniqueidentifier) 
 as begin 
 	if((Select Count(*) From TBL026 Where CardGuide=@P)>0) 
 	begin 
 		Update TBL026 Set[BillName]=TBL020.InvoiceName,[BillLatinName]=TBL020.LatinName,[BuildBillTypeGuide1]=TBL020.MainBill,[BuildBillTypeGuide2]=TBL020.MainBill2 
 		From TBL026 Inner Join TBL020 On TBL026.CardGuide=TBL020.CardGuide 
 		Where TBL026.CardGuide=@P 
 	end 
 	else 
 	begin 
 		Insert Into TBL026(CardGuide,BillType,BillName,BillLatinName,BuildBillTypeGuide1,BuildBillTypeGuide2) 
 		Select CardGuide,10,InvoiceName,LatinName,MainBill,MainBill2 From TBL020 Where CardGuide=@P 
 	end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc072]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc072](@G uniqueidentifier) 
 as begin 
 declare @Ag uniqueidentifier 
 declare @RelatedCard uniqueidentifier 
 declare @Category01 uniqueidentifier 
 declare @Category02 uniqueidentifier 
 declare @Category03 uniqueidentifier 
 declare @RelatedCard3 uniqueidentifier 
 declare @BitValue1 bit 
 declare @BitValue2 bit 
 declare @BitValue3 bit 
 declare @BitValue4 bit 
 declare @BitValue5 bit 
 declare @BitValue6 bit 
 declare @BitValue7 bit 
 declare @BitValue8 bit 
 declare @BitValue9 bit 
 declare @Date01 datetime 
 declare @Date02 datetime 
 declare @Date03 datetime 
 declare @TextValue01 nvarchar(255) 
 declare @TextValue02 nvarchar(255) 
 declare @TextValue03 nvarchar(255) 
 declare @IntValue02 int 
 declare @NumberValue01 float 
 declare @NumberValue02 float 
 declare @NumberValue03 float 
 declare @NumberValue05 float 
 declare @NumberValue06 float 
 Select @Ag=AgentGuide,@BitValue1=BitValue1,@BitValue2=BitValue2,@BitValue3=BitValue3,@BitValue4=BitValue4, 
 	@BitValue5=BitValue5,@BitValue6=BitValue6,@BitValue7=BitValue7,@BitValue8=BitValue8,@BitValue9=BitValue9,@Category01=Category01,@Category02=Category02, 
 	@Category03=Category03,@Date01=Date01,@Date02=Date02,@TextValue01=TextValue01,@TextValue02=TextValue02, 
 	@TextValue03=TextValue03,@RelatedCard=RelatedCard,@NumberValue01=NumberValue01,@IntValue02=IntValue02, 
 	@NumberValue02=NumberValue02,@NumberValue03=NumberValue03,@NumberValue05=NumberValue05,@NumberValue06=NumberValue06, 
 	@RelatedCard3=RelatedCard3 
 From TBL014 Where CardGuide=@G 
 if(@Ag Is Null) 
 	return 
 declare @TG uniqueidentifier 
 Set @TG=(Select Top 1 CardGuide From TBL014 Where CardType=4 And AgentGuide=@Ag And Date02= 
 	(Select Max(Date02) From TBL014 Where CardType=4 And AgentGuide=@Ag)) 
 if(@TG Is Not Null And @TG<>@G) 
 	Set @G=@TG 
 Update TBL016 Set[RelatedAdministration]=IsNull(@RelatedCard,RelatedAdministration),[BitValue1]=@BitValue1, 
 [BitValue2]=@BitValue2,[BitValue3]=@BitValue3,[BitValue4]=@BitValue4,[BitValue5]=@BitValue5,[BitValue6]=@BitValue6, 
 [BitValue7]=@BitValue7,[BitValue8]=@BitValue8,[BitValue9]=@BitValue9,[FixedSalary]=@NumberValue01,[FloatValue1]=@NumberValue02,[FloatValue2]=@NumberValue03, 
 [FloatValue3]=@NumberValue05,[FloatValue4]=@NumberValue06,[NumberValue1]=@IntValue02,[DateValue1]=@Date01,[DateValue2]=@Date02, 
 [RelatedAdministration2]=@RelatedCard3 
 Where CardGuide=@Ag 
 Delete From TBL092 Where AgentGuide=@Ag And(TypeID=200 Or TypeID=201) 
 Insert Into TBL092(AgentGuide,TypeID,Category01,Category02,Category03,Category04,Category05,IntValue01,Notes,LongText01,LongText02) 
 	Select @Ag,TypeID,Category01,Category02,Category03,Category04,Category05,IntValue01,TextValue01,LongText01,LongText02 From TBL114 
 	Where MainGuide=@G And(TypeID=200 Or TypeID=201) Order By ID 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc073]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc073](@Ag uniqueidentifier,@Im uniqueidentifier) 
 as begin 
 if(@Ag Is Null)return 
 declare @ID int 
 declare @Date datetime 
 Set @Date=(Select Max(TBL022.BillDate)From TBL022 inner Join TBL023 On TBL022.CardGuide=TBL023.MainGuide Inner Join TBL020 On TBL020.CardGuide=TBL022.MainGuide 
 Where TBL022.AgentGuide=@Ag And TBL023.ProductGuide=@Im And TBL020.AffectCostomerPrice>0 And TBL023.TotalValue>0) 
 if(@Date Is Null)return 
 Set @ID=(Select Max(TBL023.ID)From TBL022 inner Join TBL023 On TBL022.CardGuide=TBL023.MainGuide Inner Join TBL020 On TBL020.CardGuide=TBL022.MainGuide 
 Where TBL022.AgentGuide=@Ag And TBL023.ProductGuide=@Im And TBL020.AffectCostomerPrice>0 And TBL022.BillDate=@Date And TBL023.TotalValue>0) 
 if(@ID Is Not Null) 
 Delete From TBL074 Where PriceType=16 And AgentGuide=@Ag And ItemGuide=@Im 
 Insert Into TBL074(PriceType,LastCalulatedDate,ItemUnit,ItemGuide,PriceValue,AgentGuide,DiscountRation,ExtraRatio,CurrencyGuide,PriceRate) 
 	Select 16,@Date,TBL023.Unit,TBL023.ProductGuide,TBL023.TotalValue/TBL023.Quantity ,@Ag ,dbo.Ratio(TBL023.DiscountValue,TBL023.TotalValue)*100,dbo.Ratio(TBL023.ExtraValue,TBL023.TotalValue)*100,TBL022.CurrencyGuide,TBL022.Rate From TBL023 Inner Join TBL022 On TBL023.MainGuide=TBL022.CardGuide Where TBL023.ID=@ID 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc074]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc074] 
 as begin 
 Alter Table TBL014 Disable Trigger All 
 Update TBL014 Set[CalcDate01]=dbo.Fun129(Date03),[CalcDate02]=dbo.Fun129(Date04) Where ((CardType=3 Or CardType=16) And BitValue8>0)
 Alter Table TBL014 Enable Trigger All 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc075]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc075](@Ag uniqueidentifier) 
 as begin 
 	declare @NotActive bit 
 	declare @DefCostCenter uniqueidentifier 
 	declare @DefProject uniqueidentifier 
 	declare @DefBranch uniqueidentifier 
 	declare @DefCurrency uniqueidentifier 
 	declare @AcName nvarchar(255) 
 	declare @AcLatinName nvarchar(255) 
 	declare @Ac uniqueidentifier 
 	declare @MaxDebit float 
 	declare @MaxCredit float 
 	declare @NotepaperMaxDebit float 
 	declare @NotepaperMaxCredit float 
 	Select @Ac=AccountID,@AcName=AgentName,@MaxDebit=MaxDebit,@MaxCredit=MaxCredit,@NotepaperMaxDebit=NotepaperMaxDebit,@NotepaperMaxCredit=NotepaperMaxCredit,@AcLatinName=LatinName,@NotActive=NotActive, 
 	@DefCostCenter=CostCenter,@DefProject=Project,@DefBranch=Branch,@DefCurrency=DefaultCurrency From TBL016 Where CardGuide=@Ag 
 	if((Select Count(*) From TBL016 Where AccountID=@Ac)=1) 
 	begin 
 		Alter Table TBL004 Disable Trigger All 
 		Update TBL004 Set[AccountName]=@AcName,[MaxDebit]=@MaxDebit,[MaxCredit]=@MaxCredit,[NotepaperMaxDebit]=@NotepaperMaxDebit,[NotepaperMaxCredit]=@NotepaperMaxCredit, 
 		[LatinName]=@AcLatinName,[NotActive]=@NotActive,[DefaultCurrency]=@DefCurrency, 
 [DefaultCostCenter]=@DefCostCenter,[DefaultProject]=@DefProject,[DefaultBranch]=@DefBranch 
 		Where CardGuide=@Ac 
 		Alter Table TBL004 Enable Trigger All 
 	end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc076]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc076](@G uniqueidentifier) 
 as begin 
 declare @CardDate datetime 
 declare @BType uniqueidentifier 
 declare @Agent uniqueidentifier 
 declare @BondCurrency uniqueidentifier 
 declare @Option01 int 
 Select @CardDate=CardDate2,@BType=MainGuide,@Agent=AgentGuide,@BondCurrency=CurrencyGuide From TBL120 Where CardGuide=@G 
 declare @BuildBond bit 
 declare @BondType uniqueidentifier 
 declare @ContraAc uniqueidentifier 
 Select @BuildBond=AutoBuildBond,@BondType=BondGuide,@ContraAc=DefaultAccount,@BondCurrency=IsNull(@BondCurrency,DefaultCurrency),@Option01=Option01 From TBL119 Where CardGuide=@BType 
 if(@BuildBond=0 Or @BondType Is Null Or @Agent Is Null Or @CardDate Is Null) 
  	return 
 declare @Ac uniqueidentifier 
 Select @Ac=AccountID From TBL016 Where CardGuide=@Agent 
 Select @ContraAc=IsNull(@ContraAc,DefaultAccount),@BondCurrency=IsNull(@BondCurrency,DefaultCurrency) From TBL009 Where CardGuide=@BondType 
 if(@ContraAc Is Null Or @BondCurrency Is Null) 
  	return 
 declare @NewNum int 
 Set @NewNum=IsNull((Select Max(BondNumber) From TBL010 Where MainGuide=@BondType),0)+1 
 declare @B uniqueidentifier 
 Set @B=NEWID() 
 declare @Rate float 
 Set @Rate=dbo.Fun086(@BondCurrency) 
 Delete From TBL010 Where DynamicBond=@G 
 Insert Into TBL010(CardGuide,MainGuide,DynamicBond,BondNumber,BondDate,CurrencyGuide,Rate) 
  	Values(@B,@BondType,@G,@NewNum,@CardDate,@BondCurrency,@Rate) 
 declare @CreditRate float 
 declare @DebitRate float 
 declare @Notes nvarchar(Max) 
 declare @Credit float 
 declare @Debit float 
 declare @AccountGuide uniqueidentifier 
 declare @CurrencyGuide uniqueidentifier 
 DECLARE CPrc076 CURSOR READ_ONLY FAST_FORWARD FOR 
  	Select CreditRate,DebitRate,Description,Credit,Debit,AccountGuide,IsNull(CurrencyGuide,@BondCurrency) From TBL121 Where MainGuide=@G 
 OPEN CPrc076 
 FETCH NEXT FROM CPrc076 INTO @CreditRate,@DebitRate,@Notes,@Credit,@Debit,@AccountGuide,@CurrencyGuide 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
  	if((@CreditRate+@DebitRate)>0) 
  	begin 
  		if(@AccountGuide Is Null)Set @AccountGuide=@ContraAc 
  		if((@Credit+@Debit)=0) 
  		begin 
  			declare @Rt float 
  			if(@CurrencyGuide=@BondCurrency) 
  				Set @Rt=@Rate 
  			else 
  				Set @Rt=dbo.Fun086(@CurrencyGuide) 
  		end 
 		if(@Option01>0) 
 		begin 
  			Insert Into TBL038(MainGuide,AccountGuide,ContraAccount,Debit,Credit,DebitRate,CreditRate,CurrencyGuide,Notes) 
  				Values(@B,@AccountGuide,@Ac,@Debit,@Credit,@DebitRate,@CreditRate,@CurrencyGuide,@Notes) 
  			Insert Into TBL038(MainGuide,AccountGuide,ContraAccount,Credit,Debit,CreditRate,DebitRate,CurrencyGuide,Notes) 
  				Values(@B,@Ac,@AccountGuide,@Debit,@Credit,@DebitRate,@CreditRate,@CurrencyGuide,@Notes) 
 		end 
 		else 
 		begin 
  			Insert Into TBL038(MainGuide,AccountGuide,ContraAccount,Debit,Credit,DebitRate,CreditRate,CurrencyGuide,Notes) 
  				Values(@B,@Ac,@AccountGuide,@Debit,@Credit,@DebitRate,@CreditRate,@CurrencyGuide,@Notes) 
  			Insert Into TBL038(MainGuide,AccountGuide,ContraAccount,Credit,Debit,CreditRate,DebitRate,CurrencyGuide,Notes) 
  				Values(@B,@AccountGuide,@Ac,@Debit,@Credit,@DebitRate,@CreditRate,@CurrencyGuide,@Notes) 
 		end 
  	end 
  	FETCH NEXT FROM CPrc076 INTO @CreditRate,@DebitRate,@Notes,@Credit,@Debit,@AccountGuide,@CurrencyGuide 
 END 
 CLOSE CPrc076 
 Deallocate CPrc076 
 if((Select Count(*) From TBL038 Where MainGuide=@B)>0) 
  	exec dbo.Prc027 @B,0 
 else 
  	Delete From TBL010 Where CardGuide=@B 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc077]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc077](@G uniqueidentifier) 
 as begin 
 declare @Tp uniqueidentifier 
 declare @AutoBuild bit 
 Set @Tp=(Select ValueKey From TBL053 Where OptionName='AssetsFinancialTransactionsBond') 
 Set @AutoBuild=(Select Value From TBL053 Where OptionName='AssetsGenerateBond') 
 Delete From TBL010 Where DynamicBond=@G 
 if((Select Count(*) From TBL009 Where CardGuide=@Tp)<1 Or @AutoBuild<1) 
 return 
 declare @MG uniqueidentifier 
 declare @MainCardDate datetime 
 declare @MainCurrency uniqueidentifier 
 declare @MainAc uniqueidentifier 
 declare @MainRate float 
 declare @MainCostCenter uniqueidentifier 
 declare @MainProject uniqueidentifier 
 declare @MainBranch uniqueidentifier 
 declare @MainNotes nvarchar(Max) 
 declare @CardDate datetime 
 declare @Ac uniqueidentifier 
 declare @Currency uniqueidentifier 
 declare @ContraAc uniqueidentifier 
 declare @Debit float 
 declare @DebitRate float 
 declare @Credit float 
 declare @CreditRate float 
 declare @CostCenter uniqueidentifier 
 declare @Project uniqueidentifier 
 declare @Branch uniqueidentifier 
 declare @Notes nvarchar(Max) 
 declare @FinanceIsYear int 
 declare @FinanceStartDate int 
 declare @FinanceCloseDate int 
 Select @FinanceIsYear=dbo.Fun004(0),@FinanceStartDate=dbo.Fun004(1),@FinanceCloseDate=dbo.Fun004(2) 
 Select @MG=MainGuide,@MainCurrency=CurrencyGuide,@MainCardDate=CardDate,@MainRate=Rate,@MainAc=AccountGuide,@MainCostCenter=CostCenter,@MainProject=Project,@MainBranch=Branch,@MainNotes=Notes From TBL120 Where CardGuide=@G 
 declare @MainTp int 
 Select @MainTp=CardMode From TBL009 Where CardGuide=@Tp 
 if(@MainTp<>0 And @MainTp<>1) 
 return 
 DECLARE CPrc077 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select IsNull(CardDate,@MainCardDate),IsNull(@MainCurrency,CurrencyGuide),AccountGuide,Debit,DebitRate,Credit,CreditRate,IsNull(ContraAccount,@MainAc),IsNull(CostCenter,@MainCostCenter),IsNull(Project,@MainProject),IsNull(Branch,@MainBranch),IsNull(Notes,@MainNotes) From TBL121 Where MainGuide=@G And RecordActivated=1 Order By ID 
 OPEN CPrc077 
 FETCH NEXT FROM CPrc077 INTO @CardDate,@Currency,@Ac,@Debit,@DebitRate,@Credit,@CreditRate,@ContraAc,@CostCenter,@Project,@Branch,@Notes 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 if(@CardDate Is Not Null And @Ac Is Not Null And @Currency Is Not Null And @ContraAc Is Not Null And @MainRate>0 And ((@Debit>0 And @DebitRate>0) Or(@Credit>0 And @CreditRate>0)) ) 
 begin 
 	if(@FinanceIsYear=0 Or (@CardDate>=@FinanceStartDate And (@FinanceCloseDate<1 Or @CardDate<(@FinanceCloseDate+1)))) 
 	begin 
  		declare @NG uniqueidentifier 
  		declare @Nmb int 
  		Set @NG=NEWID() 
  		Set @Nmb=IsNull((Select Max(BondNumber)From TBL010 Where MainGuide=@Tp),0)+1 
  		Insert Into TBL010(MainGuide,DynamicBond,CardGuide,BondNumber,BondDate,CurrencyGuide,Rate,AccountGuide,CostCenter,Project,Branch,Notes) 
  			Values(@Tp,@G,@NG,@Nmb,@CardDate,@Currency,@MainRate,@ContraAc,@MainCostCenter,@MainProject,@MainBranch,@MainBranch) 
  		Delete From TBL038 Where MainGuide=@NG 
  		if(@MainTp=0)--Normal 
  		begin 
  			Insert Into TBL038(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,Credit,CreditRate,ContraAccount,CostCenter,Project,Branch,Notes) 
  				Values(@NG,@Ac,@Currency,@Debit,@DebitRate,@Credit,@CreditRate,@ContraAc,@CostCenter,@Project,@Branch,@Notes) 
  		end 
  		else if(@MainTp=1)--Entry Type 
  		begin 
  			Insert Into TBL038(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,Credit,CreditRate,ContraAccount,CostCenter,Project,Branch,Notes) 
  				Values(@NG,@Ac,@Currency,@Debit,@DebitRate,@Credit,@CreditRate,@ContraAc,@CostCenter,@Project,@Branch,@Notes) 
  			Insert Into TBL038(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,Credit,CreditRate,ContraAccount,CostCenter,Project,Branch,Notes) 
  				Values(@NG,@ContraAc,@Currency,@Credit,@CreditRate,@Debit,@DebitRate,@Ac,@CostCenter,@Project,@Branch,@Notes) 
  		end 
 	end 
  	exec dbo.Prc027 @NG,0 
 end 
 FETCH NEXT FROM CPrc077 INTO @CardDate,@Currency,@Ac,@Debit,@DebitRate,@Credit,@CreditRate,@ContraAc,@CostCenter,@Project,@Branch,@Notes 
 END 
 CLOSE CPrc077 
 Deallocate CPrc077 
 End
GO
/****** Object:  StoredProcedure [dbo].[Prc078]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc078](@G uniqueidentifier) 
 as begin 
 	declare @AdjustRulesyEntringTimes bit 
 	declare @FromTime datetime 
 	declare @ToTime datetime 
 	Select @AdjustRulesyEntringTimes=BitValue10,@FromTime=dbo.GetTime(Date01),@ToTime=dbo.GetTime(Date02) From TBL014 Where CardGuide=@G 
 	if(@AdjustRulesyEntringTimes>0) 
 	begin 
 		Delete From TBL114 Where MainGuide=@G And (TypeID=1 Or TypeID=2 Or TypeID=3 Or TypeID=4 Or TypeID=7) 
                      
 		Insert Into TBL114(MainGuide,TypeID,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01) 
 			Select @G,7,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01 From TBL114 Where MainGuide=@G And TypeID=12 Order By ID 
                      
 		if(@FromTime Is Not Null) 
 		begin 
 		 
 			--Early Entrance 
 			Insert Into TBL114(MainGuide,TypeID,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01) 
 				Select @G,1,IntValue01,dbo.TimeDifference(dbo.GetTime(DateValue01),@FromTime), 
 				dbo.TimeDifference(dbo.GetTime(DateValue02),@FromTime), 
 				IntValue02,TextValue01,NumberValue01 From TBL114 Where MainGuide=@G And TypeID=8 Order By ID 
 				 
 			--Late Entrance 
 			Insert Into TBL114(MainGuide,TypeID,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01) 
 				Select @G,3,IntValue01,dbo.TimeDifference(@FromTime,dbo.GetTime(DateValue01)), 
 				dbo.TimeDifference(@FromTime,dbo.GetTime(DateValue02)), 
 				IntValue02,TextValue01,NumberValue01 From TBL114 Where MainGuide=@G And TypeID=10 Order By ID 
 				 
 		end 
 		if(@ToTime Is Not Null) 
 		begin 
 		 
 			--Late Leave 
 			Insert Into TBL114(MainGuide,TypeID,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01) 
 				Select @G,2,IntValue01,dbo.TimeDifference(@ToTime,dbo.GetTime(DateValue01)), 
 				dbo.TimeDifference(@ToTime,dbo.GetTime(DateValue02)), 
 				IntValue02,TextValue01,NumberValue01 From TBL114 Where MainGuide=@G And TypeID=9 Order By ID 
 				 
 			--Early Leave 
 			Insert Into TBL114(MainGuide,TypeID,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01) 
 				Select @G,4,IntValue01,dbo.TimeDifference(dbo.GetTime(DateValue01),@ToTime), 
 				dbo.TimeDifference(dbo.GetTime(DateValue02),@ToTime), 
 				IntValue02,TextValue01,NumberValue01 From TBL114 Where MainGuide=@G And TypeID=11 Order By ID 
 				 
 		end 
 	end 
 	else 
 	begin 
 		Delete From TBL114 Where MainGuide=@G And (TypeID=8 Or TypeID=9 Or TypeID=10 Or TypeID=11 Or TypeID=12) 
                      
 		Insert Into TBL114(MainGuide,TypeID,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01) 
 			Select @G,12,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01 From TBL114 Where MainGuide=@G And TypeID=7 Order By ID 
                      
 		if(@FromTime Is Not Null) 
 		begin 
 		 
 			--Early Entrance 
 			Insert Into TBL114(MainGuide,TypeID,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01) 
 				Select @G,8,IntValue01,DATEADD(Second,dbo.TimeSeconds(dbo.GetTime(DateValue01))*-1,@FromTime), 
 				DATEADD(Second,dbo.TimeSeconds(dbo.GetTime(DateValue02))*-1,@FromTime), 
 				IntValue02,TextValue01,NumberValue01 From TBL114 Where MainGuide=@G And TypeID=1 Order By ID 
 				 
 			--Late Entrance 
 			Insert Into TBL114(MainGuide,TypeID,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01) 
 				Select @G,10,IntValue01,DATEADD(Second,dbo.TimeSeconds(dbo.GetTime(DateValue01)),@FromTime), 
 				DATEADD(Second,dbo.TimeSeconds(dbo.GetTime(DateValue02)),@FromTime), 
 				IntValue02,TextValue01,NumberValue01 From TBL114 Where MainGuide=@G And TypeID=3 Order By ID 
 				 
 		end 
 		if(@ToTime Is Not Null) 
 		begin 
 		 
 			--Late Leave 
 			Insert Into TBL114(MainGuide,TypeID,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01) 
 				Select @G,9,IntValue01,DATEADD(Second,dbo.TimeSeconds(dbo.GetTime(DateValue01)),@ToTime), 
 				DATEADD(Second,dbo.TimeSeconds(dbo.GetTime(DateValue02)),@ToTime), 
 				IntValue02,TextValue01,NumberValue01 From TBL114 Where MainGuide=@G And TypeID=2 Order By ID 
 				 
 			--Early Leave 
 			Insert Into TBL114(MainGuide,TypeID,IntValue01,DateValue01,DateValue02,IntValue02,TextValue01,NumberValue01) 
 				Select @G,11,IntValue01,DATEADD(Second,dbo.TimeSeconds(dbo.GetTime(DateValue01))*-1,@ToTime), 
 				DATEADD(Second,dbo.TimeSeconds(dbo.GetTime(DateValue02))*-1,@ToTime), 
 				IntValue02,TextValue01,NumberValue01 From TBL114 Where MainGuide=@G And TypeID=4 Order By ID 
 				 
 		end	
 	end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc079]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc079](@G uniqueidentifier) 
 as begin 
 declare @BTp uniqueidentifier 
 Set @BTp =(Select ValueKey From TBL053 Where OptionName='HRRefinementBond') 
 if(@BTp Is Null)return 
 declare @BondNumber int 
 Set @BondNumber=(Select Min(BondNumber) From TBL010 Where RelatedAdministration=@G) 
 Delete From TBL010 Where RelatedAdministration=@G 
 declare @BondAc uniqueidentifier 
 Set @BondAc=(Select Top 1 ValueKey From TBL053 Where OptionName='HRRefinementContraAccount') 
 if(@BondAc Is Null)return 
 declare @CardMode int 
 declare @Currency uniqueidentifier 
 declare @Rate float 
 declare @CardDate datetime 
 declare @Notes nvarchar(Max) 
 declare @Ag uniqueidentifier 
 declare @Ac uniqueidentifier 
 declare @BitValue4 bit 
 declare @Currency02 uniqueidentifier 
 declare @Account02 uniqueidentifier 
 declare @PayValue float 
 declare @PayRate float 
 declare @PayValueRate float 
 declare @PayDate datetime 
 declare @PayNotes nvarchar(Max) 
 Select @CardDate=Date01,@Ag=AgentGuide,@Notes=Notes,@BitValue4=BitValue4, 
 @Currency02=CurrencyGuide02,@Account02=AccountGuide02,@PayValue=NumberValue03,@PayRate=NumberValue04,@PayValueRate=NumberValue05,@PayDate=Date04,@PayNotes=TextValue02 
 From TBL014 Where CardGuide=@G 
 if(@Ag Is Null)return 
 Set @Ac=(Select AccountID From TBL016 Where CardGuide=@Ag) 
 Select @Currency=DefaultCurrency,@Notes=Notes From TBL009 Where CardGuide=@BTp 
 if(@Currency Is Null) 
 	Set @Currency=(Select CardGuide From TBL001 Where ID=(Select Min(ID) From TBL001)) 
 Set @Rate=dbo.Fun006(@Currency,null,@CardDate) 
 declare @N uniqueidentifier 
 Set @N=NEWID() 
 if(@BondNumber Is Null) 
 begin 
 	Set @BondNumber=IsNull((Select Max(BondNumber) From TBL010 Where MainGuide=@BTp),0)+1 
 end 
 Insert Into TBL010(CardGuide,RelatedAdministration,MainGuide,CurrencyGuide,Rate,AccountGuide,BondNumber,BondDate,Notes) 
 	Values(@N,@G,@BTp,@Currency,@Rate,@BondAc,@BondNumber,@CardDate,@Notes) 
 declare @TypeID int 
 declare @NumberValue01 float 
 declare @NumberValue02 float 
 declare @NumberValue03 float 
 declare @NumberValue04 float 
 declare @NumberValue05 float 
 declare @TextValue01 nvarchar(250) 
 declare @TextValue02 nvarchar(250) 
 declare @Value float 
 DECLARE CKPrc079 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select TypeID,NumberValue01,NumberValue02,NumberValue03,NumberValue04,NumberValue05,TextValue01,TextValue02 From TBL114 Order By ID 
 OPEN CKPrc079 
 FETCH NEXT FROM CKPrc079 INTO @TypeID,@NumberValue01,@NumberValue02,@NumberValue03,@NumberValue04,@NumberValue05,@TextValue01,@TextValue02 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	if(@TypeID=201) 
 	begin 
 		Set @Value=@NumberValue05 
 		if(@Value>0) 
 		begin 
 			Insert Into TBL038(MainGuide,AccountGuide,CurrencyGuide,Credit,CreditRate,Notes) 
 				Values(@N,@Ac,@Currency,@Value,@Value,@TextValue01) 
 		end 
 		else if(@Value<0) 
 		begin 
 			Set @Value=@Value*-1 
 			Insert Into TBL038(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,Notes) 
 				Values(@N,@Ac,@Currency,@Value,@Value,@TextValue01) 
 		end 
 	end 
 	FETCH NEXT FROM CKPrc079 INTO @TypeID,@NumberValue01,@NumberValue02,@NumberValue03,@NumberValue04,@NumberValue05,@TextValue01,@TextValue02 
 END 
 CLOSE CKPrc079 
 Deallocate CKPrc079 
 if((Select Count(*) From TBL038 Where MainGuide=@N)=0) 
 	Delete From TBL010 Where CardGuide=@N 
 else 
 	exec dbo.Prc027 @N,0 
 if(@Currency02 Is Not Null And @Account02 Is Not Null And @PayValue>0 And @PayRate>0 And @PayValueRate>0 And @PayDate Is Not null) 
 begin 
 	declare @PayBond uniqueidentifier 
 	Set @PayBond=(Select Top 1 ValueKey From TBL053 Where OptionName='HRRefinementPaymentsBond') 
 	if(@PayBond Is Not Null) 
 	begin 
 		declare @PG uniqueidentifier 
 		Set @PG=NEWID() 
 		declare @PN int 
 		Set @PN=IsNull((Select Max(BondNumber) From TBL010 Where MainGuide=@PayBond),0)+1 
 		Insert Into TBL010(CardGuide,RelatedAdministration,MainGuide,BondNumber,BondDate,AccountGuide,CurrencyGuide,Rate,Notes) 
 			Values(@PG,@G,@PayBond,@PN,@PayDate,@Account02,@Currency02,@Rate,@Notes) 
 		Insert Into TBL038(MainGuide,AccountGuide,CurrencyGuide,Debit,DebitRate,Notes) 
 			Values(@PG,@Ac,@Currency,@PayValueRate,@PayValue,@Notes) 
 		exec dbo.Prc027 @PG,0 
 	end 
 end 
 if(@BitValue4=1) 
 begin 
 	Update c Set[CollectDate]=@CardDate,[Collected]=1 From TBL009 a 
 	Inner Join TBL010 b On a.CardGuide=b.MainGuide 
 	Inner Join TBL038 c On b.CardGuide=c.MainGuide 
 	Where a.CardMode=2 And a.BondType=3 
 	And c.CollectDate Is Null 
 	And b.AgentGuide=@Ag 
 end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc080]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc080](@G uniqueidentifier) 
 as begin 
 	declare @CardType int 
 	Set @CardType=(Select CardType From TBL014 Where CardGuide=@G) 
 	if(@CardType=7) 
 		exec dbo.Prc079 @G 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc081]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc081](@G uniqueidentifier) 
 as begin 
 	declare @GenerateVacationCard bit 
 	declare @Cutoutdays int 
 	declare @VacationType uniqueidentifier 
 	declare @StoppingDate datetime 
 	declare @BiggingDate datetime 
 	declare @AgentGuide uniqueidentifier 
 	Select @GenerateVacationCard=a.BitValue2,@Cutoutdays=a.IntValue02,@VacationType=a.RelatedCard3, 
 	@BiggingDate=a.Date01,@StoppingDate=b.Date01,@AgentGuide=a.AgentGuide From TBL014 a 
 	Inner Join TBL014 b On a.RelatedCard2=b.CardGuide 
 	Where a.CardGuide=@G 
 	if(@GenerateVacationCard=0 Or @Cutoutdays<1 Or @AgentGuide Is Null Or @VacationType Is Null Or @StoppingDate Is Null Or @BiggingDate Is Null) 
 		return 
 	declare @V uniqueidentifier 
 	Set @V=(Select CardGuide From TBL014 Where RelatedCard3=@G And CardType=3) 
 	declare @CName nvarchar(255) 
 	Set @CName=(Select CardName From TBL014 Where CardGuide=@VacationType) 
 	if(@V Is Null) 
 	begin 
 		declare @CardNumber int 
 		Set @CardNumber=IsNull((Select Max(IntValue01) From TBL014 Where CardType=3),0)+1 
 		Set @V=NEWID() 
 		Insert Into TBL014(CardType,CardGuide,AgentGuide,RelatedCard3,IntValue01,WindowType,RelatedCard,CardName) 
 			Values(3,@V,@AgentGuide,@G,@CardNumber,0,@VacationType,@CName) 
 	end 
 	Update TBL014 Set[WindowType]=0,[AgentGuide]=@AgentGuide,[Date01]=@StoppingDate,[Date02]=@BiggingDate,[RelatedCard]=@VacationType, 
 	[BitValue8]=1,[CardName]=@CName,[RelatedCard2]=@G Where CardGuide=@V 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc082]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc082](@G uniqueidentifier) 
 as begin 
 	declare @StartDate datetime 
 	declare @EndDate datetime 
 	declare @TempStartDate datetime 
 	declare @TempEndDate datetime 
 	declare @Cnt int 
 	declare @TmpCnt int 
 	Select @Cnt=Count(*),@StartDate=Max(Date01),@EndDate=Max(Date02) From TBL014 Where CardType=4 And AgentGuide=@G 
 	Select @TempEndDate=Max(Date01),@TmpCnt=Count(*) From (Select a.Date01 From TBL014 a Left Join TBL014 b On a.CardGuide=b.RelatedCard2 
 	Where (a.CardType=21 Or a.CardType=7) And a.AgentGuide=@G And b.ID Is Null )a 
 	Set @Cnt=IsNull(@Cnt,0)+IsNull(@TmpCnt,0) 
 	Select @TempStartDate=Max(Date01),@TmpCnt=Count(*) From TBL014 Where CardType=14 And AgentGuide=@G And BitValue1=0 
 	Set @Cnt=IsNull(@Cnt,0)+IsNull(@TmpCnt,0) 
 	if(@TempEndDate Is Not Null And IsNull(@Cnt,0)>0) 
 	begin 
 		if(@EndDate Is Null) 
 			Set @EndDate=@TempEndDate 
 		else if @EndDate<@TempEndDate 
 			Set @EndDate=@TempEndDate 
 	end 
 	if(@TempStartDate Is Not Null) 
 	begin 
 		if(@StartDate Is Null) 
 			Set @StartDate=@TempStartDate 
 		else if @StartDate<@TempStartDate 
 			Set @StartDate=@TempStartDate 
 	end 
 	if(IsNull(@Cnt,0)=0) 
 	begin 
 		Select @TempStartDate=DateValue1 From TBL016 Where CardGuide=@G 
 		return 
 	end 
 	if(@EndDate Is Not Null And @StartDate Is Not Null And @StartDate>@EndDate) 
 		Set @EndDate=Null 
 	if(@EndDate Is Null Or (@StartDate Is Not Null And @EndDate<@StartDate)) 
 	begin 
 		Update TBL016 Set[DateValue2]=@EndDate,[DateValue1]=(CASE When IsNull(@Cnt,0)>0 Then @StartDate Else DateValue1 End) Where CardGuide=@G 
 	end 
 	else if(@EndDate Is Not Null And @EndDate <=GETDATE() And (@StartDate Is Null or @EndDate>@StartDate)) 
 	begin 
 		Update TBL016 Set[DateValue2]=@EndDate,[NotActive]=1,[DateValue1]=(CASE When IsNull(@Cnt,0)>0 Then @StartDate Else DateValue1 End) Where CardGuide=@G 
 	end 
 	else 
 	begin 
 		Update TBL016 Set[DateValue2]=Null,[NotActive]=0,[DateValue1]=(CASE When IsNull(@Cnt,0)>0 Then @StartDate Else DateValue1 End) Where CardGuide=@G 
 	end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc083]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc083](@G uniqueidentifier) 
 as begin
 declare @BillType uniqueidentifier
 declare @Currency uniqueidentifier
 declare @Rate float
 Select @BillType=MainGuide,@Currency=CurrencyGuide,@Rate=Rate From TBL022 Where CardGuide=@G
 declare @BondType uniqueidentifier
 Select @BondType=FinancialTransactionsBond From TBL020 Where CardGuide=@BillType
 if(@BondType Is Null)return
 declare @E uniqueidentifier
 delete from TBL010 Where BillGuide=@G And MainGuide=@BondType
 declare @NB uniqueidentifier
 declare @NM int
 declare @NTb table(G uniqueidentifier)
 Insert Into @NTb(G)Select CardGuide From TBL011 Where BillGuide=@G Order By ID
 DECLARE CPrc083 CURSOR READ_ONLY FAST_FORWARD FOR
 	Select G From @NTb
 OPEN CPrc083
 FETCH NEXT FROM CPrc083 INTO @E
 WHILE (@@FETCH_STATUS = 0)
 BEGIN
 	Set @NB=NEWID()
 	Set @NM=IsNull((Select Max(BondNumber) From TBL010 Where MainGuide=@BondType),0)+1
 	Insert Into TBL010(CardGuide,MainGuide,BillGuide,BondNumber,BondDate,CurrencyGuide,Rate,Notes,CostCenter,Project,Branch)
 		Select @NB,@BondType,@G,@NM,EntryDate,CurrencyGuide,Rate,Notes,CostCenter,Project,Branch From TBL011 Where CardGuide=@E
 	Insert Into TBL038(MainGuide,RowGuide,AccountGuide,CurrencyGuide
 ,Debit,Credit,DebitRate,CreditRate,ContraAccount,Notes,BondDetailsNotes2
 ,BondDetailsNotes3,Checked,Project,Branch,CostCenter
 ,Category01,Category02,Category03,Category04,Category05,AgentGuide)
 	Select @NB,RowGuide,AccountGuide,CurrencyGuide
 ,Debit,Credit,DebitRate,CreditRate,ContraAccount,Description,EntryDetailsNotes2
 ,EntryDetailsNotes3,Checked,Project,Branch,CostCenter
 ,Category01,Category02,Category03,Category04,Category05,AgentGuide From TBL012 Where MainGuide=@E Order By ID
 	Alter Table TBL011 Disable Trigger All
 	Update TBL011 Set[BondGuide]=@NB Where CardGuide=@E
 	FETCH NEXT FROM CPrc083 INTO @E
 END
 CLOSE CPrc083
 Deallocate CPrc083
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc084]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc084](@G uniqueidentifier) 
 as begin 
 	declare @Fl float 
 	Set @Fl=(Select Sum((CASE a.Unit When 3 Then b.Points3 When 2 Then b.Points2 Else b.Points End)*a.Quantity) From TBL023 a Inner Join TBL007 b On a.ProductGuide=b.CardGuide Where a.MainGuide=@G) 
 	delete from TBL142 Where BillGuide=@G 
 	if(@Fl=0)return 
 	declare @Date datetime 
 	declare @Agent uniqueidentifier 
 	declare @Number int 
 	declare @Note nvarchar(250) 
 	Select @Date=BillDate,@Agent=AgentGuide,@Note=Notes From TBL022 Where CardGuide=@G 
 	if(@Agent Is null)return 
 	Set @Number=IsNull((Select Max(CardNumber)From TBL142),0)+1 
 	declare @C uniqueidentifier 
 	Set @C=NEWID() 
 	Insert Into TBL142(CardGuide,CardNumber,CardDate,AgentGuide,BillGuide,Additions,Notes) 
 		Values(@C,@Number,@Date,@Agent,@G,@Fl,@Note) 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc085]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc085](@G uniqueidentifier) 
 as begin
 declare @BondTypeID uniqueidentifier
 declare @Currency uniqueidentifier
 declare @Rate float
 Select @BondTypeID=MainGuide,@Currency=CurrencyGuide,@Rate=Rate From TBL010 Where CardGuide=@G
 declare @BondType uniqueidentifier
 Select @BondType=FinancialTransactionsBond From TBL009 Where CardGuide=@BondTypeID
 if(@BondType Is Null)return
 declare @E uniqueidentifier
 declare @NTb table(ID int identity(1,1),BondNumber int)
 Insert Into @NTb(BondNumber)Select BondNumber From TBL010 Where MainBondType=@G And MainGuide=@BondType Order By BondNumber
 delete from TBL010 Where MainBondType=@G And MainGuide=@BondType
 declare @NB uniqueidentifier
 declare @NM int
 DECLARE CPrc085 CURSOR READ_ONLY FAST_FORWARD FOR
 	Select CardGuide From TBL011 Where BondGuide=@G Order By ID
 OPEN CPrc085
 FETCH NEXT FROM CPrc085 INTO @E
 WHILE (@@FETCH_STATUS = 0)
 BEGIN
 	Set @NB=NEWID()
 	if((Select Count(*) From @NTb)>0)
 	begin
 		Set @NM=(Select Min(BondNumber)From @NTb)
 		Delete From @NTb Where BondNumber=@NM
 	end
 	else
 		Set @NM=IsNull((Select Max(BondNumber) From TBL010 Where MainGuide=@BondType),0)+1
 	Insert Into TBL010(CardGuide,MainGuide,MainBondType,BondNumber,BondDate,CurrencyGuide,Rate,Notes,CostCenter,Project,Branch)
 		Select @NB,@BondType,@G,@NM,EntryDate,CurrencyGuide,Rate,Notes,CostCenter,Project,Branch From TBL011 Where CardGuide=@E
 	Insert Into TBL038(MainGuide,RowGuide,AccountGuide,CurrencyGuide
 ,Debit,Credit,DebitRate,CreditRate,ContraAccount,Notes,BondDetailsNotes2
 ,BondDetailsNotes3,Checked,Project,Branch,CostCenter
 ,Category01,Category02,Category03,Category04,Category05,AgentGuide)
 	Select @NB,RowGuide,AccountGuide,CurrencyGuide
 ,Debit,Credit,DebitRate,CreditRate,ContraAccount,Description,EntryDetailsNotes2
 ,EntryDetailsNotes3,Checked,Project,Branch,CostCenter
 ,Category01,Category02,Category03,Category04,Category05,AgentGuide From TBL012 Where MainGuide=@E Order By ID
 	Alter Table TBL011 Disable Trigger All
 	Update TBL011 Set[BondGuide]=@NB Where CardGuide=@E
 	FETCH NEXT FROM CPrc085 INTO @E
 END
 CLOSE CPrc085
 Deallocate CPrc085
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc086]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc086](@G uniqueidentifier) 
 as begin 
 	declare @WithButtons int 
 	declare @Fields nvarchar(Max) 
 	declare @BillName nvarchar(Max) 
 	declare @BillLatinName nvarchar(Max) 
 	declare @MainBill uniqueidentifier 
 	declare @MainBill2 uniqueidentifier 
 	declare @PrintType uniqueidentifier 
 	Select @BillName=InvoiceName,@BillLatinName=LatinName,@WithButtons=WithButtons,@Fields=Fields,@MainBill=MainBill,@MainBill2=MainBill2,@PrintType=DefaultPostPrintType From TBL020 Where CardGuide=@G 
 	if(@WithButtons=11) 
 	begin 
 		if((Select Count(*) From TBL026 Where CardGuide=@G)<1) 
 		begin 
 			Insert Into TBL026(CardGuide,BillName,BillLatinName)Values(@G,@BillName,@BillLatinName) 
 		end 
 		Update TBL026 Set[BillName]=@BillName,[BillLatinName]=@BillLatinName,[Fields]=@Fields,[BuildBillTypeGuide1]=@MainBill,[BuildBillTypeGuide2]=@MainBill2,[SavePrintType]=@PrintType Where CardGuide=@G 
 	end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc087]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc087](@G uniqueidentifier,@ForceBill1 bit,@ForceBill2 bit) 
 as begin
 declare @Tp uniqueidentifier
 Set @Tp=(Select MainGuide From TBL027 Where CardGuide=@G)
 declare @BS1 bit
 declare @BS2 bit
 declare @BTp1 uniqueidentifier
 declare @BTp2 uniqueidentifier
 declare @B uniqueidentifier
 declare @B1 uniqueidentifier
 declare @B2 uniqueidentifier
 declare @PrcTp1 int
 declare @PrcTp2 int
 declare @PrcTp3 int
 declare @MltOut float
 declare @MltIn float
 Select @BS1=BooleanOption1,@BS2=BooleanOption2,@BTp1=BuildBillTypeGuide1,@BTp2=BuildBillTypeGuide2
 ,@PrcTp1=PriceType,@PrcTp2=isnull((case BooleanOption4 when 1 then PriceType2 end),PriceType)
 ,@PrcTp3=isnull((case BooleanOption4 when 1 then PriceType3 end),PriceType)
 ,@MltOut=(case when Number01>0 then Number01 else 0 end)
 ,@MltIn=(case when Number02>0 then Number02 else 0 end)
 From TBL026 Where CardGuide=@Tp
 alter table TBL027 disable trigger all
 Update TBL027 Set[RelatedBill1]=null,RelatedBill2=null Where CardGuide=@G
 alter table TBL022 disable trigger all
 Delete From TBL022 Where MainBillGuide=@G
 declare @TQNeg int
 declare @TQPos int
 declare @TQin int
 Set @TQPos=(Select Count(*) From Qry123 Where MainGuide=@G And Quantity>0)
 Set @TQNeg=(Select Count(*) From Qry123 Where MainGuide=@G And Quantity<0)
 Set @TQin=(Select Count(*) From Qry124 Where MainGuide=@G)
 declare @Store uniqueidentifier
 declare @Currency uniqueidentifier
 declare @Date datetime
 declare @Rate float
 declare @Notes nvarchar(Max)
 declare @Agent uniqueidentifier
 declare @Account uniqueidentifier
 declare @CostCenter uniqueidentifier
 declare @Project uniqueidentifier
 declare @Branch uniqueidentifier
 declare @DoneIn datetime
 Select @Store=StoreGuide1,@Currency=CurrencyGuide1,@Date=InDate,@Rate=Rate1,@Notes=BuildBillNotes1,@Agent=AgentGuide1,@Account=AccountA1,
 @CostCenter=CostCenter1,@Project=Project1,@Branch=Branch1,@DoneIn=DoneIn From TBL027 Where CardGuide=@G
 declare @Nb int
 -------------------------------------Positive Items-------------------------------------
 if(@TQPos>0 And @BTp1 Is Not Null And @BS1>0)
 begin
 	Set @Nb=IsNull((Select Max(BillNumber)From TBL022 Where MainGuide=@BTp1),0)+1
 	Set @B1=newid()
 	Insert Into TBL022(MainGuide,MainBillGuide,CardGuide,BillDate,BillNumber,StoreGuide,CurrencyGuide,Rate,AgentGuide,PostToAccount,CostCenter,Project,Branch,Notes)
 		Values(@BTp1,@G,@B1,@Date,@Nb,@Store,@Currency,@Rate,@Agent,@Account,@CostCenter,@Project,@Branch,@Notes)
 	Insert Into TBL023(MainGuide,RowGuide,ProductGuide,Quantity,Unit,TotalValue,CostCenter,StoreID,StatementName,
 Category01,Category02,Category03,Category04,Category05,ExpiryDate,EstablishDate,DiscountValue,ExtraValue,TaxValue,
 BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,ExtraQuantity,Length,Width,Hieght,Weight,Value,Description,
 SourceBill,CurrentStage,Printed,RelatedUnit,UnitQuantity,Nonmergeable,PatchCode)
 	Select @B1,RowGuide,ItemGuide,Quantity,Unit
 	,dbo.Fun182(@PrcTp2,Unit,ProductGuide,@Date,@Currency,null,null,null,null,null,null,null,null,null,0,null)*Quantity*@MltOut
 	,CostCenter,StoreID,StatementName,
 Category01,Category02,Category03,Category04,Category05,ExpiryDate,EstablishDate,DiscountValue,ExtraValue,TaxValue,
 BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,ExtraQuantity,Length,Width,Hieght,Weight,Value,Description,
 SourceBill,CurrentStage,Printed,RelatedUnit,UnitQuantity,Nonmergeable,PatchCode
 	From Qry123 Where MainGuide=@G And Quantity>0 Order By ID
 	Insert Into TBL066(MainGuide,SerialCode,ExpiryDate,EstablishDate,Notes)
 	Select a.MainGuide,a.SerialCode,a.ExpiryDate,a.EstablishDate,a.Notes From TBL143 a
 	Inner Join Qry123 b On a.MainGuide=b.RowGuide Where b.MainGuide=@G And Quantity>0 Order By a.ID
 	exec dbo.Prc008 @B1,'','',0
 	Update TBL027 Set[RelatedBill1]=@B1 Where CardGuide=@G
 end
 -------------------------------------Nigative Items-------------------------------------
 if(@TQNeg>0 And @BTp2 Is Not Null And @BS2>0)
 begin
 	Set @Nb=IsNull((Select Max(BillNumber)From TBL022 Where MainGuide=@BTp2),0)+1
 	Set @B2=newid()
 	Insert Into TBL022(MainGuide,MainBillGuide,CardGuide,BillDate,BillNumber,StoreGuide,CurrencyGuide,Rate,AgentGuide,PostToAccount,CostCenter,Project,Branch,Notes)
 		Values(@BTp2,@G,@B2,@Date,@Nb,@Store,@Currency,@Rate,@Agent,@Account,@CostCenter,@Project,@Branch,@Notes)
 	Insert Into TBL023(MainGuide,RowGuide,ProductGuide,Quantity,Unit,TotalValue,CostCenter,StoreID,StatementName,
 Category01,Category02,Category03,Category04,Category05,ExpiryDate,EstablishDate,DiscountValue,ExtraValue,TaxValue,
 BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,ExtraQuantity,Length,Width,Hieght,Weight,Value,Description,
 SourceBill,CurrentStage,Printed,RelatedUnit,UnitQuantity,Nonmergeable,PatchCode)
 	Select @B2,RowGuide,ItemGuide,Quantity*-1,Unit
 	,dbo.Fun182(@PrcTp3,Unit,ProductGuide,@Date,@Currency,null,null,null,null,null,null,null,null,null,0,null)*Quantity*@MltIn
 	,CostCenter,StoreID,StatementName,
 Category01,Category02,Category03,Category04,Category05,ExpiryDate,EstablishDate,DiscountValue,ExtraValue,TaxValue,
 BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,ExtraQuantity,Length,Width,Hieght,Weight,Value,Description,
 SourceBill,CurrentStage,Printed,RelatedUnit,UnitQuantity,Nonmergeable,PatchCode
 	From Qry123 Where MainGuide=@G And Quantity<0 Order By ID
 	Insert Into TBL066(MainGuide,SerialCode,ExpiryDate,EstablishDate,Notes)
 	Select a.MainGuide,a.SerialCode,a.ExpiryDate,a.EstablishDate,a.Notes From TBL143 a
 	Inner Join Qry123 b On a.MainGuide=b.RowGuide Where b.MainGuide=@G And Quantity<0 Order By a.ID
 	exec dbo.Prc008 @B2,'','',0
 	Update TBL027 Set[RelatedBill1]=IsNull(@B1,@B2) Where CardGuide=@G
 end
 -------------------------------------Final Inventory-------------------------------------
 if(@TQin>0 And @BTp2 Is Not Null And @BS2>0)
 begin
 	Set @Nb=IsNull((Select Max(BillNumber)From TBL022 Where MainGuide=@BTp2),0)+1
 	Set @B=newid()
 	Insert Into TBL022(MainGuide,MainBillGuide,CardGuide,BillDate,BillNumber,StoreGuide,CurrencyGuide,Rate,AgentGuide,PostToAccount,CostCenter,Project,Branch,Notes)
 		Values(@BTp2,@G,@B,@Date,@Nb,@Store,@Currency,@Rate,@Agent,@Account,@CostCenter,@Project,@Branch,@Notes)
 	Insert Into TBL023(MainGuide,RowGuide,ProductGuide,Quantity,Unit,TotalValue,CostCenter,StoreID,StatementName,
 Category01,Category02,Category03,Category04,Category05,ExpiryDate,EstablishDate,DiscountValue,ExtraValue,TaxValue,
 BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,ExtraQuantity,Length,Width,Hieght,Weight,Value,Description,
 SourceBill,CurrentStage,Printed,RelatedUnit,UnitQuantity,Nonmergeable,PatchCode)
 	Select @B,RowGuide,ItemGuide,Quantity,Unit,TotalValue,CostCenter,StoreID,StatementName,
 Category01,Category02,Category03,Category04,Category05,ExpiryDate,EstablishDate,DiscountValue,ExtraValue,TaxValue,
 BillCustom1,BillCustom2,BillCustom3,BillCustom4,BillCustom5,ExtraQuantity,Length,Width,Hieght,Weight,Value,Description,
 SourceBill,CurrentStage,Printed,RelatedUnit,UnitQuantity,Nonmergeable,PatchCode
 	From Qry124 Where MainGuide=@G And Quantity>0 Order By ID
 	Insert Into TBL066(MainGuide,SerialCode,ExpiryDate,EstablishDate,Notes)
 	Select a.MainGuide,a.SerialCode,a.ExpiryDate,a.EstablishDate,a.Notes From TBL143 a
 	Inner Join Qry124 b On a.MainGuide=b.RowGuide Where b.MainGuide=@G Order By a.ID
 	exec dbo.Prc008 @B,'','',0
 	Update TBL027 Set[RelatedBill2]=@B Where CardGuide=@G
 end
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc088]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc088](@G uniqueidentifier,@ForceBill1 bit,@ForceBill2 bit) 
 as begin 
 	declare @Tp uniqueidentifier 
 	Set @Tp=(Select MainGuide From TBL027 Where CardGuide=@G) 
 	declare @FullInOutItems bit 
 	Select @FullInOutItems=BooleanOption3 From TBL026 Where CardGuide=@Tp 
 	if(@FullInOutItems>0) 
 		exec dbo.Prc087 @G,@ForceBill1,@ForceBill2 
 	else 
 		exec dbo.Prc038 @G,@ForceBill1,@ForceBill2 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc089]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc089](@G uniqueidentifier) 
 as begin 
 declare @V float 
 declare @VR float 
 declare @Ac uniqueidentifier 
 declare @Cr uniqueidentifier 
 declare @Co uniqueidentifier 
 declare @Pr uniqueidentifier 
 declare @Br uniqueidentifier 
 Select @Ac=AccountGuide,@Cr=CurrencyGuide,@Co=CostCenter,@Pr=Project,@Br=Branch From TBL120 Where CardGuide=@G 
 declare @Ob uniqueidentifier 
 declare @Bi uniqueidentifier 
 Select @V=Sum(Value),@VR=Sum(ValueRate) From TBL121 Where MainGuide=@G And TypeID=0 
 declare @T float 
 declare @TR float 
 declare @N float 
 declare @NR float 
 declare @BTotal float 
 declare @ITotal float 
 declare @DscntT float 
 declare @ExtraT float 
 DECLARE CPrc089 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select OperationBill,BillGuide,Value,ValueRate,dbo.Ratio(Value,@V),dbo.Ratio(ValueRate,@VR) From TBL121 Where MainGuide=@G And TypeID=1 
 OPEN CPrc089 
 FETCH NEXT FROM CPrc089 INTO @Ob,@Bi,@T,@TR,@N,@NR 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	if(@Ob Is Not Null) 
 	begin 
 		Delete From TBL029 Where MainGuide=@Ob And OperationBond=@G 
 		if(@Ac Is Not Null And @Cr Is Not Null) 
 		begin 
 			if(@N>0 And @NR>0) 
 			begin 
 				Insert Into TBL029(IsInPut,MainGuide,OperationBond,AccountID,CurrencyGuide,Extra,ExtraToSave,CostCenter) 
 					Select 0,@Ob,@G,AccountGuide,@Cr,Value*@N,ValueRate*@NR,@Co From TBL121 Where MainGuide=@G And TypeID=0 And Value>0 
 				Insert Into TBL029(IsInPut,MainGuide,OperationBond,AccountID,CurrencyGuide,Discount,DiscountToSave,CostCenter) 
 					Select 0,@Ob,@G,AccountGuide,@Cr,Value*@N*-1,ValueRate*@NR*-1,@Co From TBL121 Where MainGuide=@G And TypeID=0 And Value<0 
 			end 
 		end 
 		Set @BTotal=IsNull((Select Sum(TotalValue+ExtraValue-DiscountValue) From TBL028 Where MainGuide=@Ob And IsInPut=0),0) 
 		Set @DscntT=IsNull((Select Sum(Discount) From TBL029 Where MainGuide=@Ob And IsInPut=0),0) 
 		Set @ExtraT=IsNull((Select Sum(Extra) From TBL029 Where MainGuide=@Ob And IsInPut=0),0) 
 		Set @ITotal=IsNull((Select Sum(TotalValue+ExtraValue-DiscountValue) From TBL028 Where MainGuide=@Ob And IsInPut=1 ),0) 
 		Update TBL028 Set[TotalValue]=@BTotal*dbo.Ratio(TotalValue+ExtraValue-DiscountValue,@ITotal) 
 		,[DiscountValue]=@DscntT*dbo.Ratio(TotalValue+ExtraValue-DiscountValue,@ITotal) 
 		,[ExtraValue]=@ExtraT*dbo.Ratio(TotalValue+ExtraValue-DiscountValue,@ITotal) 
 		Where MainGuide=@Ob And IsInPut=1 
 		exec dbo.Prc035 @Ob,null,null 
 	end 
 	if(@Bi Is Not Null) 
 	begin 
 		Delete From TBL024 Where MainGuide=@Bi And OperationBond=@G 
 		if(@Ac Is Not Null And @Cr Is Not Null) 
 		begin 
 			if(@N>0 And @NR>0) 
 			begin 
 				Insert Into TBL024(MainGuide,OperationBond,AccountID,ContraAccount,CurrencyGuide,Extra,ExtraToSave,CostCenter) 
 					Select @Bi,@G,@Ac,AccountGuide,@Cr,Value*@N,ValueRate*@NR,@Co From TBL121 Where MainGuide=@G And TypeID=0 And Value>0 
 				Insert Into TBL024(MainGuide,OperationBond,AccountID,ContraAccount,CurrencyGuide,Discount,DiscountToSave,CostCenter) 
 					Select @Bi,@G,@Ac,AccountGuide,@Cr,Value*@N*-1,ValueRate*@NR*-1,@Co From TBL121 Where MainGuide=@G And TypeID=0 And Value<0 
 			end 
 		end 
 		exec dbo.Prc008 @Bi,null,null,0 
 	end 
 FETCH NEXT FROM CPrc089 INTO @Ob,@Bi,@T,@TR,@N,@NR 
 END 
 CLOSE CPrc089 
 DEALLOCATE CPrc089 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc090]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc090](@ID int) 
 as begin 
 declare @Dt table(Field nvarchar(250),Value nvarchar(250)) 
 Insert Into @Dt(Field,Value) 
 Select Field,Value From dbo.Fun117(148,@ID) 
 if((Select COUNT(*) From @Dt)=0)return 
 declare @Ft table(FieldID int,FieldName nvarchar(200)) 
 	Insert Into @Ft(FieldID,FieldName)Select FieldTypeID,FieldName From TBL149 
 if((Select COUNT(*) From @Ft)=0)return 
 --------------------------------------------------------------- 
 declare @TmpInt int 
 declare @BillNumber int 
 declare @BillDate datetime 
 declare @BillType uniqueidentifier 
 declare @Quantity float 
 declare @ExtraQuantity float 
 declare @Price float 
 declare @TotalValue float 
 declare @AgentGuide uniqueidentifier 
 declare @ItemGuide uniqueidentifier 
 declare @PostToAccount uniqueidentifier 
 declare @StoreGuide uniqueidentifier 
 declare @CostCenter uniqueidentifier 
 declare @Project uniqueidentifier 
 declare @Branch uniqueidentifier 
 declare @PayMethod int 
 declare @Unit int 
 declare @Category01 uniqueidentifier 
 declare @Category02 uniqueidentifier 
 declare @Category03 uniqueidentifier 
 declare @Category04 uniqueidentifier 
 declare @Category05 uniqueidentifier 
 declare @Currency uniqueidentifier 
 declare @Rate float 
 declare @Notes nvarchar(250) 
 declare @Description nvarchar(250) 
 declare @ItemDiscount float 
 declare @ItemExtra float 
 declare @ItemTax float 
 declare @BillDiscount float 
 declare @BillNotes2 nvarchar(250) 
 declare @BillNotes3 nvarchar(250) 
 declare @SerialNo nvarchar(250) 
 --------------------------------------------------------------- 
 declare @TBillDate nvarchar(100) 
 declare @TBillType nvarchar(250) 
 declare @TAgentName nvarchar(250) 
 declare @TItemCode nvarchar(250) 
 declare @TItemName nvarchar(250) 
 declare @TAccountCode nvarchar(250) 
 declare @TAccountName nvarchar(250) 
 declare @TStoreCode nvarchar(250) 
 declare @TStoreName nvarchar(250) 
 declare @TCostCode nvarchar(250) 
 declare @TCostName nvarchar(250) 
 declare @TProjectCode nvarchar(250) 
 declare @TProjectName nvarchar(250) 
 declare @TBranchCode nvarchar(250) 
 declare @TBranchName nvarchar(250) 
 declare @TUnit nvarchar(250) 
 declare @TCategory01 nvarchar(250) 
 declare @TCategory02 nvarchar(250) 
 declare @TCategory03 nvarchar(250) 
 declare @TCategory04 nvarchar(250) 
 declare @TCategory05 nvarchar(250) 
 declare @TCurrency nvarchar(250) 
 --------------------------------------------------------------- 
 declare @TpCurrency uniqueidentifier 
 declare @TpStore uniqueidentifier 
 declare @TpCashAccount uniqueidentifier 
 declare @TpCategory01 uniqueidentifier 
 declare @TpCategory02 uniqueidentifier 
 declare @TpCategory03 uniqueidentifier 
 declare @TpCategory04 uniqueidentifier 
 declare @TpCategory05 uniqueidentifier 
 declare @TpDiscountAc uniqueidentifier 
 --------------------------------------------------------------- 
 Set @BillNumber=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=1))) 
 Set @TBillDate=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=2)) 
 Set @TBillType=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=3)) 
 Set @Quantity=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=4))) 
 Set @Price=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=5))) 
 Set @TotalValue=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=6))) 
 Set @TAgentName=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=7)) 
 Set @TItemCode=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=8)) 
 Set @TItemName=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=9)) 
 Set @TAccountCode=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=10)) 
 Set @TAccountName=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=11)) 
 Set @TStoreCode=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=12)) 
 Set @TStoreName=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=13)) 
 Set @TCostCode=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=14)) 
 Set @TCostName=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=15)) 
 Set @TProjectCode=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=16)) 
 Set @TProjectName=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=17)) 
 Set @TBranchCode=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=18)) 
 Set @TBranchName=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=19)) 
 Set @PayMethod=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=20))) 
 Set @TUnit=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=21)) 
 Set @TCurrency=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=22)) 
 Set @Rate=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=23))) 
 Set @TpCategory01=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=31)) 
 Set @TpCategory02=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=32)) 
 Set @TpCategory03=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=33)) 
 Set @TpCategory04=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=34)) 
 Set @TpCategory05=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=35)) 
 Set @Notes=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=36)) 
 Set @Description=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=37)) 
 Set @ItemDiscount=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=38))) 
 Set @ItemExtra=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=39))) 
 Set @ItemTax=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=40))) 
 Set @BillDiscount=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=41))) 
 Set @BillDate=dbo.TextToDateTime(@TBillDate) 
 Set @BillNotes2=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=42)) 
 Set @BillNotes3=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=43)) 
 Set @SerialNo=(Select ltrim(rtrim(Value)) From @Dt Where Field=(Select FieldName From @Ft Where FieldID=44)) 
 Set @ExtraQuantity=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=45))) 
 if(@ItemDiscount<0)Set @ItemDiscount=@ItemDiscount*-1 
 if(@ItemExtra<0)Set @ItemExtra=@ItemExtra*-1 
 if(@ItemTax<0)Set @ItemTax=@ItemTax*-1 
 if(@BillDiscount<0)Set @BillDiscount=@BillDiscount*-1 
 if(@BillDate Is Null)Set @BillDate=CONVERT(datetime,dbo.Number(@TBillDate)-2) 
 if(@BillDate Is Null) 
 begin 
 	raiserror (N'2:Date', 1, 1) 
 	return 
 end 
 Set @BillType=(Select CardGuide From TBL020 Where BillType<=1 And InvoiceName=@TBillType) 
 if(@BillType Is Null) 
 begin 
 	raiserror (N'3:Bill Type', 1, 1) 
 	return 
 end 
 if(IsNull(@TotalValue,0)=0)Set @TotalValue=ISNULL(@Price,0)*@Quantity 
 if(LEN(ISNULL(@TAgentName,''))>0)Set @AgentGuide=(Select Top 1 CardGuide From TBL016 Where AgentName=@TAgentName) 
 if(LEN(ISNULL(@TItemCode,''))>0)Set @ItemGuide=(Select Top 1 CardGuide From TBL007 Where CardCode=@TItemCode) 
 if(@ItemGuide Is Null And (LEN(ISNULL(@TItemName,''))>0))Set @ItemGuide=(Select Top 1 CardGuide From TBL007 Where ProductName=@TItemName) 
 if(@ItemGuide Is Null) 
 begin 
 	raiserror (N'8:Item', 1, 1) 
 	return 
 end 
 if(LEN(ISNULL(@TAccountCode,''))>0)Set @PostToAccount=(Select Top 1 CardGuide From TBL004 Where CardCode=@TAccountCode) 
 if(@PostToAccount Is Null And (LEN(ISNULL(@TAccountName,''))>0))Set @PostToAccount=(Select Top 1 CardGuide From TBL004 Where AccountName=@TAccountName) 
 if(LEN(ISNULL(@TStoreCode,''))>0)Set @StoreGuide=(Select Top 1 CardGuide From TBL008 Where CardCode=@TStoreCode) 
 if(@StoreGuide Is Null And (LEN(ISNULL(@TStoreName,''))>0))Set @StoreGuide=(Select Top 1 CardGuide From TBL008 Where WarehouseName=@TStoreName) 
 if(LEN(ISNULL(@TCostCode,''))>0)Set @CostCenter=(Select Top 1 CardGuide From TBL005 Where CardCode=@TCostCode) 
 if(@CostCenter Is Null And (LEN(ISNULL(@TCostName,''))>0))Set @CostCenter=(Select Top 1 CardGuide From TBL005 Where CostCenter=@TCostName) 
 if(LEN(ISNULL(@TProjectCode,''))>0)Set @Project=(Select Top 1 CardGuide From TBL049 Where CardCode=@TProjectCode) 
 if(@Project Is Null And (LEN(ISNULL(@TProjectName,''))>0))Set @Project=(Select Top 1 CardGuide From TBL049 Where ProjectName=@TProjectName) 
 if(LEN(ISNULL(@TBranchCode,''))>0)Set @Branch=(Select Top 1 CardGuide From TBL050 Where CardCode=@TBranchCode) 
 if(@Branch Is Null And (LEN(ISNULL(@TBranchName,''))>0))Set @Branch=(Select Top 1 CardGuide From TBL050 Where BronchName=@TBranchName) 
 if(LEN(ISNULL(@TCurrency,''))>0)Set @Currency=(Select Top 1 CardGuide From TBL001 Where CurrencyName=@TCurrency) 
 Set @Unit=(Select (CASE When @TUnit=Unit3 Then 3 When @TUnit=Unit2 Then 2 Else 1 End) From TBL007 Where CardGuide=@ItemGuide) 
 if(@PayMethod<1)Set @PayMethod=1 
 Select @TpCurrency=DefaultCurrency,@TpStore=DefaultStore,@TpCashAccount=CashAccount,@TpCategory01=Category01, 
 @TpCategory02=Category02,@TpCategory03=Category03,@TpCategory04=Category04,@TpCategory05=Category05,@TpDiscountAc=DiscountsAccount 
 From TBL020 Where CardGuide=@BillType 
 if(LEN(ISNULL(@TCategory01,''))>0)Set @Category01=(Select Top 1 CardGuide From TBL081 Where CardName=@TCategory01 And (CategoryType=@TpCategory01 Or @TpCategory01 Is Null)) 
 if(LEN(ISNULL(@TCategory02,''))>0)Set @Category02=(Select Top 1 CardGuide From TBL081 Where CardName=@TCategory02 And (CategoryType=@TpCategory02 Or @TpCategory02 Is Null)) 
 if(LEN(ISNULL(@TCategory03,''))>0)Set @Category03=(Select Top 1 CardGuide From TBL081 Where CardName=@TCategory03 And (CategoryType=@TpCategory03 Or @TpCategory03 Is Null)) 
 if(LEN(ISNULL(@TCategory04,''))>0)Set @Category04=(Select Top 1 CardGuide From TBL081 Where CardName=@TCategory04 And (CategoryType=@TpCategory04 Or @TpCategory04 Is Null)) 
 if(LEN(ISNULL(@TCategory05,''))>0)Set @Category05=(Select Top 1 CardGuide From TBL081 Where CardName=@TCategory05 And (CategoryType=@TpCategory05 Or @TpCategory05 Is Null)) 
 if(IsNull(@BillNumber,0)=0) 
 	Set @BillNumber=IsNull((Select MAX(BillNumber)From TBL022 Where MainGuide=@BillType),0)+1 
 declare @G uniqueidentifier 
 Set @G=(Select Top 1 CardGuide From TBL022 Where MainGuide=@BillType And BillNumber=@BillNumber) 
 if(@G Is Null) 
 begin 
 	Set @G=NEWID() 
 	if(@StoreGuide Is Null) 
 		Set @StoreGuide=@TpStore 
 	if(@StoreGuide Is Null) 
 	begin 
 		raiserror (N'12:Store', 1, 1) 
 		return 
 	end 
 	if(@Currency Is Null) 
 		Set @Currency=@TpCurrency 
 	if(@Currency Is Null) 
 		Set @Currency=(Select CardGuide From TBL001 Where ID=(Select MIN(ID)From TBL001)) 
 	if(@Rate=0) 
 		Set @Rate=(Select Rate From TBL001 Where CardGuide=@Currency) 
 	if(@PostToAccount Is Not Null) 
 		Set @PayMethod=2 
 	else 
 	begin 
 		if(@PayMethod>1 And @AgentGuide Is Not Null) 
 			Set @PostToAccount=(Select AccountID From TBL016 Where CardGuide=@AgentGuide) 
 		else 
 		begin 
 			Set @PostToAccount=@TpCashAccount 
 			Set @PayMethod=1 
 		end 
 	end 
 	if(@PostToAccount Is Null) 
 	begin 
 		raiserror (N'10:Account', 1, 1) 
 		return 
 	end 
 	Insert Into TBL022(CardGuide,MainGuide,PayMethod,BillDate,BillNumber,CurrencyGuide,Rate,StoreGuide,AgentGuide,PostToAccount,CostCenter,Project,Branch,Notes,BillNotes2,BillNotes3) 
 		Values(@G,@BillType,@PayMethod,@BillDate,@BillNumber,@Currency,@Rate,@StoreGuide,@AgentGuide,@PostToAccount,@CostCenter,@Project,@Branch,@Notes,@BillNotes2,@BillNotes3) 
 	if(@BillDiscount>0 And @TpDiscountAc Is Not Null) 
 	begin 
 		Insert Into TBL024(MainGuide,AccountID,Discount,DiscountToSave,CurrencyGuide) 
 			Values(@G,@TpDiscountAc,@BillDiscount,@BillDiscount*@Rate,@Currency) 
 	end 
 end 
 else 
 begin 
 	declare @BCostCenter uniqueidentifier 
 	declare @BStore uniqueidentifier 
 	Select @BCostCenter=CostCenter,@BStore=StoreGuide From TBL022 Where CardGuide=@G 
 	if(@CostCenter Is Not Null And @BCostCenter Is Not Null And @CostCenter=@BCostCenter) 
 		Set @CostCenter=Null 
 	if(@StoreGuide Is Not Null And @StoreGuide=@BStore) 
 		Set @StoreGuide=null 
 end 
 declare @Rw uniqueidentifier 
 Set @Rw=NEWID() 
 Insert Into TBL023(RowGuide,MainGuide,ProductGuide,Quantity,ExtraQuantity,Unit,TotalValue,CostCenter,StoreID,Category01,Category02,Category03,Category04,Category05,Description,DiscountValue,ExtraValue,TaxValue) 
 	Values(@Rw,@G,@ItemGuide,@Quantity,@ExtraQuantity,@Unit,@TotalValue,@CostCenter,@StoreGuide,@Category01,@Category02,@Category03,@Category04,@Category05,@Description,@ItemDiscount,@ItemExtra,@ItemTax) 
 if(Len(IsNull(@SerialNo,''))>0) 
 begin 
 	Insert Into TBL066(MainGuide,SerialCode) 
 		Values(@Rw,@SerialNo) 
 end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc091]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc091](@MAc uniqueidentifier,@Tp int,@Lv int) 
 as begin 
 declare @EmptyCode nvarchar(255) 
 declare @Code nvarchar(255) 
 Set @EmptyCode='' 
 declare @MG uniqueidentifier 
 declare @Ln int 
 declare @NewID int 
 declare @G uniqueidentifier 
 declare @Tb table(G uniqueidentifier) 
 if(@Tp=4) 
 begin 
 	Select @Code=CardCode,@MG=MainAccount From TBL004 Where CardGuide=@MAc 
 	if(@Lv=0) 
 	begin 
 		Set @Lv=1 
 		while(@MG Is Not Null) 
 		begin 
 			Select @MG=MainAccount,@Lv=@Lv+1 From TBL004 Where CardGuide=@MG 
 		end 
 	end 
 	Set @Ln=Len(CONVERT(varchar(10), dbo.Fun172(@Tp,@Lv))) 
 	while(LEN(@EmptyCode)<@Ln) 
 		Set @EmptyCode=@EmptyCode+'0' 
 	Update b Set b.CardCode=@Code+SUBSTRING(EmCode,1,@Ln-NewIDLen)+IDNew From 
 	(Select LEN(a.IDNew) As NewIDLen,* From 
 	(Select Convert(varchar(100),(Select Count(*) From TBL004 b Where b.MainAccount=@MAc And b.ID<=a.ID)) As IDNew,@EmptyCode As EmCode,ID From TBL004 a Where MainAccount=@MAc)a)a 
 	Inner Join TBL004 b On a.ID=b.ID 
 	Set @Lv=@Lv+1 
 	Insert Into @Tb(G) Select a.CardGuide From TBL004 a Inner Join TBL004 b On a.CardGuide=b.MainAccount Where a.MainAccount=@MAc Group By a.CardGuide 
 	Select @G=(Select Top 1 G From @Tb) 
 	while(@G Is Not Null) 
 	begin 
 		exec dbo.Prc091 @G , @Tp , @Lv 
 		Delete From @Tb Where G=@G 
 		Select @G=(Select Top 1 G From @Tb) 
 	end 
 end 
 else if(@Tp=5) 
 begin 
 	Select @Code=CardCode,@MG=MainCostCenter From TBL005 Where CardGuide=@MAc 
 	if(@Lv=0) 
 	begin 
 		Set @Lv=1 
 		while(@MG Is Not Null) 
 		begin 
 			Select @MG=MainCostCenter,@Lv=@Lv+1 From TBL005 Where CardGuide=@MG 
 		end 
 	end 
 	Set @Ln=Len(CONVERT(varchar(10), dbo.Fun172(@Tp,@Lv))) 
 	while(LEN(@EmptyCode)<@Ln) 
 		Set @EmptyCode=@EmptyCode+'0' 
 	Update b Set b.CardCode=@Code+SUBSTRING(EmCode,1,@Ln-NewIDLen)+IDNew From 
 	(Select LEN(a.IDNew) As NewIDLen,* From 
 	(Select Convert(varchar(100),(Select Count(*) From TBL005 b Where b.MainCostCenter=@MAc And b.ID<=a.ID)) As IDNew,@EmptyCode As EmCode,ID From TBL005 a Where MainCostCenter=@MAc)a)a 
 	Inner Join TBL005 b On a.ID=b.ID 
 	Set @Lv=@Lv+1 
 	Insert Into @Tb(G) Select a.CardGuide From TBL005 a Inner Join TBL005 b On a.CardGuide=b.MainCostCenter Where a.MainCostCenter=@MAc Group By a.CardGuide 
 	Select @G=(Select Top 1 G From @Tb) 
 	while(@G Is Not Null) 
 	begin 
 		exec dbo.Prc091 @G , @Tp , @Lv 
 		Delete From @Tb Where G=@G 
 		Select @G=(Select Top 1 G From @Tb) 
 	end 
 end 
 else if(@Tp=6) 
 begin 
 	Select @Code=CardCode,@MG=MainGuide From TBL006 Where CardGuide=@MAc 
 	if(@Lv=0) 
 	begin 
 		Set @Lv=1 
 		while(@MG Is Not Null) 
 		begin 
 			Select @MG=MainGuide,@Lv=@Lv+1 From TBL006 Where CardGuide=@MG 
 		end 
 	end 
 	Set @Ln=Len(CONVERT(varchar(10), dbo.Fun172(@Tp,@Lv))) 
 	while(LEN(@EmptyCode)<@Ln) 
 		Set @EmptyCode=@EmptyCode+'0' 
 	Update b Set b.CardCode=@Code+SUBSTRING(EmCode,1,@Ln-NewIDLen)+IDNew From 
 	(Select LEN(a.IDNew) As NewIDLen,* From 
 	(Select Convert(varchar(100),(Select Count(*) From TBL006 b Where b.MainGuide=@MAc And b.ID<=a.ID)) As IDNew,@EmptyCode As EmCode,ID From TBL006 a Where MainGuide=@MAc)a)a 
 	Inner Join TBL006 b On a.ID=b.ID 
 	declare @PLv int 
 	Set @PLv=@Lv+1 
 	declare @TM uniqueidentifier 
 	DECLARE CPrc091 CURSOR READ_ONLY FAST_FORWARD FOR 
 		Select a.CardGuide From TBL006 a Where a.MainGuide=@MAc Group By a.CardGuide 
 	OPEN CPrc091 
 	FETCH NEXT FROM CPrc091 INTO @TM 
 	WHILE (@@FETCH_STATUS = 0) 
 	BEGIN 
 		exec dbo.Prc091 @TM,7,@PLv 
 		FETCH NEXT FROM CPrc091 INTO @TM 
 	END 
 	CLOSE CPrc091 
 	DEALLOCATE CPrc091 
 	Set @Lv=@Lv+1 
 	Insert Into @Tb(G) Select a.CardGuide From TBL006 a Inner Join TBL006 b On a.CardGuide=b.MainGuide Where a.MainGuide=@MAc Group By a.CardGuide 
 	Select @G=(Select Top 1 G From @Tb) 
 	while(@G Is Not Null) 
 	begin 
 		exec dbo.Prc091 @G , @Tp , @Lv 
 		Delete From @Tb Where G=@G 
 		Select @G=(Select Top 1 G From @Tb) 
 	end 
 end 
 else if(@Tp=7) 
 begin 
 	if(@Lv=0) 
 	begin 
 		Set @Lv=1 
 		while(@MG Is Not Null) 
 		begin 
 			Select @MG=MainGuide,@Lv=@Lv+1 From TBL006 Where CardGuide=@MG 
 		end 
 	end 
 	Select @Code=CardCode From TBL006 Where CardGuide=@MAc 
 	Set @Ln=Len(CONVERT(varchar(10), dbo.Fun172(7,@Lv))) 
 	Alter Table TBL007 Disable Trigger All 
 	Update b Set[CardCode]=a.MC+ LEFT(a.Z1,a.TL)+a.NC From 
 	(Select *,Len(a.Z1)-Len(a.NC) As TL From 
 	(Select ID,@Code As MC,Left('000000000000',@Ln)As Z1,Convert(varchar(20),(Select Count(*) From TBL007 b Where b.GroupGuid=@MAc And b.ID<=a.ID)) As NC 
 	From TBL007 a Where GroupGuid=@MAc)a)a 
 	Inner Join TBL007 b On a.ID=b.ID 
 end 
 else if(@Tp=8) 
 begin 
 	Select @Code=CardCode,@MG=MainWarehouse From TBL008 Where CardGuide=@MAc 
 	if(@Lv=0) 
 	begin 
 		Set @Lv=1 
 		while(@MG Is Not Null) 
 		begin 
 			Select @MG=MainWarehouse,@Lv=@Lv+1 From TBL008 Where CardGuide=@MG 
 		end 
 	end 
 	Set @Ln=Len(CONVERT(varchar(10), dbo.Fun172(@Tp,@Lv))) 
 	while(LEN(@EmptyCode)<@Ln) 
 		Set @EmptyCode=@EmptyCode+'0' 
 	Update b Set b.CardCode=@Code+SUBSTRING(EmCode,1,@Ln-NewIDLen)+IDNew From 
 	(Select LEN(a.IDNew) As NewIDLen,* From 
 	(Select Convert(varchar(100),(Select Count(*) From TBL008 b Where b.MainWarehouse=@MAc And b.ID<=a.ID)) As IDNew,@EmptyCode As EmCode,ID From TBL008 a Where MainWarehouse=@MAc)a)a 
 	Inner Join TBL008 b On a.ID=b.ID 
 	Set @Lv=@Lv+1 
 	Insert Into @Tb(G) Select a.CardGuide From TBL008 a Inner Join TBL008 b On a.CardGuide=b.MainWarehouse Where a.MainWarehouse=@MAc Group By a.CardGuide 
 	Select @G=(Select Top 1 G From @Tb) 
 	while(@G Is Not Null) 
 	begin 
 		exec dbo.Prc091 @G , @Tp , @Lv 
 		Delete From @Tb Where G=@G 
 		Select @G=(Select Top 1 G From @Tb) 
 	end 
 end 
 else if(@Tp=49) 
 begin 
 	Select @Code=CardCode,@MG=MainProject From TBL049 Where CardGuide=@MAc 
 	if(@Lv=0) 
 	begin 
 		Set @Lv=1 
 		while(@MG Is Not Null) 
 		begin 
 			Select @MG=MainProject,@Lv=@Lv+1 From TBL049 Where CardGuide=@MG 
 		end 
 	end 
 	Set @Ln=Len(CONVERT(varchar(10), dbo.Fun172(@Tp,@Lv))) 
 	while(LEN(@EmptyCode)<@Ln) 
 		Set @EmptyCode=@EmptyCode+'0' 
 	Update b Set b.CardCode=@Code+SUBSTRING(EmCode,1,@Ln-NewIDLen)+IDNew From 
 	(Select LEN(a.IDNew) As NewIDLen,* From 
 	(Select Convert(varchar(100),(Select Count(*) From TBL049 b Where b.MainProject=@MAc And b.ID<=a.ID)) As IDNew,@EmptyCode As EmCode,ID From TBL049 a Where MainProject=@MAc)a)a 
 	Inner Join TBL049 b On a.ID=b.ID 
 	Set @Lv=@Lv+1 
 	Insert Into @Tb(G) Select a.CardGuide From TBL049 a Inner Join TBL049 b On a.CardGuide=b.MainProject Where a.MainProject=@MAc Group By a.CardGuide 
 	Select @G=(Select Top 1 G From @Tb) 
 	while(@G Is Not Null) 
 	begin 
 		exec dbo.Prc091 @G , @Tp , @Lv 
 		Delete From @Tb Where G=@G 
 		Select @G=(Select Top 1 G From @Tb) 
 	end 
 end 
 else if(@Tp=50) 
 begin 
 	Select @Code=CardCode,@MG=MainBronch From TBL050 Where CardGuide=@MAc 
 	if(@Lv=0) 
 	begin 
 		Set @Lv=1 
 		while(@MG Is Not Null) 
 		begin 
 			Select @MG=MainBronch,@Lv=@Lv+1 From TBL050 Where CardGuide=@MG 
 		end 
 	end 
 	Set @Ln=Len(CONVERT(varchar(10), dbo.Fun172(@Tp,@Lv))) 
 	while(LEN(@EmptyCode)<@Ln) 
 		Set @EmptyCode=@EmptyCode+'0' 
 	Update b Set b.CardCode=@Code+SUBSTRING(EmCode,1,@Ln-NewIDLen)+IDNew From 
 	(Select LEN(a.IDNew) As NewIDLen,* From 
 	(Select Convert(varchar(100),(Select Count(*) From TBL050 b Where b.MainBronch=@MAc And b.ID<=a.ID)) As IDNew,@EmptyCode As EmCode,ID From TBL050 a Where MainBronch=@MAc)a)a 
 	Inner Join TBL050 b On a.ID=b.ID 
 	Set @Lv=@Lv+1 
 	Insert Into @Tb(G) Select a.CardGuide From TBL050 a Inner Join TBL050 b On a.CardGuide=b.MainBronch Where a.MainBronch=@MAc Group By a.CardGuide 
 	Select @G=(Select Top 1 G From @Tb) 
 	while(@G Is Not Null) 
 	begin 
 		exec dbo.Prc091 @G , @Tp , @Lv 
 		Delete From @Tb Where G=@G 
 		Select @G=(Select Top 1 G From @Tb) 
 	end 
 end 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc092]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc092](@G uniqueidentifier) 
 as begin 
 	declare @T float 
 	declare @Cr uniqueidentifier 
 	declare @Re float 
 	Select @Cr=CurrencyGuide1,@Re=Rate1 From TBL027 Where CardGuide=@G 
 	Set @T=(Select SUM(TotalValue) From Qry124 Where MainGuide=@G) 
 	Set @T=@T+IsNull((Select SUM(Extra-Discount) From TBL029 Where MainGuide=@G And CurrencyGuide=@Cr),0) 
 	Set @T=@T+IsNull((Select SUM(ExtraToSave-DiscountToSave)/@Re From TBL029 Where MainGuide=@G And CurrencyGuide=@Cr),0) 
 	if(IsNull(@T,0)=0)return 
 	declare @U float 
 	declare @Q float 
 	Select @U=SUM(a.TotalValue),@Q=Sum((case a.Unit When 3 Then b.Factor3 When 2 Then b.Factor2 Else 1 End)*a.Quantity) From Qry123 a 
 	Inner Join TBL007 b On a.ProductGuide=b.CardGuide Where MainGuide=@G 
 	if(IsNull(@Q,0)=0)return 
 	Update a Set[TotalValue]=@T*(case when @U>0 then dbo.Ratio(TotalValue,@U) 
 	else dbo.Ratio((case a.Unit When 3 Then b.Factor3 When 2 Then b.Factor2 Else 1 End)*a.Quantity,@Q) end) 
 	From Qry123 a 
 	Inner Join TBL007 b On a.ProductGuide=b.CardGuide Where MainGuide=@G 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc093]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc093](@BID uniqueidentifier) 
 as begin 
 declare @T datetime 
 declare @D table(Pcr uniqueidentifier,Tm datetime) 
 declare @PrcTp int 
 Select @PrcTp=108,@T=GETDATE() 
 if(@BID Is Null) 
 begin 
 	Insert Into @D(Pcr,Tm) 
 	SELECT TBL007.CardGuide,ISNULL(a.InsertedIn,@T) 
 	FROM TBL007 Left Join (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Group By ProductGuide) a On TBL007.CardGuide=a.ProductGuide LEFT JOIN 
 	Qry247 ON TBL007.CardGuide = Qry247.ItemGuide 
 	Where ISNULL( a.InsertedIn,5)>IsNull(Qry247.LastCalulatedDate,0) 
 END 
 else 
 begin 
 	Insert Into @D(Pcr,Tm) 
 	SELECT a.ProductGuide, a.InsertedIn 
 	FROM (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Where MainGuide=@BID Group By ProductGuide) a LEFT OUTER JOIN 
 	Qry247 ON a.ProductGuide = Qry247.ItemGuide 
 	Where a.InsertedIn>IsNull(Qry247.LastCalulatedDate,0) 
 end 
 declare @Pr uniqueidentifier 
 declare @Rp float 
 DECLARE P CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select * From @D 
 OPEN P 
 FETCH NEXT FROM P INTO @Pr,@T 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Delete From TBL074 Where ItemGuide=@Pr And PriceType=@PrcTp 
 	Set @Rp=dbo.Fun182(8,1,@Pr,0,null,null,null,null,null,null,null,null,null,null,0,null) 
 	Insert Into TBL074(PriceType,LastCalulatedDate,ItemGuide,PriceValue,ItemUnit)Values( 
 	@PrcTp,@T,@Pr,@Rp,1) 
 	FETCH NEXT FROM P INTO @Pr,@T 
 END 
 CLOSE P 
 Deallocate P 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc094]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc094](@BID uniqueidentifier) 
 as begin 
 declare @T datetime 
 declare @D table(Pcr uniqueidentifier,Tm datetime) 
 declare @PrcTp int 
 Select @PrcTp=110,@T=GETDATE() 
 if(@BID Is Null) 
 begin 
 	Insert Into @D(Pcr,Tm) 
 	SELECT TBL007.CardGuide,ISNULL(a.InsertedIn,@T) 
 	FROM TBL007 Left Join (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Group By ProductGuide) a On TBL007.CardGuide=a.ProductGuide LEFT JOIN 
 	Qry248 ON TBL007.CardGuide = Qry248.ItemGuide 
 	Where ISNULL( a.InsertedIn,5)>IsNull(Qry248.LastCalulatedDate,0) 
 END 
 else 
 begin 
 	Insert Into @D(Pcr,Tm) 
 	SELECT a.ProductGuide, a.InsertedIn 
 	FROM (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Where MainGuide=@BID Group By ProductGuide) a LEFT OUTER JOIN 
 	Qry248 ON a.ProductGuide = Qry248.ItemGuide 
 	Where a.InsertedIn>IsNull(Qry248.LastCalulatedDate,0) 
 end 
 declare @Pr uniqueidentifier 
 declare @Rp float 
 DECLARE P CURSOR READ_ONLY FAST_FORWARD FOR 
 Select * From @D 
 OPEN P 
 FETCH NEXT FROM P INTO @Pr,@T 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Delete From TBL074 Where ItemGuide=@Pr And PriceType=@PrcTp 
 	Set @Rp=dbo.Fun182(10,1,@Pr,0,null,null,null,null,null,null,null,null,null,null,0,null) 
 	Insert Into TBL074(PriceType,LastCalulatedDate,ItemGuide,PriceValue,ItemUnit)Values( 
 	@PrcTp,@T,@Pr,@Rp,1) 
 	FETCH NEXT FROM P INTO @Pr,@T 
 END 
 CLOSE P 
 Deallocate P 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc095]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc095](@BID uniqueidentifier) 
 as begin 
 declare @T datetime 
 declare @D table(Pcr uniqueidentifier,Tm datetime) 
 declare @PrcTp int 
 Select @PrcTp=111,@T=GETDATE() 
 if(@BID Is Null) 
 begin 
 	Insert Into @D(Pcr,Tm) 
 	SELECT TBL007.CardGuide,ISNULL(a.InsertedIn,@T) 
 	FROM TBL007 Left Join (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Group By ProductGuide) a On TBL007.CardGuide=a.ProductGuide LEFT JOIN 
 	Qry249 ON TBL007.CardGuide = Qry249.ItemGuide 
 	Where ISNULL( a.InsertedIn,5)>IsNull(Qry249.LastCalulatedDate,0) 
 END 
 else 
 begin 
 	Insert Into @D(Pcr,Tm) 
 	SELECT a.ProductGuide, a.InsertedIn 
 	FROM (Select ProductGuide,MAX(InsertedIn) As InsertedIn From TBL023 Where MainGuide=@BID Group By ProductGuide) a LEFT OUTER JOIN 
 	Qry249 ON a.ProductGuide = Qry249.ItemGuide 
 	Where a.InsertedIn>IsNull(Qry249.LastCalulatedDate,0) 
 end 
 declare @Pr uniqueidentifier 
 declare @Rp float 
 DECLARE P CURSOR READ_ONLY FAST_FORWARD FOR 
 Select * From @D 
 OPEN P 
 FETCH NEXT FROM P INTO @Pr,@T 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Delete From TBL074 Where ItemGuide=@Pr And PriceType=@PrcTp 
 	Set @Rp=dbo.Fun182(11,1,@Pr,0,null,null,null,null,null,null,null,null,null,null,0,null) 
 	Insert Into TBL074(PriceType,LastCalulatedDate,ItemGuide,PriceValue,ItemUnit)Values( 
 	@PrcTp,@T,@Pr,@Rp,1) 
 	FETCH NEXT FROM P INTO @Pr,@T 
 END 
 CLOSE P 
 Deallocate P 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc096]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc096](@G uniqueidentifier,@ForceGenEntry bit,@Note nvarchar(Max)) 
 as begin 
 delete From TBL010 Where RelatedArchive2=@G 
 declare @Tp uniqueidentifier 
 Set @Tp=(Select Top 1 ValueKey From TBL053 Where OptionName='EducationPayrollBond') 
 if(@Tp Is Null) 
 	return 
 declare @C uniqueidentifier 
 declare @Course uniqueidentifier 
 declare @InDate datetime 
 Select @C=RelatedCostCenter,@InDate=CardDate,@Course=RelatedArchive From TBL085 Where CardGuide=@G 
 if(@C Is Null) 
 	return 
 declare @CRAc uniqueidentifier 
 declare @CFAc uniqueidentifier 
 Select @CRAc=DefaultAccount ,@CFAc=DefaultAccount2 From TBL005 Where CardGuide=@C 
 if(@CFAc Is Null) 
 	return 
 declare @Nmb int 
 declare @Currency uniqueidentifier 
 declare @Rate float 
 Select Top 1 @Currency=CardGuide,@Rate=1 From TBL001 Where ID=(Select Min(ID) From TBL001) 
 declare @Ac uniqueidentifier 
 declare @Ag uniqueidentifier 
 declare @V float 
 declare @B uniqueidentifier 
 DECLARE CPrc096 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select a.AccountID,a.AgentGuide,a.Value From 
 	(Select b.AccountID,a.AgentGuide,(case when IsNull(d.DaySalary,0)>0 Then d.DaySalary Else b.DaySalary End) As Value 
 	From TBL093 a Inner Join 
 	TBL016 b On a.AgentGuide=b.CardGuide Inner Join 
 	(Select ValueKey From TBL053 Where OptionName='TeachersMainGroup')c On b.MainGroupGuide=c.ValueKey 
 	Left Join (Select Max(NumberValue02)As DaySalary,AgentGuide From TBL092 Where TypeID=0 And JobGuide=@C And NumberValue02>0 Group By AgentGuide) d On a.AgentGuide=d.AgentGuide 
 	Where a.MainGuide=@G And a.BooleanValue01=1 And a.ByteValue01>0)a 
 	Where a.Value>0 
 OPEN CPrc096 
 FETCH NEXT FROM CPrc096 INTO @Ac,@Ag,@V 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	Set @B=NEWID() 
 	Set @Nmb=IsNull((Select Max(BondNumber) From TBL010 Where MainGuide=@Tp),0)+1 
 	Insert Into TBL010(CardType,CardGuide,MainGuide,BondNumber,BondDate,CurrencyGuide,Rate,RelatedArchive,RelatedArchive2,AccountGuide,AgentGuide,CostCenter,Notes) 
 		Values(3,@B,@Tp,@Nmb,@InDate,@Currency,@Rate,@Course,@G,@Ac,@Ag,@C,@Note) 
 	Insert Into TBL038(MainGuide,AccountGuide,CostCenter,CurrencyGuide,Debit,DebitRate,Notes) 
 		Values(@B,@CFAc,@C,@Currency,@V,@V,@Note) 
 	exec dbo.Prc027 @B,@ForceGenEntry 
 	FETCH NEXT FROM CPrc096 INTO @Ac,@Ag,@V 
 END 
 CLOSE CPrc096 
 DEALLOCATE CPrc096 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc097]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc097](@ID int) 
 as begin 
 declare @Dt table(Field nvarchar(250),Value nvarchar(250)) 
 Insert Into @Dt(Field,Value) 
 Select Field,Value From dbo.Fun117(148,@ID) 
 if((Select COUNT(*) From @Dt)=0)return 
 declare @Ft table(FieldID int,FieldName nvarchar(200)) 
 Insert Into @Ft(FieldID,FieldName)Select FieldTypeID,FieldName From TBL149 
 if((Select COUNT(*) From @Ft)=0)return 
 --------------------------------------------------------------- 
 declare @CardNumber int 
 declare @TDate nvarchar(250) 
 declare @TAccountCode nvarchar(250) 
 declare @TAccountName nvarchar(250) 
 declare @Debit float 
 declare @Credit float 
 declare @DebitRate float 
 declare @CreditRate float 
 declare @TDescription nvarchar(250) 
 declare @TNotes nvarchar(250) 
 declare @TType nvarchar(250) 
 declare @TBondDetailsNotes2 nvarchar(250) 
 declare @TBondDetailsNotes3 nvarchar(250) 
 declare @TBondDetailsNotes4 nvarchar(250) 
 declare @TBondDetailsNotes5 nvarchar(250) 
 declare @TContraAccountCode nvarchar(250) 
 declare @TContraAccountName nvarchar(250) 
 declare @TCostCenterCode nvarchar(250) 
 declare @TCostCenterName nvarchar(250) 
 declare @TBranchCode nvarchar(250) 
 declare @TBranchName nvarchar(250) 
 declare @TProjectCode nvarchar(250) 
 declare @TProjectName nvarchar(250) 
 declare @TAgentName nvarchar(250) 
 declare @TCurrnecy nvarchar(250) 
 declare @Rate float 
 --------------------------------------------------------------- 
 declare @BondDate datetime 
 declare @BondType uniqueidentifier 
 declare @Currency uniqueidentifier 
 declare @AccountID uniqueidentifier 
 declare @ContraAccountID uniqueidentifier 
 declare @CostCenterID uniqueidentifier 
 declare @ProjectID uniqueidentifier 
 declare @BranchID uniqueidentifier 
 declare @AgentID uniqueidentifier 
 --------------------------------------------------------------- 
 Set @CardNumber=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=1))) 
 Set @TDate=(Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=2)) 
 Set @TAccountCode=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=3)))) 
 Set @TAccountName=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=4)))) 
 Set @Debit=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=5))) 
 Set @Credit=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=6))) 
 Set @TDescription=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=7)))) 
 Set @TType=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=8)))) 
 Set @TBondDetailsNotes2=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=9)))) 
 Set @TBondDetailsNotes3=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=10)))) 
 Set @TBondDetailsNotes4=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=11)))) 
 Set @TBondDetailsNotes5=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=12)))) 
 Set @TContraAccountCode=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=13)))) 
 Set @TContraAccountName=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=14)))) 
 Set @TCostCenterCode=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=15)))) 
 Set @TCostCenterName=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=16)))) 
 Set @TBranchCode=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=17)))) 
 Set @TBranchName=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=18)))) 
 Set @TProjectCode=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=19)))) 
 Set @TProjectName=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=20)))) 
 Set @TAgentName=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=21)))) 
 Set @TCurrnecy=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=22)))) 
 Set @Rate=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=23))) 
 Set @DebitRate=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=24))) 
 Set @CreditRate=dbo.Number((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=25))) 
 Set @TNotes=LTRIM(RTRIM((Select Value From @Dt Where Field=(Select FieldName From @Ft Where FieldID=26)))) 
 --------------------------------------------------------------- 
 if((@Credit>0 And @Debit>0) Or (@Debit=0 And @Credit=0)) 
 begin 
 	raiserror (N'3:Wrong Value', 1, 1) 
 	return 
 end 
 if(@TAccountName Is Not Null And @TAccountCode Is Not null) 
 	Set @AccountID=(Select Top 1 CardGuide From TBL004 Where CardCode=@TAccountCode And AccountName=@TAccountName) 
 if(@AccountID Is Null) 
 	Set @AccountID=(Select Top 1 CardGuide From TBL004 Where CardCode=@TAccountCode) 
 if(@AccountID Is Null) 
 	Set @AccountID=(Select Top 1 CardGuide From TBL004 Where AccountName=@TAccountName) 
 if(@AccountID Is Null) 
 begin 
 	raiserror (N'4:Account Not Found', 1, 1) 
 	return 
 end 
 ------------------ 
 Set @ContraAccountID=(Select Top 1 CardGuide From TBL004 Where CardCode=@TContraAccountCode) 
 if(@ContraAccountID Is Null) 
 	Set @ContraAccountID=(Select Top 1 CardGuide From TBL004 Where AccountName=@TContraAccountName) 
 ------------------ 
 Set @CostCenterID=(Select Top 1 CardGuide From TBL005 Where CardCode=@TCostCenterCode) 
 if(@CostCenterID Is Null) 
 	Set @CostCenterID=(Select Top 1 CardGuide From TBL005 Where CostCenter=@TCostCenterName) 
 ------------------ 
 Set @ProjectID=(Select Top 1 CardGuide From TBL049 Where CardCode=@TProjectCode) 
 if(@ProjectID Is Null) 
 	Set @ProjectID=(Select Top 1 CardGuide From TBL049 Where ProjectName=@TProjectName) 
 ------------------ 
 Set @BranchID=(Select Top 1 CardGuide From TBL050 Where CardCode=@TBranchCode) 
 if(@BranchID Is Null) 
 	Set @BranchID=(Select Top 1 CardGuide From TBL050 Where BronchName=@TBranchName) 
 ------------------ 
 Set @BondDate=dbo.TextToDateTime(@TDate) 
 ------------------ 
 Set @BondType=IsNull((Select Top 1 CardGuide From TBL009 Where BondType<=1 And EntryName=@TType),'00000000-0000-0000-0000-000000000000') 
 ------------------ 
 declare @IsEntry bit 
 Set @IsEntry=(case @BondType When '00000000-0000-0000-0000-000000000000' then 1 else 0 end) 
 ------------------ 
 Set @Currency=(Select Top 1 CardGuide From TBL001 Where CurrencyName=@TCurrnecy) 
 if(@Currency Is Null) 
 begin 
 	Set @Currency=(Select DefaultCurrency From TBL009 Where CardGuide=@BondType) 
 	if(@Currency Is Null) 
 		Set @Currency=(Select Top 1 CardGuide From TBL001 Order By ID) 
 end 
 ------------------ 
 if(@Rate=0) 
 begin 
 	Set @Rate=dbo.Fun006(@Currency,Null,@BondDate) 
 end 
 --------------------------------------------------------------- 
 if(@CardNumber=0) 
 begin 
 	raiserror (N'1:Number Not Found', 1, 1) 
 	return 
 end 
 if(@BondDate Is Null) 
 begin 
 	raiserror (N'2:Date Not Found', 1, 1) 
 	return 
 end 
 declare @G uniqueidentifier 
 declare @MainCr uniqueidentifier 
 declare @MainCrRate float 
 Set @MainCr=(Select CardGuide From TBL001 Where ID=(Select Min(ID) From TBL001)) 
 Set @MainCrRate=dbo.Fun006(@MainCr,Null,@BondDate) 
 if(IsNull(@DebitRate,0)=0)Set @DebitRate=@Debit*@Rate 
 if(IsNull(@CreditRate,0)=0)Set @CreditRate=@Credit*@Rate 
 if(@IsEntry=1) 
 begin 
 	Set @G=(Select Top 1 CardGuide From TBL011 Where EntryNumber=@CardNumber Order By ID desc) 
 	if(@G Is Null) 
 	begin 
 		Set @G=NEWID() 
 		Insert Into TBL011(CardGuide,CurrencyGuide,Rate,EntryDate,EntryNumber,Notes) 
 			Values(@G,@MainCr,@MainCrRate,@BondDate,@CardNumber,@TNotes) 
 	end 
 	Insert Into TBL012(MainGuide,AccountGuide,Debit,DebitRate,Credit,CreditRate,CurrencyGuide,ContraAccount,CostCenter,Project,Branch,Description,EntryDetailsNotes2,EntryDetailsNotes3,EntryDetailsNotes4,EntryDetailsNotes5) 
 		Values(@G,@AccountID,@DebitRate,@Debit,@CreditRate,@Credit,@Currency,@ContraAccountID,@CostCenterID,@ProjectID,@BranchID,@TDescription,@TBondDetailsNotes2 ,@TBondDetailsNotes3,@TBondDetailsNotes4,@TBondDetailsNotes5) 
 end 
 else 
 begin 
 	declare @HeadAc uniqueidentifier 
 	Select Top 1 @G=CardGuide,@HeadAc=AccountGuide From TBL010 Where BondNumber=@CardNumber And MainGuide=@BondType Order By ID desc 
 	if(@G Is Null) 
 	begin 
 		declare @DefAc uniqueidentifier 
 		Select @DefAc=DefaultAccount,@HeadAc=IsNull(@ContraAccountID,@DefAc) From TBL009 Where CardGuide=@BondType 
 		Set @G=NEWID() 
 		Insert Into TBL010(CardGuide,MainGuide,AccountGuide,CurrencyGuide,Rate,BondDate,BondNumber,Notes) 
 			Values(@G,@BondType,@HeadAc,@MainCr,@MainCrRate,@BondDate,@CardNumber,@TNotes) 
 	end 
 	if(@ContraAccountID Is Not Null And @HeadAc=@ContraAccountID) 
 		Set @ContraAccountID=Null 
 	Insert Into TBL038(MainGuide,AccountGuide,Debit,DebitRate,Credit,CreditRate,CurrencyGuide,ContraAccount,CostCenter,Project,Branch,Notes,BondDetailsNotes2,BondDetailsNotes3,BondDetailsNotes4,BondDetailsNotes5) 
 		Values(@G,@AccountID,@DebitRate,@Debit,@CreditRate,@Credit,@Currency,@ContraAccountID,@CostCenterID,@ProjectID,@BranchID,@TDescription,@TBondDetailsNotes2 ,@TBondDetailsNotes3,@TBondDetailsNotes4,@TBondDetailsNotes5) 
 end 
 end 
GO
/****** Object:  StoredProcedure [dbo].[Prc098]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc098] 
 as begin 
 if((Select Count(*) From TBL020 Where BooleanOption28=1)>0) 
 begin 
 	declare @Tb table(CardGuide uniqueidentifier,MainGuide uniqueidentifier,ProductGuide uniqueidentifier,BillQty float,RelatedQty float,RestQty float) 
 	Insert Into @Tb(CardGuide,ProductGuide,BillQty,RelatedQty,RestQty) 
 	Select a.CardGuide,a.ProductGuide,a.Qty,IsNull(b.Qty,0),a.Qty-IsNull(b.Qty,0) From 
 	(Select b.CardGuide,a.ProductGuide,b.MainGuide, 
 	Sum(a.Quantity+a.ExtraQuantity * (case a.Unit When 3 Then d.Factor3 When 2 Then d.Factor2 Else 1 end)) As Qty From TBL023 a 
 	Inner Join TBL022 b On a.MainGuide=b.CardGuide 
 	Inner Join TBL020 c On b.MainGuide=c.CardGuide 
 	Inner Join TBL007 d On a.ProductGuide=d.CardGuide 
 	Where c.BooleanOption28=1 
 	Group By b.CardGuide,a.ProductGuide,b.MainGuide)a 
 	Left Join 
 	(Select a.SourceBill,a.ProductGuide, 
 	Sum(a.Quantity+a.ExtraQuantity * (case a.Unit When 3 Then d.Factor3 When 2 Then d.Factor2 Else 1 end)) As Qty From TBL023 a 
 	Inner Join TBL022 b On a.MainGuide=b.CardGuide 
 	Inner Join TBL007 d On a.ProductGuide=d.CardGuide 
 	Group By a.SourceBill,a.ProductGuide)b 
 	On a.CardGuide=b.SourceBill And a.ProductGuide=b.ProductGuide 
 	alter table TBL022 disable trigger All 
 	Update b Set[LockRelations]=a.Rst From (Select CardGuide,(case when a.RestQty>0 then 0 else 1 end) As Rst From 
 	(Select CardGuide,Sum(BillQty)As BillQty,Sum(RelatedQty)As RelatedQty,Sum(RestQty)As RestQty From @Tb Group By CardGuide)a)a 
 	Inner Join TBL022 b On a.CardGuide=b.CardGuide Where a.Rst<>b.LockRelations 
 end 
 end 
GO
/****** Object:  StoredProcedure [dbo].[Prc099]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc099](@UGrp uniqueidentifier) 
 as begin 
 declare @SpCost bit 
 declare @SpProject bit 
 declare @SpBranch bit 
 Set @SpCost=IsNull((Select ValueBoolean From TBL053 Where OptionName='SeparateBranchIncludedInCostCenters'),0) 
 Set @SpProject=IsNull((Select ValueBoolean From TBL053 Where OptionName='SeparateBranchIncludedInProjects'),0) 
 Set @SpBranch=IsNull((Select ValueBoolean From TBL053 Where OptionName='SeparateBranchIncludedInBranches'),0) 
 declare @IDSpCost uniqueidentifier 
 declare @IDSpProject uniqueidentifier 
 declare @IDSpBranch uniqueidentifier 
 Set @IDSpCost=(Select ValueKey From TBL053 Where OptionName='SeparateBranchIncludedInCostID') 
 Set @IDSpProject=(Select ValueKey From TBL053 Where OptionName='SeparateBranchIncludedInProjectID') 
 Set @IDSpBranch=(Select ValueKey From TBL053 Where OptionName='SeparateBranchIncludedInBranchesID') 
 if(@SpCost=1 And @IDSpCost is null) 
 begin 
 	Set @IDSpCost=NEWID() 
 	Insert Into TBL005(CardGuide,CardCode,CostCenter)Values(@IDSpCost,'Z','Separate Branches') 
 	Delete From TBL053 Where OptionName='SeparateBranchIncludedInCostID' 
 	Insert Into TBL053 (OptionName,ValueKey)Values('SeparateBranchIncludedInCostID',@IDSpCost) 
 end 
 if(@SpProject=1 And @IDSpProject is null) 
 begin 
 	Set @IDSpProject=NEWID() 
 	Insert Into TBL049(CardGuide,CardCode,ProjectName)Values(@IDSpProject,'Z','Separate Branches') 
 	Delete From TBL053 Where OptionName='SeparateBranchIncludedInProjectID' 
 	Insert Into TBL053 (OptionName,ValueKey)Values('SeparateBranchIncludedInProjectID',@IDSpProject) 
 end 
 if(@SpBranch=1 And @IDSpBranch is null) 
 begin 
 	Set @IDSpBranch=NEWID() 
 	Insert Into TBL050(CardGuide,CardCode,BronchName)Values(@IDSpBranch,'Z','Separate Branches') 
 	Delete From TBL053 Where OptionName='SeparateBranchIncludedInBranchesID' 
 	Insert Into TBL053 (OptionName,ValueKey)Values('SeparateBranchIncludedInBranchesID',@IDSpBranch) 
 end 
 ------------------------------------------------------------------------------------------------------ 
 declare @GTb table(ID int identity(1,1),Lv int,GN nvarchar(250),Gr uniqueidentifier,MGr uniqueidentifier,GC uniqueidentifier,GP uniqueidentifier,GB uniqueidentifier,IsSB bit) 
 declare @Lv int 
 Set @Lv=0 
 Insert Into @GTb(Lv,GN,Gr,MGr,GC,GP,GB,IsSB) 
 Select @Lv,CardName,CardGuide,MainGuide,CostCenterID,ProjectID,BranchID,SeparateGroup From TBL042 Where MainGuide Is Null Order By ID 
 while((Select Count(*) From @GTb a 
 Inner Join TBL042 b On a.Gr=b.MainGuide 
 Left Join @GTb c On b.CardGuide=c.Gr 
 Where c.Gr is null)>0) 
 begin 
 	Set @Lv=@Lv+1 
 	Insert Into @GTb(Lv,GN,Gr,MGr,GC,GP,GB,IsSB) 
 		Select @Lv,b.CardName,b.CardGuide,b.MainGuide,IsNull(b.CostCenterID,a.GC),IsNull(b.ProjectID,a.GP),IsNull(b.BranchID,a.GB), 
 		(case a.IsSB when 1 then 1 else b.SeparateGroup end) From @GTb a 
 	Inner Join TBL042 b On a.Gr=b.MainGuide 
 	Left Join @GTb c On b.CardGuide=c.Gr 
 		Where c.Gr is null Order By b.ID 
 end 
 ------------------------------------------------------------------------------------------------------ 
 alter table TBL042 Disable Trigger All 
 Update b Set[CostCenterID]=a.GC From @GTb a 
 Inner Join TBL042 b On a.Gr=b.CardGuide 
 Where (a.GC Is Not Null And b.CostCenterID Is Null Or (a.GC Is Not Null And b.CostCenterID Is Not Null And a.GC<>b.CostCenterID)) 
 -------------------------------------- 
 alter table TBL042 Disable Trigger All 
 Update b Set[ProjectID]=a.GP From @GTb a 
 Inner Join TBL042 b On a.Gr=b.CardGuide 
 Where (a.GP Is Not Null And b.ProjectID Is Null Or (a.GP Is Not Null And b.ProjectID Is Not Null And a.GP<>b.ProjectID)) 
 -------------------------------------- 
 alter table TBL042 Disable Trigger All 
 Update b Set[BranchID]=a.GB From @GTb a 
 Inner Join TBL042 b On a.Gr=b.CardGuide 
 Where (a.GB Is Not Null And b.BranchID Is Null Or (a.GB Is Not Null And b.BranchID Is Not Null And a.GB<>b.BranchID)) 
 ------------------------------------------------------------------------------------------------------ 
 alter table TBL042 Disable Trigger All 
 Update b Set[SeparateGroup]=a.IsSB From @GTb a 
 Inner Join TBL042 b On a.Gr=b.CardGuide 
 Where a.IsSB<>b.SeparateGroup 
 declare @CardGuide uniqueidentifier 
 declare @CardName nvarchar(250) 
 declare @TmpC nvarchar(250) 
 declare @CostCenterID uniqueidentifier 
 declare @ProjectID uniqueidentifier 
 declare @BranchID uniqueidentifier 
 declare @MainGuide uniqueidentifier 
 declare @TmpG uniqueidentifier 
 DECLARE CPrc099 CURSOR READ_ONLY FAST_FORWARD FOR 
 	Select a.CardGuide,a.CardName,a.CostCenterID,a.ProjectID,a.BranchID,a.MainGuide From TBL042 a 
 	Inner Join @GTb b On a.CardGuide=b.Gr 
 	Where a.SeparateGroup=1 
 	Order By b.Lv,b.ID 
 OPEN CPrc099 
 FETCH NEXT FROM CPrc099 INTO @CardGuide,@CardName,@CostCenterID,@ProjectID,@BranchID,@MainGuide 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
 	if(@SpCost=1 And @CostCenterID Is Null) 
 	begin 
 		Set @CostCenterID=(Select CardGuide From TBL005 Where CardGuide=@CardGuide) 
 		if(@CostCenterID is null) 
 		begin 
 			Set @CostCenterID=@CardGuide 
 			Set @TmpG=IsNull((Select CardGuide From TBL005 Where CardGuide=@MainGuide),@IDSpCost) 
 			Set @TmpC=dbo.Fun162(5,@TmpG,3) 
 			Insert Into TBL005(CardGuide,CardCode,CostCenter,MainCostCenter) 
 				Values(@CardGuide,@TmpC,@CardName,@TmpG) 
 		end 
 		Alter Table TBL042 Disable Trigger All 
 		Update TBL042 Set[CostCenterID]=@CostCenterID Where CardGuide=@CardGuide 
 	end 
 	if(@SpProject=1 And @ProjectID is Null) 
 	begin 
 		Set @ProjectID=(Select CardGuide From TBL049 Where CardGuide=@CardGuide) 
 		if(@ProjectID is null) 
 		begin 
 			Set @ProjectID=@CardGuide 
 			Set @TmpG=IsNull((Select CardGuide From TBL049 Where CardGuide=@MainGuide),@IDSpProject) 
 			Set @TmpC=dbo.Fun162(49,@TmpG,3) 
 			Insert Into TBL049(CardGuide,CardCode,ProjectName,MainProject) 
 				Values(@CardGuide,@TmpC,@CardName,@TmpG) 
 		end 
 		Alter Table TBL042 Disable Trigger All 
 		Update TBL042 Set[ProjectID]=@ProjectID Where CardGuide=@CardGuide 
 	end 
 	if(@SpBranch=1 And @BranchID Is Null) 
 	begin 
 		Set @BranchID=(Select CardGuide From TBL049 Where CardGuide=@CardGuide) 
 		if(@ProjectID is null) 
 		begin 
 			Set @BranchID=@CardGuide 
 			Set @TmpG=IsNull((Select CardGuide From TBL050 Where CardGuide=@MainGuide),@IDSpBranch) 
 			Set @TmpC=dbo.Fun162(50,@TmpG,3) 
 			Insert Into TBL050(CardGuide,CardCode,BronchName,MainBronch) 
 				Values(@CardGuide,@TmpC,@CardName,@TmpG) 
 		end 
 		Alter Table TBL042 Disable Trigger All 
 		Update TBL042 Set[BranchID]=@BranchID Where CardGuide=@CardGuide 
 	end 
 	FETCH NEXT FROM CPrc099 INTO @CardGuide,@CardName,@CostCenterID,@ProjectID,@BranchID,@MainGuide 
 END 
 CLOSE CPrc099 
 DEALLOCATE CPrc099 
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc100]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc100](@NG nvarchar(100),@Rply nvarchar(100),@Tp int)
 as begin
 Select @NG=ltrim(rtrim(@NG)),@Rply=RTRIM(ltrim(@Rply))
 Select @NG=(case when len(IsNull(@NG,''))>0 then @NG else null end),@Rply=(case when len(IsNull(@Rply,''))>0 then @Rply else null end)
 if(@NG is null or @Rply is null)return
 declare @G uniqueidentifier
 Set @G=Convert(uniqueidentifier,@NG)
 if(@Tp=1)
 begin
 	if(len(@Rply)<8 Or Len(@Rply)>12)
 		return
 end
 alter table TBL022 disable trigger all
 update TBL022 Set[APIReply]=@Rply Where CardGuide=@G
 alter table TBL022 enable trigger all
 end
GO
/****** Object:  StoredProcedure [dbo].[Prc101]    Script Date: 8/14/2023 4:54:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Procedure [dbo].[Prc101]
 as begin 
 declare @DetailPriceByStore tinyint
 declare @DetailPriceByCost tinyint
 declare @DetailPriceByProject tinyint
 declare @DetailPriceByBranch tinyint
 declare @DetailPriceByCat01 tinyint
 declare @DetailPriceByCat02 tinyint
 declare @DetailPriceByCat03 tinyint
 declare @DetailPriceByCat04 tinyint
 declare @DetailPriceByCat05 tinyint
 Set @DetailPriceByStore=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByStore'),0)
 Set @DetailPriceByCost=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByCostCenter'),0)
 Set @DetailPriceByProject=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByProject'),0)
 Set @DetailPriceByBranch=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByBranch'),0)
 Set @DetailPriceByCat01=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByCategory01'),0)
 Set @DetailPriceByCat02=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByCategory02'),0)
 Set @DetailPriceByCat03=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByCategory03'),0)
 Set @DetailPriceByCat04=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByCategory04'),0)
 Set @DetailPriceByCat05=IsNull((Select Top 1 ValueBoolean From TBL053 Where OptionName='DetailPriceByCategory05'),0)
 ----------------------------------------------------------------------------
 declare @Tb table(ID int identity(1,1),RowGuide uniqueidentifier,InvoiceGuide uniqueidentifier,BillDate datetime
 ,StartCalculate datetime,ProductGuide uniqueidentifier,StoreGuide uniqueidentifier
 ,CostGuide uniqueidentifier,ProjectGuide uniqueidentifier,BranchGuide uniqueidentifier
 ,Category01 uniqueidentifier,Category02 uniqueidentifier,Category03 uniqueidentifier,Category04 uniqueidentifier,Category05 uniqueidentifier
 ,Qty float,Unit int,ContinuousInventoryPriceType int,InsertedIn datetime)
 ----------------------------------------------------------------------------
 declare @lTb table(StartCalculate datetime,ProductGuide uniqueidentifier,StoreGuide uniqueidentifier
 ,CostGuide uniqueidentifier,ProjectGuide uniqueidentifier,BranchGuide uniqueidentifier
 ,Category01 uniqueidentifier,Category02 uniqueidentifier,Category03 uniqueidentifier,Category04 uniqueidentifier,Category05 uniqueidentifier)
 ----------------------------------------------------------------------------
 Insert Into @lTb(StartCalculate ,ProductGuide,StoreGuide
 ,CostGuide ,ProjectGuide ,BranchGuide
 ,Category01 ,Category02 ,Category03 ,Category04 ,Category05 )
 Select Min(a.BillDate),a.ProductGuide,a.StoreID
 ,a.CostID ,a.ProjectID ,a.BranchID
 ,a.Category01 ,a.Category02 ,a.Category03 ,a.Category04 ,a.Category05 From
 (Select c.BillDate,a.ProductGuide
 ,(case @DetailPriceByStore when 1 Then IsNull(a.StoreID,c.StoreGuide) end) As StoreID
 ,(case @DetailPriceByCost when 1 Then IsNull(a.CostCenter,c.CostCenter) end) As CostID
 ,(case @DetailPriceByProject When 1 Then c.Project end) As ProjectID
 ,(case @DetailPriceByBranch When 1 Then c.Branch end) As BranchID
 ,(case @DetailPriceByCat01 when 1 Then a.Category01 end) As Category01
 ,(case @DetailPriceByCat02 when 1 Then a.Category02 end) As Category02
 ,(case @DetailPriceByCat03 when 1 Then a.Category03 end) As Category03
 ,(case @DetailPriceByCat04 when 1 Then a.Category04 end) As Category04
 ,(case @DetailPriceByCat05 when 1 Then a.Category05 end) As Category05
 From TBL023 a with(nolock)
 Inner Join TBL022 c with(nolock) On a.MainGuide=c.CardGuide
 Left join TBL074 b with(nolock) On a.RowGuide=b.BillRowGuide
 Where b.ID is null)a
 Group By a.ProductGuide,a.StoreID
 ,a.CostID ,a.ProjectID ,a.BranchID
 ,a.Category01 ,a.Category02 ,a.Category03 ,a.Category04 ,a.Category05
 ----------------------------------------------------------------------------
 Delete b From TBL074 b Left Join @lTb a
 On a.ProductGuide=b.ProjectGuide
 And a.StoreGuide=b.StoreGuide
 And a.CostGuide=b.CostCenterGuide
 And a.ProjectGuide=b.ProjectGuide
 And a.BranchGuide=b.BranchGuide
 And a.Category01=b.CategoryGuide01
 And a.Category02=b.CategoryGuide02
 And a.Category03=b.CategoryGuide03
 And a.Category04=b.CategoryGuide04
 And a.Category05=b.CategoryGuide05
 Where b.LastCalulatedDate>=a.StartCalculate
 ----------------------------------------------------------------------------
 Insert Into @Tb(RowGuide,BillDate ,ProductGuide,StoreGuide
 ,CostGuide ,ProjectGuide ,BranchGuide
 ,Category01 ,Category02 ,Category03 ,Category04 ,Category05
 ,Qty,Unit,ContinuousInventoryPriceType,InvoiceGuide,InsertedIn)
 Select a.RowGuide,c.BillDate,a.ProductGuide
 ,(case @DetailPriceByStore when 1 Then IsNull(a.StoreID,c.StoreGuide) end) As StoreID
 ,(case @DetailPriceByCost when 1 Then IsNull(a.CostCenter,c.CostCenter) end) As CostID
 ,(case @DetailPriceByProject When 1 Then c.Project end) As ProjectID
 ,(case @DetailPriceByBranch When 1 Then c.Branch end) As BranchID
 ,(case @DetailPriceByCat01 when 1 Then a.Category01 end) As Category01
 ,(case @DetailPriceByCat02 when 1 Then a.Category02 end) As Category02
 ,(case @DetailPriceByCat03 when 1 Then a.Category03 end) As Category03
 ,(case @DetailPriceByCat04 when 1 Then a.Category04 end) As Category04
 ,(case @DetailPriceByCat05 when 1 Then a.Category05 end) As Category05
 ,(a.Quantity+a.ExtraQuantity),a.Unit,t.ContinuousInventoryPriceType,c.CardGuide,a.InsertedIn
 From TBL023 a with(nolock)
 Inner Join TBL022 c with(nolock) On a.MainGuide=c.CardGuide
 Inner Join TBL020 t with(nolock) On c.MainGuide=t.CardGuide
 Left join TBL074 b with(nolock) On a.RowGuide=b.BillRowGuide
 Where b.ID is null
 Order By c.BillDate,a.ID
 ----------------------------------------------------------------------------
 declare @Crr uniqueidentifier
 Set @Crr=(Select CardGuide From TBL001 Where ID=(Select Min(ID) From TBL001))
 declare @Ix int
 declare @Nx int
 Select @Ix=isnull((Select Max(ID)From @Tb),0),@Nx=1000
 while(@Nx<=(@Ix+1000))
 begin
 	Insert into TBL074(BillRowGuide,PriceValue,PriceRate,PriceType,LastCalulatedDate,ItemUnit,ItemGuide)
 	Select a.RowGuide,a.Qty*dbo.Fun182(a.ContinuousInventoryPriceType,a.Unit,a.ProductGuide,a.BillDate,@Crr,a.CostGuide,a.ProjectGuide,a.BranchGuide,a.StoreGuide,
 		a.Category01,a.Category02,a.Category03,a.Category04,a.Category05,a.Qty,a.InvoiceGuide)
 		,1,200,a.InsertedIn,1,a.ProductGuide
 	From @Tb a Where ID<=@Nx
 	Delete From @Tb Where ID<=@Nx
 	Set @Nx=@Nx+1000
 end
 Delete b From
 (Select * From
 (Select BillRowGuide,Min(ID) As MinID,Count(*) As Cnt From TBL074 a Where PriceType=200 And BillRowGuide is not null Group By BillRowGuide)a
 Where a.Cnt>1)a
 Inner Join TBL074 b On a.MinID=b.ID
 end
GO
USE [master]
GO
ALTER DATABASE [XtrDB06_11_2022] SET  READ_WRITE 
GO
